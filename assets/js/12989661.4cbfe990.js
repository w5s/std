"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[5939],{7307:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>o,default:()=>c,frontMatter:()=>r,toc:()=>i});var t=s(1085),a=s(1184);const r={},o="W5S Task modules (@w5s/task)",i=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3},{value:"License",id:"license",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsxs)(n.h1,{id:"w5s-task-modules-w5stask",children:["W5S Task modules ",(0,t.jsx)(n.em,{children:"(@w5s/task)"})]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@w5s/task",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/npm/v/@w5s/task.svg?style=flat-square",alt:"NPM Version"})}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/w5s/project-config/blob/HEAD/packages/core/LICENSE",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/badge/license-MIT-green.svg?style=flat-square",alt:"License"})})]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm install @w5s/task\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Result } from '@w5s/core';\nimport { Task } from '@w5s/task';\n\nfunction parseNumber(expr: string) {\n  const parsed = Number(expr);\n\n  // - Return a immutable Result object\n  // - Avoid throwing error because impure\n  // - Avoid using NaN because the error case is implicit in the typing\n  return Number.isNaN(parsed) ? Result.Ok(parsed) : Result.Error('NotANumber');\n}\n\nfunction log(value: unknown) {\n  // This is a lazy operation that will only be evaluated when the Task is run\n  return Task.create(({ ok }) => ok(console.log(value)));\n}\n\nexport function main() {\n  const parsed = parseNumber('1.1'); // Result.Ok(1.1)\n  const computed = Result.map(parsed, (amount) => amount + 2); // Result.Ok(3.1)\n\n  // Lazy operation that will display in console the computed result when evaluated\n  return log(computed);\n}\n\n// runTask is impure and should be put at the edge of the program\nvoid Task.run(main()); // prints { _: 'Result/Ok', value: 3.1 }\n"})}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/w5s/project-config/blob/HEAD/packages/core/LICENSE",children:"MIT"})," \xa9 Julien Polo ",(0,t.jsx)(n.a,{href:"mailto:julien.polo@gmail.com",children:"julien.polo@gmail.com"})]})]})}function c(e){void 0===e&&(e={});const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1184:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(4041);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);