"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[6370],{8417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"reflection":{"id":1,"name":"@w5s/application","variant":"declaration","kind":2,"flags":{},"children":[{"id":22,"name":"Application","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application instance type"}]},"children":[{"id":23,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"ApplicationRef.constructor"}},{"id":32,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":35,"name":"ApplicationId","package":"@w5s/application"},"inheritedFrom":{"type":"reference","target":38,"name":"ApplicationRef.id"}},{"id":24,"name":"initialConfiguration","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L39"}],"type":{"type":"reference","target":34,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}},{"id":33,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":36,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":39,"name":"ApplicationRef.state"}},{"id":25,"name":"configure","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"signatures":[{"id":26,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"parameters":[{"id":27,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":34,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":28,"name":"get","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"signatures":[{"id":29,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"typeParameter":[{"id":30,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":31,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":30,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":30,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":34,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}}}]}],"groups":[{"title":"Constructors","children":[23]},{"title":"Properties","children":[32,24,33]},{"title":"Methods","children":[25,28]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"typeParameters":[{"id":34,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"EmptyObject"},"name":"EmptyObject","package":"@w5s/application"}}],"extendedTypes":[{"type":"reference","target":37,"name":"ApplicationRef","package":"@w5s/application"}],"permalink":"/std/api/application/interface/Application","categories":[],"previousId":40,"nextId":37},{"id":37,"name":"ApplicationRef","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minimal Application interface"}]},"children":[{"id":38,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":35,"name":"ApplicationId","package":"@w5s/application"}},{"id":39,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":36,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"}}],"groups":[{"title":"Properties","children":[38,39]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L21"}],"extendedBy":[{"type":"reference","target":22,"name":"Application"}],"permalink":"/std/api/application/interface/ApplicationRef","categories":[],"previousId":22,"nextId":36},{"id":36,"name":"ApplicationState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application state generic type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L16"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"AnyObject"},"name":"AnyObject","package":"@w5s/application"}],"permalink":"/std/api/application/interface/ApplicationState","categories":[],"previousId":37,"nextId":44},{"id":44,"name":"Storage","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for the global Map that holds all application states"}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.collection.d.ts","qualifiedName":"Map"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Map","package":"typescript"}],"permalink":"/std/api/application/interface/Storage","categories":[],"previousId":36,"nextId":35},{"id":35,"name":"ApplicationId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application id type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L11"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ApplicationId"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/api/application#ApplicationId","categories":[],"previousId":44,"nextId":43},{"id":43,"name":"$storage","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L3"}],"type":{"type":"query","queryType":{"type":"reference","target":43,"name":"$storage","package":"@w5s/application"}},"defaultValue":"...","permalink":"/std/api/application#$storage","categories":[],"previousId":35},{"id":16,"name":"Application","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"signatures":[{"id":17,"name":"Application","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an app instance with a state ref that will be stored in "},{"kind":"code","text":"`applicationStore.current[id]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface MyAppConfiguration {\\n  foo: number\\n}\\n\\nconst myApp = Application<MyAppConfiguration>(\'my-app\', {\\n  foo: 1,\\n});\\nmyApp.configure({ foo: 2 });\\n\\nmyApp.state.current = {\\n  ...myApp.state.current,\\n  myProperty: \'hello world !\',\\n};\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"}],"typeParameter":[{"id":18,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":19,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application unique identifier"}]},"type":{"type":"intrinsic","name":"string"}},{"id":20,"name":"initialConfiguration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"type":{"type":"reference","target":18,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true},"defaultValue":"..."},{"id":21,"name":"store","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Application store ref where the data will be set"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":36,"name":"ApplicationState","package":"@w5s/application"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":22,"typeArguments":[{"type":"reference","target":18,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}}],"permalink":"/std/api/application/function/Application","categories":[],"nextId":45},{"id":45,"name":"useRef","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"signatures":[{"id":46,"name":"useRef","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" stored at "},{"kind":"code","text":"`storage.get(key)`"},{"kind":"text","text":" or "},{"kind":"code","text":"`ref.value[key]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst globalStorage = useStorage(globalThis);\\nconst counterRef = useRef<number>(globalStorage, \'counter\', 1);\\n// globalStorage == Map { counter => 1 }\\n\\nconst state = Ref({});\\nconst counterRef = useRef<number>(state, \'counter\', 2);\\n// state == { counter: 2 }\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"typeParameter":[{"id":47,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":48,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ref or storage containing the value"}]},"type":{"type":"union","types":[{"type":"reference","target":44,"name":"Storage","package":"@w5s/application"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}],"name":"Ref","package":"@w5s/core"}]}},{"id":49,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the key where data is stored"}]},"type":{"type":"intrinsic","name":"string"}},{"id":50,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value"}]},"type":{"type":"reference","target":47,"name":"V","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":47,"name":"V","package":"@w5s/application","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/api/application/function/useRef","categories":[],"previousId":16,"nextId":40},{"id":40,"name":"useStorage","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"signatures":[{"id":41,"name":"useStorage","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Get or create a map object storage for "},{"kind":"code","text":"`hostObject`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst objectStorage = useStorage(someObject);\\nconst globalStorage = useStorage(globalThis);\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"parameters":[{"id":42,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object hosting the storage"}]},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":44,"name":"Storage","package":"@w5s/application"}}],"permalink":"/std/api/application/function/useStorage","categories":[],"previousId":45,"nextId":22}],"groups":[{"title":"Functions","children":[16,45,40]},{"title":"Interfaces","children":[22,37,36,44]},{"title":"Type Aliases","children":[35]},{"title":"Variables","children":[43]}],"sources":[{"fileName":"packages/application/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/application/src/index.ts#L1"}],"permalink":"/std/api/application"},"urlSlug":"application"}],"packageName":"@w5s/application","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":2,"name":"@w5s/async","variant":"declaration","kind":2,"flags":{},"children":[{"id":51,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/dist/index.d.ts","line":43,"character":5}],"typeParameters":[{"id":52,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":52,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":52,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/api/async#Awaitable","categories":[],"previousId":63},{"id":53,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"signatures":[{"id":54,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a promise after waiting "},{"kind":"code","text":"`milliseconds`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nawait delay(5);\\n```"}]}]},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"parameters":[{"id":55,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the delay to wait in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/async/function/delay","categories":[],"nextId":60},{"id":60,"name":"isPromise","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"signatures":[{"id":61,"name":"isPromise","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"Promise","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromise(Promise.resolve());// true\\nisPromise({ then() {} });// false\\nisPromise(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"parameters":[{"id":62,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}}}],"permalink":"/std/api/async/function/isPromise","categories":[],"previousId":53,"nextId":56},{"id":56,"name":"isPromiseLike","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"signatures":[{"id":57,"name":"isPromiseLike","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"PromiseLike","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromiseLike(Promise.resolve());// true\\nisPromiseLike({ then() {} });// true\\nisPromiseLike(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"typeParameter":[{"id":58,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":59,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":58,"name":"V","package":"@w5s/async","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}}}],"permalink":"/std/api/async/function/isPromiseLike","categories":[],"previousId":60,"nextId":63},{"id":63,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"signatures":[{"id":64,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`block().then(onSuccess, onError)`"},{"kind":"text","text":" when a asynchronous.\\nElse returns "},{"kind":"code","text":"`try { return onSuccess(block()) } catch (error) { onError(error) }`"},{"kind":"text","text":" when synchronous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst syncBlock = () => \'sync\'\\ntryCall(syncBlock, (_) => `${_}_foo`);// \'async_foo\'\\nconst asyncBlock = () => Promise.resolve(\'async\')\\ntryCall(asyncBlock, (_) => `${_}_foo`);// Promise.resolve(\'async_foo\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"typeParameter":[{"id":65,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":66,"name":"TResult1","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":65,"name":"T","package":"@w5s/async","refersToTypeParameter":true}},{"id":67,"name":"TResult2","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":68,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the callback returning an awaitable value"}]},"type":{"type":"reflection","declaration":{"id":69,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"signatures":[{"id":70,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":65,"name":"T","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":71,"name":"onSuccess","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":72,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"signatures":[{"id":73,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"parameters":[{"id":74,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":65,"name":"T","package":"@w5s/async","refersToTypeParameter":true}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":66,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}]}},{"id":75,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":76,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"signatures":[{"id":77,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"parameters":[{"id":78,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":67,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"union","types":[{"type":"reference","target":66,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true},{"type":"reference","target":67,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}]}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/api/async/function/tryCall","categories":[],"previousId":56,"nextId":51}],"groups":[{"title":"Functions","children":[53,60,56,63]},{"title":"Type Aliases","children":[51]}],"categories":[{"title":"Type","children":[60,56]},{"title":"__CATEGORY__","children":[51,53,63]}],"sources":[{"fileName":"packages/async/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/async/src/index.ts#L1"}],"permalink":"/std/api/async"},"urlSlug":"async"}],"packageName":"@w5s/async","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":3,"name":"@w5s/bigdecimal","variant":"declaration","kind":2,"flags":{},"children":[{"id":80,"name":"BigDecimal","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`BigDecimal`"}]},"children":[{"id":224,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":225,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":226,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":227,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":228,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":229,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":230,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__inspect__"},{"id":217,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"BigDecimal"},"permalink":"/std/api/bigdecimal/namespace/BigDecimal#typeName"},{"id":185,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":186,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":187,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":188,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":189,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#!="},{"id":132,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":133,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":134,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":135,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#*"},{"id":124,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":125,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":126,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":127,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#+"},{"id":128,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":129,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":130,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":131,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#-"},{"id":149,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":150,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":151,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":152,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":153,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#<"},{"id":144,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":145,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":146,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":147,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":148,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#<="},{"id":190,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":191,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":192,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":193,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":194,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#=="},{"id":159,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":160,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":161,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":162,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":163,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#>"},{"id":154,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":155,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":156,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":157,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":158,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#>="},{"id":195,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"signatures":[{"id":196,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":197,"name":"stringValue","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":198,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":199,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":200,"name":"scale","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__call__"},{"id":201,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":202,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":203,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":204,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":205,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__decode__"},{"id":206,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":207,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":208,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":209,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__encode__"},{"id":210,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":211,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":212,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__schema__"},{"id":108,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":109,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":110,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":111,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#abs"},{"id":221,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":222,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":223,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#asInstance"},{"id":81,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L34"}],"signatures":[{"id":82,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of a BigDecimal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.asString(BigDecimal(\'1.020\')); // \'1.020\'\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L34"}],"parameters":[{"id":83,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#asString"},{"id":174,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":175,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":176,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":177,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":178,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":179,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#clamp"},{"id":139,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":140,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":141,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":142,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":143,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#compare"},{"id":213,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":214,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":215,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":216,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#create"},{"id":180,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":181,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":182,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":183,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":184,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#equals"},{"id":98,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"signatures":[{"id":99,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of a BigDecimal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.format(BigDecimal(\'1.020\')); // \'1.020\'\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"parameters":[{"id":100,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#format"},{"id":218,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":219,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":220,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#hasInstance"},{"id":116,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"signatures":[{"id":117,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"parameters":[{"id":118,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":119,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isNegative"},{"id":112,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"signatures":[{"id":113,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"parameters":[{"id":114,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":115,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isPositive"},{"id":104,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":105,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":106,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":107,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isZero"},{"id":169,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":170,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":171,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":172,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":173,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#max"},{"id":164,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":165,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":166,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":167,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":168,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#min"},{"id":136,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":137,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":138,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#negate"},{"id":84,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L35"}],"signatures":[{"id":85,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a normalized "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.normalize(BigDecimal(\'1.020\')); //  BigDecimal(\'1.02\')\\nBigDecimal.normalize(BigDecimal(\'1.0200\')); //  BigDecimal(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L35"}],"parameters":[{"id":86,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#normalize"},{"id":87,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L36"}],"signatures":[{"id":88,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" from "},{"kind":"code","text":"`value`"},{"kind":"text","text":" and "},{"kind":"code","text":"`scale`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.of(1n, 1); // BigDecimal(\'0.1\')\\nBigDecimal.of(-234n, 2); // BigDecimal(\'2.34\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L36"}],"parameters":[{"id":89,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The base integer value."}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":90,"name":"scale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The scale."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#of"},{"id":95,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"signatures":[{"id":96,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new BigDecimal from a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.parse(\'1.020\'); // Option.Some(BigDecimal(\'1.020\'))\\nBigDecimal.parse(\'A\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"parameters":[{"id":97,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#parse"},{"id":91,"name":"scale","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"signatures":[{"id":92,"name":"scale","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Scales a given "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" to the specified scale."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst value = BigDecimal(\'1.02\');\\nBigDecimal.scale(value, 1); //  BigDecimal(\'1.0\')\\nBigDecimal.scale(value, 3); //  BigDecimal(\'1.020\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"parameters":[{"id":93,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":94,"name":"newScale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The new scale"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#scale"},{"id":120,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"signatures":[{"id":121,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"parameters":[{"id":122,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":123,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#sign"},{"id":101,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":102,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":103,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#zero"}],"groups":[{"title":"Variables","children":[224,217]},{"title":"Functions","children":[185,132,124,128,149,144,190,159,154,195,201,206,210,108,221,81,174,139,213,180,98,218,116,112,104,169,164,136,84,87,95,91,120,101]}],"categories":[{"title":"Codec","children":[201,206,210]},{"title":"Comparator","children":[185,149,144,190,159,154,174,139,180,169,164]},{"title":"Constructor","children":[213,87]},{"title":"Numeric","children":[132,124,128,108,116,112,104,136,120,101]},{"title":"Scaling","children":[84,91]},{"title":"Type","children":[224,217,221,218]},{"title":"__CATEGORY__","children":[195,81,98,95]}],"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L20"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal","nextId":231},{"id":231,"name":"BigDecimal","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L20"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimalType","package":"@w5s/bigdecimal","qualifiedName":"BigDecimal"},"permalink":"/std/api/bigdecimal#BigDecimal","categories":[],"previousId":80,"nextId":79},{"id":79,"name":"BigDecimalString","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Valid BigDecimal string representation"}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L18"}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},"permalink":"/std/api/bigdecimal#BigDecimalString","categories":[],"previousId":231}],"groups":[{"title":"Namespaces","children":[80]},{"title":"Type Aliases","children":[231,79]}],"sources":[{"fileName":"packages/bigdecimal/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/index.ts#L1"}],"permalink":"/std/api/bigdecimal"},"urlSlug":"bigdecimal"}],"packageName":"@w5s/bigdecimal","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":4,"name":"@w5s/console","variant":"declaration","kind":2,"flags":{},"children":[{"id":250,"name":"ANSICode","variant":"declaration","kind":4,"flags":{},"children":[{"id":251,"name":"color","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"signatures":[{"id":252,"name":"color","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the ANSI escape sequence for the given color."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ncolor(\'red\')(\'foo\') // \'\\\\x1b[31mfoo\\\\x1b[39m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"the ANSI escape sequence for the given color"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"parameters":[{"id":253,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"one of: black, red, green, yellow, blue, magenta, cyan, white"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/color.ts","qualifiedName":"Color"},"name":"Color","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#color"},{"id":257,"name":"fontStyle","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"signatures":[{"id":258,"name":"fontStyle","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font style."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontStyle(\'italic\')(\'foo\');// \'\\\\u001B[3mfoo\\\\u001B[22m\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"parameters":[{"id":259,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font style to retrieve the escape code for. Can be \'normal\' or \'italic\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontStyle.ts","qualifiedName":"FontStyle"},"name":"FontStyle","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#fontStyle"},{"id":254,"name":"fontWeight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"signatures":[{"id":255,"name":"fontWeight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font weight."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontWeight(\'bold\')(\'foo\') // \'\\\\x1b[1mfoo\\\\x1b[22m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"parameters":[{"id":256,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font weight to retrieve the escape code for. Can be \'bold\' or \'dim\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontWeight.ts","qualifiedName":"FontWeight"},"name":"FontWeight","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#fontWeight"},{"id":260,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"signatures":[{"id":261,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://en.wikipedia.org/wiki/ANSI_escape_code"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.format([1, 2], \'m\');// \'\\\\u001b[1;2m\'\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"parameters":[{"id":262,"name":"args","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a list of arguments"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":263,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a code suffix"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/console/namespace/ANSICode#format"},{"id":264,"name":"strip","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"signatures":[{"id":265,"name":"strip","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Strip ANSI escape codes from the string."}],"blockTags":[{"tag":"@example","name":"Usage","content":[{"kind":"code","text":"```typescript\\nANSICode.strip(red(\\"Hello, world!\\"));// == \\"Hello, world!\\"\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"parameters":[{"id":266,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The text to remove ANSI escape codes from"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/console/namespace/ANSICode#strip"},{"id":267,"name":"style","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"signatures":[{"id":268,"name":"style","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Apply ANSI styles to a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.style({ color: \'red\', fontWeight: \'bold\' })(\'foo\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and applies the styles."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"parameters":[{"id":269,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The style definition."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/style.ts","qualifiedName":"Style"},"name":"Style","package":"@w5s/console"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reflection","declaration":{"id":270,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"signatures":[{"id":271,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"parameters":[{"id":272,"name":"_","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/std/api/console/namespace/ANSICode#style"},{"id":273,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"signatures":[{"id":274,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wraps a given string with ANSI escape codes for styling."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and returns it wrapped with the specified ANSI codes."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"parameters":[{"id":275,"name":"open","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An array of numbers representing the opening ANSI codes."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":276,"name":"close","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A number representing the closing ANSI code."}]},"type":{"type":"intrinsic","name":"number"}},{"id":277,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string representing the ANSI code suffix."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#wrap"}],"groups":[{"title":"Functions","children":[251,257,254,260,264,267,273]}],"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":12,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L12"}],"permalink":"/std/api/console/namespace/ANSICode","categories":[],"nextId":232},{"id":232,"name":"Console","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to write in stdin (NodeJS) or WebConsole (browser)"}]},"children":[{"id":233,"name":"debug","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"signatures":[{"id":234,"name":"debug","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`debug`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.debug(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"parameters":[{"id":235,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#debug"},{"id":245,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"signatures":[{"id":246,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`error`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.error(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"parameters":[{"id":247,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#error"},{"id":239,"name":"info","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"signatures":[{"id":240,"name":"info","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`info`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.info(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"parameters":[{"id":241,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#info"},{"id":248,"name":"isWeb","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"signatures":[{"id":249,"name":"isWeb","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/console/namespace/Console#isWeb"},{"id":236,"name":"log","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"signatures":[{"id":237,"name":"log","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`log`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.log(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"parameters":[{"id":238,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#log"},{"id":242,"name":"warn","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"signatures":[{"id":243,"name":"warn","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.warn(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"parameters":[{"id":244,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#warn"}],"groups":[{"title":"Functions","children":[233,245,239,248,236,242]}],"sources":[{"fileName":"packages/console/src/Console.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L13"}],"permalink":"/std/api/console/namespace/Console","categories":[],"previousId":250}],"groups":[{"title":"Namespaces","children":[250,232]}],"sources":[{"fileName":"packages/console/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/console/src/index.ts#L1"}],"permalink":"/std/api/console"},"urlSlug":"console"}],"packageName":"@w5s/console","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":5,"name":"@w5s/core","variant":"declaration","kind":2,"flags":{},"children":[{"id":278,"name":"Array","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate readonly arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Array } from \'@w5s/core\';\\n\\nconst array = Array.of(2, 1, 3);\\nconst reversed = Array.reversed(array);// [3, 1, 2]\\nconst sorted = Array.sort(array, (left, right) => left === right ? 0 : left < right ? -1 : 1);// [1, 2, 3]\\n```"}]}]},"children":[{"id":279,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"signatures":[{"id":280,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an item at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nArray.at(array, 1) // Option.Some(\'bar\')\\nArray.at(array, -1) //  Option.Some(\'baz\') i.e. the last\\nArray.at(array, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"typeParameter":[{"id":281,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":282,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"reference","target":281,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayLike","package":"typescript"}},{"id":283,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":281,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#at"},{"id":284,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"signatures":[{"id":285,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenate all elements of arrays\\nEquivalent to "},{"kind":"code","text":"`[...array, ...extension[0], ...extension[1], ...]`"},{"kind":"text","text":","}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.concat([1, 2], [3, 4], [5, 6]);// [1, 2, 3, 4, 5, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"typeParameter":[{"id":286,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":287,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":286,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":288,"name":"extensions","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The other arrays to append"}]},"type":{"type":"array","elementType":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":286,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":286,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#concat"},{"id":289,"name":"deleteAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"signatures":[{"id":290,"name":"deleteAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an array excluding the item at the "},{"kind":"code","text":"`index`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.deletedAt([1, 2, 3, 4], 1);// [1, 3, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"typeParameter":[{"id":291,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":292,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":291,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":293,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the deleted item in the array"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":291,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#deleteAt"},{"id":294,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"signatures":[{"id":295,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always returns an empty array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.empty() // []\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"typeParameter":[{"id":296,"name":"Item","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":296,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#empty"},{"id":297,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"signatures":[{"id":298,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether all the members of an array satisfy the specified test."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.every([1, 2, 3], isEven); // false\\nArray.every([2, 4], isEven); // true\\nArray.every([], (value) => false); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"typeParameter":[{"id":299,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":300,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":301,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":299,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":302,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":303,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"signatures":[{"id":304,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"parameters":[{"id":305,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":299,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":306,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":307,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":299,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":300,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"predicate","name":"self","asserts":false,"targetType":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":300,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}},{"id":308,"name":"every","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"typeParameter":[{"id":309,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":310,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":309,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":311,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":312,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"signatures":[{"id":313,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"parameters":[{"id":314,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":309,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":315,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":316,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":309,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Array#every"},{"id":317,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"signatures":[{"id":318,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the items of an array that meet the condition specified in a callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3, 4];\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.filter(array, isEven); // [2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"typeParameter":[{"id":319,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":320,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":321,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":319,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":322,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The filter method calls the predicate function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":323,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"signatures":[{"id":324,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"parameters":[{"id":325,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":319,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":320,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":320,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":326,"name":"filter","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"typeParameter":[{"id":327,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":328,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":327,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":329,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":330,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"signatures":[{"id":331,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"parameters":[{"id":332,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":327,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":333,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":334,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":327,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":327,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#filter"},{"id":335,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"signatures":[{"id":336,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.find([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'ab\')\\nArray.find([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"typeParameter":[{"id":337,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":338,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":339,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":337,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":340,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":341,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"signatures":[{"id":342,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"parameters":[{"id":343,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":337,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":344,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":345,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":337,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":338,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":338,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":346,"name":"find","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"typeParameter":[{"id":347,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":348,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":347,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":349,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":350,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"signatures":[{"id":351,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"parameters":[{"id":352,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":347,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":353,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":354,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":347,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":347,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#find"},{"id":355,"name":"findIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"signatures":[{"id":356,"name":"findIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(0)\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"typeParameter":[{"id":357,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":358,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":357,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":359,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":360,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"signatures":[{"id":361,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"parameters":[{"id":362,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":357,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":363,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":364,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":357,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#findIndex"},{"id":365,"name":"findLast","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"signatures":[{"id":366,"name":"findLast","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLast([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'abc\')\\nArray.findLast([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"typeParameter":[{"id":367,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":368,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":369,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":367,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":370,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":371,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L21"}],"signatures":[{"id":372,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L21"}],"parameters":[{"id":373,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":367,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":374,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":375,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":367,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":368,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":368,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":376,"name":"findLast","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"typeParameter":[{"id":377,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":378,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":377,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":379,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":380,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L25"}],"signatures":[{"id":381,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L25"}],"parameters":[{"id":382,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":377,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":383,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":384,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":377,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":377,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#findLast"},{"id":385,"name":"findLastIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"signatures":[{"id":386,"name":"findLastIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(2)\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"typeParameter":[{"id":387,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":388,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":387,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":389,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":390,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLastIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLastIndex.ts#L21"}],"signatures":[{"id":391,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLastIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLastIndex.ts#L21"}],"parameters":[{"id":392,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":387,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":393,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":394,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":387,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#findLastIndex"},{"id":395,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"signatures":[{"id":396,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array. Each calls should return an array.\\nThe final result is the concatenation of each arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\'];\\nconst concat = (_: string) => [_ + \'_1\', _ + \'_2\'];\\nArray.flatMap(array, concat); // [\'a_1\', \'a_2\', \'b_1\', \'b_2\', \'c_1\', \'c_2\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"typeParameter":[{"id":397,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":398,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":399,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":397,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":400,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array and returns an array that will be concatenated."}]},"type":{"type":"reflection","declaration":{"id":401,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L19"}],"signatures":[{"id":402,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L19"}],"parameters":[{"id":403,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":397,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":404,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":405,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":397,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":398,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":398,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#flatMap"},{"id":406,"name":"fromAsync","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"signatures":[{"id":407,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"typeParameter":[{"id":408,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":409,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":408,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":408,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":408,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":408,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":410,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"typeParameter":[{"id":411,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":412,"name":"U","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":413,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":411,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":411,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}},{"id":414,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A mapping function to call on every element of iterableOrArrayLike.\\n     Each return value is awaited before being added to result array."}]},"type":{"type":"reflection","declaration":{"id":415,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/fromAsync.ts","line":45,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/fromAsync.ts#L45"}],"signatures":[{"id":416,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/fromAsync.ts","line":45,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/fromAsync.ts#L45"}],"parameters":[{"id":417,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":411,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}},{"id":418,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":412,"name":"U","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":412,"name":"U","package":"@w5s/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}],"name":"Array","package":"@w5s/core"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/core/namespace/Array#fromAsync"},{"id":419,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"signatures":[{"id":420,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an array of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.generate(3, () => \'a\');// == [\'a\', \'a\', \'a\']\\nArray.generate(3, (index) => index * 2);// == [0, 2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"typeParameter":[{"id":421,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":422,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":423,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":424,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"signatures":[{"id":425,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"parameters":[{"id":426,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":421,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":421,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#generate"},{"id":427,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"signatures":[{"id":428,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"code","text":"`Array.isArray()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.hasInstance(Array.empty()) // true\\nArray.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"parameters":[{"id":429,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":543,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Array","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Array#hasInstance"},{"id":430,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"signatures":[{"id":431,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether an array includes a certain item, returning true or false as appropriate."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.includes([\'a\', \'\', \'a\'], \'a\'); // true\\nArray.includes([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // true\\nArray.includes([\'a\', \'b\'], \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"typeParameter":[{"id":432,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":433,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":432,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":434,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to search for."}]},"type":{"type":"reference","target":432,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":435,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The position in this array at which to begin searching for searchItem."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Array#includes"},{"id":436,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"signatures":[{"id":437,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.indexOf([\'a\', \'\', \'a\'], \'a\'); // Option.Some(0)\\nArray.indexOf([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // Option.Some(2)\\nArray.indexOf([\'a\', \'b\'], \'absent\'); // Option.Some(\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"typeParameter":[{"id":438,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":439,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":438,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":440,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":438,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":441,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#indexOf"},{"id":442,"name":"insertAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"signatures":[{"id":443,"name":"insertAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.insertAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'b\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"typeParameter":[{"id":444,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":445,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":444,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":446,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":447,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":444,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":444,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#insertAt"},{"id":448,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"signatures":[{"id":449,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.isEmpty([]);// true\\nArray.isEmpty([\'a\', \'b\', \'c\']);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"parameters":[{"id":450,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Array#isEmpty"},{"id":451,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"signatures":[{"id":452,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of a specified "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.lastIndexOf([\'a\', \'b\', \'a\'], \'a\') // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\', \'a\', \'b\', \'a\'], \'a\', 4); // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\'], \'absent\') // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"typeParameter":[{"id":453,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":454,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":453,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":455,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":453,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":456,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index of the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#lastIndexOf"},{"id":457,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"signatures":[{"id":458,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array, and returns an array that contains the results."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3];\\nconst double = (_: number) => _ * 2;\\nArray.map(array, double); // [2, 4, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"typeParameter":[{"id":459,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":460,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":461,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":459,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":462,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":463,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"signatures":[{"id":464,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"parameters":[{"id":465,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":459,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":466,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":467,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":459,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":460,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":460,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#map"},{"id":468,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"signatures":[{"id":469,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new array from a set of items."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.of(1, 2, 3);// [1, 2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"typeParameter":[{"id":470,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":471,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A set of items to include in the new array object."}]},"type":{"type":"array","elementType":{"type":"reference","target":470,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":470,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#of"},{"id":472,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"signatures":[{"id":473,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduce(array, concat, \'$\') // \'$foo:bar:baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"typeParameter":[{"id":474,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":475,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":476,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":474,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":477,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":478,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"signatures":[{"id":479,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"parameters":[{"id":480,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":475,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":481,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":474,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":482,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":483,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":474,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":475,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":484,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":475,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":475,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Array#reduce"},{"id":485,"name":"reduceRight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L70"}],"signatures":[{"id":486,"name":"reduceRight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduceRight(array, concat, \'$\') // \'$baz:bar:foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L70"}],"typeParameter":[{"id":487,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":488,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":489,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":487,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":490,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":491,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"signatures":[{"id":492,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"parameters":[{"id":493,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":488,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":494,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":487,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":495,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":496,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":487,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":488,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":497,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":488,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":488,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Array#reduceRight"},{"id":498,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L71"}],"signatures":[{"id":499,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a reversed array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.reverse([1, 2, 3]);// [3, 2, 1]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L71"}],"typeParameter":[{"id":500,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":501,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":500,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":500,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#reverse"},{"id":502,"name":"setAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L72"}],"signatures":[{"id":503,"name":"setAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Replace "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.setAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L72"}],"typeParameter":[{"id":504,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":505,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":504,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":506,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the updated item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":507,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":504,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":504,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#setAt"},{"id":508,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L73"}],"signatures":[{"id":509,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.size([]) // 0\\nArray.size([\'foo\', \'bar\']) // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L73"}],"parameters":[{"id":510,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#size"},{"id":511,"name":"slice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L74"}],"signatures":[{"id":512,"name":"slice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a section of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([1, 2, 3, 4], 1, 3);// [2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L74"}],"typeParameter":[{"id":513,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":514,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":513,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":515,"name":"start","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The beginning of the specified portion of the array."}]},"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}},{"id":516,"name":"end","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The end of the specified portion of the array. This is exclusive of the item at the index "},{"kind":"code","text":"`end`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":513,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#slice"},{"id":524,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L76"}],"signatures":[{"id":525,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether the specified callback function returns true for any item of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.some([1, 2, 3], isEven); // true\\nArray.some([1, 3], isEven); // false\\nArray.some([], (value) => true); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L76"}],"typeParameter":[{"id":526,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":527,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":528,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":529,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"signatures":[{"id":530,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"parameters":[{"id":531,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":532,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":533,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Array#some"},{"id":534,"name":"sort","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L77"}],"signatures":[{"id":535,"name":"sort","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a sorted array using "},{"kind":"code","text":"`compareFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([11, 2, 22, 1], Number.compare);// [1, 2, 11, 22]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L77"}],"typeParameter":[{"id":536,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":537,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":538,"name":"compareFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Function used to determine the order of the items. It is expected to return\\na negative value if first argument is less than second argument, zero if they\'re equal and a positive\\nvalue otherwise."}]},"type":{"type":"reflection","declaration":{"id":539,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L16"}],"signatures":[{"id":540,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L16"}],"parameters":[{"id":541,"name":"a","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":542,"name":"b","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#sort"},{"id":517,"name":"splice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L75"}],"signatures":[{"id":518,"name":"splice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\', \'d\', \'e\'];\\n// Remove 2 items starting at index 1\\nsplice(array, 1, 2); // [\'a\', \'d\', \'e\']\\n// Insert items at index 2\\nsplice(array, 2, 0, \'x\', \'y\'); // [\'a\', \'b\', \'x\', \'y\', \'c\', \'d\', \'e\']\\n// Replace items at index 1\\nsplice(array, 1, 2, \'u\', \'v\'); // [\'a\', \'u\', \'v\', \'d\', \'e\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L75"}],"typeParameter":[{"id":519,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":520,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":519,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":521,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":522,"name":"deleteCount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of deleted items"}]},"type":{"type":"intrinsic","name":"number"}},{"id":523,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":519,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":519,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Array#splice"}],"groups":[{"title":"Functions","children":[279,284,289,294,297,317,335,355,365,385,395,406,419,427,430,436,442,448,451,457,468,472,485,498,502,508,511,524,534,517]}],"categories":[{"title":"Accessor","children":[279,508]},{"title":"Constructor","children":[294,419,468]},{"title":"Predicate","children":[297,430,448,524]},{"title":"Type","children":[427]},{"title":"__CATEGORY__","children":[284,289,317,335,355,365,385,395,406,436,442,451,457,472,485,498,502,511,534,517]}],"sources":[{"fileName":"packages/core/src/Array.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L32"},{"fileName":"packages/core/src/Array.ts","line":47,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"permalink":"/std/api/core/namespace/Array","previousId":2618,"nextId":551},{"id":551,"name":"BigInt","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`bigint`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { BigInt } from \'@w5s/core\';\\n\\nconst total = [1n, 2n, 3n].reduce(BigInt[\'+\'], 0n);// 6n\\nBigInt[\'==\'](total, 6n);// true\\n```"}]}]},"children":[{"id":579,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":580,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":581,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":582,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":583,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":584,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":585,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/BigInt#__inspect__"},{"id":633,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"bigint"},"permalink":"/std/api/core/namespace/BigInt#indexType"},{"id":572,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/core/namespace/BigInt#typeName"},{"id":694,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":695,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":696,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":697,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":698,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#!="},{"id":622,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":623,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":624,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":625,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#*"},{"id":618,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":619,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":620,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":621,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#+"},{"id":626,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":627,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":628,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":629,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#-"},{"id":658,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":659,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":660,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":661,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":662,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#<"},{"id":653,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":654,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":655,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":656,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":657,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#<="},{"id":699,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":700,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":701,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":702,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":703,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#=="},{"id":668,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":669,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":670,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":671,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":672,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#>"},{"id":663,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":664,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":665,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":666,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":667,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#>="},{"id":586,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":587,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":588,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":589,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":590,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"bigint"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#__decode__"},{"id":591,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":592,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":593,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":594,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/BigInt#__encode__"},{"id":595,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":596,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":597,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#__schema__"},{"id":602,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":603,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":604,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":605,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#abs"},{"id":576,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":577,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":578,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#asInstance"},{"id":598,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":599,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":600,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":601,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/BigInt#asString"},{"id":634,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":635,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":636,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#at"},{"id":683,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":684,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":685,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":686,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":687,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":688,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#clamp"},{"id":648,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":649,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":650,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":651,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":652,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#compare"},{"id":689,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":690,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":691,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":692,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":693,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#equals"},{"id":555,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L34"}],"signatures":[{"id":556,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of bigint using "},{"kind":"code","text":"`radix`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.format(1024n, 10);// \'1024\'\\nBigInt.format(1024n, 16);// \'400\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L34"}],"parameters":[{"id":557,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":558,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/BigInt#format"},{"id":559,"name":"fromInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L35"}],"signatures":[{"id":560,"name":"fromInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an integer to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromNumber(Int(1));// 1n\\nBigInt.fromNumber(Int(-1));// -1n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L35"}],"parameters":[{"id":561,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#fromInt"},{"id":562,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L36"}],"signatures":[{"id":563,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a number to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromNumber(1);// Option.Some(1n)\\nBigInt.fromNumber(-1);// Option.Some(-1n)\\nBigInt.fromNumber(1.1);// Option.None\\nBigInt.fromNumber(Number.MAX_SAFE_INTEGER + 1);// Option.None\\nBigInt.fromNumber(Number.MIN_SAFE_INTEGER - 1);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L36"}],"parameters":[{"id":564,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"bigint"}]}}],"permalink":"/std/api/core/namespace/BigInt#fromNumber"},{"id":573,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":574,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":575,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"bigint"}}}],"permalink":"/std/api/core/namespace/BigInt#hasInstance"},{"id":637,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":638,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":639,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#indexOf"},{"id":610,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":611,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":612,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":613,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#isNegative"},{"id":606,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":607,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":608,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":609,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#isPositive"},{"id":568,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":569,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":570,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":571,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/BigInt#isZero"},{"id":678,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":679,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":680,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":681,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":682,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#max"},{"id":673,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":674,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":675,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":676,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":677,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#min"},{"id":630,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":631,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":632,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#negate"},{"id":552,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L33"}],"signatures":[{"id":553,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse the expression and returns a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.parse(\'0b10101\');// Option.Some(21n)\\nBigInt.parse(\'1024\');// Option.Some(1024n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L33"}],"parameters":[{"id":554,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the expression to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#parse"},{"id":644,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":645,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":646,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":647,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/BigInt#range"},{"id":640,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":641,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":642,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":643,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#rangeSize"},{"id":614,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":615,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":616,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":617,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#sign"},{"id":565,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":566,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":567,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/core/namespace/BigInt#zero"}],"groups":[{"title":"Variables","children":[579,633,572]},{"title":"Functions","children":[694,622,618,626,658,653,699,668,663,586,591,595,602,576,598,634,683,648,689,555,559,562,573,637,610,606,568,678,673,630,552,644,640,614,565]}],"categories":[{"title":"Codec","children":[586,591,595]},{"title":"Comparator","children":[694,658,653,699,668,663,683,648,689,678,673]},{"title":"Indexable","children":[633,634,637,644,640]},{"title":"Numeric","children":[622,618,626,602,610,606,568,630,614,565]},{"title":"String","children":[598]},{"title":"Type","children":[579,572,576,573]},{"title":"__CATEGORY__","children":[555,559,562,552]}],"sources":[{"fileName":"packages/core/src/BigInt.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L25"}],"permalink":"/std/api/core/namespace/BigInt","previousId":278,"nextId":704},{"id":704,"name":"Boolean","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`boolean`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Boolean } from \'@w5s/core\';\\n\\nif (Boolean.hasInstance(unknownValue)) {\\n  // typeof unknownValue === \'boolean\'\\n}\\n```"}]}]},"children":[{"id":764,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572,"permalink":"/std/api/core/namespace/Boolean#typeName"},{"id":771,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":772,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":773,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":774,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":775,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":776,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":777,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Boolean#__inspect__"},{"id":754,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":755,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":756,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":757,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":758,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#!="},{"id":718,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":719,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":720,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":721,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":722,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#<"},{"id":713,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":714,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":715,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":716,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":717,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#<="},{"id":759,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":760,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":761,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":762,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":763,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#=="},{"id":728,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":729,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":730,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":731,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":732,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#>"},{"id":723,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":724,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":725,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":726,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":727,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#>="},{"id":778,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":779,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":780,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":781,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":782,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#__decode__"},{"id":783,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":784,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":785,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":786,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Boolean#__encode__"},{"id":787,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":788,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":789,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#__schema__"},{"id":768,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":769,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":770,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#asInstance"},{"id":790,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":791,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":792,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":793,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Boolean#asString"},{"id":743,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":744,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":745,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":746,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":747,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":748,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#clamp"},{"id":708,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":709,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":710,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":711,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":712,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#compare"},{"id":749,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":750,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":751,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":752,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":753,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#equals"},{"id":765,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":766,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":767,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/std/api/core/namespace/Boolean#hasInstance"},{"id":738,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":739,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":740,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":741,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":742,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#max"},{"id":733,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":734,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":735,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":736,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":737,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#min"},{"id":705,"name":"not","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":706,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":707,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#not"}],"groups":[{"title":"References","children":[764]},{"title":"Variables","children":[771]},{"title":"Functions","children":[754,718,713,759,728,723,778,783,787,768,790,743,708,749,765,738,733,705]}],"categories":[{"title":"Codec","children":[778,783,787]},{"title":"Comparator","children":[754,718,713,759,728,723,743,708,749,738,733]},{"title":"String","children":[790]},{"title":"Type","children":[771,768,765]},{"title":"__CATEGORY__","children":[764,705]}],"sources":[{"fileName":"packages/core/src/Boolean.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Boolean.ts#L18"}],"permalink":"/std/api/core/namespace/Boolean","previousId":551,"nextId":806},{"id":806,"name":"Callable","variant":"declaration","kind":4,"flags":{},"children":[{"id":807,"name":"symbol","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Symbol.call"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L43"}],"type":{"type":"reference","target":2303,"name":"Symbol.call","package":"@w5s/core"},"defaultValue":"Symbol.call","permalink":"/std/api/core/namespace/Callable#symbol"}],"groups":[{"title":"Variables","children":[807]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"permalink":"/std/api/core/namespace/Callable","categories":[],"previousId":704,"nextId":810},{"id":810,"name":"Char","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate characters"}]},"children":[{"id":893,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572,"permalink":"/std/api/core/namespace/Char#typeName"},{"id":900,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":901,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":902,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":903,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":904,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":905,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":906,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#__inspect__"},{"id":814,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/core/namespace/Char#indexType"},{"id":830,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#maxValue"},{"id":829,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#minValue"},{"id":877,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":878,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":879,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":880,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":881,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#!="},{"id":841,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":842,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":843,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":844,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":845,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#<"},{"id":836,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":837,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":838,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":839,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":840,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#<="},{"id":882,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":883,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":884,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":885,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":886,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#=="},{"id":851,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":852,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":853,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":854,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":855,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#>"},{"id":846,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":847,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":848,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":849,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":850,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#>="},{"id":923,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":924,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":925,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__call__"},{"id":907,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":908,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":909,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":910,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":911,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__decode__"},{"id":912,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":913,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":914,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":915,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Char#__encode__"},{"id":916,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":917,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":918,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__schema__"},{"id":897,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":898,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":899,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#asInstance"},{"id":919,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":920,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":921,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":922,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Char#asString"},{"id":815,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":816,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":817,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#at"},{"id":866,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":867,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":868,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":869,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":870,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":871,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#clamp"},{"id":831,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":832,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":833,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":834,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":835,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#compare"},{"id":872,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":873,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":874,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":875,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":876,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#equals"},{"id":811,"name":"fromCodePoint","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"signatures":[{"id":812,"name":"fromCodePoint","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Char created by using the specified code point."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nChar.fromCodePoint(65, 9731) == \\"A\u2603\\"\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"parameters":[{"id":813,"name":"code","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of string codes"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"reference","target":926,"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#fromCodePoint"},{"id":894,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":895,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":896,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Char#hasInstance"},{"id":818,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":819,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":820,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#indexOf"},{"id":861,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":862,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":863,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":864,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":865,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#max"},{"id":856,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":857,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":858,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":859,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":860,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#min"},{"id":825,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":826,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":827,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":828,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#range"},{"id":821,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":822,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":823,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":824,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Char#rangeSize"},{"id":890,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":891,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":892,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Char#unwrap"},{"id":887,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":888,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":889,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#wrap"}],"groups":[{"title":"References","children":[893]},{"title":"Variables","children":[900,814,830,829]},{"title":"Functions","children":[877,841,836,882,851,846,923,907,912,916,897,919,815,866,831,872,811,894,818,861,856,825,821,890,887]}],"categories":[{"title":"Bound","children":[830,829]},{"title":"Codec","children":[907,912,916]},{"title":"Comparator","children":[877,841,836,882,851,846,866,831,872,861,856]},{"title":"Constructor","children":[811]},{"title":"Indexable","children":[814,815,818,825,821]},{"title":"String","children":[919]},{"title":"Type","children":[900,897,894]},{"title":"__CATEGORY__","children":[893,923,890,887]}],"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"permalink":"/std/api/core/namespace/Char","previousId":806,"nextId":927},{"id":927,"name":"Codec","variant":"declaration","kind":4,"flags":{},"children":[{"id":964,"name":"Context","variant":"declaration","kind":256,"flags":{},"children":[{"id":969,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Error result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"type":{"type":"reflection","declaration":{"id":970,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"signatures":[{"id":971,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"parameters":[{"id":972,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":973,"name":"asType","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":974,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}},{"id":965,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Ok result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"type":{"type":"reflection","declaration":{"id":966,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"signatures":[{"id":967,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"parameters":[{"id":968,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":974,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":974,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[969,965]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":68,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L68"}],"typeParameters":[{"id":974,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Codec#Context"},{"id":962,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":66,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L66"}],"typeParameters":[{"id":963,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":963,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":948,"typeArguments":[{"type":"inferred","name":"Type"}],"name":"Codec","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Type"},"name":"Type","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/core/namespace/Codec#TypeOf"},{"id":928,"name":"decode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"signatures":[{"id":929,"name":"decode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" containing the decoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = \'2022-07-31T14:04:48.449Z\';\\nconst decoded = Codec.decode(codec, input);// Result.Ok(\'2022-07-31T14:04:48.449Z\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"typeParameter":[{"id":930,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":931,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":930,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__decode__"}],"name":"Pick","package":"typescript"}},{"id":932,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":930,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#decode"},{"id":933,"name":"encode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"signatures":[{"id":934,"name":"encode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = new Date(\'2022-07-31T14:04:48.449Z\');\\nconst encoded = Codec.encode(codec, input);// \'2022-07-31T14:04:48.449Z\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"typeParameter":[{"id":935,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":936,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the encoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":935,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__encode__"}],"name":"Pick","package":"typescript"}},{"id":937,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"reference","target":935,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Codec#encode"},{"id":938,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"signatures":[{"id":939,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a lazy evaluated codec. Useful for recursive structures."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Node {\\n  value: unknown,\\n  children: Node[]\\n}\\nconst Node = object<Node>({\\n  content: string,\\n  responses: Codec.lazy(() => array(Node))\\n})\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"typeParameter":[{"id":940,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":941,"name":"getCodec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the accessor to the codec"}]},"type":{"type":"reflection","declaration":{"id":942,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"signatures":[{"id":943,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"type":{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":940,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":940,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#lazy"},{"id":944,"name":"schema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"signatures":[{"id":945,"name":"schema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCodec.schema(string);// { type: \'string\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"typeParameter":[{"id":946,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":947,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":946,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__schema__"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#schema"}],"groups":[{"title":"Interfaces","children":[964]},{"title":"Type Aliases","children":[962]},{"title":"Functions","children":[928,933,938,944]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"permalink":"/std/api/core/namespace/Codec","categories":[],"previousId":810,"nextId":1072},{"id":1072,"name":"Enum","variant":"declaration","kind":4,"flags":{},"children":[{"id":1090,"name":"KeyOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum keys of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":26,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L26"}],"typeParameters":[{"id":1091,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"ArrayValue"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":2312,"name":"Symbol.enumKeys","package":"@w5s/core"}},"objectType":{"type":"reference","target":1091,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"name":"ArrayValue","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Enum#KeyOf"},{"id":1092,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum values of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":30,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L30"}],"typeParameters":[{"id":1093,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":1090,"typeArguments":[{"type":"reference","target":1093,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"KeyOf","package":"@w5s/core","qualifiedName":"Enum.KeyOf"},"objectType":{"type":"reference","target":1093,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/api/core/namespace/Enum#ValueOf"},{"id":1073,"name":"enumKeys","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Symbol for the property holding enum keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L15"}],"type":{"type":"intrinsic","name":"symbol"},"defaultValue":"Symbol.enumKeys","permalink":"/std/api/core/namespace/Enum#enumKeys"},{"id":1074,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"signatures":[{"id":1075,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Enum Object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({\\n  // typeName: \'MyEnum\', // Add this we want a named Enum\\n  Foo: \'foo\',\\n  Bar: \'bar\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"typeParameter":[{"id":1076,"name":"T","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1077,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"intersection","types":[{"type":"reference","target":1076,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":1078,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1079,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1079]}],"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}]}}]}}],"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reference","target":1076,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Enum#define"},{"id":1080,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"signatures":[{"id":1081,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.keys(MyEnum) // [\'Foo\', \'Bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"typeParameter":[{"id":1082,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1083,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1082,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1090,"typeArguments":[{"type":"reference","target":1082,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.KeyOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/api/core/namespace/Enum#keys"},{"id":1084,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"signatures":[{"id":1085,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.values(MyEnum) // [\'foo\', \'bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"typeParameter":[{"id":1086,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1087,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1086,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.ValueOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/api/core/namespace/Enum#values"}],"groups":[{"title":"Type Aliases","children":[1090,1092]},{"title":"Variables","children":[1073]},{"title":"Functions","children":[1074,1080,1084]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":42,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L42"}],"permalink":"/std/api/core/namespace/Enum","categories":[],"previousId":927,"nextId":1201},{"id":1201,"name":"Indexable","variant":"declaration","kind":4,"flags":{},"children":[{"id":1202,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":1209,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexType"}},{"id":1206,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1207,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1208,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}},{"id":1203,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1204,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1205,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}},{"id":1214,"name":"range","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1215,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1216,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1217,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}},{"id":1210,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1211,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1212,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1213,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"groups":[{"title":"Properties","children":[1209]},{"title":"Methods","children":[1206,1203,1214,1210]}],"categories":[{"title":"Indexable","children":[1209,1206,1203,1214,1210]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":102,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L102"}],"typeParameters":[{"id":1218,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1219,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":1182,"typeArguments":[{"type":"reference","target":1218,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1219,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"},{"type":"union","types":[{"type":"literal","value":"rangeSize"},{"type":"literal","value":"range"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/core/namespace/Indexable#Parameters"}],"groups":[{"title":"Interfaces","children":[1202]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"permalink":"/std/api/core/namespace/Indexable","categories":[],"previousId":1072,"nextId":1220},{"id":1220,"name":"Int","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate integer values"}]},"children":[{"id":1349,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572,"permalink":"/std/api/core/namespace/Int#typeName"},{"id":1356,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":1357,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1358,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1359,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1360,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1361,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":1362,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Int#__inspect__"},{"id":1272,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/core/namespace/Int#indexType"},{"id":1271,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Int#maxValue"},{"id":1270,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Int#minValue"},{"id":1333,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1334,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1335,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1336,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1337,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#!="},{"id":1259,"name":"*?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"signatures":[{"id":1260,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"parameters":[{"id":1261,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1262,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#*?"},{"id":1255,"name":"+?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"signatures":[{"id":1256,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"parameters":[{"id":1257,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1258,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#+?"},{"id":1263,"name":"-?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"signatures":[{"id":1264,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"parameters":[{"id":1265,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1266,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#-?"},{"id":1297,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1298,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1299,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1300,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1301,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#<"},{"id":1292,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":1293,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1294,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1295,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1296,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#<="},{"id":1338,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1339,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1340,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1341,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1342,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#=="},{"id":1307,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1308,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1309,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1310,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1311,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#>"},{"id":1302,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1303,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1304,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1305,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1306,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#>="},{"id":1379,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":1380,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":1381,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#__call__"},{"id":1363,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1364,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1365,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1366,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1367,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#__decode__"},{"id":1368,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1369,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1370,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1371,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Int#__encode__"},{"id":1372,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1373,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1374,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#__schema__"},{"id":1239,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1240,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1241,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1242,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#abs"},{"id":1353,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1354,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1355,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#asInstance"},{"id":1375,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1376,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1377,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1378,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Int#asString"},{"id":1273,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1274,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1275,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#at"},{"id":1322,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1323,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1324,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1325,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1326,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1327,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#clamp"},{"id":1287,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":1288,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":1289,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1290,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1291,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#compare"},{"id":1328,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1329,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1330,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1331,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1332,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#equals"},{"id":1221,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L35"}],"signatures":[{"id":1222,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of integer"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.format(Int(1), 10);// \'1\'\\nInt.format(Int(10), 16);// \'A\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L35"}],"parameters":[{"id":1223,"name":"intValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1224,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Int#format"},{"id":1229,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L37"}],"signatures":[{"id":1230,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new integer from "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst intValue = Int.fromNumber(0.5);// 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L37"}],"parameters":[{"id":1231,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an initial numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#fromNumber"},{"id":1350,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1351,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1352,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Int#hasInstance"},{"id":1276,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1277,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1278,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#indexOf"},{"id":1247,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1248,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1249,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1250,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#isNegative"},{"id":1243,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1244,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1245,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1246,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#isPositive"},{"id":1235,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1236,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1237,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1238,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Int#isZero"},{"id":1317,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1318,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1319,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1320,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1321,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#max"},{"id":1312,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1313,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1314,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1315,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1316,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#min"},{"id":1267,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1268,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1269,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#negate"},{"id":1225,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L36"}],"signatures":[{"id":1226,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.parse(\'1\');// Option.Some(1)\\nInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L36"}],"parameters":[{"id":1227,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer expression"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1228,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#parse"},{"id":1283,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1284,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1285,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1286,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#range"},{"id":1279,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1280,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1281,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1282,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#rangeSize"},{"id":1251,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1252,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1253,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1254,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#sign"},{"id":1346,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":1347,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":1348,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Int#unwrap"},{"id":1343,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":1344,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":1345,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#wrap"},{"id":1232,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1233,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1234,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#zero"}],"groups":[{"title":"References","children":[1349]},{"title":"Variables","children":[1356,1272,1271,1270]},{"title":"Functions","children":[1333,1259,1255,1263,1297,1292,1338,1307,1302,1379,1363,1368,1372,1239,1353,1375,1273,1322,1287,1328,1221,1229,1350,1276,1247,1243,1235,1317,1312,1267,1225,1283,1279,1251,1346,1343,1232]}],"categories":[{"title":"Bound","children":[1271,1270]},{"title":"Codec","children":[1363,1368,1372]},{"title":"Comparator","children":[1333,1297,1292,1338,1307,1302,1322,1287,1328,1317,1312]},{"title":"Constructor","children":[1229]},{"title":"Indexable","children":[1272,1273,1276,1283,1279]},{"title":"Numeric","children":[1259,1255,1263,1239,1247,1243,1235,1267,1251,1232]},{"title":"String","children":[1375]},{"title":"Type","children":[1356,1353,1350]},{"title":"__CATEGORY__","children":[1349,1379,1221,1225,1346,1343]}],"sources":[{"fileName":"packages/core/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L19"},{"fileName":"packages/core/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L26"}],"permalink":"/std/api/core/namespace/Int","previousId":1201,"nextId":1387},{"id":1387,"name":"JSON","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to encode/decode JSON. Instead of throwing errors like "},{"kind":"code","text":"`globalThis.JSON`"},{"kind":"text","text":", functions returns "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { JSON } from \'@w5s/core\';\\n\\nconst object = { a: true };\\nconst encoded = JSON.stringify(object); // Result.Ok(\'{\\"a\\":true}\')\\nif (Result.isOk(encoded)) {\\n  const decoded = JSON.parse(encoded); // Result.Ok({ a: true })\\n}\\n```"}]}]},"children":[{"id":1388,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"signatures":[{"id":1389,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse using "},{"kind":"code","text":"`JSON.parse()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = \'{ \\"a\\": true }\';\\nJSON.parse(valid); // Result.Ok({ a: true })\\n\\nconst invalid = \'{ \\"a\\": }\';\\nJSON.parse(invalid); // Result.Error(new SyntaxError(\'Unexpected token } in JSON at position 7\'))\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"parameters":[{"id":1390,"name":"anyString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/SyntaxError.ts","qualifiedName":"SyntaxError"},"name":"SyntaxError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/JSON#parse"},{"id":1391,"name":"stringify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"signatures":[{"id":1392,"name":"stringify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert to string using "},{"kind":"code","text":"`JSON.stringify()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = { a: true };\\nJSON.stringify(valid); // Result.Ok(\'{\\"a\\":true}\')\\n\\nconst circular = {\\n  get ref() {\\n    return this;\\n  },\\n};\\nJSON.stringify(circular);// Result.Error(new TypeError(...));\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"parameters":[{"id":1393,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to convert"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TypeError.ts","qualifiedName":"TypeError"},"name":"TypeError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/JSON#stringify"}],"groups":[{"title":"Functions","children":[1388,1391]}],"sources":[{"fileName":"packages/core/src/JSON.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L37"}],"permalink":"/std/api/core/namespace/JSON","categories":[],"previousId":1220,"nextId":1408},{"id":1408,"name":"Number","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`number`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Number } from \'@w5s/core\';\\n\\nconst total = [1, 1.5, 2].reduce(Number[\'+\'], 0);// 4.5\\nNumber[\'==\'](total, 4.5);// true\\n```"}]}]},"children":[{"id":1516,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572,"permalink":"/std/api/core/namespace/Number#typeName"},{"id":1523,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":1524,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1525,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1526,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1527,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1528,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":1529,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Number#__inspect__"},{"id":1427,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/core/namespace/Number#maxValue"},{"id":1426,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/core/namespace/Number#minValue"},{"id":1506,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1507,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1508,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1509,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1510,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#!="},{"id":1448,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":1449,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":1450,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1451,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#*"},{"id":1444,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":1445,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":1446,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1447,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#+"},{"id":1452,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":1453,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":1454,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1455,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#-"},{"id":1456,"name":"/?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"signatures":[{"id":1457,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"parameters":[{"id":1458,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1459,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#?"},{"id":1470,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1471,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1472,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1473,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1474,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#<"},{"id":1465,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":1466,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1467,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1468,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1469,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#<="},{"id":1511,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1512,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1513,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1514,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1515,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#=="},{"id":1480,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1481,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1482,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1483,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1484,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#>"},{"id":1475,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1476,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1477,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1478,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1479,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#>="},{"id":1530,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1531,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1532,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1533,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1534,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#__decode__"},{"id":1535,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1536,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1537,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1538,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Number#__encode__"},{"id":1539,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1540,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1541,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#__schema__"},{"id":1428,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1429,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1430,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1431,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#abs"},{"id":1520,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1521,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1522,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#asInstance"},{"id":1542,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1543,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1544,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1545,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Number#asString"},{"id":1495,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1496,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1497,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1498,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1499,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1500,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#clamp"},{"id":1460,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":1461,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":1462,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1463,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1464,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#compare"},{"id":1501,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1502,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1503,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1504,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1505,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#equals"},{"id":1412,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L32"}],"signatures":[{"id":1413,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.format(1.1);// \'1.1\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L32"}],"parameters":[{"id":1414,"name":"numberValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1415,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Number#format"},{"id":1517,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1518,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1519,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/std/api/core/namespace/Number#hasInstance"},{"id":1436,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1437,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1438,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1439,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#isNegative"},{"id":1432,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1433,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1434,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1435,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#isPositive"},{"id":1419,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1420,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1421,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1422,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Number#isZero"},{"id":1490,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1491,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1492,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1493,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1494,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#max"},{"id":1485,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1486,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1487,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1488,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1489,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#min"},{"id":1423,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1424,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1425,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#negate"},{"id":1409,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L31"}],"signatures":[{"id":1410,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an number\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.parse(\'1\');// Option.Some(1)\\nNumber.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L31"}],"parameters":[{"id":1411,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Number#parse"},{"id":1440,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1441,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1442,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1443,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#sign"},{"id":1416,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1417,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1418,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Number#zero"}],"groups":[{"title":"References","children":[1516]},{"title":"Variables","children":[1523,1427,1426]},{"title":"Functions","children":[1506,1448,1444,1452,1456,1470,1465,1511,1480,1475,1530,1535,1539,1428,1520,1542,1495,1460,1501,1412,1517,1436,1432,1419,1490,1485,1423,1409,1440,1416]}],"categories":[{"title":"Bound","children":[1427,1426]},{"title":"Codec","children":[1530,1535,1539]},{"title":"Comparator","children":[1506,1470,1465,1511,1480,1475,1495,1460,1501,1490,1485]},{"title":"Numeric","children":[1448,1444,1452,1456,1428,1436,1432,1419,1423,1440,1416]},{"title":"String","children":[1542]},{"title":"Type","children":[1523,1520,1517]},{"title":"__CATEGORY__","children":[1516,1412,1409]}],"sources":[{"fileName":"packages/core/src/Number.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L23"}],"permalink":"/std/api/core/namespace/Number","previousId":1387,"nextId":1546},{"id":1546,"name":"Numeric","variant":"declaration","kind":4,"flags":{},"children":[{"id":1547,"name":"Add","variant":"declaration","kind":256,"flags":{},"children":[{"id":1548,"name":"+","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":1549,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":1550,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1552,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1551,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1553,"name":"Right","package":"@w5s/core","qualifiedName":"Add.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1554,"name":"Return","package":"@w5s/core","qualifiedName":"Add.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1548]}],"categories":[{"title":"Numeric","children":[1548]}],"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L1"}],"typeParameters":[{"id":1552,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1553,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1552,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1554,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1552,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Add"},{"id":1555,"name":"CheckedAdd","variant":"declaration","kind":256,"flags":{},"children":[{"id":1556,"name":"+?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"signatures":[{"id":1557,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"parameters":[{"id":1558,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1560,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1559,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1561,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedAdd.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1562,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedAdd.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1556]}],"categories":[{"title":"Numeric","children":[1556]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L3"}],"typeParameters":[{"id":1560,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1561,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1560,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1562,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1560,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedAdd"},{"id":1563,"name":"CheckedDivide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1564,"name":"/?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"signatures":[{"id":1565,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"parameters":[{"id":1566,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1568,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1567,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1569,"name":"Divider","package":"@w5s/core","qualifiedName":"CheckedDivide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1570,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedDivide.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1564]}],"categories":[{"title":"Numeric","children":[1564]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L3"}],"typeParameters":[{"id":1568,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1569,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1568,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1570,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1568,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedDivide"},{"id":1571,"name":"CheckedMultiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1572,"name":"*?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"signatures":[{"id":1573,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"parameters":[{"id":1574,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1576,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1575,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1577,"name":"Multiplier","package":"@w5s/core","qualifiedName":"CheckedMultiply.Multiplier","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1578,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedMultiply.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1572]}],"categories":[{"title":"Numeric","children":[1572]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L3"}],"typeParameters":[{"id":1576,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1577,"name":"Multiplier","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1576,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1578,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1576,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedMultiply"},{"id":1579,"name":"CheckedSubtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1580,"name":"-?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"signatures":[{"id":1581,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"parameters":[{"id":1582,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1584,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1583,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1585,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedSubtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1586,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedSubtract.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1580]}],"categories":[{"title":"Numeric","children":[1580]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L3"}],"typeParameters":[{"id":1584,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1585,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1584,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1586,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1584,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedSubtract"},{"id":1587,"name":"Divide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1588,"name":"/","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"signatures":[{"id":1589,"name":"/","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Divide<T> = ...;\\nconst result = Numeric[\'/\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"parameters":[{"id":1590,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the base part"}]},"type":{"type":"reference","target":1592,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1591,"name":"divider","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the divider part"}]},"type":{"type":"reference","target":1593,"name":"Divider","package":"@w5s/core","qualifiedName":"Divide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1594,"name":"Return","package":"@w5s/core","qualifiedName":"Divide.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1588]}],"categories":[{"title":"Numeric","children":[1588]}],"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L1"}],"typeParameters":[{"id":1592,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1593,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1592,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1594,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1592,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Divide"},{"id":1595,"name":"Multiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1596,"name":"*","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":1597,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":1598,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1600,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1599,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1601,"name":"Right","package":"@w5s/core","qualifiedName":"Multiply.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1602,"name":"Return","package":"@w5s/core","qualifiedName":"Multiply.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1596]}],"categories":[{"title":"Numeric","children":[1596]}],"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L1"}],"typeParameters":[{"id":1600,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1601,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1600,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1602,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1600,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Multiply"},{"id":1603,"name":"Negate","variant":"declaration","kind":256,"flags":{},"children":[{"id":1604,"name":"negate","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1605,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1606,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1607,"name":"T","package":"@w5s/core","qualifiedName":"Negate.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1608,"name":"Return","package":"@w5s/core","qualifiedName":"Negate.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1604]}],"categories":[{"title":"Numeric","children":[1604]}],"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L1"}],"typeParameters":[{"id":1607,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1608,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1607,"name":"T","package":"@w5s/core","qualifiedName":"Negate.T","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Negate"},{"id":1609,"name":"Signed","variant":"declaration","kind":256,"flags":{},"children":[{"id":1610,"name":"abs","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1611,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1612,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1613,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]},{"id":1618,"name":"isNegative","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1619,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1620,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1621,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1614,"name":"isPositive","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1615,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1616,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1617,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1622,"name":"sign","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1623,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1624,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1625,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1626,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1610,1618,1614,1622]}],"categories":[{"title":"Numeric","children":[1610,1618,1614,1622]}],"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L1"}],"typeParameters":[{"id":1626,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Numeric#Signed"},{"id":1627,"name":"Subtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1628,"name":"-","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":1629,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":1630,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1632,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1631,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1633,"name":"Right","package":"@w5s/core","qualifiedName":"Subtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1634,"name":"Return","package":"@w5s/core","qualifiedName":"Subtract.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1628]}],"categories":[{"title":"Numeric","children":[1628]}],"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L1"}],"typeParameters":[{"id":1632,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1633,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1632,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1634,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1632,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Subtract"},{"id":1635,"name":"Zero","variant":"declaration","kind":256,"flags":{},"children":[{"id":1639,"name":"isZero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1640,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1641,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1642,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1643,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1636,"name":"zero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1637,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1638,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1643,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1639,1636]}],"categories":[{"title":"Numeric","children":[1639,1636]}],"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L1"}],"typeParameters":[{"id":1643,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Numeric#Zero"}],"groups":[{"title":"Interfaces","children":[1547,1555,1563,1571,1579,1587,1595,1603,1609,1627,1635]}],"sources":[{"fileName":"packages/core/src/Numeric/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/index.ts#L1"}],"permalink":"/std/api/core/namespace/Numeric","categories":[],"previousId":1408,"nextId":1644},{"id":1644,"name":"Option","variant":"declaration","kind":4,"flags":{},"children":[{"id":1700,"name":"None","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`undefined`"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":67,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L67"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/api/core/namespace/Option#None"},{"id":1701,"name":"Some","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Non "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and non "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" value"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":72,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L72"}],"typeParameters":[{"id":1702,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1702,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","target":1702,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/api/core/namespace/Option#Some"},{"id":1649,"name":"None","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L52"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/api/core/namespace/Option#None"},{"id":1645,"name":"Some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"}],"signatures":[{"id":1646,"name":"Some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"An identity function that validates passed value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"}],"typeParameter":[{"id":1647,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1648,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the non empty value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1647,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1647,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#Some"},{"id":1650,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L53"}],"signatures":[{"id":1651,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":" if the option is "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":", otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" with the value and returns the result.\\nSome languages call this operation "},{"kind":"code","text":"`flatMap`"},{"kind":"text","text":" or "},{"kind":"code","text":"`chain`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (x: number): Option<number> => Option.Some(x * x);\\n\\nOption.andThen(Option.Some(2), square); // Option.Some(16)\\nOption.andThen(Option.None, square); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L53"}],"typeParameter":[{"id":1652,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1653,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1654,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1652,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1655,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1656,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"signatures":[{"id":1657,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"parameters":[{"id":1658,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1652,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1653,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1653,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#andThen"},{"id":1659,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"signatures":[{"id":1660,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to coerce value to "},{"kind":"code","text":"`Option`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.from(null);// undefined\\nOption.from(undefined);// undefined\\nOption.from(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"typeParameter":[{"id":1661,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1662,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the converted value"}]},"type":{"type":"reference","target":1661,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1661,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option/from.ts","qualifiedName":"NullableValues"},"name":"NullableValues","package":"@w5s/core"}],"name":"Exclude","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#from"},{"id":1663,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"signatures":[{"id":1664,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nconst x = None;\\nOption.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"typeParameter":[{"id":1665,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1666,"name":"DefaultValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1667,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1665,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1668,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a default value"}]},"type":{"type":"reflection","declaration":{"id":1669,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"signatures":[{"id":1670,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"type":{"type":"reference","target":1666,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1665,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1666,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/api/core/namespace/Option#getOrElse"},{"id":1671,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"signatures":[{"id":1672,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", throw an error if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Some(\'foo\');\\nOption.getOrThrow(x);// \'foo\'\\n\\nlet x = None;\\nOption.getOrThrow(x);// throw TypeError(\'option must not be a null|undefined\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"typeParameter":[{"id":1673,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1674,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1673,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}],"type":{"type":"reference","target":1673,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Option#getOrThrow"},{"id":1675,"name":"isNone","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"signatures":[{"id":1676,"name":"isNone","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"code","text":"`null`"},{"kind":"text","text":"or "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isNone(None);// true\\nOption.isNone(undefined);// true\\nOption.isNone(null);// true\\n\\nOption.isNone(Some(\'foo\'));// false\\nOption.isNone(\'foo\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"parameters":[{"id":1677,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}}}],"permalink":"/std/api/core/namespace/Option#isNone"},{"id":1678,"name":"isSome","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"signatures":[{"id":1679,"name":"isSome","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is neither "},{"kind":"code","text":"`null`"},{"kind":"text","text":" nor "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isSome(Option.None);// false\\nOption.isSome(undefined);// false\\nOption.isSome(null);// false\\n\\nOption.isSome(Option.Some(\'foo\'));// true\\nOption.isSome(\'foo\');// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"typeParameter":[{"id":1680,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1681,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1680,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1680,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}],"name":"Exclude","package":"typescript"}}}],"permalink":"/std/api/core/namespace/Option#isSome"},{"id":1682,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"signatures":[{"id":1683,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Option<U>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"code","text":"`Some`"},{"kind":"text","text":" value, leaving a "},{"kind":"code","text":"`None`"},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.map(x, (value) => `${value}_bar`));// Some(\'foo_bar\') == \'foo_bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"typeParameter":[{"id":1684,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1685,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1686,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1684,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1687,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1688,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"signatures":[{"id":1689,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"parameters":[{"id":1690,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1684,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1685,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1685,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#map"},{"id":1691,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"signatures":[{"id":1692,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the option if it contains a value, otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" and returns the result."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst alt = () => Some(\'bar\')\\n\\nOption.orElse(Option.Some(\'foo\'), alt); // Option.Some(\'foo\')\\nOption.orElse(Option.None, alt); // Option.Some(\'bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"typeParameter":[{"id":1693,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1694,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1693,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1695,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1696,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"signatures":[{"id":1697,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1693,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1693,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#orElse"}],"groups":[{"title":"Type Aliases","children":[1700,1701]},{"title":"Variables","children":[1649]},{"title":"Functions","children":[1645,1650,1659,1663,1671,1675,1678,1682,1691]}],"categories":[{"title":"Accessor","children":[1663,1671]},{"title":"Constructor","children":[1645,1659]},{"title":"Type","children":[1675,1678]},{"title":"__CATEGORY__","children":[1700,1701,1649,1650,1682,1691]}],"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":50,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L50"},{"fileName":"packages/core/src/Option.ts","line":63,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"permalink":"/std/api/core/namespace/Option","previousId":1546,"nextId":1703},{"id":1703,"name":"Order","variant":"declaration","kind":4,"flags":{},"children":[{"id":1713,"name":"combine","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L19"}],"signatures":[{"id":1714,"name":"combine","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Person {\\n  name: string;\\n  age: number;\\n}\\nconst comparePerson = combine(\\n  (left: Person, right: Person) => String.compare(left.name, right.name),\\n  (left: Person, right: Person) => Number.compare(left.age, right.age),\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L19"}],"typeParameter":[{"id":1715,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1716,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1715,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}},{"id":1717,"name":"others","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1715,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}}],"type":{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1715,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#combine"},{"id":1704,"name":"compareBy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L18"}],"signatures":[{"id":1705,"name":"compareBy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1703,"tsLinkText":""},{"kind":"text","text":" function that will map the parameters using "},{"kind":"code","text":"`selectFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst compareByName = compareBy((named: { name: string }) => named.name, String.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L18"}],"typeParameter":[{"id":1706,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":1707,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1708,"name":"selector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes a "},{"kind":"code","text":"`From`"},{"kind":"text","text":" value and returns a "},{"kind":"code","text":"`To`"},{"kind":"text","text":" value."}]},"type":{"type":"reflection","declaration":{"id":1709,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L16"}],"signatures":[{"id":1710,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L16"}],"parameters":[{"id":1711,"name":"from","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1707,"name":"To","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1706,"name":"From","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":1712,"name":"compareTo","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1703,"tsLinkText":""},{"kind":"text","text":" function."}]},"type":{"type":"union","types":[{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1706,"name":"From","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"},{"type":"reference","target":985,"typeArguments":[{"type":"reference","target":1706,"name":"From","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}]}}],"type":{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1707,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#compareBy"},{"id":1718,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L20"}],"signatures":[{"id":1719,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a reversed "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1703,"tsLinkText":""},{"kind":"text","text":" from the given "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1703,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Comparable","target":975,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nreverse(Number.compare); // == (left, right) => Ordering.reverse(Number.compare(left, right))\\nreverse(Number); // == reverse(Number.compare)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L20"}],"typeParameter":[{"id":1720,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1721,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparator function or comparable object to be reversed."}]},"type":{"type":"union","types":[{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1720,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":985,"typeArguments":[{"type":"reference","target":1720,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"},{"type":"literal","value":"compare"}],"name":"Pick","package":"typescript"}]}}],"type":{"type":"reference","target":1722,"typeArguments":[{"type":"reference","target":1720,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#reverse"}],"groups":[{"title":"Functions","children":[1713,1704,1718]}],"categories":[{"title":"Constructor","children":[1704]},{"title":"__CATEGORY__","children":[1713,1718]}],"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"},{"fileName":"packages/core/src/Order.ts","line":17,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L17"}],"permalink":"/std/api/core/namespace/Order","previousId":1644,"nextId":1728},{"id":1728,"name":"Ordering","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate ordering values"}]},"children":[{"id":1734,"name":"Equal","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0","permalink":"/std/api/core/namespace/Ordering#Equal"},{"id":1735,"name":"Greater","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1","permalink":"/std/api/core/namespace/Ordering#Greater"},{"id":1733,"name":"Less","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1","permalink":"/std/api/core/namespace/Ordering#Less"},{"id":1736,"name":"[enumKeys]","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L39"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"Less"},{"type":"literal","value":"Equal"},{"type":"literal","value":"Greater"}]}}},"permalink":"/std/api/core/namespace/Ordering#[enumKeys]"},{"id":1743,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":1744,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1745,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1746,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1747,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1748,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":1749,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Ordering#__inspect__"},{"id":1766,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/core/namespace/Ordering#indexType"},{"id":1732,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"},{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'","permalink":"/std/api/core/namespace/Ordering#typeName"},{"id":1750,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1751,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1752,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1753,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1754,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#__decode__"},{"id":1755,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1756,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1757,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1758,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Ordering#__encode__"},{"id":1759,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1760,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1761,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#__schema__"},{"id":1740,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1741,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1742,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#asInstance"},{"id":1762,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1763,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1764,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1765,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Ordering#asString"},{"id":1767,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1768,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1769,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#at"},{"id":1737,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1738,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1739,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}}],"permalink":"/std/api/core/namespace/Ordering#hasInstance"},{"id":1770,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1771,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1772,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#indexOf"},{"id":1777,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1778,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1779,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1780,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#range"},{"id":1773,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1774,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1775,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1776,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Ordering#rangeSize"},{"id":1729,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"signatures":[{"id":1730,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reverses the "},{"kind":"code","text":"`Ordering`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Less`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Less`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nreverse(Ordering.Less); // == Ordering.Greater\\nreverse(Ordering.Greater); // == Ordering.Less\\nreverse(Ordering.Equal); // == Ordering.Equal\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"parameters":[{"id":1731,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ordering"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"type":{"type":"reference","target":1781,"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#reverse"}],"groups":[{"title":"Variables","children":[1734,1735,1733,1736,1743,1766,1732]},{"title":"Functions","children":[1750,1755,1759,1740,1762,1767,1737,1770,1777,1773,1729]}],"categories":[{"title":"Codec","children":[1750,1755,1759]},{"title":"Indexable","children":[1766,1767,1770,1777,1773]},{"title":"String","children":[1762]},{"title":"Type","children":[1743,1732,1740,1737]},{"title":"__CATEGORY__","children":[1734,1735,1733,1736,1729]}],"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"permalink":"/std/api/core/namespace/Ordering","previousId":1703,"nextId":1787},{"id":1787,"name":"Record","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate Record"}]},"children":[{"id":1788,"name":"delete","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"signatures":[{"id":1789,"name":"delete","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record without the "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.delete(record, \'myProperty\'); // {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"typeParameter":[{"id":1790,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1791,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1792,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1790,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1791,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1793,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1790,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1790,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1791,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#delete"},{"id":1794,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"signatures":[{"id":1795,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an empty "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1787,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst empty = Record.empty(); // frozen {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"typeParameter":[{"id":1796,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1797,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1796,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1797,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#empty"},{"id":1798,"name":"entries","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"signatures":[{"id":1799,"name":"entries","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [[\'first\', 1], [\'second\', 2]]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"typeParameter":[{"id":1800,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1801,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1802,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1800,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1801,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1800,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1801,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#entries"},{"id":1803,"name":"forEach","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"signatures":[{"id":1804,"name":"forEach","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Call "},{"kind":"code","text":"`fn(value, key, record)`"},{"kind":"text","text":" on each entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.forEach(record, (value, key, record) => {\\n // call (1, \'first\', record)\\n // call (2, \'second\', record)\\n}); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"typeParameter":[{"id":1805,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1806,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1807,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1805,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1806,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1808,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1807,"name":"D","package":"@w5s/core","refersToTypeParameter":true}},{"id":1809,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"callback called on each entry"}]},"type":{"type":"reflection","declaration":{"id":1810,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"signatures":[{"id":1811,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"parameters":[{"id":1812,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1806,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":1813,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1805,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1814,"name":"record","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1807,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/namespace/Record#forEach"},{"id":1815,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"signatures":[{"id":1816,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1787,"tsLinkText":""},{"kind":"text","text":" from an iterable of [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = Record.from([[\'a\', 1], [\'b\', 2]]); // frozen { a: 1, b: 2}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"typeParameter":[{"id":1817,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1818,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1819,"name":"iterable","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1817,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1818,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1817,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1818,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#from"},{"id":1820,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"signatures":[{"id":1821,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an Option of value for the given "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.get(record, \'myProperty\'); // Option.Some(\'myValue\')\\nRecord.get(record, \'nonExistent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"typeParameter":[{"id":1822,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1823,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1824,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1822,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1823,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1825,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1822,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1823,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Record#get"},{"id":1826,"name":"has","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"signatures":[{"id":1827,"name":"has","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if "},{"kind":"code","text":"`record`"},{"kind":"text","text":" contains "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.has(record, \'myProperty\'); // true\\nRecord.has(record, \'nonExistent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"typeParameter":[{"id":1828,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1829,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1828,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}},{"id":1830,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1828,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Record#has"},{"id":1831,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"signatures":[{"id":1832,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.keys(record)); // [\'first\', \'second\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"typeParameter":[{"id":1833,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1834,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1833,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1833,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#keys"},{"id":1835,"name":"set","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"signatures":[{"id":1836,"name":"set","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record including the new "},{"kind":"code","text":"`[key, value]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.set(record, \'myOtherProperty\', \'myOtherValue\'); // { myProperty: \'myValue\', myOtherProperty: \'myOtherValue\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"typeParameter":[{"id":1837,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1838,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1839,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1837,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1838,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1840,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1837,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1841,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry value"}]},"type":{"type":"reference","target":1838,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1837,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1838,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#set"},{"id":1842,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"signatures":[{"id":1843,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the number of entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.size(record); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"typeParameter":[{"id":1844,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1845,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1844,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Record#size"},{"id":1846,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"signatures":[{"id":1847,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [1, 2]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"typeParameter":[{"id":1848,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1849,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1850,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1848,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1849,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1849,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/core/namespace/Record#values"}],"groups":[{"title":"Functions","children":[1788,1794,1798,1803,1815,1820,1826,1831,1835,1842,1846]}],"categories":[{"title":"Accessor","children":[1820,1842]},{"title":"Constructor","children":[1794,1815]},{"title":"__CATEGORY__","children":[1788,1798,1803,1826,1831,1835,1846]}],"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"permalink":"/std/api/core/namespace/Record","previousId":1728,"nextId":1862},{"id":1862,"name":"Ref","variant":"declaration","kind":4,"flags":{},"children":[{"id":1883,"name":"current","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Current value symbol"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":25,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L25"}],"type":{"type":"literal","value":"current"},"defaultValue":"\'current\'","permalink":"/std/api/core/namespace/Ref#current"},{"id":1863,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"signatures":[{"id":1864,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" has a "},{"kind":"code","text":"`current`"},{"kind":"text","text":" property"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nRef.hasInstance(Ref(123)) // true\\nRef.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"parameters":[{"id":1865,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1858,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Ref","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Ref#hasInstance"},{"id":1875,"name":"modify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1876,"name":"modify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value using a mapping function that returns the new value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.modify(ref, (current) => current + \'bar\'); // Ref.read(ref) == \'foobar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"typeParameter":[{"id":1877,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1878,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1858,"typeArguments":[{"type":"reference","target":1877,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1879,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapping function that will be applied"}]},"type":{"type":"reflection","declaration":{"id":1880,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1881,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"parameters":[{"id":1882,"name":"current","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1877,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1877,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/namespace/Ref#modify"},{"id":1866,"name":"read","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"signatures":[{"id":1867,"name":"read","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current ref value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.read(ref); // \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"typeParameter":[{"id":1868,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1869,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1858,"typeArguments":[{"type":"reference","target":1868,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":1868,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Ref#read"},{"id":1870,"name":"write","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"signatures":[{"id":1871,"name":"write","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.write(ref, \'bar\'); // Ref.read(ref) == \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"typeParameter":[{"id":1872,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1873,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1858,"typeArguments":[{"type":"reference","target":1872,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1874,"name":"newValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the new value to be set"}]},"type":{"type":"reference","target":1872,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/namespace/Ref#write"}],"groups":[{"title":"Variables","children":[1883]},{"title":"Functions","children":[1863,1875,1866,1870]}],"categories":[{"title":"Accessor","children":[1875,1866,1870]},{"title":"Type","children":[1863]},{"title":"__CATEGORY__","children":[1883]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"permalink":"/std/api/core/namespace/Ref","previousId":1787,"nextId":1884},{"id":1884,"name":"Result","variant":"declaration","kind":4,"flags":{},"children":[{"id":2008,"name":"Error","variant":"declaration","kind":256,"flags":{},"children":[{"id":2010,"name":"error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The error value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L89"}],"type":{"type":"reference","target":2011,"name":"E","package":"@w5s/core","qualifiedName":"Result.Error.E","refersToTypeParameter":true}},{"id":2009,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`false`"},{"kind":"text","text":" only for Error objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L85"}],"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[2010,2009]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":81,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L81"}],"typeParameters":[{"id":2011,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Result#Error"},{"id":2004,"name":"Ok","variant":"declaration","kind":256,"flags":{},"children":[{"id":2005,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" only for Ok objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":74,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L74"}],"type":{"type":"literal","value":true}},{"id":2006,"name":"value","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The success value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":78,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L78"}],"type":{"type":"reference","target":2007,"name":"V","package":"@w5s/core","qualifiedName":"Result.Ok.V","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2005,2006]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":70,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L70"}],"typeParameters":[{"id":2007,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Result#Ok"},{"id":1890,"name":"Error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"signatures":[{"id":1891,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":1892,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"typeParameter":[{"id":1893,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1894,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":1893,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1893,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#Error"},{"id":1885,"name":"Ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"signatures":[{"id":1886,"name":"Ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":1887,"name":"Ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"typeParameter":[{"id":1888,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1889,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1888,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1888,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#Ok"},{"id":1895,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"signatures":[{"id":1896,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (num: number): Result<number, \'TestError\'> => Result.Ok(num * num);\\nResult.andThen(Result.Ok(4), square); // Result.Ok(16)\\nResult.andThen(Result.Error(\'TestError\'), square); // Result.Error(\'TestError\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"typeParameter":[{"id":1897,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1898,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1899,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1900,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1901,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1897,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1898,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1902,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a value mapping function"}]},"type":{"type":"reflection","declaration":{"id":1903,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"signatures":[{"id":1904,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"parameters":[{"id":1905,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1897,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1899,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1900,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1899,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":1898,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1900,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#andThen"},{"id":1906,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"signatures":[{"id":1907,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1649,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.get(x);// Option.Some(\'foo\')\\n\\nlet x = Error(\'foo\');\\nResult.get(x);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1908,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1909,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1908,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1701,"typeArguments":[{"type":"reference","target":1908,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1910,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"parameters":[{"id":1911,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1700,"name":"Option.None","package":"@w5s/core"}},{"id":1912,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1913,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1914,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1913,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1913,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#get"},{"id":1915,"name":"getError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"signatures":[{"id":1916,"name":"getError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1649,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getError(x);// Option.None\\n\\nlet x = Error(\'foo\');\\nResult.getError(x);// Option.Some(\'foo\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1917,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1918,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1917,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1701,"typeArguments":[{"type":"reference","target":1917,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1919,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"parameters":[{"id":1920,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1700,"name":"Option.None","package":"@w5s/core"}},{"id":1921,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1922,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1923,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":1922,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1922,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#getError"},{"id":1924,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"signatures":[{"id":1925,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"typeParameter":[{"id":1926,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1927,"name":"VDefault","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1928,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1926,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}},{"id":1929,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns default value"}]},"type":{"type":"reflection","declaration":{"id":1930,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"signatures":[{"id":1931,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"type":{"type":"reference","target":1927,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1926,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1927,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/api/core/namespace/Result#getOrElse"},{"id":1932,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"signatures":[{"id":1933,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":", throw "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":".\\n\\n **\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrThrow(x);// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrThrow(x);// throw \'error\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"typeParameter":[{"id":1934,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1935,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1934,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1934,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Result#getOrThrow"},{"id":1936,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"signatures":[{"id":1937,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nResult.hasInstance(null); // === false\\nResult.hasInstance(Result.Ok(null)); // === true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"parameters":[{"id":1938,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Result#hasInstance"},{"id":1939,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"signatures":[{"id":1940,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(Result.isError(x));// false\\n\\nlet x = Error(\'foo\');\\nconsole.log(Result.isError(x));// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"typeParameter":[{"id":1941,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1942,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1943,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1941,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1942,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2008,"typeArguments":[{"type":"reference","target":1942,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Error","package":"@w5s/core","qualifiedName":"Result.Error"}}}],"permalink":"/std/api/core/namespace/Result#isError"},{"id":1944,"name":"isOk","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"signatures":[{"id":1945,"name":"isOk","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(isOk(x));// true\\n\\nlet x = Error(\'foo\');\\nconsole.log(isOk(x));// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"typeParameter":[{"id":1946,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1947,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1948,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1946,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1947,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2004,"typeArguments":[{"type":"reference","target":1946,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ok","package":"@w5s/core","qualifiedName":"Result.Ok"}}}],"permalink":"/std/api/core/namespace/Result#isOk"},{"id":1949,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"signatures":[{"id":1950,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<ValueFrom, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<ValueTo, Error>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Ok(\'foo\');\\nResult.map(result, (value) => `${value}_bar`));// Ok(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"typeParameter":[{"id":1951,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1952,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1953,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1954,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1951,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1953,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1955,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1956,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"signatures":[{"id":1957,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"parameters":[{"id":1958,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1951,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1952,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1952,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1953,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#map"},{"id":1959,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"signatures":[{"id":1960,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Error(\'foo\');\\nResult.mapError(result, (value) => `${value}_bar`));// Error(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"typeParameter":[{"id":1961,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1962,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1963,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1964,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1961,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1962,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1965,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error  mapper function"}]},"type":{"type":"reflection","declaration":{"id":1966,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"signatures":[{"id":1967,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"parameters":[{"id":1968,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1962,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1963,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1961,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1963,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#mapError"},{"id":1969,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"signatures":[{"id":1970,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1890,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1885,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on result values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst handleError = (message: string) => Result.Ok(message + \'_handled\');\\nResult.orElse(Result.Error(\'TestError\'), square); // Result.Ok(\'TestError_handled\')\\nResult.orElse(Result.Ok(4), square); // Result.Ok(4)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"typeParameter":[{"id":1971,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1972,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1973,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1974,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1975,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1971,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1972,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1976,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a error mapping function"}]},"type":{"type":"reflection","declaration":{"id":1977,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"signatures":[{"id":1978,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"parameters":[{"id":1979,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1972,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1973,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1974,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1971,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1973,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"reference","target":1974,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#orElse"},{"id":1980,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"signatures":[{"id":1981,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Ok(block())`"},{"kind":"text","text":". If an error was thrown then it returns "},{"kind":"code","text":"`Error(onError(<<thrown error>>))`"},{"kind":"text","text":" instead"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class InvalidURLError extends Error {}\\nconst result = Result.tryCall(\\n () => new URL(\'my/url\'),\\n (error) => new InvalidURLError()\\n);\\n\\nconst class FetchError extends Error {}\\nconst result = Result.tryCall(\\n () => fetch(\'my/url\'),\\n () => new FetchError()\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":1982,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1983,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1984,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":1985,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1986,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1982,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}},{"id":1987,"name":"onError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":1988,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1989,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"parameters":[{"id":1990,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1983,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1982,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1983,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":1991,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":1992,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1993,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1994,"name":"block","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1995,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1996,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1992,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}},{"id":1997,"name":"onError","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1998,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1999,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"parameters":[{"id":2000,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1993,"name":"E","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":1992,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1993,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#tryCall"}],"groups":[{"title":"Interfaces","children":[2008,2004]},{"title":"Functions","children":[1890,1885,1895,1906,1915,1924,1932,1936,1939,1944,1949,1959,1969,1980]}],"categories":[{"title":"Accessor","children":[1906,1915,1924,1932]},{"title":"Constructor","children":[1890,1885]},{"title":"Type","children":[1936,1939,1944]},{"title":"__CATEGORY__","children":[2008,2004,1895,1949,1959,1969,1980]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"permalink":"/std/api/core/namespace/Result","previousId":1862,"nextId":2012},{"id":2012,"name":"String","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`string`"}]},"children":[{"id":2139,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572,"permalink":"/std/api/core/namespace/String#typeName"},{"id":2146,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2147,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2148,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2149,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2150,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2151,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2152,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/String#__inspect__"},{"id":2129,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":2130,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":2131,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2132,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2133,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#!="},{"id":2093,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":2094,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":2095,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2096,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2097,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#<"},{"id":2088,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":2089,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":2090,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2091,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2092,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#<="},{"id":2134,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":2135,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":2136,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2137,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2138,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#=="},{"id":2103,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":2104,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":2105,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2106,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2107,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#>"},{"id":2098,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":2099,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":2100,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2101,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2102,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#>="},{"id":2153,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2154,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2155,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2156,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2157,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#__decode__"},{"id":2158,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2159,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2160,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2161,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/String#__encode__"},{"id":2162,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2163,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2164,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#__schema__"},{"id":2143,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2144,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2145,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#asInstance"},{"id":2165,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2166,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2167,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2168,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#asString"},{"id":2013,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"signatures":[{"id":2014,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the character at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst string = \'bar\';\\nString.at(string, 1) // Option.Some(\'a\')\\nString.at(string, -1) //  Option.Some(\'r\') i.e. the last\\nString.at(string, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"parameters":[{"id":2015,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2016,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":926,"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#at"},{"id":2118,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":2119,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":2120,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2121,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2122,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2123,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#clamp"},{"id":2083,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":2084,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":2085,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2086,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2087,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#compare"},{"id":2017,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"signatures":[{"id":2018,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.concat([\'a\', \'b\', \'c\']) // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"parameters":[{"id":2019,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#concat"},{"id":2020,"name":"endsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"signatures":[{"id":2021,"name":"endsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string ends with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.endsWith(\'abc\', \'bc\'); // true\\nString.endsWith(\'abc\', \'ab\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"parameters":[{"id":2022,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2023,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#endsWith"},{"id":2124,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":2125,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":2126,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2127,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2128,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#equals"},{"id":2140,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2141,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2142,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/api/core/namespace/String#hasInstance"},{"id":2024,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"signatures":[{"id":2025,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.includes(\'abc\', \'ab\'); // true\\nString.includes(\'abc\', \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"parameters":[{"id":2026,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2027,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#includes"},{"id":2028,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"signatures":[{"id":2029,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.indexOf(\'aa\', \'a\'); // Option.Some(0)\\nString.indexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.indexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"parameters":[{"id":2030,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2031,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2032,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#indexOf"},{"id":2033,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"signatures":[{"id":2034,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.isEmpty(\'\');// true\\nString.isEmpty(\'abc\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"parameters":[{"id":2035,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#isEmpty"},{"id":2036,"name":"join","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"signatures":[{"id":2037,"name":"join","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.join(\'|\', [\'a\', \'b\', \'c\']) // \'a|b|c\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"parameters":[{"id":2038,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the separator"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2039,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#join"},{"id":2040,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"signatures":[{"id":2041,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.lastIndexOf(\'aa\', \'a\'); // Option.Some(1)\\nString.lastIndexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.lastIndexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"parameters":[{"id":2042,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2043,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2044,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#lastIndexOf"},{"id":2113,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":2114,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":2115,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2116,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2117,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#max"},{"id":2108,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":2109,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":2110,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2111,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2112,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#min"},{"id":2045,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"signatures":[{"id":2046,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new string from all parts passed as arguments"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.of(\'a\', \'b\', \'c\') // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"parameters":[{"id":2047,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"a list of parts"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#of"},{"id":2048,"name":"padEnd","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"signatures":[{"id":2049,"name":"padEnd","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padEnd(\'abc\', 9, \'1234\'); // \'abcd1234\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"parameters":[{"id":2050,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2051,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":2052,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#padEnd"},{"id":2053,"name":"padStart","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"signatures":[{"id":2054,"name":"padStart","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padStart(\'abc\', 9, \'1234\'); // \'1234abcd\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"parameters":[{"id":2055,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2056,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":2057,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#padStart"},{"id":2058,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"signatures":[{"id":2059,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.size(\'\') // 0\\nString.size(\'foo bar\') // 6\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"parameters":[{"id":2060,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1382,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#size"},{"id":2061,"name":"split","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"signatures":[{"id":2062,"name":"split","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Split a string into substrings using the specified separator and return them as an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.split(\'a|b|c\', \'|\'); // [\'a\', \'b\', \'c\']\\nString.split(\'a|b|c\', \'|\', 2); // [\'a\', \'b\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"parameters":[{"id":2063,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2064,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reflection","declaration":{"id":2065,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2066,"name":"[split]","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"signatures":[{"id":2067,"name":"[split]","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"parameters":[{"id":2068,"name":"string","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2069,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"groups":[{"title":"Methods","children":[2066]}],"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}]}}]}},{"id":2070,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value used to limit the number of elements returned in the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/api/core/namespace/String#split"},{"id":2071,"name":"startsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"signatures":[{"id":2072,"name":"startsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string starts with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.startsWith(\'abc\', \'ab\'); // true\\nString.startsWith(\'abc\', \'bc\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"parameters":[{"id":2073,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2074,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#startsWith"},{"id":2075,"name":"truncate","variant":"declaration","kind":64,"flags":{},"children":[{"id":2079,"name":"defaultOptions","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}],"type":{"type":"reflection","declaration":{"id":2080,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2081,"name":"ellipsis","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L44"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'...\'"},{"id":2082,"name":"maxLength","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":45,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L45"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[2081,2082]}],"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}]}},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[2079]}],"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"signatures":[{"id":2076,"name":"truncate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Truncates a string to a specified length, adding \'...\' if necessary."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntruncate(\'Hello World\', { maxLength: 1 }); // \'Hello World\'\\ntruncate(\'Hello World\', { maxLength: 5 }); // \'He...\'\\ntruncate(\'Hello World\', { maxLength: 5, ellipsis: \'[...]\' }); // \'He[...]\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"parameters":[{"id":2077,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The input string to truncate. If not provided or null/undefined,\\n                          will return the default truncation string (\'...\')"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2078,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An optional object containing additional options for the truncation."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/String/truncate.ts","qualifiedName":"truncate.Options"},"name":"Options","package":"@w5s/core","qualifiedName":"truncate.Options"},"defaultValue":"truncate.defaultOptions"}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#truncate"}],"groups":[{"title":"References","children":[2139]},{"title":"Variables","children":[2146]},{"title":"Functions","children":[2129,2093,2088,2134,2103,2098,2153,2158,2162,2143,2165,2013,2118,2083,2017,2020,2124,2140,2024,2028,2033,2036,2040,2113,2108,2045,2048,2053,2058,2061,2071,2075]}],"categories":[{"title":"Accessor","children":[2013,2058]},{"title":"Codec","children":[2153,2158,2162]},{"title":"Combinator","children":[2017,2036]},{"title":"Comparator","children":[2129,2093,2088,2134,2103,2098,2118,2083,2124,2113,2108]},{"title":"Constructor","children":[2045]},{"title":"Predicate","children":[2020,2024,2033,2071]},{"title":"String","children":[2165]},{"title":"Type","children":[2146,2143,2140]},{"title":"__CATEGORY__","children":[2139,2028,2040,2048,2053,2061,2075]}],"sources":[{"fileName":"packages/core/src/String.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L24"}],"permalink":"/std/api/core/namespace/String","previousId":1884,"nextId":2173},{"id":2173,"name":"Struct","variant":"declaration","kind":4,"flags":{},"children":[{"id":2236,"name":"DefineParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":2238,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2239,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2240,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2241,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},{"id":2242,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2243,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2244,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":2264,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2265,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2266,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2267,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.hasInstance"}},{"id":2237,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":2248,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2249,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2250,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2251,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2252,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}},{"id":2253,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2254,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2255,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2256,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}},{"id":2257,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2258,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2259,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}},{"id":2245,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2246,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2247,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":2260,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2261,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2262,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2263,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"groups":[{"title":"Properties","children":[2238,2264,2237]},{"title":"Methods","children":[2248,2253,2257,2245,2260]}],"categories":[{"title":"Codec","children":[2248,2253,2257]},{"title":"String","children":[2260]},{"title":"Type","children":[2238,2245]},{"title":"__CATEGORY__","children":[2264,2237]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":86,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L86"}],"typeParameters":[{"id":2268,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2169,"typeArguments":[{"type":"reflection","declaration":{"id":2269,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2270,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":86,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L86"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2270]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":86,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L86"}]}}],"name":"Struct","package":"@w5s/core"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":2636,"typeArguments":[{"type":"reference","target":2268,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Type.Parameters","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/core/namespace/Struct#DefineParameters"},{"id":2187,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2225,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2226,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L37"}],"signatures":[{"id":2227,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L37"}],"parameters":[{"id":2228,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2185,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":804,"name":"Callable.__call__"}},{"id":2202,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2203,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2204,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2205,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},{"id":2206,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2207,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2208,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2677,"name":"Module.__inspect__"}},{"id":2195,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":57,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L57"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":2670,"name":"Module.typeName"}},{"id":2209,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2210,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2211,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2212,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2213,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2685,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2684,"name":"Module.__decode__"}},{"id":2214,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2215,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2216,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2217,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2690,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2689,"name":"Module.__encode__"}},{"id":2218,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2219,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2220,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2694,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2693,"name":"Module.__schema__"}},{"id":2199,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2200,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2201,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2675,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2674,"name":"Module.asInstance"}},{"id":2221,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2222,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2223,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2224,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2697,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2696,"name":"Module.asString"}},{"id":2191,"name":"create","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":51,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L51"}],"signatures":[{"id":2192,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":51,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L51"}],"parameters":[{"id":2193,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2194,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":2185,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]},{"id":2196,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2197,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2198,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2672,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2671,"name":"Module.hasInstance"}}],"groups":[{"title":"Properties","children":[2225,2202,2195]},{"title":"Methods","children":[2209,2214,2218,2199,2221,2191,2196]}],"categories":[{"title":"Callable","children":[2225]},{"title":"Codec","children":[2209,2214,2218]},{"title":"Constructor","children":[2191]},{"title":"String","children":[2221]},{"title":"Type","children":[2202,2195,2199,2196]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":35,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L35"}],"typeParameters":[{"id":2229,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2169,"typeArguments":[{"type":"reflection","declaration":{"id":2230,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2231,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":35,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L35"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2231]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":35,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L35"}]}}],"name":"Struct","package":"@w5s/core"}}],"signatures":[{"id":2232,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L44"}],"parameters":[{"id":2233,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":2185,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":802,"typeArguments":[{"type":"reflection","declaration":{"id":2188,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L37"}],"signatures":[{"id":2189,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2190,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2185,"typeArguments":[{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2229,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/api/core/namespace/Struct#Module"},{"id":2185,"name":"Parameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new Struct"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":33,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L33"}],"typeParameters":[{"id":2186,"name":"Model","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2186,"name":"Model","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2235,"name":"Struct.type","package":"@w5s/core"}],"name":"Omit","package":"typescript"},"permalink":"/std/api/core/namespace/Struct#Parameters"},{"id":2235,"name":"type","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":62,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L62"},{"fileName":"packages/core/src/Struct.ts","line":64,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L64"}],"type":{"type":"query","queryType":{"type":"reference","target":2234,"name":"type","package":"@w5s/core","qualifiedName":"Struct.type"}},"permalink":"/std/api/core/namespace/Struct#type"},{"id":2234,"name":"type","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"The type property discriminator"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":62,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L62"},{"fileName":"packages/core/src/Struct.ts","line":64,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L64"}],"type":{"type":"literal","value":"_"},"defaultValue":"\'_\'","permalink":"/std/api/core/namespace/Struct#type"},{"id":2174,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":79,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L79"}],"signatures":[{"id":2175,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Struct from "},{"kind":"code","text":"`properties`"},{"kind":"text","text":".\\nStruct adds debugging / inspecting abilities"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.define<{ some: boolean }>({ typeName: \'SomeType\' });\\n\\nStruct.create(SomeType, { some: true });// Struct { _: \'SomeType\', some: true }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":79,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L79"}],"typeParameter":[{"id":2176,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2177,"name":"module","variant":"param","kind":32768,"flags":{},"type":{"type":"intersection","types":[{"type":"reference","target":2618,"typeArguments":[{"type":"reference","target":2176,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":545,"typeArguments":[{"type":"reference","target":2176,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}]}},{"id":2178,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2176,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2176,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Struct#create"},{"id":2179,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":106,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L106"}],"signatures":[{"id":2180,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Struct`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"Module","target":2187,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Model = Struct<{ [Struct.type]: \'Model\', foo: boolean }>\\nconst Model = Struct.define<Model>({ typeName: \'Model\' });\\n\\nconst instance = Model({ foo: true }); // { _: \'Model\', foo: true }\\nModel.typeName === \'Model\' // true\\nModel.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":106,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L106"}],"typeParameter":[{"id":2181,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":2182,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2183,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":106,"character":48,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L106"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2183]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":106,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L106"}]}}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":2184,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2236,"typeArguments":[{"type":"reference","target":2181,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"DefineParameters","package":"@w5s/core","qualifiedName":"Struct.DefineParameters"}}],"type":{"type":"reference","target":2187,"typeArguments":[{"type":"reference","target":2181,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Struct.Module"}}],"permalink":"/std/api/core/namespace/Struct#define"}],"groups":[{"title":"Interfaces","children":[2236,2187]},{"title":"Type Aliases","children":[2185,2235]},{"title":"Variables","children":[2234]},{"title":"Functions","children":[2174,2179]}],"categories":[{"title":"Constructor","children":[2187]},{"title":"__CATEGORY__","children":[2236,2185,2235,2234,2174,2179]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L20"},{"fileName":"packages/core/src/Struct.ts","line":29,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L29"}],"permalink":"/std/api/core/namespace/Struct","previousId":2012,"nextId":2271},{"id":2271,"name":"Symbol","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of well known symbols"}]},"children":[{"id":2301,"name":"asyncDispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":2300,"name":"asyncDispose","package":"@w5s/core","qualifiedName":"Symbol.asyncDispose"}},"permalink":"/std/api/core/namespace/Symbol#asyncDispose"},{"id":2275,"name":"asyncIterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":2274,"name":"asyncIterator","package":"@w5s/core","qualifiedName":"Symbol.asyncIterator"}},"permalink":"/std/api/core/namespace/Symbol#asyncIterator"},{"id":2303,"name":"call","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"query","queryType":{"type":"reference","target":2302,"name":"call","package":"@w5s/core","qualifiedName":"Symbol.call"}},"permalink":"/std/api/core/namespace/Symbol#call"},{"id":2309,"name":"decode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"query","queryType":{"type":"reference","target":2308,"name":"decode","package":"@w5s/core","qualifiedName":"Symbol.decode"}},"permalink":"/std/api/core/namespace/Symbol#decode"},{"id":2299,"name":"dispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":2298,"name":"dispose","package":"@w5s/core","qualifiedName":"Symbol.dispose"}},"permalink":"/std/api/core/namespace/Symbol#dispose"},{"id":2307,"name":"encode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"query","queryType":{"type":"reference","target":2306,"name":"encode","package":"@w5s/core","qualifiedName":"Symbol.encode"}},"permalink":"/std/api/core/namespace/Symbol#encode"},{"id":2313,"name":"enumKeys","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"query","queryType":{"type":"reference","target":2312,"name":"enumKeys","package":"@w5s/core","qualifiedName":"Symbol.enumKeys"}},"permalink":"/std/api/core/namespace/Symbol#enumKeys"},{"id":2277,"name":"hasInstance","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":2276,"name":"hasInstance","package":"@w5s/core","qualifiedName":"Symbol.hasInstance"}},"permalink":"/std/api/core/namespace/Symbol#hasInstance"},{"id":2305,"name":"inspect","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"query","queryType":{"type":"reference","target":2304,"name":"inspect","package":"@w5s/core","qualifiedName":"Symbol.inspect"}},"permalink":"/std/api/core/namespace/Symbol#inspect"},{"id":2279,"name":"isConcatSpreadable","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":2278,"name":"isConcatSpreadable","package":"@w5s/core","qualifiedName":"Symbol.isConcatSpreadable"}},"permalink":"/std/api/core/namespace/Symbol#isConcatSpreadable"},{"id":2273,"name":"iterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":2272,"name":"iterator","package":"@w5s/core","qualifiedName":"Symbol.iterator"}},"permalink":"/std/api/core/namespace/Symbol#iterator"},{"id":2281,"name":"match","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":2280,"name":"match","package":"@w5s/core","qualifiedName":"Symbol.match"}},"permalink":"/std/api/core/namespace/Symbol#match"},{"id":2283,"name":"matchAll","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":2282,"name":"matchAll","package":"@w5s/core","qualifiedName":"Symbol.matchAll"}},"permalink":"/std/api/core/namespace/Symbol#matchAll"},{"id":2285,"name":"replace","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":2284,"name":"replace","package":"@w5s/core","qualifiedName":"Symbol.replace"}},"permalink":"/std/api/core/namespace/Symbol#replace"},{"id":2315,"name":"run","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"query","queryType":{"type":"reference","target":2314,"name":"run","package":"@w5s/core","qualifiedName":"Symbol.run"}},"permalink":"/std/api/core/namespace/Symbol#run"},{"id":2311,"name":"schema","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"query","queryType":{"type":"reference","target":2310,"name":"schema","package":"@w5s/core","qualifiedName":"Symbol.schema"}},"permalink":"/std/api/core/namespace/Symbol#schema"},{"id":2287,"name":"search","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":2286,"name":"search","package":"@w5s/core","qualifiedName":"Symbol.search"}},"permalink":"/std/api/core/namespace/Symbol#search"},{"id":2289,"name":"species","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":2288,"name":"species","package":"@w5s/core","qualifiedName":"Symbol.species"}},"permalink":"/std/api/core/namespace/Symbol#species"},{"id":2291,"name":"split","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":2290,"name":"split","package":"@w5s/core","qualifiedName":"Symbol.split"}},"permalink":"/std/api/core/namespace/Symbol#split"},{"id":2295,"name":"toPrimitive","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":2294,"name":"toPrimitive","package":"@w5s/core","qualifiedName":"Symbol.toPrimitive"}},"permalink":"/std/api/core/namespace/Symbol#toPrimitive"},{"id":2293,"name":"toStringTag","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":2292,"name":"toStringTag","package":"@w5s/core","qualifiedName":"Symbol.toStringTag"}},"permalink":"/std/api/core/namespace/Symbol#toStringTag"},{"id":2297,"name":"unscopables","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":2296,"name":"unscopables","package":"@w5s/core","qualifiedName":"Symbol.unscopables"}},"permalink":"/std/api/core/namespace/Symbol#unscopables"},{"id":2300,"name":"asyncDispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to asynchronously release resources held by an object. Called by the semantics of the await using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.asyncDispose"},"name":"GlobalSymbol.asyncDispose","package":"typescript","qualifiedName":"SymbolConstructor.asyncDispose","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#asyncDispose"},{"id":2274,"name":"asyncIterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default async iterator for an object. Called by the semantics of the for-await-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"SymbolConstructor.asyncIterator"},"name":"GlobalSymbol.asyncIterator","package":"typescript","qualifiedName":"SymbolConstructor.asyncIterator","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#asyncIterator"},{"id":2302,"name":"call","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Call signature"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"literal","value":"__call__"},"defaultValue":"\'__call__\'","permalink":"/std/api/core/namespace/Symbol#call"},{"id":2308,"name":"decode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Decode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":927}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"literal","value":"__decode__"},"defaultValue":"\'__decode__\'","permalink":"/std/api/core/namespace/Symbol#decode"},{"id":2298,"name":"dispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to release resources held by an object. Called by the semantics of the using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.dispose"},"name":"GlobalSymbol.dispose","package":"typescript","qualifiedName":"SymbolConstructor.dispose","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#dispose"},{"id":2306,"name":"encode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":927}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"literal","value":"__encode__"},"defaultValue":"\'__encode__\'","permalink":"/std/api/core/namespace/Symbol#encode"},{"id":2312,"name":"enumKeys","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Enum keys"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#enumKeys"},{"id":2276,"name":"hasInstance","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that determines if a constructor object recognizes an object as one of the constructor\u2019s instances. Called by the semantics of the instanceof operator."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.hasInstance"},"name":"GlobalSymbol.hasInstance","package":"typescript","qualifiedName":"SymbolConstructor.hasInstance","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#hasInstance"},{"id":2304,"name":"inspect","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Type","target":2411}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"literal","value":"__inspect__"},"defaultValue":"\'__inspect__\'","permalink":"/std/api/core/namespace/Symbol#inspect"},{"id":2278,"name":"isConcatSpreadable","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A Boolean value that if true indicates that an object should flatten to its array elements by Array.prototype.concat."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.isConcatSpreadable"},"name":"GlobalSymbol.isConcatSpreadable","package":"typescript","qualifiedName":"SymbolConstructor.isConcatSpreadable","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#isConcatSpreadable"},{"id":2272,"name":"iterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default iterator for an object. Called by the semantics of the for-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"SymbolConstructor.iterator"},"name":"GlobalSymbol.iterator","package":"typescript","qualifiedName":"SymbolConstructor.iterator","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#iterator"},{"id":2280,"name":"match","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.match method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.match"},"name":"GlobalSymbol.match","package":"typescript","qualifiedName":"SymbolConstructor.match","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#match"},{"id":2282,"name":"matchAll","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.matchAll method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.matchAll"},"name":"GlobalSymbol.matchAll","package":"typescript","qualifiedName":"SymbolConstructor.matchAll","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#matchAll"},{"id":2284,"name":"replace","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.replace"},"name":"GlobalSymbol.replace","package":"typescript","qualifiedName":"SymbolConstructor.replace","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#replace"},{"id":2314,"name":"run","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Task run effect"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#run"},{"id":2310,"name":"schema","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Schema property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":927}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"literal","value":"__schema__"},"defaultValue":"\'__schema__\'","permalink":"/std/api/core/namespace/Symbol#schema"},{"id":2286,"name":"search","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.search"},"name":"GlobalSymbol.search","package":"typescript","qualifiedName":"SymbolConstructor.search","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#search"},{"id":2288,"name":"species","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A function valued property that is the constructor function that is used to create derived objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.species"},"name":"GlobalSymbol.species","package":"typescript","qualifiedName":"SymbolConstructor.species","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#species"},{"id":2290,"name":"split","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that splits a string at the indices that match the regular expression. Called by the String.prototype.split method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.split"},"name":"GlobalSymbol.split","package":"typescript","qualifiedName":"SymbolConstructor.split","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#split"},{"id":2294,"name":"toPrimitive","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that converts an object to a corresponding primitive value. Called by the ToPrimitive abstract operation."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toPrimitive"},"name":"GlobalSymbol.toPrimitive","package":"typescript","qualifiedName":"SymbolConstructor.toPrimitive","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#toPrimitive"},{"id":2292,"name":"toStringTag","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A String value that is used in the creation of the default string description of an object. Called by the built-in method Object.prototype.toString."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toStringTag"},"name":"GlobalSymbol.toStringTag","package":"typescript","qualifiedName":"SymbolConstructor.toStringTag","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#toStringTag"},{"id":2296,"name":"unscopables","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"An Object whose truthy properties are properties that are excluded from the \'with\' environment bindings of the associated objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.unscopables"},"name":"GlobalSymbol.unscopables","package":"typescript","qualifiedName":"SymbolConstructor.unscopables","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#unscopables"}],"groups":[{"title":"Type Aliases","children":[2301,2275,2303,2309,2299,2307,2313,2277,2305,2279,2273,2281,2283,2285,2315,2311,2287,2289,2291,2295,2293,2297]},{"title":"Variables","children":[2300,2274,2302,2308,2298,2306,2312,2276,2304,2278,2272,2280,2282,2284,2314,2310,2286,2288,2290,2294,2292,2296]}],"sources":[{"fileName":"packages/core/src/Symbol.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L12"}],"permalink":"/std/api/core/namespace/Symbol","categories":[],"previousId":2173,"nextId":2316},{"id":2316,"name":"Tag","variant":"declaration","kind":4,"flags":{},"children":[{"id":2357,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2367,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2670,"name":"Module.typeName"},"target":572},{"id":2397,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2398,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2399,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2400,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":804,"name":"Callable.__call__"}},{"id":2374,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2375,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2376,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2377,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},{"id":2378,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2379,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2380,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2677,"name":"Module.__inspect__"}},{"id":2381,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2382,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2383,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2384,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2385,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2685,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2684,"name":"Module.__decode__"}},{"id":2386,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2387,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2388,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2389,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2690,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2689,"name":"Module.__encode__"}},{"id":2390,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2391,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2392,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2694,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2693,"name":"Module.__schema__"}},{"id":2371,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2372,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2373,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2675,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2674,"name":"Module.asInstance"}},{"id":2393,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2394,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2395,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2396,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2697,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2696,"name":"Module.asString"}},{"id":2368,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2369,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2370,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2672,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2671,"name":"Module.hasInstance"}},{"id":2364,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2365,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2366,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}]},{"id":2361,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2362,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2363,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}],"groups":[{"title":"References","children":[2367]},{"title":"Properties","children":[2397,2374]},{"title":"Methods","children":[2381,2386,2390,2371,2393,2368,2364,2361]}],"categories":[{"title":"Callable","children":[2397]},{"title":"Codec","children":[2381,2386,2390]},{"title":"String","children":[2393]},{"title":"Type","children":[2374,2371,2368]},{"title":"__CATEGORY__","children":[2367,2364,2361]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"typeParameters":[{"id":2401,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2402,"name":"To","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"signatures":[{"id":2403,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":28,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L28"}],"parameters":[{"id":2404,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":802,"typeArguments":[{"type":"reflection","declaration":{"id":2358,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2359,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2360,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2401,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2402,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/api/core/namespace/Tag#Module"},{"id":2324,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2330,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2331,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2332,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2333,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}},{"id":2334,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2335,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2336,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2642,"name":"Parameters.__inspect__"}},{"id":2325,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2326,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2327,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2328,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":2637,"name":"Parameters.hasInstance"}},{"id":2329,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2641,"name":"Parameters.typeName"}},{"id":2340,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2341,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2342,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2343,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2344,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2653,"name":"Parameters.__decode__"}}],"inheritedFrom":{"type":"reference","target":2652,"name":"Parameters.__decode__"}},{"id":2345,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2346,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2347,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2348,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2658,"name":"Parameters.__encode__"}}],"inheritedFrom":{"type":"reference","target":2657,"name":"Parameters.__encode__"}},{"id":2349,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2350,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2351,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2662,"name":"Parameters.__schema__"}}],"inheritedFrom":{"type":"reference","target":2661,"name":"Parameters.__schema__"}},{"id":2337,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2338,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2339,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2650,"name":"Parameters.asInstance"}}],"inheritedFrom":{"type":"reference","target":2649,"name":"Parameters.asInstance"}},{"id":2352,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2353,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2354,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2355,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2665,"name":"Parameters.asString"}}],"inheritedFrom":{"type":"reference","target":2664,"name":"Parameters.asString"}}],"groups":[{"title":"Properties","children":[2330,2325,2329]},{"title":"Methods","children":[2340,2345,2349,2337,2352]}],"categories":[{"title":"Codec","children":[2340,2345,2349]},{"title":"String","children":[2352]},{"title":"Type","children":[2330,2329,2337]},{"title":"__CATEGORY__","children":[2325]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":19,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L19"}],"typeParameters":[{"id":2356,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2636,"typeArguments":[{"type":"reference","target":2356,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}],"permalink":"/std/api/core/namespace/Tag#Parameters"},{"id":2317,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"signatures":[{"id":2318,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Tag module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Foo = string & Tag<\'Foo\'>;\\nconst Foo = Tag.define<string, Foo>({\\n  typeName: \'Foo\',\\n  hasInstance: (anyValue) => typeof anyValue === \'string\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"typeParameter":[{"id":2319,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2320,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2321,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2324,"typeArguments":[{"type":"reference","target":2320,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Tag.Parameters"}}],"type":{"type":"reference","target":2357,"typeArguments":[{"type":"reference","target":2319,"name":"From","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2320,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Tag.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Tag#define"}],"groups":[{"title":"Interfaces","children":[2357,2324]},{"title":"Functions","children":[2317]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"permalink":"/std/api/core/namespace/Tag","categories":[],"previousId":2271,"nextId":2411},{"id":2411,"name":"Type","variant":"declaration","kind":4,"flags":{},"children":[{"id":2669,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2670,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2619,"name":"Type.typeName"},"target":572},{"id":2677,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2678,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2679,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2680,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},{"id":2681,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2682,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2683,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2626,"name":"Type.__inspect__"}},{"id":2684,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2685,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2686,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2687,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2688,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":950,"name":"Codec.__decode__"}}],"inheritedFrom":{"type":"reference","target":949,"name":"Codec.__decode__"}},{"id":2689,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2690,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2691,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2692,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":955,"name":"Codec.__encode__"}}],"inheritedFrom":{"type":"reference","target":954,"name":"Codec.__encode__"}},{"id":2693,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2694,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2695,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":959,"name":"Codec.__schema__"}}],"inheritedFrom":{"type":"reference","target":958,"name":"Codec.__schema__"}},{"id":2674,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2675,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2676,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2624,"name":"Type.asInstance"}}],"inheritedFrom":{"type":"reference","target":2623,"name":"Type.asInstance"}},{"id":2696,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2697,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2698,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2699,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":547,"name":"AsString.asString"}}],"inheritedFrom":{"type":"reference","target":546,"name":"AsString.asString"}},{"id":2671,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2672,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2673,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2621,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2620,"name":"Type.hasInstance"}}],"groups":[{"title":"References","children":[2670]},{"title":"Properties","children":[2677]},{"title":"Methods","children":[2684,2689,2693,2674,2696,2671]}],"categories":[{"title":"Codec","children":[2684,2689,2693]},{"title":"String","children":[2696]},{"title":"Type","children":[2677,2674,2671]},{"title":"__CATEGORY__","children":[2670]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":143,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L143"}],"typeParameters":[{"id":2700,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2618,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"reference","target":545,"typeArguments":[{"type":"reference","target":2700,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"extendedBy":[{"type":"reference","target":1094,"name":"Enumerable"},{"type":"reference","target":2187,"name":"Module"},{"type":"reference","target":2357,"name":"Module"}],"permalink":"/std/api/core/namespace/Type#Module"},{"id":2636,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2642,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2643,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2644,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2645,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}},{"id":2646,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2647,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2648,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":2637,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2638,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2639,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2640,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":2641,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":2652,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2653,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2654,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2655,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2656,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}},{"id":2657,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2658,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2659,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2660,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}},{"id":2661,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2662,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2663,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}},{"id":2649,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2650,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2651,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":2664,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2665,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2666,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2667,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"groups":[{"title":"Properties","children":[2642,2637,2641]},{"title":"Methods","children":[2652,2657,2661,2649,2664]}],"categories":[{"title":"Codec","children":[2652,2657,2661]},{"title":"String","children":[2664]},{"title":"Type","children":[2642,2641,2649]},{"title":"__CATEGORY__","children":[2637]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":133,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L133"}],"typeParameters":[{"id":2668,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2618,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"Omit","package":"typescript"},{"type":"union","types":[{"type":"literal","value":"asInstance"},{"type":"reference","target":2305,"name":"Symbol.inspect","package":"@w5s/core"}]}],"name":"PartialKeys","package":"@w5s/core-type"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":948,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"name":"Partial","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":545,"typeArguments":[{"type":"reference","target":2668,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"name":"Partial","package":"typescript"}],"extendedBy":[{"type":"reference","target":2324,"name":"Parameters"}],"permalink":"/std/api/core/namespace/Type#Parameters"},{"id":2634,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract the type of object from its module"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":128,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L128"}],"typeParameters":[{"id":2635,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":2635,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":2618,"typeArguments":[{"type":"inferred","name":"T"}],"name":"Type","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"T"},"name":"T","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/core/namespace/Type#TypeOf"},{"id":2478,"name":"Ordering","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":114,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L114"}],"type":{"type":"reference","target":1088,"typeArguments":[{"type":"reflection","declaration":{"id":2479,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2482,"name":"Equal","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0"},{"id":2483,"name":"Greater","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1"},{"id":2481,"name":"Less","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1"},{"id":2480,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'"}],"groups":[{"title":"Properties","children":[2482,2483,2481,2480]}],"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":7,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L7"}]}}],"name":"Enum","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Type#Ordering"},{"id":2496,"name":"RegExp","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":119,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L119"}],"type":{"type":"reflection","declaration":{"id":2497,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2502,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2509,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2510,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2511,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2512,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}},{"id":2513,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2514,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2515,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2498,"name":"parse","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L51"}],"type":{"type":"reflection","declaration":{"id":2499,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"signatures":[{"id":2500,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"parameters":[{"id":2501,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]}}},{"id":2516,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2517,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2518,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2519,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2520,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2521,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2522,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2523,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2524,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2525,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2526,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2527,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2506,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2507,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2508,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]},{"id":2528,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2529,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2530,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2531,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2503,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2504,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2505,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}}]}],"groups":[{"title":"References","children":[2502]},{"title":"Properties","children":[2509,2498]},{"title":"Methods","children":[2516,2521,2525,2506,2528,2503]}],"categories":[{"title":"Codec","children":[2516,2521,2525]},{"title":"String","children":[2528]},{"title":"Type","children":[2509,2506,2503]},{"title":"__CATEGORY__","children":[2502,2498]}],"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":26,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L26"}]}},"permalink":"/std/api/core/namespace/Type#RegExp"},{"id":2452,"name":"bigint","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L108"}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#bigint"},{"id":2453,"name":"boolean","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L109"}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#boolean"},{"id":2468,"name":"number","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L111"}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#number"},{"id":2490,"name":"string","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":116,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L116"}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#string"},{"id":2495,"name":"unknown","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":118,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L118"}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#unknown"},{"id":2434,"name":"Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"signatures":[{"id":2435,"name":"Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a codec for "},{"kind":"code","text":"`Array<V>`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec = Type.Array(dateISO);\\nconst encoded = Codec.encode(codec, [new Date(\'1970-01-01T00:00:00.000Z\')]);// [\'1970-01-01T00:00:00.000Z\']\\nconst decoded = Codec.decode(codec, [\'1970-01-01T00:00:00.000Z\']);// Result.Ok([Date(\'1970-01-01T00:00:00.000Z\')])\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"typeParameter":[{"id":2436,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2437,"name":"Item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module for array item"}]},"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2436,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":543,"typeArguments":[{"type":"reference","target":2436,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayType","package":"@w5s/core","qualifiedName":"Array"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Array"},{"id":2438,"name":"Char","variant":"declaration","kind":64,"flags":{},"children":[{"id":2451,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":923},{"id":2447,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":907},{"id":2448,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":912},{"id":2446,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":900},{"id":2449,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":916},{"id":2445,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":897},{"id":2450,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":919},{"id":2444,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":894},{"id":2443,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2442,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"target":890},{"id":2441,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"target":887}],"groups":[{"title":"References","children":[2451,2447,2448,2446,2449,2445,2450,2444,2443,2442,2441]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"signatures":[{"id":2439,"name":"Char","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"parameters":[{"id":2440,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Char"},{"id":2454,"name":"Int","variant":"declaration","kind":64,"flags":{},"children":[{"id":2467,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":1379},{"id":2463,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":1363},{"id":2464,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":1368},{"id":2462,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":1356},{"id":2465,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":1372},{"id":2461,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":1353},{"id":2466,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":1375},{"id":2460,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":1350},{"id":2459,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2458,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"target":1346},{"id":2457,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"target":1343}],"groups":[{"title":"References","children":[2467,2463,2464,2462,2465,2461,2466,2460,2459,2458,2457]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"signatures":[{"id":2455,"name":"Int","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"parameters":[{"id":2456,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Int"},{"id":2469,"name":"Object","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"signatures":[{"id":2470,"name":"Object","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Type for "},{"kind":"code","text":"`P`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.Object({ created: dateISO }, \'SomeType\');\\nconst encoded = Codec.encode(SomeType, { created: new Date(\'1970-01-01T00:00:00.000Z\') });// { created: \'1970-01-01T00:00:00.000Z\' }\\nconst decoded = Codec.decode(SomeType, { created: \'1970-01-01T00:00:00.000Z\' });// Result.Ok({ created: Date(\'1970-01-01T00:00:00.000Z\') })\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"typeParameter":[{"id":2471,"name":"P","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2472,"name":"Properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec for each array item"}]},"type":{"type":"mapped","parameter":"K","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":2669,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Object.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2471,"name":"P","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"readonlyModifier":"+"}},{"id":2473,"name":"typeName","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":2471,"name":"P","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Object"},{"id":2474,"name":"Option","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"signatures":[{"id":2475,"name":"Option","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new optional type from "},{"kind":"code","text":"`Value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst OptionString = Type.Option(Type.String);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"typeParameter":[{"id":2476,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2477,"name":"Value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value type"}]},"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2476,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2476,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionType","package":"@w5s/core","qualifiedName":"Option"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Option"},{"id":2484,"name":"Record","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"signatures":[{"id":2485,"name":"Record","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"typeParameter":[{"id":2486,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}},{"id":2487,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"parameters":[{"id":2488,"name":"Key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2486,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":2489,"name":"Value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2487,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":2634,"typeArguments":[{"type":"reference","target":2486,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"},{"type":"reference","target":2634,"typeArguments":[{"type":"reference","target":2487,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Record","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Record"},{"id":2491,"name":"Tuple","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"signatures":[{"id":2492,"name":"Tuple","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"typeParameter":[{"id":2493,"name":"C","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2494,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2493,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2493,"name":"C","package":"@w5s/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":2634,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Tuple.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2493,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"},"readonlyModifier":"+"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Tuple"},{"id":2575,"name":"URL","variant":"declaration","kind":64,"flags":{},"children":[{"id":2584,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2614,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2615,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2616,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2617,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}}},{"id":2591,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2592,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2593,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2594,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}},{"id":2595,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2596,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2597,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2598,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2599,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2600,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2601,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2602,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2603,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2604,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2605,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2606,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2607,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2608,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2609,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2588,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2589,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2590,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2610,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2611,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2612,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2613,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2585,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2586,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2587,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}}]},{"id":2581,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2582,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2583,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2578,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2579,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2580,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2584]},{"title":"Properties","children":[2614,2591]},{"title":"Methods","children":[2598,2603,2607,2588,2610,2585,2581,2578]}],"categories":[{"title":"Callable","children":[2614]},{"title":"Codec","children":[2598,2603,2607]},{"title":"String","children":[2610]},{"title":"Type","children":[2591,2588,2585]},{"title":"__CATEGORY__","children":[2584,2581,2578]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"signatures":[{"id":2576,"name":"URL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"parameters":[{"id":2577,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#URL"},{"id":2532,"name":"UUID","variant":"declaration","kind":64,"flags":{},"children":[{"id":2541,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2571,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2572,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2573,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2574,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}}},{"id":2548,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2549,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2550,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2551,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":2552,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2553,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2554,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2555,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2556,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2557,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2558,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2559,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2560,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2561,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2562,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2563,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2564,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2565,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2566,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2545,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2546,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2547,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2567,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2568,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2569,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2570,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2542,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2543,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2544,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}]},{"id":2538,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2539,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2540,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}]},{"id":2535,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2536,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2537,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2541]},{"title":"Properties","children":[2571,2548]},{"title":"Methods","children":[2555,2560,2564,2545,2567,2542,2538,2535]}],"categories":[{"title":"Callable","children":[2571]},{"title":"Codec","children":[2555,2560,2564]},{"title":"String","children":[2567]},{"title":"Type","children":[2548,2545,2542]},{"title":"__CATEGORY__","children":[2541,2538,2535]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"signatures":[{"id":2533,"name":"UUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"parameters":[{"id":2534,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#UUID"},{"id":2416,"name":"constant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"signatures":[{"id":2417,"name":"constant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type for constant "},{"kind":"code","text":"`value`"},{"kind":"text","text":". An encoded value can be specified as second argument."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst constantType = Type.constant(\'_\'); // Encoded and decoded value are \'_\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someSymbol = Symbol(\'someSymbol\');\\nconst someSymbolType = Type.constant(someSymbol, \'__someSymbol__\'); // Encoded value is \'__someSymbol__\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2418,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}],"parameters":[{"id":2419,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoded constant value"}]},"type":{"type":"reference","target":2418,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2420,"name":"encodedValue","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the encoded value (required only for non JSON representable values)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2418,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}},{"id":2421,"name":"constant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2422,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":2423,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2422,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2424,"name":"encodedValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2422,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#constant"},{"id":2425,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"signatures":[{"id":2426,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Type module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface NewType {\\n  foo: boolean;\\n}\\nconst NewType = Type.define<NewType>({\\n  typeName: \'NewType\',\\n  hasInstance(value) {\\n    return typeof value.foo === \'boolean\';\\n  },\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"typeParameter":[{"id":2427,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2428,"name":"parameters","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type parameters"}]},"type":{"type":"reference","target":2636,"typeArguments":[{"type":"reference","target":2427,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2427,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#define"},{"id":2429,"name":"ensure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"signatures":[{"id":2430,"name":"ensure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ensure that "},{"kind":"code","text":"`value`"},{"kind":"text","text":" is a valid "},{"kind":"code","text":"`T`"},{"kind":"text","text":". Throw a TypeError otherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nType.ensure(Type.String, \'foo\'); // void\\nType.ensure(Type.String, 42); // throw new Error(\'42 is not a valid String\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"typeParameter":[{"id":2431,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2432,"name":"Type","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module"}]},"type":{"type":"reference","target":2618,"typeArguments":[{"type":"reference","target":2431,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"}},{"id":2433,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to ensure"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":true,"targetType":{"type":"reference","target":2431,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}}],"permalink":"/std/api/core/namespace/Type#ensure"},{"id":2412,"name":"union","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"signatures":[{"id":2413,"name":"union","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a union of all types"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ABType = Type.anyOf(AType, BType);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"typeParameter":[{"id":2414,"name":"Types","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2669,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2415,"name":"types","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2414,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2669,"typeArguments":[{"type":"reference","target":2634,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","target":2414,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#union"}],"groups":[{"title":"Interfaces","children":[2669,2636]},{"title":"Type Aliases","children":[2634]},{"title":"Variables","children":[2478,2496,2452,2453,2468,2490,2495]},{"title":"Functions","children":[2434,2438,2454,2469,2474,2484,2491,2575,2532,2416,2425,2429,2412]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"permalink":"/std/api/core/namespace/Type","categories":[],"previousId":2316,"nextId":543},{"id":1044,"name":"CodecError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Codec Error constructor"}]},"children":[{"id":1066,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":1067,"name":"new CodecError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":1068,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":1069,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1070,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[1070]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}},{"id":1071,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).input"}},{"id":1054,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"CodecError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).errorName"}},{"id":1055,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":1056,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":1057,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}},{"id":1058,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":1059,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":1060,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":1061,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":1062,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":1063,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":1064,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":1065,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[1066]},{"title":"Properties","children":[1071,1054]},{"title":"Methods","children":[1055,1058]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":8,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":1045,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1049,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1047,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1046,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"CodecError"}},{"id":1048,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1049,1047,1046,1048]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":1050,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1051,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"CodecError"}}],"groups":[{"title":"Properties","children":[1051]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":1052,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1053,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[1053]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/core/class/CodecError","categories":[],"nextId":798},{"id":545,"name":"AsString","variant":"declaration","kind":256,"flags":{},"children":[{"id":546,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":547,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":548,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":549,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":550,"name":"T","package":"@w5s/core","qualifiedName":"AsString.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[546]}],"categories":[{"title":"String","children":[546]}],"sources":[{"fileName":"packages/core/src/AsString.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L1"}],"typeParameters":[{"id":550,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2669,"name":"Module"}],"permalink":"/std/api/core/interface/AsString","previousId":1394,"nextId":794},{"id":794,"name":"Bounded","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generic bound module of value "},{"kind":"code","text":"`T`"}]},"children":[{"id":796,"name":"maxValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":797,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}},{"id":795,"name":"minValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":797,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[796,795]}],"categories":[{"title":"Bound","children":[796,795]}],"sources":[{"fileName":"packages/core/src/Bounded.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L4"}],"typeParameters":[{"id":797,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/interface/Bounded","previousId":545,"nextId":802},{"id":802,"name":"Callable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable interface"}]},"children":[{"id":803,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":804,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reference","target":805,"name":"F","package":"@w5s/core","qualifiedName":"Callable.F","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[803]},{"title":"Properties","children":[804]}],"categories":[{"title":"Callable","children":[804]},{"title":"__CATEGORY__","children":[803]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"typeParameters":[{"id":805,"name":"F","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}}],"extendedBy":[{"type":"reference","target":2187,"name":"Module"},{"type":"reference","target":2357,"name":"Module"}],"permalink":"/std/api/core/interface/Callable","previousId":794,"nextId":948},{"id":948,"name":"Codec","variant":"declaration","kind":256,"flags":{},"children":[{"id":949,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":950,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":951,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":952,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":953,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"reference","target":961,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"reference","target":961,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":954,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":955,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":956,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":957,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":961,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":958,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":959,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":960,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[949,954,958]}],"categories":[{"title":"Codec","children":[949,954,958]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"typeParameters":[{"id":961,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2669,"name":"Module"}],"permalink":"/std/api/core/interface/Codec","previousId":802,"nextId":985},{"id":985,"name":"Comparable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have total order"}]},"children":[{"id":986,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":1153,"name":"Equal.constructor"}},{"id":1033,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1034,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1035,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1036,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1037,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1160,"name":"Equal.!="}}],"inheritedFrom":{"type":"reference","target":1159,"name":"Equal.!="}},{"id":997,"name":"<","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":998,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":999,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1000,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1001,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":992,"name":"<=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":993,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":994,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":995,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":996,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1038,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1039,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1040,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1041,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1042,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1165,"name":"Equal.=="}}],"inheritedFrom":{"type":"reference","target":1164,"name":"Equal.=="}},{"id":1007,"name":">","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1008,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1009,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1010,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1011,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1002,"name":">=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1003,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1004,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1005,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1006,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1022,"name":"clamp","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1023,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1024,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1025,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1026,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1027,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":987,"name":"compare","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":988,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1703}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":989,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":990,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":991,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]},{"id":1028,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1029,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1031,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1032,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1155,"name":"Equal.equals"}}],"inheritedFrom":{"type":"reference","target":1154,"name":"Equal.equals"}},{"id":1017,"name":"max","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1018,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1019,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1020,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1021,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":1012,"name":"min","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1013,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1014,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1015,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1016,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[986]},{"title":"Methods","children":[1033,997,992,1038,1007,1002,1022,987,1028,1017,1012]}],"categories":[{"title":"Comparator","children":[1033,997,992,1038,1007,1002,1022,987,1028,1017,1012]},{"title":"__CATEGORY__","children":[986]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"typeParameters":[{"id":1043,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":1152,"typeArguments":[{"type":"reference","target":1043,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}],"permalink":"/std/api/core/interface/Comparable","previousId":948,"nextId":1094},{"id":1094,"name":"Enumerable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":1096,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2670,"name":"Module.typeName"},"target":572},{"id":1095,"name":"[enumKeys]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L39"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}}},{"id":1103,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":1104,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1105,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1106,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1107,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1108,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":1109,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2677,"name":"Module.__inspect__"}},{"id":1126,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"inheritedFrom":{"type":"reference","target":1184,"name":"Indexable.indexType"}},{"id":1110,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1111,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1112,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1113,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1114,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":964,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2001,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},{"type":"reference","target":1044,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2685,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2684,"name":"Module.__decode__"}},{"id":1115,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1116,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1117,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1118,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2690,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2689,"name":"Module.__encode__"}},{"id":1119,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1120,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1121,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2694,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2693,"name":"Module.__schema__"}},{"id":1100,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1101,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1102,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2675,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2674,"name":"Module.asInstance"}},{"id":1122,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1123,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1124,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1125,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2697,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2696,"name":"Module.asString"}},{"id":1127,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1128,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1129,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1186,"name":"Indexable.at"}}],"inheritedFrom":{"type":"reference","target":1185,"name":"Indexable.at"}},{"id":1097,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1098,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1099,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},"inheritedFrom":{"type":"reference","target":2672,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2671,"name":"Module.hasInstance"}},{"id":1130,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1131,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1132,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1189,"name":"Indexable.indexOf"}}],"inheritedFrom":{"type":"reference","target":1188,"name":"Indexable.indexOf"}},{"id":1137,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1138,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1139,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1140,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1196,"name":"Indexable.range"}}],"inheritedFrom":{"type":"reference","target":1195,"name":"Indexable.range"}},{"id":1133,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1134,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1135,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1136,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":1192,"name":"Indexable.rangeSize"}}],"inheritedFrom":{"type":"reference","target":1191,"name":"Indexable.rangeSize"}}],"groups":[{"title":"References","children":[1096]},{"title":"Properties","children":[1095,1103,1126]},{"title":"Methods","children":[1110,1115,1119,1100,1122,1127,1097,1130,1137,1133]}],"categories":[{"title":"Codec","children":[1110,1115,1119]},{"title":"Indexable","children":[1126,1127,1130,1137,1133]},{"title":"String","children":[1122]},{"title":"Type","children":[1103,1100,1097]},{"title":"__CATEGORY__","children":[1096,1095]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":33,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L33"}],"typeParameters":[{"id":1141,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","target":2669,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":1182,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1141,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},{"type":"intrinsic","name":"number"}],"name":"Indexable","package":"@w5s/core"}],"permalink":"/std/api/core/interface/Enumerable","previousId":985,"nextId":1152},{"id":1152,"name":"Equal","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have equivalence relation"}]},"children":[{"id":1153,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1159,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1160,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1161,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1162,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1163,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1164,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1165,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1166,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1167,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1168,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1154,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1155,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1156,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1157,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1158,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1169,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","children":[1153]},{"title":"Methods","children":[1159,1164,1154]}],"categories":[{"title":"Comparator","children":[1159,1164,1154]},{"title":"__CATEGORY__","children":[1153]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"typeParameters":[{"id":1169,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":985,"name":"Comparable"}],"permalink":"/std/api/core/interface/Equal","previousId":1094,"nextId":1182},{"id":1182,"name":"Indexable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type Indexable is a type with values that can be indexed by a number."}]},"children":[{"id":1183,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1184,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1200,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1200,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":1185,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1186,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1187,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1200,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1188,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1189,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1190,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":1200,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1195,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1196,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1197,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1198,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1782,"typeArguments":[{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"}}]},{"id":1191,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1192,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1193,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1194,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1199,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1200,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[1183]},{"title":"Properties","children":[1184]},{"title":"Methods","children":[1185,1188,1195,1191]}],"categories":[{"title":"Indexable","children":[1184,1185,1188,1195,1191]},{"title":"__CATEGORY__","children":[1183]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"typeParameters":[{"id":1199,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1200,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"extendedBy":[{"type":"reference","target":1094,"name":"Enumerable"}],"permalink":"/std/api/core/interface/Indexable","previousId":1152,"nextId":1402},{"id":1402,"name":"Not","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for the unary "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operator"}]},"children":[{"id":1403,"name":"not","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":1404,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":1405,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1406,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"type":{"type":"reference","target":1407,"name":"Output","package":"@w5s/core","qualifiedName":"Not.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1403]}],"sources":[{"fileName":"packages/core/src/Not.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L4"}],"typeParameters":[{"id":1406,"name":"Self","variant":"typeParam","kind":131072,"flags":{}},{"id":1407,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1406,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"permalink":"/std/api/core/interface/Not","categories":[],"previousId":1182,"nextId":1782},{"id":1782,"name":"Range","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A range is a sequence of elements that are contiguous in some way."}]},"children":[{"id":1784,"name":"rangeEnd","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"End of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":14,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L14"}],"type":{"type":"reference","target":1785,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}},{"id":1783,"name":"rangeStart","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Start of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":10,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L10"}],"type":{"type":"reference","target":1785,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[1784,1783]}],"sources":[{"fileName":"packages/core/src/Range.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L6"}],"typeParameters":[{"id":1785,"name":"T","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the elements in the range."}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1785,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}],"permalink":"/std/api/core/interface/Range","categories":[],"previousId":1402,"nextId":1858},{"id":1858,"name":"Ref","variant":"declaration","kind":256,"flags":{},"children":[{"id":1859,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1860,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L5"}],"type":{"type":"reference","target":1861,"name":"Value","package":"@w5s/core","qualifiedName":"Ref.Value","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[1859]},{"title":"Properties","children":[1860]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"typeParameters":[{"id":1861,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/interface/Ref","categories":[],"previousId":1782,"nextId":2618},{"id":2618,"name":"Type","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":2619,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":572},{"id":2626,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2173},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reflection","declaration":{"id":2627,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2628,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2629,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2633,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}},{"id":2630,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2631,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}},{"id":2632,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2405,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2623,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2624,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2625,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1698,"typeArguments":[{"type":"reference","target":2633,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":2620,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2621,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2622,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2633,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}}}]}],"groups":[{"title":"References","children":[2619]},{"title":"Properties","children":[2626]},{"title":"Methods","children":[2623,2620]}],"categories":[{"title":"Type","children":[2626,2623,2620]},{"title":"__CATEGORY__","children":[2619]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"typeParameters":[{"id":2633,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2669,"name":"Module"}],"permalink":"/std/api/core/interface/Type","previousId":1858,"nextId":278},{"id":543,"name":"Array","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L32"},{"fileName":"packages/core/src/Array.ts","line":47,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"typeParameters":[{"id":544,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":544,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},"permalink":"/std/api/core#Array","categories":[],"previousId":2411,"nextId":808},{"id":808,"name":"CallableFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A callable function with callable interface"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"}],"typeParameters":[{"id":809,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":802,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":807,"name":"Callable.symbol","package":"@w5s/core"}},"objectType":{"type":"reference","target":809,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"type":"reference","target":809,"name":"T","package":"@w5s/core","refersToTypeParameter":true}]},"permalink":"/std/api/core#CallableFunction","categories":[],"previousId":543,"nextId":926},{"id":926,"name":"Char","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Character value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"CharType","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"tsLinkText":""}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"CharType","package":"@w5s/core","qualifiedName":"Char"},"permalink":"/std/api/core#Char","categories":[],"previousId":808,"nextId":1088},{"id":1088,"name":"Enum","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":42,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L42"}],"typeParameters":[{"id":1089,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1089,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1089,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"literal","value":"typeName"}],"name":"Omit","package":"typescript"}],"name":"Enumerable","package":"@w5s/core"}]},"permalink":"/std/api/core#Enum","categories":[],"previousId":926,"nextId":2405},{"id":2405,"name":"InspectFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"type":{"type":"reflection","declaration":{"id":2406,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"signatures":[{"id":2407,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2408,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":2409,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2410,"name":"InspectOptions","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/std/api/core#InspectFunction","categories":[],"previousId":1088,"nextId":2410},{"id":2410,"name":"InspectOptions","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"@w5s/core"},"permalink":"/std/api/core#InspectOptions","categories":[],"previousId":2405,"nextId":1382},{"id":1382,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L19"},{"fileName":"packages/core/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"IntType","package":"@w5s/core","qualifiedName":"Int"},"permalink":"/std/api/core#Int","categories":[],"previousId":2410,"nextId":1383},{"id":1383,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L11"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"reflection","declaration":{"id":1384,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L17"}],"indexSignature":{"id":1385,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L18"}],"parameters":[{"id":1386,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1383,"name":"JSONValue","package":"@w5s/core"}}}}]},"permalink":"/std/api/core#JSONValue","categories":[],"previousId":1382,"nextId":1698},{"id":1698,"name":"Option","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" is the type used to represent either a defined value "},{"kind":"code","text":"`Some<Value>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`None`"},{"kind":"text","text":" (i.e. "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":")\\n\\nThis module focuses on handling "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" values in a functional style, to avoid throwing errors at runtime.\\nBecause "},{"kind":"code","text":"`Option.None = undefined`"},{"kind":"text","text":", this modules provides an opinionated way to remove confusion between "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":".\\n\\nSome other libraries uses object to implement Maybe/Option monad but has drawbacks :\\n- ECMAScript already uses nullable/undefined values everywhere\\n- Each library that does not uses the "},{"kind":"code","text":"`Some/None`"},{"kind":"text","text":" must be patched / overridden\\n- it creates a third empty value "},{"kind":"code","text":"`None`"},{"kind":"text","text":" in addition to "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Option.Some(\'Django\') : Option.None;\\nconst displayName = (option) => Option.map(option, (value) => \'name: \'+ value);\\nconst print = (option) => {\\n  if (Option.isNone(option)) {\\n    console.warn(\'None\');\\n  } else {\\n    console.log(\'Some(\', option, \')\');\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const option = displayName(getName(i));\\n  print(option); // alternate console.log(\'Some(Django)\'); and console.warn(\'None\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":50,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L50"},{"fileName":"packages/core/src/Option.ts","line":63,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"typeParameters":[{"id":1699,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the contained value"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1699,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1700,"name":"Option.None","package":"@w5s/core"}]},"permalink":"/std/api/core#Option","categories":[],"previousId":1383,"nextId":1722},{"id":1722,"name":"Order","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1728,"tsLinkText":""},{"kind":"text","text":" thats represents the comparison result"}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"},{"fileName":"packages/core/src/Order.ts","line":17,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L17"}],"typeParameters":[{"id":1727,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":1723,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":23,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"}],"signatures":[{"id":1724,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":1725,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1727,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1726,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1727,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1781,"name":"Ordering","package":"@w5s/core"}}]}},"permalink":"/std/api/core#Order","categories":[],"previousId":1698,"nextId":1781},{"id":1781,"name":"Ordering","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"OrderingType","package":"@w5s/core","qualifiedName":"Ordering"},"permalink":"/std/api/core#Ordering","categories":[],"previousId":1722,"nextId":1851},{"id":1851,"name":"Record","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Record is an immutable mapping "},{"kind":"code","text":"`{ [string]: value }`"}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"typeParameters":[{"id":1852,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1786,"name":"RecordKey","package":"@w5s/core"}},{"id":1853,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"mapped","parameter":"P","parameterType":{"type":"reference","target":1852,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},"templateType":{"type":"reference","target":1853,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"readonlyModifier":"+"},"permalink":"/std/api/core#Record","categories":[],"previousId":1781,"nextId":1786},{"id":1786,"name":"RecordKey","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L13"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"permalink":"/std/api/core#RecordKey","categories":[],"previousId":1851,"nextId":2001},{"id":2001,"name":"Result","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Result<Value, Error>`"},{"kind":"text","text":" is the type used to represent either a "},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" or a "},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" as a function return value.\\n"},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" should be used when the result is the expected value.\\n"},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" should be used when recoverable error occurred (i.e. an error that does not require the program to stop)\\n\\nResults can be used with async functions returning "},{"kind":"code","text":"`Promise<Result<Value, Error>>`"},{"kind":"text","text":".\\n\\n**Important: Rejected "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" and thrown "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" should only occur when the program has an unexpected state that should stop the execution**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Result.Ok(\'Django\') : Result.Error(\'error!\');\\nconst displayName = (result) => Result.map(result, (value) => \'name: \'+ value);\\nconst print = (result) => {\\n  if (Result.isError(result)) {\\n    console.error(result.error);\\n  } else {\\n    console.log(result.value);\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const result = displayName(getName(i));\\n  print(result); // alternate console.log(\'name: Django\'); and console.error(\'error!\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"typeParameters":[{"id":2002,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of value in case of "},{"kind":"code","text":"`Ok`"}]}},{"id":2003,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of error in case of "},{"kind":"code","text":"`Error`"}]}}],"type":{"type":"union","types":[{"type":"reference","target":2004,"typeArguments":[{"type":"reference","target":2002,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Ok","package":"@w5s/core"},{"type":"reference","target":2008,"typeArguments":[{"type":"reference","target":2003,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Error","package":"@w5s/core"}]},"permalink":"/std/api/core#Result","categories":[],"previousId":1786,"nextId":2169},{"id":2169,"name":"Struct","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L20"},{"fileName":"packages/core/src/Struct.ts","line":29,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L29"}],"typeParameters":[{"id":2170,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2171,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2172,"name":"_","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type unique identifier"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L25"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2172]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":21,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L21"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":2170,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"},"permalink":"/std/api/core#Struct","categories":[],"previousId":2001,"nextId":2322},{"id":2322,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core-type!Tag"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"typeParameters":[{"id":2323,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"reference","target":2323,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CoreTypeTag","package":"@w5s/core-type","qualifiedName":"Tag"},"permalink":"/std/api/core#Tag","categories":[],"previousId":2169},{"id":798,"name":"Callable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"signatures":[{"id":799,"name":"Callable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new function from callable interface"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst myCallable = Callable({\\n  [Callable.symbol]: (arg: number) => arg,\\n  myMethod: () => {},\\n});\\n// myCallable(1)\\n// myCallable.myMethod();\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"}],"typeParameter":[{"id":800,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":802,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"parameters":[{"id":801,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":800,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":808,"typeArguments":[{"type":"reference","target":800,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CallableFunction","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Callable","categories":[],"previousId":1044,"nextId":975},{"id":975,"name":"Comparable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"signatures":[{"id":976,"name":"Comparable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct Comparable instance"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NumberComparable = Comparable({\\n  compare: (left, right) => left - right,\\n});\\nNumberComparable[\'==\'](0, 0); // true\\nNumberComparable[\'<\'](0, 1); // true\\nNumberComparable[\'>\'](0, 1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"typeParameter":[{"id":977,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":978,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":979,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":980,"name":"compare","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparison function"}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"type":{"type":"reflection","declaration":{"id":981,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"signatures":[{"id":982,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"parameters":[{"id":983,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":977,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":984,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":977,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[980]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}]}}}],"type":{"type":"reference","target":985,"typeArguments":[{"type":"reference","target":977,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Comparable","categories":[],"previousId":798,"nextId":1142},{"id":1142,"name":"Equal","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"signatures":[{"id":1143,"name":"Equal","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Equal module constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TEqual = Equal<T>({\\n  \'==\': (left, right) => { /* ... */ },\\n});\\nconst value: T;\\n\\nTEqual[\'==\'](value, value); // true;\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"typeParameter":[{"id":1144,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1145,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1146,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1147,"name":"equals","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"type":{"type":"reflection","declaration":{"id":1148,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"signatures":[{"id":1149,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"parameters":[{"id":1150,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1144,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1151,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1144,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"groups":[{"title":"Properties","children":[1147]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}]}}}],"type":{"type":"reference","target":1152,"typeArguments":[{"type":"reference","target":1144,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Equal","categories":[],"previousId":975,"nextId":1177},{"id":1177,"name":"Indexable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"signatures":[{"id":1178,"name":"Indexable","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"}],"typeParameter":[{"id":1179,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1180,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"parameters":[{"id":1181,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1202,"typeArguments":[{"type":"reference","target":1179,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1180,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Indexable.Parameters"}}],"type":{"type":"reference","target":1182,"typeArguments":[{"type":"reference","target":1179,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1180,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Indexable","categories":[],"previousId":1142,"nextId":1854},{"id":1854,"name":"Ref","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"signatures":[{"id":1855,"name":"Ref","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" object containing a value\\nThis implementation is compatible with "},{"kind":"code","text":"`React.createRef()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(123);// { current: initialValue }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"}],"typeParameter":[{"id":1856,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1857,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value contained"}]},"type":{"type":"reference","target":1856,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1858,"typeArguments":[{"type":"reference","target":1856,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Ref","categories":[],"previousId":1177,"nextId":1170},{"id":1170,"name":"identity","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"signatures":[{"id":1171,"name":"identity","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the unchanged given "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nidentity(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"typeParameter":[{"id":1172,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1173,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input and return value"}]},"type":{"type":"reference","target":1172,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1172,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/function/identity","categories":[],"previousId":1854,"nextId":1174},{"id":1174,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"signatures":[{"id":1175,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" and ignore passed value.\\n\\nThis should be used in conjunction with eslint rules such as [@typescript-eslint/no-misused-promises](https://typescript-eslint.io/rules/no-misused-promises/)\\nto explicitly ignore a promise returned by a callback."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst doSomething = () => \'foo\'; // string\\nconst doSomethingIgnore = () => ignore(doSomething()); // undefined as void\\n\\nconst doAsync = async () => \'foo\'; // Promise<string>\\nconst doSyncIgnore = () => ignore(doAsync()); // undefined as void\\n```"}]}]},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"parameters":[{"id":1176,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value that should be ignored"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/function/ignore","categories":[],"previousId":1170,"nextId":1394},{"id":1394,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1395,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the result of "},{"kind":"code","text":"`getValue`"},{"kind":"text","text":", that will be called once.\\nUseful for expensive computation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst expensiveRead = lazy(() => fs.readDirSync(\'my/dir\'));\\n// fs.readDirSync not called\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync called, return value is put in cache\\n);\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync not called, return value from cache\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"typeParameter":[{"id":1396,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1397,"name":"getValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the computation"}]},"type":{"type":"reflection","declaration":{"id":1398,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1399,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"type":{"type":"reference","target":1396,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reflection","declaration":{"id":1400,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1401,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"reference","target":1396,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"permalink":"/std/api/core/function/lazy","categories":[],"previousId":1174,"nextId":545}],"groups":[{"title":"Classes","children":[1044]},{"title":"Functions","children":[798,975,1142,1177,1854,1170,1174,1394]},{"title":"Interfaces","children":[545,794,802,948,985,1094,1152,1182,1402,1782,1858,2618]},{"title":"Namespaces","children":[278,551,704,806,810,927,1072,1201,1220,1387,1408,1546,1644,1703,1728,1787,1862,1884,2012,2173,2271,2316,2411]},{"title":"Type Aliases","children":[543,808,926,1088,2405,2410,1382,1383,1698,1722,1781,1851,1786,2001,2169,2322]}],"categories":[{"title":"Constructor","children":[1044,1854]},{"title":"Functor","children":[975,1142]},{"title":"__CATEGORY__","children":[278,551,704,806,810,927,1072,1201,1220,1387,1408,1546,1644,1703,1728,1787,1862,1884,2012,2173,2271,2316,2411,545,794,802,948,985,1094,1152,1182,1402,1782,1858,2618,543,808,926,1088,2405,2410,1382,1383,1698,1722,1781,1851,1786,2001,2169,2322,798,1177,1170,1174,1394]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/index.ts#L1"}],"permalink":"/std/api/core"},"urlSlug":"core"}],"packageName":"@w5s/core","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":6,"name":"@w5s/core-type","variant":"declaration","kind":2,"flags":{},"children":[{"id":2742,"name":"ExpectAssertionObject","variant":"declaration","kind":256,"flags":{},"children":[{"id":2751,"name":"toBe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"type":{"type":"reflection","declaration":{"id":2752,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"signatures":[{"id":2753,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"parameters":[{"id":2754,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2747,"name":"toBeGreaterThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2748,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"signatures":[{"id":2749,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"parameters":[{"id":2750,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2743,"name":"toBeLessThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"type":{"type":"reflection","declaration":{"id":2744,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"signatures":[{"id":2745,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"parameters":[{"id":2746,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2755,"name":"toEqual","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"signatures":[{"id":2756,"name":"toEqual","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"parameters":[{"id":2757,"name":"expected","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2758,"name":"toHaveProperty","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"signatures":[{"id":2759,"name":"toHaveProperty","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"parameters":[{"id":2760,"name":"property","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}},{"id":2761,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2762,"name":"toThrow","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"signatures":[{"id":2763,"name":"toThrow","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"parameters":[{"id":2764,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[2751,2747,2743]},{"title":"Methods","children":[2755,2758,2762]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L4"}],"permalink":"/std/api/core-type/interface/ExpectAssertionObject","categories":[],"previousId":2705,"nextId":2768},{"id":2768,"name":"ExpectFunction","variant":"declaration","kind":256,"flags":{},"children":[{"id":2769,"name":"fail","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"type":{"type":"reflection","declaration":{"id":2770,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"signatures":[{"id":2771,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"parameters":[{"id":2772,"name":"message","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"never"}}]}}}],"groups":[{"title":"Properties","children":[2769]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L17"}],"signatures":[{"id":2773,"name":"ExpectFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}],"parameters":[{"id":2774,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intersection","types":[{"type":"reference","target":2742,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2775,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2776,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2742,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2776]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}},{"type":"reflection","declaration":{"id":2777,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2779,"name":"rejects","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L20"}],"type":{"type":"reference","target":2765,"name":"ExpectAssertion","package":"@w5s/core-type"}},{"id":2778,"name":"resolves","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L19"}],"type":{"type":"reference","target":2765,"name":"ExpectAssertion","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2779,2778]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}]}}]}}],"permalink":"/std/api/core-type/interface/ExpectFunction","categories":[],"previousId":2742,"nextId":2825},{"id":2825,"name":"TestEachFunction","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":45,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L45"}],"signatures":[{"id":2826,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L46"}],"typeParameter":[{"id":2827,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"tuple","elements":[{"type":"intrinsic","name":"any"}]}]}}],"parameters":[{"id":2828,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2827,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2811,"typeArguments":[{"type":"reference","target":2827,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2829,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L47"}],"typeParameter":[{"id":2830,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"parameters":[{"id":2831,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2830,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2811,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/TestingLibrary.ts","qualifiedName":"ExtractEachCallbackArgs"},"typeArguments":[{"type":"reference","target":2830,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"ExtractEachCallbackArgs","package":"@w5s/core-type"}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2832,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L48"}],"typeParameter":[{"id":2833,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2834,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2833,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2811,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2833,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2835,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L49"}],"parameters":[{"id":2836,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}}],"type":{"type":"reference","target":2811,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}}],"permalink":"/std/api/core-type/interface/TestEachFunction","categories":[],"previousId":2768,"nextId":2811},{"id":2811,"name":"TestEachFunctionReturn","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":41,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L41"}],"typeParameters":[{"id":2812,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"signatures":[{"id":2813,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2814,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2815,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2816,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"signatures":[{"id":2817,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2818,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2812,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2710,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2819,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2820,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2821,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2822,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"signatures":[{"id":2823,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2824,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2812,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2710,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core-type/interface/TestEachFunctionReturn","categories":[],"previousId":2825,"nextId":2780},{"id":2780,"name":"TestingLibrary","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Common interface for testing libraries like jest and vitest"}]},"children":[{"id":2781,"name":"describe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"type":{"type":"reflection","declaration":{"id":2782,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2783,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"reflection","declaration":{"id":2784,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2785,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"parameters":[{"id":2786,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2787,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2788,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2789,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2783]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"signatures":[{"id":2790,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"parameters":[{"id":2791,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2792,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2793,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"signatures":[{"id":2794,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2810,"name":"expect","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L38"}],"type":{"type":"reference","target":2768,"name":"ExpectFunction","package":"@w5s/core-type"}},{"id":2795,"name":"it","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"type":{"type":"reflection","declaration":{"id":2796,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2804,"name":"each","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":36,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L36"}],"type":{"type":"reference","target":2825,"name":"TestEachFunction","package":"@w5s/core-type"}},{"id":2797,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"reflection","declaration":{"id":2798,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2799,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"parameters":[{"id":2800,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2801,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2802,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2803,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2804,2797]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"signatures":[{"id":2805,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"parameters":[{"id":2806,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2807,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2808,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"signatures":[{"id":2809,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2781,2810,2795]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L28"}],"permalink":"/std/api/core-type/interface/TestingLibrary","categories":[],"previousId":2811,"nextId":2701},{"id":2701,"name":"AnyFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes any kind of parameters and returns anything"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction decorate<F extends AnyFunction>(fn: F): F {\\n  // ...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"type":{"type":"reflection","declaration":{"id":2702,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"signatures":[{"id":2703,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2704,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/std/api/core-type#AnyFunction","categories":[],"previousId":2780,"nextId":2710},{"id":2710,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/src/Awaitable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Awaitable.ts#L7"}],"typeParameters":[{"id":2711,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":2711,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":2711,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/api/core-type#Awaitable","categories":[],"previousId":2701,"nextId":2712},{"id":2712,"name":"Day","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Day of the month"}]},"sources":[{"fileName":"packages/core-type/src/Day.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Day.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31}]},"permalink":"/std/api/core-type#Day","categories":[],"previousId":2710,"nextId":2713},{"id":2713,"name":"EmptyObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Empty object type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.totaltypescript.com/the-empty-object-type-in-typescript"}]}]},"sources":[{"fileName":"packages/core-type/src/EmptyObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/EmptyObject.ts#L6"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PropertyKey"},"name":"PropertyKey","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"},"permalink":"/std/api/core-type#EmptyObject","categories":[],"previousId":2712,"nextId":2765},{"id":2765,"name":"ExpectAssertion","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}],"type":{"type":"intersection","types":[{"type":"reference","target":2742,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2766,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2767,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2742,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2767]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}}]},"permalink":"/std/api/core-type#ExpectAssertion","categories":[],"previousId":2713,"nextId":2714},{"id":2714,"name":"Hour","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An hour of the day"}]},"sources":[{"fileName":"packages/core-type/src/Hour.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Hour.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23}]},"permalink":"/std/api/core-type#Hour","categories":[],"previousId":2765,"nextId":2715},{"id":2715,"name":"JSONArray","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONArray.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONArray.ts#L6"}],"type":{"type":"array","elementType":{"type":"reference","target":2721,"name":"JSONValue","package":"@w5s/core-type"}},"permalink":"/std/api/core-type#JSONArray","categories":[],"previousId":2714,"nextId":2716},{"id":2716,"name":"JSONObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Record of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2717,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"indexSignature":{"id":2718,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L7"}],"parameters":[{"id":2719,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2721,"name":"JSONValue","package":"@w5s/core-type"}}}},"permalink":"/std/api/core-type#JSONObject","categories":[],"previousId":2715,"nextId":2720},{"id":2720,"name":"JSONPrimitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any JSON primitive\\n\\n- null\\n- boolean\\n- number\\n- string"}]},"sources":[{"fileName":"packages/core-type/src/JSONPrimitive.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONPrimitive.ts#L9"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]},"permalink":"/std/api/core-type#JSONPrimitive","categories":[],"previousId":2716,"nextId":2721},{"id":2721,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core-type/src/JSONValue.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONValue.ts#L8"}],"type":{"type":"union","types":[{"type":"reference","target":2720,"name":"JSONPrimitive","package":"@w5s/core-type"},{"type":"reference","target":2715,"name":"JSONArray","package":"@w5s/core-type"},{"type":"reference","target":2716,"name":"JSONObject","package":"@w5s/core-type"}]},"permalink":"/std/api/core-type#JSONValue","categories":[],"previousId":2720,"nextId":2722},{"id":2722,"name":"Minute","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minute of an hour"}]},"sources":[{"fileName":"packages/core-type/src/Minute.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Minute.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31},{"type":"literal","value":32},{"type":"literal","value":33},{"type":"literal","value":34},{"type":"literal","value":35},{"type":"literal","value":36},{"type":"literal","value":37},{"type":"literal","value":38},{"type":"literal","value":39},{"type":"literal","value":40},{"type":"literal","value":41},{"type":"literal","value":42},{"type":"literal","value":43},{"type":"literal","value":44},{"type":"literal","value":45},{"type":"literal","value":46},{"type":"literal","value":47},{"type":"literal","value":48},{"type":"literal","value":49},{"type":"literal","value":50},{"type":"literal","value":51},{"type":"literal","value":52},{"type":"literal","value":53},{"type":"literal","value":54},{"type":"literal","value":55},{"type":"literal","value":56},{"type":"literal","value":57},{"type":"literal","value":58},{"type":"literal","value":59}]},"permalink":"/std/api/core-type#Minute","categories":[],"previousId":2721,"nextId":2723},{"id":2723,"name":"Month","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Month of the year"}]},"sources":[{"fileName":"packages/core-type/src/Month.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Month.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12}]},"permalink":"/std/api/core-type#Month","categories":[],"previousId":2722,"nextId":2724},{"id":2724,"name":"Nullable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that can be either "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":", "},{"kind":"code","text":"`null`"},{"kind":"text","text":", or "},{"kind":"code","text":"`T`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype NullableNumber = Nullable<number>;\\n\\nfunction someFunction(value: NullableNumber) {\\n  // value is number | undefined | null\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Nullable.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Nullable.ts#L13"}],"typeParameters":[{"id":2725,"name":"T","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"},{"type":"reference","target":2725,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}]},"permalink":"/std/api/core-type#Nullable","categories":[],"previousId":2723,"nextId":2726},{"id":2726,"name":"PartialKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a partial type of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" for keys in "},{"kind":"code","text":"`Keys`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { required: boolean; optional1: string; optional2: string; };\\ntype OptionalT = PartialKeys<T, \'optional\'>; // { required: boolean; optional1?: string; optional2?: string; };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/PartialKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/PartialKeys.ts#L12"}],"typeParameters":[{"id":2727,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2728,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2727,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2729,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2727,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2728,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2727,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2728,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Partial","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/api/core-type#PartialKeys","categories":[],"previousId":2724,"nextId":2729},{"id":2729,"name":"Pretty","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Flatten the type. Useful for IDE information."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype A = { a: boolean };\\ntype B = { b: string };\\ntype AB = Pretty<A & B>; // { a: boolean; b: string; }\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}],"typeParameters":[{"id":2731,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"intersection","types":[{"type":"mapped","parameter":"KeyType","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2731,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/Pretty.ts","qualifiedName":"KeyType"},"name":"KeyType","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2731,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}},{"type":"reflection","declaration":{"id":2730,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}]}}]},"permalink":"/std/api/core-type#Pretty","categories":[],"previousId":2726,"nextId":2732},{"id":2732,"name":"Primitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Primitive values are immutable data at the lowest level of the language.\\n\\nThere are 7 primitive types\\n- string\\n- number\\n- symbol\\n- bigint\\n- boolean\\n- null\\n- undefined"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive"}]}]},"sources":[{"fileName":"packages/core-type/src/Primitive.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Primitive.ts#L15"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"permalink":"/std/api/core-type#Primitive","categories":[],"previousId":2729,"nextId":2733},{"id":2733,"name":"RequiredKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Make specified "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" properties in "},{"kind":"code","text":"`T`"},{"kind":"text","text":" required"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { foo?: boolean, bar?: string }\\ntype RequiredT = RequiredKeys<T, \'bar\'>; // { foo?: boolean; bar: string };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/RequiredKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/RequiredKeys.ts#L12"}],"typeParameters":[{"id":2734,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2735,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2734,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2729,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2734,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2735,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Required"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2734,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2735,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Required","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/api/core-type#RequiredKeys","categories":[],"previousId":2732,"nextId":2736},{"id":2736,"name":"Second","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Second of a minute"}]},"sources":[{"fileName":"packages/core-type/src/Second.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Second.ts#L6"}],"type":{"type":"reference","target":2722,"name":"Minute","package":"@w5s/core-type"},"permalink":"/std/api/core-type#Second","categories":[],"previousId":2733,"nextId":2737},{"id":2737,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enhance "},{"kind":"code","text":"`Base`"},{"kind":"text","text":" by adding tags. Every tag is prefixed by "},{"kind":"code","text":"`@@`"},{"kind":"text","text":" as a convention to never be used by runtime code"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype PositiveNumber = number & Tag<\'Positive\'>;\\nconst isPositive = (n: number): n is PositiveNumber => n >= 0;\\nconst squareRoot = (n: PositiveNumber): PositiveNumber => Math.sqrt(n) as PositiveNumber;\\nconst value = 0;\\nsquareRoot(value); // tsc: Error\\nif (isPositive(value)) {\\n  squareRoot(value); // tsc: Passed\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}],"typeParameters":[{"id":2740,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2741,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"literal","value":true}}],"type":{"type":"reflection","declaration":{"id":2738,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2739,"name":"@@tag","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L17"}],"type":{"type":"mapped","parameter":"K","parameterType":{"type":"reference","target":2740,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},"templateType":{"type":"reference","target":2741,"name":"Value","package":"@w5s/core-type","refersToTypeParameter":true},"readonlyModifier":"+"}}],"groups":[{"title":"Properties","children":[2739]}],"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}]}},"permalink":"/std/api/core-type#Tag","categories":[],"previousId":2736,"nextId":2837},{"id":2837,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all values from the keys "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" of "},{"kind":"code","text":"`T`"},{"kind":"text","text":". If "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" is omitted, all keys are used."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype AllValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }> // \'bar\' | \'baz\' | boolean\\ntype SomeValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }, \'Baz\' | \'Bar\'> // \'bar\' | \'baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/ValueOf.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/ValueOf.ts#L10"}],"typeParameters":[{"id":2838,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2839,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2838,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"default":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2838,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":2839,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2838,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"permalink":"/std/api/core-type#ValueOf","categories":[],"previousId":2737,"nextId":2840},{"id":2840,"name":"Year","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/core-type/src/Year.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Year.ts#L4"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/core-type#Year","categories":[],"previousId":2837},{"id":2705,"name":"assertType","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"signatures":[{"id":2706,"name":"assertType","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when "},{"kind":"code","text":"`Actual`"},{"kind":"text","text":" is not strictly equal to "},{"kind":"code","text":"`Expected`"},{"kind":"text","text":".\\nThis is a type helper and does nothing at run time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Expected = \'foo\'\\nassertType<\'foo\', Expected>(true);// -> everything is fine\\nassertType<\'bar\', Expected>(true);// -> ts raises an error\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"typeParameter":[{"id":2707,"name":"Actual","variant":"typeParam","kind":131072,"flags":{}},{"id":2708,"name":"Expected","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2709,"name":"_shouldBeEqual","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an inferred value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/assertType.ts","qualifiedName":"IsExact"},"typeArguments":[{"type":"reference","target":2707,"name":"Actual","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2708,"name":"Expected","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"IsExact","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core-type/function/assertType","categories":[],"nextId":2742}],"groups":[{"title":"Functions","children":[2705]},{"title":"Interfaces","children":[2742,2768,2825,2811,2780]},{"title":"Type Aliases","children":[2701,2710,2712,2713,2765,2714,2715,2716,2720,2721,2722,2723,2724,2726,2729,2732,2733,2736,2737,2837,2840]}],"sources":[{"fileName":"packages/core-type/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/index.ts#L1"}],"permalink":"/std/api/core-type"},"urlSlug":"core-type"}],"packageName":"@w5s/core-type","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":7,"name":"@w5s/env","variant":"declaration","kind":2,"flags":{},"children":[{"id":2842,"name":"Env","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A dictionary of environment variables"}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"indexSignature":{"id":2843,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/env/src/Env.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L28"}],"parameters":[{"id":2844,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}},"permalink":"/std/api/env/interface/Env","categories":[],"nextId":2841},{"id":2841,"name":"Env","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An object containing the environment variables"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NODE_ENV = Env[\'NODE_ENV\'];\\n```"}]}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"type":{"type":"reference","target":2842,"name":"Env","package":"@w5s/env"},"permalink":"/std/api/env#Env","categories":[],"previousId":2842}],"groups":[{"title":"Interfaces","children":[2842]},{"title":"Variables","children":[2841]}],"sources":[{"fileName":"packages/env/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/env/src/index.ts#L1"}],"permalink":"/std/api/env"},"urlSlug":"env"}],"packageName":"@w5s/env","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":8,"name":"@w5s/error","variant":"declaration","kind":2,"flags":{},"children":[{"id":2845,"name":"AbortError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The AbortError object indicates an error that the operation was aborted."}]},"children":[{"id":2865,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2866,"name":"new AbortError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2867,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":2868,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2845,"name":"AbortError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).constructor"}},{"id":2853,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"AbortError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).errorName"}},{"id":2854,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2855,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2856,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).asString"}},{"id":2857,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2858,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2859,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2860,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2861,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2862,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2863,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2864,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2865]},{"title":"Properties","children":[2853]},{"title":"Methods","children":[2854,2857]}],"sources":[{"fileName":"packages/error/src/AbortError.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AbortError.ts#L7"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2846,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2850,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2848,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2847,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"AbortError"}},{"id":2849,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2850,2848,2847,2849]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2851,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2852,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"AbortError"}}],"groups":[{"title":"Properties","children":[2852]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/AbortError","categories":[],"nextId":2869},{"id":2869,"name":"AggregateError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.AggregateError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2021.promise.d.ts","qualifiedName":"AggregateError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { AggregateError } from \'@w5s/error\';\\n\\ntry {\\n  throw new AggregateError([new Error(\\"some error\\")], \\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof AggregateError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"AggregateError\\"\\n  console.log(e.errors); // [ Error: \\"some error\\" ]\\n}\\n```"}]}]},"children":[{"id":2870,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"signatures":[{"id":2871,"name":"new AggregateError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"AggregateError constructor"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"typeParameter":[{"id":2872,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"parameters":[{"id":2873,"name":"errors","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an iterable of error"}]},"type":{"type":"reference","target":2872,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}},{"id":2874,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2869,"typeArguments":[{"type":"reference","target":2872,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"AggregateError","package":"@w5s/error"},"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2876,"name":"errors","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of error"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L26"}],"type":{"type":"conditional","checkType":{"type":"reference","target":2872,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"trueType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2872,"typeArguments":[{"type":"reference","target":2872,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}}}]}},"falseType":{"type":"conditional","checkType":{"type":"reference","target":2872,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},"trueType":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true}},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":2875,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L21"}],"type":{"type":"literal","value":"AggregateError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2870]},{"title":"Properties","children":[2876,2875]}],"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":37,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L37"},{"fileName":"packages/error/src/AggregateError.ts","line":20,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L20"}],"typeParameters":[{"id":2877,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/AggregateError","categories":[],"previousId":2845,"nextId":2878},{"id":2878,"name":"ArgumentError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ArgumentError object indicates an error that the program wrong argument is passed to a function"}]},"children":[{"id":2898,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2899,"name":"new ArgumentError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2900,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":2901,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2878,"name":"ArgumentError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}},{"id":2886,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"ArgumentError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).errorName"}},{"id":2887,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2888,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2889,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}},{"id":2890,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2891,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2892,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2893,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2894,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2895,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2896,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2897,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2898]},{"title":"Properties","children":[2886]},{"title":"Methods","children":[2887,2890]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2879,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2883,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2881,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2880,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"ArgumentError"}},{"id":2882,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2883,2881,2880,2882]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2884,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2885,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"ArgumentError"}}],"groups":[{"title":"Properties","children":[2885]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/ArgumentError","categories":[],"previousId":2869,"nextId":2914},{"id":2914,"name":"Error","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.Error","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Error } from \'@w5s/error\';\\n\\nthrow new Error(\'my message\', { cause: someError });\\n```"}]}]},"children":[{"id":2915,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"signatures":[{"id":2916,"name":"new Error","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"parameters":[{"id":2917,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2918,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error options"}]},"type":{"type":"reference","target":2978,"name":"ErrorOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2914,"name":"Error","package":"@w5s/error"}}]},{"id":2922,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error cause"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L34"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2920,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L24"}],"type":{"type":"intrinsic","name":"string"}},{"id":2919,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L19"}],"type":{"type":"literal","value":"Error"}},{"id":2921,"name":"stack","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error stack description (when supported)"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L29"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[2915]},{"title":"Properties","children":[2922,2920,2919,2921]}],"sources":[{"fileName":"packages/error/src/Error.ts","line":45,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L45"},{"fileName":"packages/error/src/Error.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L15"}],"permalink":"/std/api/error/class/Error","categories":[],"previousId":2878,"nextId":2980},{"id":2980,"name":"EvalError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.EvalError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"EvalError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe EvalError object indicates an error regarding the global eval() function. This exception is not thrown by JavaScript anymore, however the EvalError object remains for compatibility."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { EvalError } from \'@w5s/error\';\\n\\ntry {\\n  throw new EvalError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeEvalErrorError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"EvalError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2981,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2982,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2983,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2980,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2984,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2985,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2986,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2980,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2987,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/EvalError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L27"}],"type":{"type":"literal","value":"EvalError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2981]},{"title":"Properties","children":[2987]}],"sources":[{"fileName":"packages/error/src/EvalError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L30"},{"fileName":"packages/error/src/EvalError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/EvalError","categories":[],"previousId":2914,"nextId":2995},{"id":2995,"name":"InvariantError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The InvariantError object indicates an error that the program violates a fundamental assumption or condition.\\nThis exception is typically used to indicate bugs in the code, such as incorrect assumptions about the state of an object or function.\\nThe InvariantError object should be thrown when a violation of an invariant occurs and should not be caught by the program.\\nInstead, it should be handled by the program\'s error handling mechanism."}]},"children":[{"id":3015,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3016,"name":"new InvariantError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3017,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":3018,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2995,"name":"InvariantError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}},{"id":3003,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"InvariantError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).errorName"}},{"id":3004,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3005,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3006,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}},{"id":3007,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3008,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3009,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3010,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3011,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3012,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3013,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3014,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3015]},{"title":"Properties","children":[3003]},{"title":"Methods","children":[3004,3007]}],"sources":[{"fileName":"packages/error/src/InvariantError.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/InvariantError.ts#L10"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2996,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3000,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2998,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2997,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"InvariantError"}},{"id":2999,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3000,2998,2997,2999]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3001,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3002,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"InvariantError"}}],"groups":[{"title":"Properties","children":[3002]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/InvariantError","categories":[],"previousId":2980,"nextId":3022},{"id":3022,"name":"NotImplementedError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The NotImplementedError object indicates an error that the current function was not implemented"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction someFunction() {\\n  throw NotImplementedError();// message can be customized\\n}\\n```"}]}]},"children":[{"id":3042,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3043,"name":"new NotImplementedError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3044,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":3045,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3022,"name":"NotImplementedError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}},{"id":3030,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"NotImplementedError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).errorName"}},{"id":3031,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3032,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3033,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}},{"id":3034,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3035,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3036,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3037,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3038,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3039,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3040,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3041,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3042]},{"title":"Properties","children":[3030]},{"title":"Methods","children":[3031,3034]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L13"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3023,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3027,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3025,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3024,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"NotImplementedError"}},{"id":3026,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3027,3025,3024,3026]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3028,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3029,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"NotImplementedError"}}],"groups":[{"title":"Properties","children":[3029]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/NotImplementedError","categories":[],"previousId":2995,"nextId":3046},{"id":3046,"name":"RangeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.RangeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RangeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nA RangeError is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { RangeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new RangeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"RangeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3047,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3048,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3049,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3046,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3050,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3051,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3052,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3046,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3053,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/RangeError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L27"}],"type":{"type":"literal","value":"RangeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3047]},{"title":"Properties","children":[3053]}],"sources":[{"fileName":"packages/error/src/RangeError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L30"},{"fileName":"packages/error/src/RangeError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/RangeError","categories":[],"previousId":3022,"nextId":3054},{"id":3054,"name":"ReferenceError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.ReferenceError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReferenceError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe ReferenceError object represents an error when a variable that doesn\'t exist (or hasn\'t yet been initialized) in the current scope is referenced."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { ReferenceError } from \'@w5s/error\';\\n\\ntry {\\n  throw new ReferenceError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof ReferenceError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"ReferenceError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3055,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3056,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3057,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3054,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3058,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3059,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3060,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3054,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3061,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L26"}],"type":{"type":"literal","value":"ReferenceError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3055]},{"title":"Properties","children":[3061]}],"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L29"},{"fileName":"packages/error/src/ReferenceError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/ReferenceError","categories":[],"previousId":3046,"nextId":3062},{"id":3062,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The RuntimeError object indicates an error that an error occurred during the runtime of a program."}]},"children":[{"id":3082,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3083,"name":"new RuntimeError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3084,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":3085,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3062,"name":"RuntimeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}},{"id":3070,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"RuntimeError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).errorName"}},{"id":3071,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3072,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3073,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}},{"id":3074,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3075,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3076,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3077,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3078,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3079,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3080,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3081,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3082]},{"title":"Properties","children":[3070]},{"title":"Methods","children":[3071,3074]}],"sources":[{"fileName":"packages/error/src/RuntimeError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RuntimeError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3063,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3067,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3065,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3064,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"RuntimeError"}},{"id":3066,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3067,3065,3064,3066]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3068,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3069,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"RuntimeError"}}],"groups":[{"title":"Properties","children":[3069]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/RuntimeError","categories":[],"previousId":3054,"nextId":3086},{"id":3086,"name":"SyntaxError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.SyntaxError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"SyntaxError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe SyntaxError object represents an error when trying to interpret syntactically invalid code. It is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { SyntaxError } from \'@w5s/error\';\\n\\ntry {\\n  throw new SyntaxError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof SyntaxError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"SyntaxError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3087,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3088,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3089,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3086,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3090,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3091,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3092,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3086,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3093,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L26"}],"type":{"type":"literal","value":"SyntaxError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3087]},{"title":"Properties","children":[3093]}],"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L29"},{"fileName":"packages/error/src/SyntaxError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/SyntaxError","categories":[],"previousId":3062,"nextId":3097},{"id":3097,"name":"TimeoutError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The TimeoutError object indicates an error that the operation took too much time and was canceled"}]},"children":[{"id":3117,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3118,"name":"new TimeoutError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3119,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reflection","declaration":{"id":3120,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3097,"name":"TimeoutError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}},{"id":3105,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"TimeoutError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).errorName"}},{"id":3106,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3107,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3108,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}},{"id":3109,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3110,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3111,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3112,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3113,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3114,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3115,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3116,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3117]},{"title":"Properties","children":[3105]},{"title":"Methods","children":[3106,3109]}],"sources":[{"fileName":"packages/error/src/TimeoutError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TimeoutError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3098,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3102,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3100,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3099,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"TimeoutError"}},{"id":3101,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3102,3100,3099,3101]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3103,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3104,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"TimeoutError"}}],"groups":[{"title":"Properties","children":[3104]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/TimeoutError","categories":[],"previousId":3086,"nextId":3121},{"id":3121,"name":"TypeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.TypeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TypeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe TypeError object represents an error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { TypeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new TypeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof TypeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"TypeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3122,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3123,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3124,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3121,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3125,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3126,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3127,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3121,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3128,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/TypeError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L26"}],"type":{"type":"literal","value":"TypeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3122]},{"title":"Properties","children":[3128]}],"sources":[{"fileName":"packages/error/src/TypeError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L29"},{"fileName":"packages/error/src/TypeError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/TypeError","categories":[],"previousId":3097,"nextId":3129},{"id":3129,"name":"URIError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.URIError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"URIError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe URIError object represents an error when a global URI handling function was used in a wrong way."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { URIError } from \'@w5s/error\';\\n\\ntry {\\n  throw new URIError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof URIError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"URIError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3130,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3131,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3132,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3129,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3133,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3134,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3135,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3129,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3136,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/URIError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L26"}],"type":{"type":"literal","value":"URIError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3130]},{"title":"Properties","children":[3136]}],"sources":[{"fileName":"packages/error/src/URIError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L29"},{"fileName":"packages/error/src/URIError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/URIError","categories":[],"previousId":3121,"nextId":2923},{"id":2927,"name":"ErrorClass","variant":"declaration","kind":256,"flags":{},"children":[{"id":2928,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2948,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2949,"name":"new ErrorClass","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"typeParameter":[{"id":2950,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reflection","declaration":{"id":2951,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}}],"parameters":[{"id":2952,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2971,"typeArguments":[{"type":"reference","target":2950,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassParameters","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2953,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2959,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2957,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2954,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":2955,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2956,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2947,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2956]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2950,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}}},{"id":2958,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2959,2957,2954,2958]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2960,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2961,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2947,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2961]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2950,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2929,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"reference","target":2947,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Pretty.errorName"}},{"id":2930,"name":"prototype","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L48"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2931,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2935,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2933,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2932,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"intrinsic","name":"string"}},{"id":2934,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2935,2933,2932,2934]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.prototype"}},{"id":2936,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2937,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2938,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}},{"id":2939,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2940,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2941,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2942,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2943,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2944,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2945,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2946,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2859,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"groups":[{"title":"Constructors","children":[2928,2948]},{"title":"Properties","children":[2929,2930]},{"title":"Methods","children":[2936,2939]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"typeParameters":[{"id":2947,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Pretty"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":2906,"name":"CustomError","package":"@w5s/error"}}],"name":"Pretty","package":"@w5s/core-type"}],"permalink":"/std/api/error/interface/ErrorClass","categories":[],"previousId":3137,"nextId":2967},{"id":2967,"name":"ErrorClassOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":2969,"name":"errorMessage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default error message"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L52"}],"type":{"type":"intrinsic","name":"string"}},{"id":2968,"name":"errorName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L48"}],"type":{"type":"reference","target":2970,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClassOptions.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2969,2968]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L44"}],"typeParameters":[{"id":2970,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/error/interface/ErrorClassOptions","categories":[],"previousId":2927,"nextId":2978},{"id":2978,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":2979,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cause of the error"}]},"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L5"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[2979]}],"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L1"}],"permalink":"/std/api/error/interface/ErrorOptions","categories":[],"previousId":2967,"nextId":2907},{"id":2907,"name":"CustomError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Standard extendable error type"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"typeParameters":[{"id":2913,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"globalThis.Error","package":"typescript","qualifiedName":"Error"},{"type":"reflection","declaration":{"id":2908,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2912,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2910,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2909,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"reference","target":2913,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}}},{"id":2911,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2912,2910,2909,2911]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":2913,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"permalink":"/std/api/error#CustomError","categories":[],"previousId":2978,"nextId":2971},{"id":2971,"name":"ErrorClassParameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new CustomError"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":71,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L71"}],"typeParameters":[{"id":2972,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"conditional","checkType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"RequiredKeysOf"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2972,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"}],"name":"RequiredKeysOf","package":"@w5s/error"},"extendsType":{"type":"intrinsic","name":"never"},"trueType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reference","target":2972,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]},"falseType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":2973,"typeArguments":[{"type":"reference","target":2972,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}},"permalink":"/std/api/error#ErrorClassParameters","categories":[],"previousId":2907,"nextId":2973},{"id":2973,"name":"ErrorClassProperties","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all properties passed to constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":79,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L79"}],"typeParameters":[{"id":2977,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2977,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":2974,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2976,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional cause"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L90"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2975,"name":"message","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional message, if omitted default one will be used"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L86"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2976,2975]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":82,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L82"}]}}]},"permalink":"/std/api/error#ErrorClassProperties","categories":[],"previousId":2971,"nextId":2962},{"id":2962,"name":"ErrorType","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L6"}],"typeParameters":[{"id":2965,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2966,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":2907,"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":2963,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2964,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2965,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2964]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2966,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"CustomError","package":"@w5s/error"},"permalink":"/std/api/error#ErrorType","categories":[],"previousId":2973,"nextId":2906},{"id":2906,"name":"CustomError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst parentError: Error;\\nconst error = new CustomError({\\n  name: \'FooError\' as const, // this is required\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]},{"tag":"@param","name":"properties","content":[{"kind":"text","text":"initial properties"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorConstructor"},"name":"CustomErrorConstructor","package":"@w5s/error"},"permalink":"/std/api/error#CustomError","categories":[],"previousId":2962},{"id":2923,"name":"ErrorClass","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2924,"name":"ErrorClass","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"ErrorClass","target":2923,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nexport class MyError extends ErrorClass({\\n  errorName: \'MyError\',\\n  // errorMessage: \'my message\',\\n})<{\\n  foo: boolean;\\n}> {};\\n\\nconst instance = MyError({ foo: true, message: \'hey!\' }); // Error { name: \'MyError\', message: \'hey!\', foo: true }\\nMyError.errorName === \'MyError\' // true\\nMyError.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"}],"typeParameter":[{"id":2925,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":2926,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the options for the new error type"}]},"type":{"type":"reference","target":2967,"typeArguments":[{"type":"reference","target":2925,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2927,"typeArguments":[{"type":"reference","target":2925,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClass","package":"@w5s/error"}}],"permalink":"/std/api/error/function/ErrorClass","categories":[],"previousId":3129,"nextId":2902},{"id":2902,"name":"assertNever","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"signatures":[{"id":2903,"name":"assertNever","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when accessing this function and throws a TypeError at runtime\\nThis is useful for exhaustive switch check."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst print = (fruit: \'banana\'|\'kiwi\') => {\\n  switch (fruit) {\\n    case \'banana\': return \'\ud83c\udf4c Banana\';\\n    case \'kiwi\': return \'\ud83e\udd5d Kiwi\';\\n    default: return assertNever(fruit); // <- This line will report an error if a case is missing\\n  }\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"typeParameter":[{"id":2904,"name":"V","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2905,"name":"subject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the never value that should be reported"}]},"type":{"type":"reference","target":2904,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"type":{"type":"reference","target":2904,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"permalink":"/std/api/error/function/assertNever","categories":[],"previousId":2923,"nextId":2988},{"id":2988,"name":"invariant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"},{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"},{"fileName":"packages/error/src/invariant.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L18"}],"signatures":[{"id":2989,"name":"invariant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else throws "},{"kind":"code","text":"`Error { name: \'InvariantError\', message }`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninvariant(true, \'this should be true\');// pass\\ninvariant(false, \'this should be true\');// throw new Error(\'this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"}],"parameters":[{"id":2990,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"literal","value":false}},{"id":2991,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"never"}},{"id":2992,"name":"invariant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"}],"parameters":[{"id":2993,"name":"condition","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":2994,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"predicate","name":"condition","asserts":true}}],"permalink":"/std/api/error/function/invariant","categories":[],"previousId":2902,"nextId":3019},{"id":3019,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/isError.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L16"}],"signatures":[{"id":3020,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the provided value is an Error object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisError(new Error(\'Test Error\')); // true\\nisError(new TypeError(\'Test Error\')); // true\\n\\nisError(undefined); // false\\nisError({ name: \'Error\' }); // false\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"true if the value is an Error object, false otherwise."}]}]},"sources":[{"fileName":"packages/error/src/isError.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L16"}],"parameters":[{"id":3021,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}}],"permalink":"/std/api/error/function/isError","categories":[],"previousId":2988,"nextId":3094},{"id":3094,"name":"panic","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"signatures":[{"id":3095,"name":"panic","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Throw the given "},{"kind":"code","text":"`error`"},{"kind":"text","text":" to stop execution. Can be used as expression unlike throw statement."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst unknownValue: unknown = 123;\\nconst stringValue = typeof unknownValue === \'string\' ? unknownValue : panic(new Error(\'not a string\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"parameters":[{"id":3096,"name":"error","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error to throw"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"never"}}],"permalink":"/std/api/error/function/panic","categories":[],"previousId":3019,"nextId":3137},{"id":3137,"name":"warning","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"signatures":[{"id":3138,"name":"warning","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else print a message using "},{"kind":"code","text":"`console.warn`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nwarning(true, \'this should be true\');// pass\\nwarning(false, \'this should be true\');// console.warn(\'Warning: this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"parameters":[{"id":3139,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":3140,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/error/function/warning","categories":[],"previousId":3094,"nextId":2927}],"groups":[{"title":"Classes","children":[2845,2869,2878,2914,2980,2995,3022,3046,3054,3062,3086,3097,3121,3129]},{"title":"Functions","children":[2923,2902,2988,3019,3094,3137]},{"title":"Interfaces","children":[2927,2967,2978]},{"title":"Type Aliases","children":[2907,2971,2973,2962]},{"title":"Variables","children":[2906]}],"categories":[{"title":"Constructor","children":[2906]},{"title":"__CATEGORY__","children":[2845,2869,2878,2914,2980,2995,3022,3046,3054,3062,3086,3097,3121,3129,2927,2967,2978,2907,2971,2973,2962,2923,2902,2988,3019,3094,3137]}],"sources":[{"fileName":"packages/error/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/error/src/index.ts#L1"}],"permalink":"/std/api/error"},"urlSlug":"error"}],"packageName":"@w5s/error","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":9,"name":"@w5s/http","variant":"declaration","kind":2,"flags":{},"children":[{"id":3263,"name":"Client","variant":"declaration","kind":4,"flags":{},"children":[{"id":3271,"name":"Options","variant":"declaration","kind":256,"flags":{},"children":[{"id":3280,"name":"fetch","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":3281,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":288,"character":13}],"signatures":[{"id":3282,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":3283,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3284,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":3285,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":288,"character":13}],"parameters":[{"id":3286,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3287,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.fetch"}},{"id":3272,"name":"onRequest","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":3273,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":3274,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":3275,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":3141,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onRequest"}},{"id":3276,"name":"onResponse","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":3277,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":3278,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":3279,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3141,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onResponse"}},{"id":3288,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.timeout"}}],"groups":[{"title":"Properties","children":[3280,3272,3276,3288]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":45,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L45"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":3244,"name":"Client","package":"@w5s/http"}],"name":"Partial","package":"typescript"}],"permalink":"/std/api/http/namespace/Client#Options"},{"id":3289,"name":"defaultTimeoutDuration","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/Client.ts","line":47,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L47"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},"defaultValue":"...","permalink":"/std/api/http/namespace/Client#defaultTimeoutDuration"},{"id":3267,"name":"getRequestTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"signatures":[{"id":3268,"name":"getRequestTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for the request and client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getRequestTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"parameters":[{"id":3269,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3244,"name":"Client","package":"@w5s/http"}},{"id":3270,"name":"requestObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Client#getRequestTimeoutDuration"},{"id":3264,"name":"getTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"signatures":[{"id":3265,"name":"getTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"parameters":[{"id":3266,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3244,"name":"Client","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Client#getTimeoutDuration"}],"groups":[{"title":"Interfaces","children":[3271]},{"title":"Variables","children":[3289]},{"title":"Functions","children":[3267,3264]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/api/http/namespace/Client","categories":[],"previousId":3783,"nextId":3142},{"id":3142,"name":"HTTPError","variant":"declaration","kind":4,"flags":{},"children":[{"id":3143,"name":"InvalidURL","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when url passed is invalid"}]},"children":[{"id":3165,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3166,"name":"new InvalidURL","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3167,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3168,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3169,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3169]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3143,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}},{"id":3170,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).input"}},{"id":3153,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPInvalidURLError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).errorName"}},{"id":3154,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3155,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3156,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}},{"id":3157,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3158,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3159,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3160,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3161,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3162,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3163,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3164,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3165]},{"title":"Properties","children":[3170,3153]},{"title":"Methods","children":[3154,3157]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":14,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L14"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3144,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3148,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3146,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3145,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}},{"id":3147,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3148,3146,3145,3147]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3149,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3150,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}}],"groups":[{"title":"Properties","children":[3150]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":3151,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3152,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3152]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#InvalidURL"},{"id":3171,"name":"NetworkError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A network error when "},{"kind":"code","text":"`fetch`"},{"kind":"text","text":" fails"}]},"children":[{"id":3191,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3192,"name":"new NetworkError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3193,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3194,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3171,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}},{"id":3179,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPNetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).errorName"}},{"id":3180,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3181,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3182,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}},{"id":3183,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3184,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3185,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3186,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3187,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3188,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3189,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3190,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3191]},{"title":"Properties","children":[3179]},{"title":"Methods","children":[3180,3183]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3172,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3176,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3174,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3173,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}},{"id":3175,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3176,3174,3173,3175]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3177,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3178,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}}],"groups":[{"title":"Properties","children":[3178]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#NetworkError"},{"id":3195,"name":"ParserError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A parsing error when the body cannot be parsed"}]},"children":[{"id":3215,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3216,"name":"new ParserError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3217,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3218,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}},{"id":3203,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).errorName"}},{"id":3204,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3205,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3206,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}},{"id":3207,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3208,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3209,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3210,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3211,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3212,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3213,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3214,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1060,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3215]},{"title":"Properties","children":[3203]},{"title":"Methods","children":[3204,3207]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3196,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3200,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3198,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3197,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}},{"id":3199,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3200,3198,3197,3199]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3201,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3202,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}}],"groups":[{"title":"Properties","children":[3202]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#ParserError"}],"groups":[{"title":"Classes","children":[3143,3171,3195]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"permalink":"/std/api/http/namespace/HTTPError","categories":[],"previousId":3263,"nextId":3799},{"id":3799,"name":"Response","variant":"declaration","kind":4,"flags":{},"children":[{"id":3800,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":3803,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3808,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.body"}},{"id":3807,"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3344,"name":"Headers","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.headers"}},{"id":3805,"name":"ok","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.ok"}},{"id":3806,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3786,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.redirected"}},{"id":3802,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3397,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3783,"name":"Status","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.status"}},{"id":3804,"name":"type","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3817,"name":"ResponseType","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.type"}},{"id":3801,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.url"}}],"groups":[{"title":"Properties","children":[3803,3807,3805,3806,3802,3804,3801]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":59,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L59"}],"typeParameters":[{"id":3808,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":3808,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"},{"type":"union","types":[{"type":"literal","value":"ok"},{"type":"literal","value":"redirected"},{"type":"literal","value":"type"},{"type":"literal","value":"headers"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/http/namespace/Response#Parameters"}],"groups":[{"title":"Interfaces","children":[3800]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"permalink":"/std/api/http/namespace/Response","categories":[],"previousId":3142,"nextId":3223},{"id":3223,"name":"ResponseParser","variant":"declaration","kind":4,"flags":{},"children":[{"id":3228,"name":"arrayBuffer","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"signatures":[{"id":3229,"name":"arrayBuffer","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ArrayBuffer response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.arrayBuffer); // Task<ArrayBuffer, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"parameters":[{"id":3230,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"},{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#arrayBuffer"},{"id":3234,"name":"blob","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"signatures":[{"id":3235,"name":"blob","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Blob response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.blob); // Task<Blob, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"parameters":[{"id":3236,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Blob"},"name":"Blob","package":"typescript"},{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#blob"},{"id":3231,"name":"formData","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"signatures":[{"id":3232,"name":"formData","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.formData); // Task<FormData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"parameters":[{"id":3233,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"FormData"},"name":"FormData","package":"typescript"},{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#formData"},{"id":3224,"name":"json","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"signatures":[{"id":3225,"name":"json","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype MyData = { foo: string, bar: boolean };\\n\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.json<MyData>(\'unsafe\')); // Task<MyData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"typeParameter":[{"id":3226,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"parameters":[{"id":3227,"name":"CodecModule","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":"unsafe"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec"},"typeArguments":[{"type":"reference","target":3226,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}]}}],"type":{"type":"reference","target":3219,"typeArguments":[{"type":"reference","target":3226,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"ResponseParser","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/ResponseParser#json"},{"id":3237,"name":"text","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"signatures":[{"id":3238,"name":"text","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Text response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.text); // Task<string, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"parameters":[{"id":3239,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#text"}],"groups":[{"title":"Functions","children":[3228,3234,3231,3224,3237]}],"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"permalink":"/std/api/http/namespace/ResponseParser","categories":[],"previousId":3799,"nextId":3397},{"id":3397,"name":"Status","variant":"declaration","kind":4,"flags":{},"children":[{"id":3492,"name":"Accepted","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.3\\n\\nThe request has been received but not yet acted upon. It is non-committal, meaning that there is no way in HTTP to later send an asynchronous response indicating the outcome of processing the request. It is intended for cases where another process or server handles the request, or for batch processing."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":9,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L9"}],"type":{"type":"reflection","declaration":{"id":3493,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3494,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3495,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3494,3495]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Accepted"},{"id":3496,"name":"BadGateway","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.3\\n\\nThis error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L16"}],"type":{"type":"reflection","declaration":{"id":3497,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3498,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3499,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3498,3499]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#BadGateway"},{"id":3500,"name":"BadRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.1\\n\\nThis response means that server could not understand the request due to invalid syntax."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L23"}],"type":{"type":"reflection","declaration":{"id":3501,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3502,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3503,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3502,3503]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#BadRequest"},{"id":3504,"name":"Conflict","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.8\\n\\nThis response is sent when a request conflicts with the current state of the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":30,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3505,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3506,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3507,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3506,3507]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Conflict"},{"id":3508,"name":"Continue","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.1\\n\\nThis interim response indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L37"}],"type":{"type":"reflection","declaration":{"id":3509,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3510,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3511,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3510,3511]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Continue"},{"id":3512,"name":"Created","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.2\\n\\nThe request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a PUT request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":44,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L44"}],"type":{"type":"reflection","declaration":{"id":3513,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3514,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3515,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3514,3515]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Created"},{"id":3644,"name":"EarlyHints","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://www.rfc-editor.org/rfc/rfc8297#page-3\\n\\nThis code indicates to the client that the server is likely to send a final response with the header fields included in the informational response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":281,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L281"}],"type":{"type":"reflection","declaration":{"id":3645,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3646,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3647,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3646,3647]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#EarlyHints"},{"id":3516,"name":"ExpectationFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.14\\n\\nThis response code means the expectation indicated by the Expect request header field can\'t be met by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L51"}],"type":{"type":"reflection","declaration":{"id":3517,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3518,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3519,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3518,3519]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ExpectationFailed"},{"id":3520,"name":"FailedDependency","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.5\\n\\nThe request failed due to failure of a previous request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":58,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L58"}],"type":{"type":"reflection","declaration":{"id":3521,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3522,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3523,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3522,3523]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#FailedDependency"},{"id":3524,"name":"Forbidden","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.3\\n\\nThe client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client\'s identity is known to the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":65,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L65"}],"type":{"type":"reflection","declaration":{"id":3525,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3526,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3527,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3526,3527]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Forbidden"},{"id":3528,"name":"GatewayTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.5\\n\\nThis error response is given when the server is acting as a gateway and cannot get a response in time."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":72,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L72"}],"type":{"type":"reflection","declaration":{"id":3529,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3530,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3531,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3530,3531]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#GatewayTimeout"},{"id":3532,"name":"Gone","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.9\\n\\nThis response would be sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for \\"limited-time, promotional services\\". APIs should not feel compelled to indicate resources that have been deleted with this status code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L79"}],"type":{"type":"reflection","declaration":{"id":3533,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3534,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3535,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3534,3535]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Gone"},{"id":3536,"name":"HTTPVersionNotSupported","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.6\\n\\nThe HTTP version used in the request is not supported by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L86"}],"type":{"type":"reflection","declaration":{"id":3537,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3538,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3539,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3538,3539]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#HTTPVersionNotSupported"},{"id":3540,"name":"IMATeapot","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2324#section-2.3.2\\n\\nAny attempt to brew coffee with a teapot should result in the error code \\"418 I\'m a teapot\\". The resulting entity body MAY be short and stout."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":93,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L93"}],"type":{"type":"reflection","declaration":{"id":3541,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3542,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3543,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3542,3543]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#IMATeapot"},{"id":3544,"name":"InsufficientSpaceOnResource","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe 507 (Insufficient Storage) status code means the method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. This condition is considered to be temporary. If the request which received this status code was the result of a user action, the request MUST NOT be repeated until it is requested by a separate user action."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":100,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L100"}],"type":{"type":"reflection","declaration":{"id":3545,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3546,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3547,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3546,3547]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InsufficientSpaceOnResource"},{"id":3548,"name":"InsufficientStorage","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":107,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L107"}],"type":{"type":"reflection","declaration":{"id":3549,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3550,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3551,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3550,3551]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InsufficientStorage"},{"id":3552,"name":"InternalServerError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.1\\n\\nThe server encountered an unexpected condition that prevented it from fulfilling the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":114,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L114"}],"type":{"type":"reflection","declaration":{"id":3553,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3554,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3555,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3554,3555]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InternalServerError"},{"id":3556,"name":"LengthRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.10\\n\\nThe server rejected the request because the Content-Length header field is not defined and the server requires it."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":121,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L121"}],"type":{"type":"reflection","declaration":{"id":3557,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3558,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3559,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3558,3559]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#LengthRequired"},{"id":3560,"name":"Locked","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.4\\n\\nThe resource that is being accessed is locked."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":128,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L128"}],"type":{"type":"reflection","declaration":{"id":3561,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3562,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3563,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3562,3563]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Locked"},{"id":3564,"name":"MethodFailure","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt\\n\\nA deprecated response used by the Spring Framework when a method has failed."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":137,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L137"}],"type":{"type":"reflection","declaration":{"id":3565,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3566,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3567,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3566,3567]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MethodFailure"},{"id":3568,"name":"MethodNotAllowed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.5\\n\\nThe request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":144,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L144"}],"type":{"type":"reflection","declaration":{"id":3569,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3570,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3571,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3570,3571]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MethodNotAllowed"},{"id":3720,"name":"MisdirectedRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7540#section-9.1.2\\n\\nDefined in the specification of HTTP/2 to indicate that a server is not able to produce a response for the combination of scheme and authority that are included in the request URI."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":416,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L416"}],"type":{"type":"reflection","declaration":{"id":3721,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3722,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3723,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3722,3723]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MisdirectedRequest"},{"id":3572,"name":"MovedPermanently","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.2\\n\\nThis response code means that URI of requested resource has been changed. Probably, new URI would be given in the response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":151,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L151"}],"type":{"type":"reflection","declaration":{"id":3573,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3574,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3575,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3574,3575]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MovedPermanently"},{"id":3576,"name":"MovedTemporarily","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.3\\n\\nThis response code means that URI of requested resource has been changed temporarily. New changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":158,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L158"}],"type":{"type":"reflection","declaration":{"id":3577,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3578,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3579,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3578,3579]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MovedTemporarily"},{"id":3580,"name":"MultiStatus","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.2\\n\\nA Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":165,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L165"}],"type":{"type":"reflection","declaration":{"id":3581,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3582,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3583,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3582,3583]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MultiStatus"},{"id":3584,"name":"MultipleChoices","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.1\\n\\nThe request has more than one possible responses. User-agent or user should choose one of them. There is no standardized way to choose one of the responses."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":172,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L172"}],"type":{"type":"reflection","declaration":{"id":3585,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3586,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3587,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3586,3587]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MultipleChoices"},{"id":3588,"name":"NetworkAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-6\\n\\nThe 511 status code indicates that the client needs to authenticate to gain network access."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L179"}],"type":{"type":"reflection","declaration":{"id":3589,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3590,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3591,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3590,3591]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NetworkAuthenticationRequired"},{"id":3592,"name":"NoContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.5\\n\\nThere is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":186,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L186"}],"type":{"type":"reflection","declaration":{"id":3593,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3594,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3595,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3594,3595]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NoContent"},{"id":3596,"name":"NonAuthoritativeInformation","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.4\\n\\nThis response code means returned meta-information set is not exact set as available from the origin server, but collected from a local or a third party copy. Except this condition, 200 OK response should be preferred instead of this response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":193,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L193"}],"type":{"type":"reflection","declaration":{"id":3597,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3598,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3599,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3598,3599]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NonAuthoritativeInformation"},{"id":3600,"name":"NotAcceptable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.6\\n\\nThis response is sent when the web server, after performing server-driven content negotiation, doesn\'t find any content following the criteria given by the user agent."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":200,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L200"}],"type":{"type":"reflection","declaration":{"id":3601,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3602,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3603,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3602,3603]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotAcceptable"},{"id":3604,"name":"NotFound","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.4\\n\\nThe server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":207,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L207"}],"type":{"type":"reflection","declaration":{"id":3605,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3606,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3607,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3606,3607]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotFound"},{"id":3608,"name":"NotImplemented","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.2\\n\\nThe request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":214,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L214"}],"type":{"type":"reflection","declaration":{"id":3609,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3610,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3611,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3610,3611]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotImplemented"},{"id":3612,"name":"NotModified","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.1\\n\\nThis is used for caching purposes. It is telling to client that response has not been modified. So, client can continue to use same cached version of response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":221,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L221"}],"type":{"type":"reflection","declaration":{"id":3613,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3614,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3615,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3614,3615]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotModified"},{"id":3616,"name":"OK","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.1\\n\\nThe request has succeeded. The meaning of a success varies depending on the HTTP method:\\nGET: The resource has been fetched and is transmitted in the message body.\\nHEAD: The entity headers are in the message body.\\nPOST: The resource describing the result of the action is transmitted in the message body.\\nTRACE: The message body contains the request message as received by the server"}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":232,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L232"}],"type":{"type":"reflection","declaration":{"id":3617,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3618,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3619,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3618,3619]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#OK"},{"id":3620,"name":"PartialContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.1\\n\\nThis response code is used because of range header sent by the client to separate download into multiple streams."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L239"}],"type":{"type":"reflection","declaration":{"id":3621,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3622,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3623,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3622,3623]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PartialContent"},{"id":3624,"name":"PaymentRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.2\\n\\nThis response code is reserved for future use. Initial aim for creating this code was using it for digital payment systems however this is not used currently."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":246,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L246"}],"type":{"type":"reflection","declaration":{"id":3625,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3626,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3627,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3626,3627]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PaymentRequired"},{"id":3628,"name":"PermanentRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7538#section-3\\n\\nThis means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":253,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L253"}],"type":{"type":"reflection","declaration":{"id":3629,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3630,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3631,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3630,3631]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PermanentRedirect"},{"id":3632,"name":"PreconditionFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.2\\n\\nThe client has indicated preconditions in its headers which the server does not meet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L260"}],"type":{"type":"reflection","declaration":{"id":3633,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3634,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3635,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3634,3635]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PreconditionFailed"},{"id":3636,"name":"PreconditionRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-3\\n\\nThe origin server requires the request to be conditional. Intended to prevent the \'lost update\' problem, where a client GETs a resource\'s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":267,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L267"}],"type":{"type":"reflection","declaration":{"id":3637,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3638,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3639,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3638,3639]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PreconditionRequired"},{"id":3640,"name":"Processing","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.1\\n\\nThis code indicates that the server has received and is processing the request, but no response is available yet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":274,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L274"}],"type":{"type":"reflection","declaration":{"id":3641,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3642,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3643,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3642,3643]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Processing"},{"id":3652,"name":"ProxyAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.2\\n\\nThis is similar to 401 but authentication is needed to be done by a proxy."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":295,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L295"}],"type":{"type":"reflection","declaration":{"id":3653,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3654,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3655,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3654,3655]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ProxyAuthenticationRequired"},{"id":3664,"name":"RequestEntityTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.11\\n\\nRequest entity is larger than limits defined by server; the server might close the connection or return an Retry-After header field."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":316,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L316"}],"type":{"type":"reflection","declaration":{"id":3665,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3666,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3667,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3666,3667]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestEntityTooLarge"},{"id":3656,"name":"RequestHeaderFieldsTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-5\\n\\nThe server is unwilling to process the request because its header fields are too large. The request MAY be resubmitted after reducing the size of the request header fields."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":302,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L302"}],"type":{"type":"reflection","declaration":{"id":3657,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3658,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3659,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3658,3659]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestHeaderFieldsTooLarge"},{"id":3660,"name":"RequestTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.7\\n\\nThis response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L309"}],"type":{"type":"reflection","declaration":{"id":3661,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3662,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3663,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3662,3663]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestTimeout"},{"id":3668,"name":"RequestURITooLong","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.12\\n\\nThe URI requested by the client is longer than the server is willing to interpret."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":323,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L323"}],"type":{"type":"reflection","declaration":{"id":3669,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3670,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3671,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3670,3671]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestURITooLong"},{"id":3672,"name":"RequestedRangeNotSatisfiable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.4\\n\\nThe range specified by the Range header field in the request can\'t be fulfilled; it\'s possible that the range is outside the size of the target URI\'s data."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L330"}],"type":{"type":"reflection","declaration":{"id":3673,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3674,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3675,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3674,3675]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestedRangeNotSatisfiable"},{"id":3676,"name":"ResetContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.6\\n\\nThis response code is sent after accomplishing request to tell user agent reset document view which sent this request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":337,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L337"}],"type":{"type":"reflection","declaration":{"id":3677,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3678,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3679,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3678,3679]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ResetContent"},{"id":3680,"name":"SeeOther","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.4\\n\\nServer sent this response to directing client to get requested resource to another URI with an GET request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":344,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L344"}],"type":{"type":"reflection","declaration":{"id":3681,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3682,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3683,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3682,3683]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#SeeOther"},{"id":3684,"name":"ServiceUnavailable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.4\\n\\nThe server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This responses should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":351,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L351"}],"type":{"type":"reflection","declaration":{"id":3685,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3686,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3687,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3686,3687]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ServiceUnavailable"},{"id":3688,"name":"SwitchingProtocols","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.2\\n\\nThis code is sent in response to an Upgrade request header by the client, and indicates the protocol the server is switching too."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":358,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L358"}],"type":{"type":"reflection","declaration":{"id":3689,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3690,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3691,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3690,3691]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#SwitchingProtocols"},{"id":3692,"name":"TemporaryRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.7\\n\\nServer sent this response to directing client to get requested resource to another URI with same method that used prior request. This has the same semantic than the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":365,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L365"}],"type":{"type":"reflection","declaration":{"id":3693,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3694,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3695,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3694,3695]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#TemporaryRedirect"},{"id":3696,"name":"TooManyRequests","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-4\\n\\nThe user has sent too many requests in a given amount of time (\\"rate limiting\\")."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":372,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L372"}],"type":{"type":"reflection","declaration":{"id":3697,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3698,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3699,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3698,3699]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#TooManyRequests"},{"id":3700,"name":"Unauthorized","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.1\\n\\nAlthough the HTTP standard specifies \\"unauthorized\\", semantically this response means \\"unauthenticated\\". That is, the client must authenticate itself to get the requested response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L379"}],"type":{"type":"reflection","declaration":{"id":3701,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3702,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3703,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3702,3703]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Unauthorized"},{"id":3704,"name":"UnavailableForLegalReasons","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7725\\n\\nThe user-agent requested a resource that cannot legally be provided, such as a web page censored by a government."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":386,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L386"}],"type":{"type":"reflection","declaration":{"id":3705,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3706,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3707,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3706,3707]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnavailableForLegalReasons"},{"id":3708,"name":"UnprocessableEntity","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.3\\n\\nThe request was well-formed but was unable to be followed due to semantic errors."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":393,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L393"}],"type":{"type":"reflection","declaration":{"id":3709,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3710,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3711,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3710,3711]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnprocessableEntity"},{"id":3712,"name":"UnsupportedMediaType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.13\\n\\nThe media format of the requested data is not supported by the server, so the server is rejecting the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":400,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L400"}],"type":{"type":"reflection","declaration":{"id":3713,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3714,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3715,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3714,3715]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnsupportedMediaType"},{"id":3648,"name":"UpgradeRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.15\\n\\nThe server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":288,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L288"}],"type":{"type":"reflection","declaration":{"id":3649,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3650,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3651,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3650,3651]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UpgradeRequired"},{"id":3716,"name":"UseProxy","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.6\\n\\nWas defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L409"}],"type":{"type":"reflection","declaration":{"id":3717,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3718,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3719,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3718,3719]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UseProxy"},{"id":3737,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3738,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3739,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3740,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3741,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3742,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3743,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3742,3743]}]}}],"name":"Readonly","package":"typescript"}},{"id":3744,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3745,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3746,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/http/namespace/Status#__inspect__"},{"id":3398,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/http/namespace/Status#indexType"},{"id":3491,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/api/http/namespace/Status#maxValue"},{"id":3490,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/api/http/namespace/Status#minValue"},{"id":3724,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/http/namespace/Status#typeName"},{"id":3480,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3481,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3482,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3483,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3484,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#!="},{"id":3444,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3445,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3446,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3447,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3448,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#<"},{"id":3439,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3440,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3441,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3442,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3443,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#<="},{"id":3485,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3486,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3487,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3488,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3489,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#=="},{"id":3454,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3455,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3456,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3457,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3458,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#>"},{"id":3449,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3450,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3451,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3452,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3453,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#>="},{"id":3775,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"signatures":[{"id":3776,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"typeParameter":[{"id":3777,"name":"Code","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"parameters":[{"id":3778,"name":"statusCode","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3777,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3779,"name":"statusMessage","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":3780,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3781,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":3777,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3782,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3781,3782]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}}}],"permalink":"/std/api/http/namespace/Status#__call__"},{"id":3747,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3748,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3749,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3750,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3751,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3752,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3753,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3754,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3753,3754]}]}}],"name":"Readonly","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3755,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3756,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3757,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3756,3757]}]}}],"name":"Readonly","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#__decode__"},{"id":3758,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3759,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3760,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3761,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3762,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3763,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3764,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3763,3764]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/http/namespace/Status#__encode__"},{"id":3765,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3766,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3767,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#__schema__"},{"id":3731,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3732,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3733,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3734,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3735,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3736,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3735,3736]}]}}],"name":"Readonly","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#asInstance"},{"id":3768,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3769,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3770,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3771,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3772,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3773,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3774,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3773,3774]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/http/namespace/Status#asString"},{"id":3399,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":3400,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":3401,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3402,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3403,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3404,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3403,3404]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#at"},{"id":3469,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3470,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3471,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3472,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3473,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3474,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#clamp"},{"id":3434,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3435,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3436,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3437,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3438,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#compare"},{"id":3475,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3476,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3477,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3478,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3479,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#equals"},{"id":3725,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3726,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3727,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3728,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3729,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3730,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3729,3730]}]}}],"name":"Readonly","package":"typescript"}}}],"permalink":"/std/api/http/namespace/Status#hasInstance"},{"id":3405,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":3406,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":3407,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3408,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3409,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3410,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3409,3410]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#indexOf"},{"id":3464,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3465,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3466,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3467,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3468,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#max"},{"id":3459,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3460,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3461,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3462,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3463,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#min"},{"id":3421,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":3422,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":3423,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3424,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3425,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3426,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3425,3426]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3427,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3428,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3429,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3430,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3429,3430]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3431,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3432,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3433,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3432,3433]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#range"},{"id":3411,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":3412,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":3413,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3414,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3415,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3416,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3415,3416]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3417,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3418,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3419,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3420,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3419,3420]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/http/namespace/Status#rangeSize"}],"groups":[{"title":"Variables","children":[3492,3496,3500,3504,3508,3512,3644,3516,3520,3524,3528,3532,3536,3540,3544,3548,3552,3556,3560,3564,3568,3720,3572,3576,3580,3584,3588,3592,3596,3600,3604,3608,3612,3616,3620,3624,3628,3632,3636,3640,3652,3664,3656,3660,3668,3672,3676,3680,3684,3688,3692,3696,3700,3704,3708,3712,3648,3716,3737,3398,3491,3490,3724]},{"title":"Functions","children":[3480,3444,3439,3485,3454,3449,3775,3747,3758,3765,3731,3768,3399,3469,3434,3475,3725,3405,3464,3459,3421,3411]}],"categories":[{"title":"Bound","children":[3491,3490]},{"title":"Codec","children":[3747,3758,3765]},{"title":"Comparator","children":[3480,3444,3439,3485,3454,3449,3469,3434,3475,3464,3459]},{"title":"Indexable","children":[3398,3399,3405,3421,3411]},{"title":"String","children":[3768]},{"title":"Type","children":[3737,3724,3731,3725]},{"title":"__CATEGORY__","children":[3492,3496,3500,3504,3508,3512,3644,3516,3520,3524,3528,3532,3536,3540,3544,3548,3552,3556,3560,3564,3568,3720,3572,3576,3580,3584,3588,3592,3596,3600,3604,3608,3612,3616,3620,3624,3628,3632,3636,3640,3652,3664,3656,3660,3668,3672,3676,3680,3684,3688,3692,3696,3700,3704,3708,3712,3648,3716,3775]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"permalink":"/std/api/http/namespace/Status","previousId":3223,"nextId":3141},{"id":3244,"name":"Client","variant":"declaration","kind":256,"flags":{},"children":[{"id":3245,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":3254,"name":"fetch","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":3255,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":288,"character":13}],"signatures":[{"id":3256,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":3257,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3258,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":3259,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":288,"character":13}],"parameters":[{"id":3260,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3261,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}}},{"id":3246,"name":"onRequest","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":3247,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":3248,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":3249,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":3141,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":3250,"name":"onResponse","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":3251,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":3252,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":3253,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3141,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":3262,"name":"timeout","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]}}],"groups":[{"title":"Constructors","children":[3245]},{"title":"Properties","children":[3254,3246,3250,3262]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/api/http/interface/Client","categories":[],"previousId":3393,"nextId":3344},{"id":3344,"name":"Headers","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record type"}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Headers/Headers.ts","qualifiedName":"Headers"},"name":"Headers","package":"@w5s/http"}],"permalink":"/std/api/http/interface/Headers","categories":[],"previousId":3244,"nextId":3790},{"id":3790,"name":"Response","variant":"declaration","kind":256,"flags":{},"children":[{"id":3797,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3798,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Body","refersToTypeParameter":true}},{"id":3791,"name":"headers","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3344,"name":"Headers","package":"@w5s/http"}},{"id":3792,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3796,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3786,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3793,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3397,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3783,"name":"Status","package":"@w5s/http"}},{"id":3794,"name":"type","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3817,"name":"ResponseType","package":"@w5s/http"}},{"id":3795,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3797,3791,3792,3796,3793,3794,3795]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"typeParameters":[{"id":3798,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/http/interface/Response","categories":[],"previousId":3344,"nextId":3219},{"id":3219,"name":"ResponseParser","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A transformation function taking an "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3786,"tsLinkText":""},{"kind":"text","text":" as input"}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"typeParameters":[{"id":3220,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"signatures":[{"id":3221,"name":"ResponseParser","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L15"}],"parameters":[{"id":3222,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":3220,"name":"Value","package":"@w5s/http","qualifiedName":"ResponseParser.Value","refersToTypeParameter":true},{"type":"reference","target":3195,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/interface/ResponseParser","categories":[],"previousId":3790,"nextId":3783},{"id":3783,"name":"Status","variant":"declaration","kind":256,"flags":{},"children":[{"id":3784,"name":"statusCode","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusCode"}},{"id":3785,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusMessage"}}],"groups":[{"title":"Properties","children":[3784,3785]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}],"permalink":"/std/api/http/interface/Status","categories":[],"previousId":3219,"nextId":3263},{"id":3141,"name":"HTTPError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Union type of http client errors"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"type":{"type":"union","types":[{"type":"reference","target":3171,"name":"HTTPError.NetworkError","package":"@w5s/http"},{"type":"reference","target":3143,"name":"HTTPError.InvalidURL","package":"@w5s/http"},{"type":"reference","target":3195,"name":"HTTPError.ParserError","package":"@w5s/http"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"}]},"permalink":"/std/api/http#HTTPError","categories":[],"previousId":3397,"nextId":3240},{"id":3240,"name":"Method","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Method type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/method"}]}]},"sources":[{"fileName":"packages/http/src/Method.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Method.ts#L6"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/http#Method","categories":[],"previousId":3141,"nextId":3302},{"id":3302,"name":"ReferrerPolicy","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP referrer policy type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy"}]}]},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3290,"name":"ReferrerPolicy","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#ReferrerPolicy","categories":[],"previousId":3240,"nextId":3354},{"id":3354,"name":"RequestCache","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP cache type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/cache"}]}]},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3345,"name":"RequestCache","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestCache","categories":[],"previousId":3302,"nextId":3361},{"id":3361,"name":"RequestCredentials","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP credentials"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"}]}]},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3355,"name":"RequestCredentials","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestCredentials","categories":[],"previousId":3354,"nextId":3385},{"id":3385,"name":"RequestDestination","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP destination"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"}]}]},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3362,"name":"RequestDestination","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestDestination","categories":[],"previousId":3361,"nextId":3392},{"id":3392,"name":"RequestRedirect","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP redirect type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect"}]}]},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3386,"name":"RequestRedirect","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestRedirect","categories":[],"previousId":3385,"nextId":3817},{"id":3817,"name":"ResponseType","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Response type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3809,"name":"ResponseType","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#ResponseType","categories":[],"previousId":3392,"nextId":3290},{"id":3290,"name":"ReferrerPolicy","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3291,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3293,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":3294,"name":"NoReferrer","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L7"}],"type":{"type":"literal","value":"no-referrer"},"defaultValue":"\'no-referrer\'"},{"id":3295,"name":"NoReferrerWhenDowngrade","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L8"}],"type":{"type":"literal","value":"no-referrer-when-downgrade"},"defaultValue":"\'no-referrer-when-downgrade\'"},{"id":3297,"name":"Origin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L10"}],"type":{"type":"literal","value":"origin"},"defaultValue":"\'origin\'"},{"id":3299,"name":"OriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L12"}],"type":{"type":"literal","value":"origin-when-cross-origin"},"defaultValue":"\'origin-when-cross-origin\'"},{"id":3296,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L9"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":3298,"name":"StrictOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L11"}],"type":{"type":"literal","value":"strict-origin"},"defaultValue":"\'strict-origin\'"},{"id":3300,"name":"StrictOriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L13"}],"type":{"type":"literal","value":"strict-origin-when-cross-origin"},"defaultValue":"\'strict-origin-when-cross-origin\'"},{"id":3301,"name":"UnsafeURL","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L14"}],"type":{"type":"literal","value":"unsafe-url"},"defaultValue":"\'unsafe-url\'"},{"id":3292,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L5"}],"type":{"type":"literal","value":"ReferrerPolicy"},"defaultValue":"\'ReferrerPolicy\'"}],"groups":[{"title":"Properties","children":[3293,3294,3295,3297,3299,3296,3298,3300,3301,3292]}],"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#ReferrerPolicy","categories":[],"previousId":3817,"nextId":3345},{"id":3345,"name":"RequestCache","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3346,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3348,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L6"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3352,"name":"ForceCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L10"}],"type":{"type":"literal","value":"force-cache"},"defaultValue":"\'force-cache\'"},{"id":3351,"name":"NoCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L9"}],"type":{"type":"literal","value":"no-cache"},"defaultValue":"\'no-cache\'"},{"id":3349,"name":"NoStore","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L7"}],"type":{"type":"literal","value":"no-store"},"defaultValue":"\'no-store\'"},{"id":3353,"name":"OnlyIfCached","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L11"}],"type":{"type":"literal","value":"only-if-cached"},"defaultValue":"\'only-if-cached\'"},{"id":3350,"name":"Reload","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L8"}],"type":{"type":"literal","value":"reload"},"defaultValue":"\'reload\'"},{"id":3347,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L5"}],"type":{"type":"literal","value":"RequestCache"},"defaultValue":"\'RequestCache\'"}],"groups":[{"title":"Properties","children":[3348,3352,3351,3349,3353,3350,3347]}],"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestCache","categories":[],"previousId":3290,"nextId":3355},{"id":3355,"name":"RequestCredentials","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3356,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3358,"name":"Include","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L6"}],"type":{"type":"literal","value":"include"},"defaultValue":"\'include\'"},{"id":3359,"name":"Omit","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L7"}],"type":{"type":"literal","value":"omit"},"defaultValue":"\'omit\'"},{"id":3360,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L8"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":3357,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L5"}],"type":{"type":"literal","value":"RequestCredentials"},"defaultValue":"\'RequestCredentials\'"}],"groups":[{"title":"Properties","children":[3358,3359,3360,3357]}],"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestCredentials","categories":[],"previousId":3345,"nextId":3362},{"id":3362,"name":"RequestDestination","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3363,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3366,"name":"Audio","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L7"}],"type":{"type":"literal","value":"audio"},"defaultValue":"\'audio\'"},{"id":3367,"name":"AudioWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L8"}],"type":{"type":"literal","value":"audioworklet"},"defaultValue":"\'audioworklet\'"},{"id":3368,"name":"Document","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L9"}],"type":{"type":"literal","value":"document"},"defaultValue":"\'document\'"},{"id":3369,"name":"Embed","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L10"}],"type":{"type":"literal","value":"embed"},"defaultValue":"\'embed\'"},{"id":3365,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":3370,"name":"Font","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L11"}],"type":{"type":"literal","value":"font"},"defaultValue":"\'font\'"},{"id":3371,"name":"Frame","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L12"}],"type":{"type":"literal","value":"frame"},"defaultValue":"\'frame\'"},{"id":3372,"name":"Iframe","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L13"}],"type":{"type":"literal","value":"iframe"},"defaultValue":"\'iframe\'"},{"id":3373,"name":"Image","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L14"}],"type":{"type":"literal","value":"image"},"defaultValue":"\'image\'"},{"id":3374,"name":"Manifest","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L15"}],"type":{"type":"literal","value":"manifest"},"defaultValue":"\'manifest\'"},{"id":3375,"name":"Object","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L16"}],"type":{"type":"literal","value":"object"},"defaultValue":"\'object\'"},{"id":3376,"name":"PaintWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L17"}],"type":{"type":"literal","value":"paintworklet"},"defaultValue":"\'paintworklet\'"},{"id":3377,"name":"Report","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L18"}],"type":{"type":"literal","value":"report"},"defaultValue":"\'report\'"},{"id":3378,"name":"Script","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L19"}],"type":{"type":"literal","value":"script"},"defaultValue":"\'script\'"},{"id":3379,"name":"SharedWorker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L20"}],"type":{"type":"literal","value":"sharedworker"},"defaultValue":"\'sharedworker\'"},{"id":3380,"name":"Style","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L21"}],"type":{"type":"literal","value":"style"},"defaultValue":"\'style\'"},{"id":3381,"name":"Track","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L22"}],"type":{"type":"literal","value":"track"},"defaultValue":"\'track\'"},{"id":3382,"name":"Video","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L23"}],"type":{"type":"literal","value":"video"},"defaultValue":"\'video\'"},{"id":3383,"name":"Worker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L24"}],"type":{"type":"literal","value":"worker"},"defaultValue":"\'worker\'"},{"id":3384,"name":"XSLT","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L25"}],"type":{"type":"literal","value":"xslt"},"defaultValue":"\'xslt\'"},{"id":3364,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L5"}],"type":{"type":"literal","value":"RequestDestination"},"defaultValue":"\'RequestDestination\'"}],"groups":[{"title":"Properties","children":[3366,3367,3368,3369,3365,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3364]}],"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestDestination","categories":[],"previousId":3355,"nextId":3386},{"id":3386,"name":"RequestRedirect","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3387,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3390,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L7"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3389,"name":"Follow","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L6"}],"type":{"type":"literal","value":"follow"},"defaultValue":"\'follow\'"},{"id":3391,"name":"Manual","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L8"}],"type":{"type":"literal","value":"manual"},"defaultValue":"\'manual\'"},{"id":3388,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L5"}],"type":{"type":"literal","value":"RequestRedirect"},"defaultValue":"\'RequestRedirect\'"}],"groups":[{"title":"Properties","children":[3390,3389,3391,3388]}],"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestRedirect","categories":[],"previousId":3362,"nextId":3809},{"id":3809,"name":"ResponseType","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3810,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3811,"name":"Basic","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L5"}],"type":{"type":"literal","value":"basic"},"defaultValue":"\'basic\'"},{"id":3812,"name":"CORS","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L6"}],"type":{"type":"literal","value":"cors"},"defaultValue":"\'cors\'"},{"id":3813,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L7"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3814,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L8"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3815,"name":"Opaque","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L9"}],"type":{"type":"literal","value":"opaque"},"defaultValue":"\'opaque\'"},{"id":3816,"name":"OpaqueRedirect","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L10"}],"type":{"type":"literal","value":"opaqueredirect"},"defaultValue":"\'opaqueredirect\'"}],"groups":[{"title":"Properties","children":[3811,3812,3813,3814,3815,3816]}],"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#ResponseType","categories":[],"previousId":3386},{"id":3241,"name":"Client","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"signatures":[{"id":3242,"name":"Client","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"}],"parameters":[{"id":3243,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3271,"name":"Options","package":"@w5s/http","qualifiedName":"Client.Options"},"defaultValue":"{}"}],"type":{"type":"reference","target":3244,"name":"Client","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Client","categories":[],"nextId":3303},{"id":3303,"name":"Headers","variant":"declaration","kind":64,"flags":{},"children":[{"id":3310,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3311,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"signatures":[{"id":3312,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":3313,"name":"values","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3344,"name":"Headers","package":"@w5s/http"}}]}},"defaultValue":"..."},{"id":3321,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3322,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3323,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3324,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}},{"id":3325,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3326,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3327,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":3306,"name":"empty","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L29"}],"type":{"type":"reflection","declaration":{"id":3307,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"signatures":[{"id":3308,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an empty "},{"kind":"inline-tag","tag":"@link","text":"Headers","target":3344,"tsLinkText":""},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst response = Response({\\n  headers: Headers.empty(),\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3309,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":1,"character":29,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L1"}]}}],"name":"Readonly","package":"typescript"}}]}}},{"id":3314,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/Headers.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/Headers.ts#L7"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'Headers\'"},{"id":3328,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3329,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3330,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3331,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3332,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":3333,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3334,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3335,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3336,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":3337,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3338,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3339,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}]},{"id":3318,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3319,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3320,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":3340,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3341,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3342,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3343,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":3315,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3316,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3317,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}}]}],"groups":[{"title":"Properties","children":[3310,3321,3306,3314]},{"title":"Methods","children":[3328,3333,3337,3318,3340,3315]}],"categories":[{"title":"Codec","children":[3328,3333,3337]},{"title":"String","children":[3340]},{"title":"Type","children":[3321,3318,3315]},{"title":"__CATEGORY__","children":[3310,3306,3314]}],"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"signatures":[{"id":3304,"name":"Headers","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst headersFromIterable = Headers([\\n [\'key1\', \'value1\'],\\n [\'key2\', \'value2\']\\n]);// { key1: \'value1, key2: \'value2\' }\\nconst headersFromObject = Headers({\\n key1: \'value1\',\\n key2: \'value2\'\\n});// { key1: \'value1, key2: \'value2\' }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":3305,"name":"values","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a record or iterable to initialize"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3344,"name":"Headers","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Headers","previousId":3241,"nextId":3786},{"id":3786,"name":"Response","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"signatures":[{"id":3787,"name":"Response","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":12,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L12"}],"typeParameter":[{"id":3788,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3789,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3800,"typeArguments":[{"type":"reference","target":3788,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/http","qualifiedName":"Response.Parameters"}}],"type":{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":3788,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Response","categories":[],"previousId":3303,"nextId":3393},{"id":3393,"name":"requestSend","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"signatures":[{"id":3394,"name":"requestSend","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!Task"},{"kind":"text","text":" that will send an HTTP request"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst responseTask = requestSend({\\n  url: \'http://someurl.com\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"parameters":[{"id":3395,"name":"client","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Client"}]},"type":{"type":"reference","target":3244,"name":"Client","package":"@w5s/http"}},{"id":3396,"name":"requestObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request parameters"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":3790,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3141,"name":"HTTPError","package":"@w5s/http"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/function/requestSend","categories":[],"previousId":3786,"nextId":3244}],"groups":[{"title":"Functions","children":[3241,3303,3786,3393]},{"title":"Interfaces","children":[3244,3344,3790,3219,3783]},{"title":"Namespaces","children":[3263,3142,3799,3223,3397]},{"title":"Type Aliases","children":[3141,3240,3302,3354,3361,3385,3392,3817]},{"title":"Variables","children":[3290,3345,3355,3362,3386,3809]}],"categories":[{"title":"Constructor","children":[3303]},{"title":"__CATEGORY__","children":[3263,3142,3799,3223,3397,3244,3344,3790,3219,3783,3141,3240,3302,3354,3361,3385,3392,3817,3290,3345,3355,3362,3386,3809,3241,3786,3393]}],"sources":[{"fileName":"packages/http/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/http/src/index.ts#L1"}],"permalink":"/std/api/http"},"urlSlug":"http"}],"packageName":"@w5s/http","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":10,"name":"@w5s/money","variant":"declaration","kind":2,"flags":{},"children":[{"id":3818,"name":"Currency","variant":"declaration","kind":4,"flags":{},"children":[{"id":3900,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3901,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3902,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3903,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3904,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3905,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3906,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Currency#__inspect__"},{"id":3920,"name":"defaultPrecision","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L50"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Currency#defaultPrecision"},{"id":3919,"name":"defaultRounding","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L49"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Currency#defaultRounding"},{"id":3893,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"Currency"},"permalink":"/std/api/money/namespace/Currency#typeName"},{"id":3868,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3869,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3870,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3871,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3872,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#!="},{"id":3832,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3833,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3834,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3835,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3836,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#<"},{"id":3827,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3828,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3829,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3830,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3831,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#<="},{"id":3873,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3874,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3875,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3876,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3877,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#=="},{"id":3842,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3843,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3844,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3845,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3846,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#>"},{"id":3837,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3838,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3839,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3840,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3841,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#>="},{"id":3878,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L52"}],"signatures":[{"id":3879,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":52,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L52"}],"parameters":[{"id":3880,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":3881,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3884,"name":"code","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":55,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L55"}],"type":{"type":"intrinsic","name":"string"}},{"id":3882,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":53,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L53"}],"type":{"type":"intrinsic","name":"string"}},{"id":3883,"name":"namePlural","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L54"}],"type":{"type":"intrinsic","name":"string"}},{"id":3885,"name":"precision","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":56,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L56"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3886,"name":"rounding","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":57,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L57"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3887,"name":"symbol","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":58,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L58"}],"type":{"type":"intrinsic","name":"string"}},{"id":3888,"name":"symbolNative","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":59,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L59"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3884,3882,3883,3885,3886,3887,3888]}],"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":52,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L52"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#__call__"},{"id":3907,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3908,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3909,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3910,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3911,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#__decode__"},{"id":3912,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3913,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3914,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3915,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/money/namespace/Currency#__encode__"},{"id":3916,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3917,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3918,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#__schema__"},{"id":3897,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3898,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3899,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#asInstance"},{"id":3819,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L13"}],"signatures":[{"id":3820,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a formatted representation of money"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCurrency.asString(EUR(\'1.10\'));// \'1.10EUR\';\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Currency.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L13"}],"parameters":[{"id":3821,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Currency#asString"},{"id":3857,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3858,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3859,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3860,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3861,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3862,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#clamp"},{"id":3822,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3823,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3824,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3825,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3826,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#compare"},{"id":3889,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":3890,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":3891,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3892,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#create"},{"id":3863,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3864,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3865,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3866,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3867,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#equals"},{"id":3894,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3895,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3896,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}}],"permalink":"/std/api/money/namespace/Currency#hasInstance"},{"id":3852,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3853,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3854,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3855,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3856,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#max"},{"id":3847,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3848,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3849,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3850,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3851,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#min"}],"groups":[{"title":"Variables","children":[3900,3920,3919,3893]},{"title":"Functions","children":[3868,3832,3827,3873,3842,3837,3878,3907,3912,3916,3897,3819,3857,3822,3889,3863,3894,3852,3847]}],"categories":[{"title":"Codec","children":[3907,3912,3916]},{"title":"Comparator","children":[3868,3832,3827,3873,3842,3837,3857,3822,3863,3852,3847]},{"title":"Constructor","children":[3889]},{"title":"Type","children":[3900,3893,3897,3894]},{"title":"__CATEGORY__","children":[3920,3919,3878,3819]}],"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"permalink":"/std/api/money/namespace/Currency","previousId":4408,"nextId":3922},{"id":3922,"name":"Money","variant":"declaration","kind":4,"flags":{},"children":[{"id":4043,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4044,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4045,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4046,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4047,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4048,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4049,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Money#__inspect__"},{"id":4036,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"Money"},"permalink":"/std/api/money/namespace/Money#typeName"},{"id":4010,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4011,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4012,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4013,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4014,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#!="},{"id":3957,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"signatures":[{"id":3958,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiply operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'*\'](EUR(2), BigDecimal(\'2\'));// EUR(\\"4\\")\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"parameters":[{"id":3959,"name":"money","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"money object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3960,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"multiplication factor"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#*"},{"id":3947,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"signatures":[{"id":3948,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'+\'](EUR(1), EUR(2));// Result.Ok(EUR(1))\\nMoney[\'+\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"parameters":[{"id":3949,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3950,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3951,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#+"},{"id":3952,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"signatures":[{"id":3953,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtract operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'-\'](EUR(2), EUR(1));// Result.Ok(EUR(1))\\nMoney[\'-\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"parameters":[{"id":3954,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3955,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3956,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#-"},{"id":3974,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3975,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3976,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3977,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3978,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#<"},{"id":3969,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3970,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3971,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3972,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3973,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#<="},{"id":4015,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4016,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4017,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4018,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4019,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#=="},{"id":3984,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3985,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3986,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3987,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3988,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#>"},{"id":3979,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3980,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3981,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3982,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3983,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#>="},{"id":4050,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":4051,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":4052,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#__call__"},{"id":4020,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4021,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4022,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4023,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4024,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#__decode__"},{"id":4025,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4026,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4027,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4028,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/money/namespace/Money#__encode__"},{"id":4029,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4030,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4031,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#__schema__"},{"id":4040,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4041,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4042,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#asInstance"},{"id":3923,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L25"}],"signatures":[{"id":3924,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a formatted representation of money"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.asString(EUR(\'1.10\'));// \'1.10EUR\';\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L25"}],"parameters":[{"id":3925,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Money#asString"},{"id":3999,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4000,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4001,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4002,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4003,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4004,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#clamp"},{"id":3964,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3965,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3966,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3967,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3968,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#compare"},{"id":4032,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":4033,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":4034,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4035,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#create"},{"id":4005,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4006,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4007,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4008,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4009,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#equals"},{"id":3926,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"signatures":[{"id":3927,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a formatted representation of money"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.format(EUR(\'1.10\'));// \'1.10EUR\';\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"parameters":[{"id":3928,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Money#format"},{"id":4037,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4038,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4039,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}}],"permalink":"/std/api/money/namespace/Money#hasInstance"},{"id":3943,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"signatures":[{"id":3944,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"parameters":[{"id":3945,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3946,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isNegative"},{"id":3939,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"signatures":[{"id":3940,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"parameters":[{"id":3941,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3942,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isPositive"},{"id":3935,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"signatures":[{"id":3936,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.isZero(EUR(\'0\')); // true\\nMoney.isZero(EUR(\'1\')); // false\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"parameters":[{"id":3937,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3938,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isZero"},{"id":3994,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3995,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3996,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3997,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3998,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#max"},{"id":3989,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3990,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3991,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3992,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3993,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#min"},{"id":3961,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":3962,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":3963,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#negate"},{"id":3929,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"signatures":[{"id":3930,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Normalizes a "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object to its simplest form.\\nThis means that the decimal part is reduced to its lowest terms."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nnormalize(USD(\'1.020\'));// USD(\'1.02\')\\nnormalize(USD(\'1.02\'));// USD(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"parameters":[{"id":3931,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#normalize"},{"id":3932,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"signatures":[{"id":3933,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns a "},{"kind":"inline-tag","tag":"@link","text":"Money","target":3922,"tsLinkText":""},{"kind":"text","text":"\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.parse(\'1.1EUR\');// Option.Some(EUR(\'1.1\'))\\nMoney.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"parameters":[{"id":3934,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#parse"}],"groups":[{"title":"Variables","children":[4043,4036]},{"title":"Functions","children":[4010,3957,3947,3952,3974,3969,4015,3984,3979,4050,4020,4025,4029,4040,3923,3999,3964,4032,4005,3926,4037,3943,3939,3935,3994,3989,3961,3929,3932]}],"categories":[{"title":"Codec","children":[4020,4025,4029]},{"title":"Comparator","children":[4010,3974,3969,4015,3984,3979,3999,3964,4005,3994,3989]},{"title":"Constructor","children":[4032]},{"title":"Numeric","children":[3957,3947,3952,3943,3939,3935,3961]},{"title":"Type","children":[4043,4036,4040,4037]},{"title":"__CATEGORY__","children":[4050,3923,3926,3929,3932]}],"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"permalink":"/std/api/money/namespace/Money","previousId":3818,"nextId":3921},{"id":3921,"name":"Currency","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"CurrencyType","package":"@w5s/money","qualifiedName":"Currency"},"permalink":"/std/api/money#Currency","categories":[],"previousId":3922,"nextId":4053},{"id":4053,"name":"Money","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"MoneyType","package":"@w5s/money","qualifiedName":"Money"},"permalink":"/std/api/money#Money","categories":[],"previousId":3921},{"id":4063,"name":"AED","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"signatures":[{"id":4064,"name":"AED","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"United Arab Emirates Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AED(\'1.25\');// Money({ currency: Currency({ code: \'AED\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"parameters":[{"id":4065,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AED","categories":[],"nextId":4066},{"id":4066,"name":"AFN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"signatures":[{"id":4067,"name":"AFN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Afghan Afghani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AFN(\'1.25\');// Money({ currency: Currency({ code: \'AFN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"parameters":[{"id":4068,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AFN","categories":[],"previousId":4063,"nextId":4069},{"id":4069,"name":"ALL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"signatures":[{"id":4070,"name":"ALL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Albanian Lek money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ALL(\'1.25\');// Money({ currency: Currency({ code: \'ALL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"parameters":[{"id":4071,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ALL","categories":[],"previousId":4066,"nextId":4072},{"id":4072,"name":"AMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"signatures":[{"id":4073,"name":"AMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Armenian Dram money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AMD(\'1.25\');// Money({ currency: Currency({ code: \'AMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"parameters":[{"id":4074,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AMD","categories":[],"previousId":4069,"nextId":4075},{"id":4075,"name":"ARS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"signatures":[{"id":4076,"name":"ARS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Argentine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ARS(\'1.25\');// Money({ currency: Currency({ code: \'ARS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"parameters":[{"id":4077,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ARS","categories":[],"previousId":4072,"nextId":4078},{"id":4078,"name":"AUD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"signatures":[{"id":4079,"name":"AUD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Australian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AUD(\'1.25\');// Money({ currency: Currency({ code: \'AUD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"parameters":[{"id":4080,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AUD","categories":[],"previousId":4075,"nextId":4081},{"id":4081,"name":"AZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"signatures":[{"id":4082,"name":"AZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Azerbaijani Manat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AZN(\'1.25\');// Money({ currency: Currency({ code: \'AZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"parameters":[{"id":4083,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AZN","categories":[],"previousId":4078,"nextId":4084},{"id":4084,"name":"BAM","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"signatures":[{"id":4085,"name":"BAM","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bosnia-Herzegovina Convertible Mark money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BAM(\'1.25\');// Money({ currency: Currency({ code: \'BAM\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"parameters":[{"id":4086,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BAM","categories":[],"previousId":4081,"nextId":4087},{"id":4087,"name":"BDT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"signatures":[{"id":4088,"name":"BDT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bangladeshi Taka money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BDT(\'1.25\');// Money({ currency: Currency({ code: \'BDT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"parameters":[{"id":4089,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BDT","categories":[],"previousId":4084,"nextId":4090},{"id":4090,"name":"BGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"signatures":[{"id":4091,"name":"BGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bulgarian Lev money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BGN(\'1.25\');// Money({ currency: Currency({ code: \'BGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"parameters":[{"id":4092,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BGN","categories":[],"previousId":4087,"nextId":4093},{"id":4093,"name":"BHD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"signatures":[{"id":4094,"name":"BHD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bahraini Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BHD(\'1.25\');// Money({ currency: Currency({ code: \'BHD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"parameters":[{"id":4095,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BHD","categories":[],"previousId":4090,"nextId":4096},{"id":4096,"name":"BIF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"signatures":[{"id":4097,"name":"BIF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Burundian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BIF(\'1.25\');// Money({ currency: Currency({ code: \'BIF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"parameters":[{"id":4098,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BIF","categories":[],"previousId":4093,"nextId":4099},{"id":4099,"name":"BND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"signatures":[{"id":4100,"name":"BND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brunei Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BND(\'1.25\');// Money({ currency: Currency({ code: \'BND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"parameters":[{"id":4101,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BND","categories":[],"previousId":4096,"nextId":4102},{"id":4102,"name":"BOB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"signatures":[{"id":4103,"name":"BOB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bolivian Boliviano money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BOB(\'1.25\');// Money({ currency: Currency({ code: \'BOB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"parameters":[{"id":4104,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BOB","categories":[],"previousId":4099,"nextId":4105},{"id":4105,"name":"BRL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"signatures":[{"id":4106,"name":"BRL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brazilian Real money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BRL(\'1.25\');// Money({ currency: Currency({ code: \'BRL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"parameters":[{"id":4107,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BRL","categories":[],"previousId":4102,"nextId":4108},{"id":4108,"name":"BWP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"signatures":[{"id":4109,"name":"BWP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Botswanan Pula money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BWP(\'1.25\');// Money({ currency: Currency({ code: \'BWP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"parameters":[{"id":4110,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BWP","categories":[],"previousId":4105,"nextId":4111},{"id":4111,"name":"BYN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"signatures":[{"id":4112,"name":"BYN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belarusian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BYN(\'1.25\');// Money({ currency: Currency({ code: \'BYN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"parameters":[{"id":4113,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BYN","categories":[],"previousId":4108,"nextId":4114},{"id":4114,"name":"BZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"signatures":[{"id":4115,"name":"BZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belize Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BZD(\'1.25\');// Money({ currency: Currency({ code: \'BZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"parameters":[{"id":4116,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BZD","categories":[],"previousId":4111,"nextId":4057},{"id":4057,"name":"CAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"signatures":[{"id":4058,"name":"CAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canadian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CAD(\'1.25\');// Money({ currency: Currency({ code: \'CAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"parameters":[{"id":4059,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CAD","categories":[],"previousId":4114,"nextId":4117},{"id":4117,"name":"CDF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"signatures":[{"id":4118,"name":"CDF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Congolese Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CDF(\'1.25\');// Money({ currency: Currency({ code: \'CDF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"parameters":[{"id":4119,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CDF","categories":[],"previousId":4057,"nextId":4120},{"id":4120,"name":"CHF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"signatures":[{"id":4121,"name":"CHF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swiss Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CHF(\'1.25\');// Money({ currency: Currency({ code: \'CHF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"parameters":[{"id":4122,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CHF","categories":[],"previousId":4117,"nextId":4123},{"id":4123,"name":"CLP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"signatures":[{"id":4124,"name":"CLP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chilean Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CLP(\'1.25\');// Money({ currency: Currency({ code: \'CLP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"parameters":[{"id":4125,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CLP","categories":[],"previousId":4120,"nextId":4126},{"id":4126,"name":"CNY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"signatures":[{"id":4127,"name":"CNY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chinese Yuan money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CNY(\'1.25\');// Money({ currency: Currency({ code: \'CNY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"parameters":[{"id":4128,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CNY","categories":[],"previousId":4123,"nextId":4129},{"id":4129,"name":"COP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"signatures":[{"id":4130,"name":"COP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Colombian Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = COP(\'1.25\');// Money({ currency: Currency({ code: \'COP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"parameters":[{"id":4131,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/COP","categories":[],"previousId":4126,"nextId":4132},{"id":4132,"name":"CRC","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"signatures":[{"id":4133,"name":"CRC","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Costa Rican Col\xf3n money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CRC(\'1.25\');// Money({ currency: Currency({ code: \'CRC\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"parameters":[{"id":4134,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CRC","categories":[],"previousId":4129,"nextId":4135},{"id":4135,"name":"CVE","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"signatures":[{"id":4136,"name":"CVE","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cape Verdean Escudo money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CVE(\'1.25\');// Money({ currency: Currency({ code: \'CVE\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"parameters":[{"id":4137,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CVE","categories":[],"previousId":4132,"nextId":4138},{"id":4138,"name":"CZK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"signatures":[{"id":4139,"name":"CZK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Czech Republic Koruna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CZK(\'1.25\');// Money({ currency: Currency({ code: \'CZK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"parameters":[{"id":4140,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CZK","categories":[],"previousId":4135,"nextId":4141},{"id":4141,"name":"DJF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"signatures":[{"id":4142,"name":"DJF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Djiboutian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DJF(\'1.25\');// Money({ currency: Currency({ code: \'DJF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"parameters":[{"id":4143,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DJF","categories":[],"previousId":4138,"nextId":4144},{"id":4144,"name":"DKK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"signatures":[{"id":4145,"name":"DKK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Danish Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DKK(\'1.25\');// Money({ currency: Currency({ code: \'DKK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"parameters":[{"id":4146,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DKK","categories":[],"previousId":4141,"nextId":4147},{"id":4147,"name":"DOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"signatures":[{"id":4148,"name":"DOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Dominican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DOP(\'1.25\');// Money({ currency: Currency({ code: \'DOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"parameters":[{"id":4149,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DOP","categories":[],"previousId":4144,"nextId":4150},{"id":4150,"name":"DZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"signatures":[{"id":4151,"name":"DZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Algerian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DZD(\'1.25\');// Money({ currency: Currency({ code: \'DZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"parameters":[{"id":4152,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DZD","categories":[],"previousId":4147,"nextId":4153},{"id":4153,"name":"EEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"signatures":[{"id":4154,"name":"EEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Estonian Kroon money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EEK(\'1.25\');// Money({ currency: Currency({ code: \'EEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"parameters":[{"id":4155,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EEK","categories":[],"previousId":4150,"nextId":4156},{"id":4156,"name":"EGP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"signatures":[{"id":4157,"name":"EGP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Egyptian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EGP(\'1.25\');// Money({ currency: Currency({ code: \'EGP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"parameters":[{"id":4158,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EGP","categories":[],"previousId":4153,"nextId":4159},{"id":4159,"name":"ERN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"signatures":[{"id":4160,"name":"ERN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Eritrean Nakfa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ERN(\'1.25\');// Money({ currency: Currency({ code: \'ERN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"parameters":[{"id":4161,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ERN","categories":[],"previousId":4156,"nextId":4162},{"id":4162,"name":"ETB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"signatures":[{"id":4163,"name":"ETB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ethiopian Birr money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ETB(\'1.25\');// Money({ currency: Currency({ code: \'ETB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"parameters":[{"id":4164,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ETB","categories":[],"previousId":4159,"nextId":4060},{"id":4060,"name":"EUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"signatures":[{"id":4061,"name":"EUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Euro money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EUR(\'1.25\');// Money({ currency: Currency({ code: \'EUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"parameters":[{"id":4062,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EUR","categories":[],"previousId":4162,"nextId":4165},{"id":4165,"name":"GBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"signatures":[{"id":4166,"name":"GBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"British Pound Sterling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GBP(\'1.25\');// Money({ currency: Currency({ code: \'GBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"parameters":[{"id":4167,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GBP","categories":[],"previousId":4060,"nextId":4168},{"id":4168,"name":"GEL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"signatures":[{"id":4169,"name":"GEL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Georgian Lari money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GEL(\'1.25\');// Money({ currency: Currency({ code: \'GEL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"parameters":[{"id":4170,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GEL","categories":[],"previousId":4165,"nextId":4171},{"id":4171,"name":"GHS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"signatures":[{"id":4172,"name":"GHS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ghanaian Cedi money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GHS(\'1.25\');// Money({ currency: Currency({ code: \'GHS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"parameters":[{"id":4173,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GHS","categories":[],"previousId":4168,"nextId":4174},{"id":4174,"name":"GNF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"signatures":[{"id":4175,"name":"GNF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guinean Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GNF(\'1.25\');// Money({ currency: Currency({ code: \'GNF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"parameters":[{"id":4176,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GNF","categories":[],"previousId":4171,"nextId":4177},{"id":4177,"name":"GTQ","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"signatures":[{"id":4178,"name":"GTQ","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guatemalan Quetzal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GTQ(\'1.25\');// Money({ currency: Currency({ code: \'GTQ\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"parameters":[{"id":4179,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GTQ","categories":[],"previousId":4174,"nextId":4180},{"id":4180,"name":"HKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"signatures":[{"id":4181,"name":"HKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hong Kong Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HKD(\'1.25\');// Money({ currency: Currency({ code: \'HKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"parameters":[{"id":4182,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HKD","categories":[],"previousId":4177,"nextId":4183},{"id":4183,"name":"HNL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"signatures":[{"id":4184,"name":"HNL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Honduran Lempira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HNL(\'1.25\');// Money({ currency: Currency({ code: \'HNL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"parameters":[{"id":4185,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HNL","categories":[],"previousId":4180,"nextId":4186},{"id":4186,"name":"HRK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"signatures":[{"id":4187,"name":"HRK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Croatian Kuna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HRK(\'1.25\');// Money({ currency: Currency({ code: \'HRK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"parameters":[{"id":4188,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HRK","categories":[],"previousId":4183,"nextId":4189},{"id":4189,"name":"HUF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"signatures":[{"id":4190,"name":"HUF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hungarian Forint money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HUF(\'1.25\');// Money({ currency: Currency({ code: \'HUF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"parameters":[{"id":4191,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HUF","categories":[],"previousId":4186,"nextId":4192},{"id":4192,"name":"IDR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"signatures":[{"id":4193,"name":"IDR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indonesian Rupiah money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IDR(\'1.25\');// Money({ currency: Currency({ code: \'IDR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"parameters":[{"id":4194,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IDR","categories":[],"previousId":4189,"nextId":4195},{"id":4195,"name":"ILS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"signatures":[{"id":4196,"name":"ILS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Israeli New Sheqel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ILS(\'1.25\');// Money({ currency: Currency({ code: \'ILS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"parameters":[{"id":4197,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ILS","categories":[],"previousId":4192,"nextId":4198},{"id":4198,"name":"INR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"signatures":[{"id":4199,"name":"INR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = INR(\'1.25\');// Money({ currency: Currency({ code: \'INR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"parameters":[{"id":4200,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/INR","categories":[],"previousId":4195,"nextId":4201},{"id":4201,"name":"IQD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"signatures":[{"id":4202,"name":"IQD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iraqi Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IQD(\'1.25\');// Money({ currency: Currency({ code: \'IQD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"parameters":[{"id":4203,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IQD","categories":[],"previousId":4198,"nextId":4204},{"id":4204,"name":"IRR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"signatures":[{"id":4205,"name":"IRR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iranian Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IRR(\'1.25\');// Money({ currency: Currency({ code: \'IRR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"parameters":[{"id":4206,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IRR","categories":[],"previousId":4201,"nextId":4207},{"id":4207,"name":"ISK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"signatures":[{"id":4208,"name":"ISK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Icelandic Kr\xf3na money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ISK(\'1.25\');// Money({ currency: Currency({ code: \'ISK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"parameters":[{"id":4209,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ISK","categories":[],"previousId":4204,"nextId":4210},{"id":4210,"name":"JMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"signatures":[{"id":4211,"name":"JMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jamaican Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JMD(\'1.25\');// Money({ currency: Currency({ code: \'JMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"parameters":[{"id":4212,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JMD","categories":[],"previousId":4207,"nextId":4213},{"id":4213,"name":"JOD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"signatures":[{"id":4214,"name":"JOD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jordanian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JOD(\'1.25\');// Money({ currency: Currency({ code: \'JOD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"parameters":[{"id":4215,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JOD","categories":[],"previousId":4210,"nextId":4216},{"id":4216,"name":"JPY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"signatures":[{"id":4217,"name":"JPY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Japanese Yen money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JPY(\'1.25\');// Money({ currency: Currency({ code: \'JPY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"parameters":[{"id":4218,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JPY","categories":[],"previousId":4213,"nextId":4219},{"id":4219,"name":"KES","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"signatures":[{"id":4220,"name":"KES","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kenyan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KES(\'1.25\');// Money({ currency: Currency({ code: \'KES\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"parameters":[{"id":4221,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KES","categories":[],"previousId":4216,"nextId":4222},{"id":4222,"name":"KHR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"signatures":[{"id":4223,"name":"KHR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cambodian Riel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KHR(\'1.25\');// Money({ currency: Currency({ code: \'KHR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"parameters":[{"id":4224,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KHR","categories":[],"previousId":4219,"nextId":4225},{"id":4225,"name":"KMF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"signatures":[{"id":4226,"name":"KMF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Comorian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KMF(\'1.25\');// Money({ currency: Currency({ code: \'KMF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"parameters":[{"id":4227,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KMF","categories":[],"previousId":4222,"nextId":4228},{"id":4228,"name":"KRW","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"signatures":[{"id":4229,"name":"KRW","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South Korean Won money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KRW(\'1.25\');// Money({ currency: Currency({ code: \'KRW\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"parameters":[{"id":4230,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KRW","categories":[],"previousId":4225,"nextId":4231},{"id":4231,"name":"KWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"signatures":[{"id":4232,"name":"KWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kuwaiti Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KWD(\'1.25\');// Money({ currency: Currency({ code: \'KWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"parameters":[{"id":4233,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KWD","categories":[],"previousId":4228,"nextId":4234},{"id":4234,"name":"KZT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"signatures":[{"id":4235,"name":"KZT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kazakhstani Tenge money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KZT(\'1.25\');// Money({ currency: Currency({ code: \'KZT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"parameters":[{"id":4236,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KZT","categories":[],"previousId":4231,"nextId":4237},{"id":4237,"name":"LBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"signatures":[{"id":4238,"name":"LBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lebanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LBP(\'1.25\');// Money({ currency: Currency({ code: \'LBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"parameters":[{"id":4239,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LBP","categories":[],"previousId":4234,"nextId":4240},{"id":4240,"name":"LKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"signatures":[{"id":4241,"name":"LKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sri Lankan Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LKR(\'1.25\');// Money({ currency: Currency({ code: \'LKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"parameters":[{"id":4242,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LKR","categories":[],"previousId":4237,"nextId":4243},{"id":4243,"name":"LTL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"signatures":[{"id":4244,"name":"LTL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lithuanian Litas money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LTL(\'1.25\');// Money({ currency: Currency({ code: \'LTL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"parameters":[{"id":4245,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LTL","categories":[],"previousId":4240,"nextId":4246},{"id":4246,"name":"LVL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"signatures":[{"id":4247,"name":"LVL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Latvian Lats money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LVL(\'1.25\');// Money({ currency: Currency({ code: \'LVL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"parameters":[{"id":4248,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LVL","categories":[],"previousId":4243,"nextId":4249},{"id":4249,"name":"LYD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"signatures":[{"id":4250,"name":"LYD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Libyan Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LYD(\'1.25\');// Money({ currency: Currency({ code: \'LYD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"parameters":[{"id":4251,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LYD","categories":[],"previousId":4246,"nextId":4252},{"id":4252,"name":"MAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"signatures":[{"id":4253,"name":"MAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moroccan Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MAD(\'1.25\');// Money({ currency: Currency({ code: \'MAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"parameters":[{"id":4254,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MAD","categories":[],"previousId":4249,"nextId":4255},{"id":4255,"name":"MDL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"signatures":[{"id":4256,"name":"MDL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moldovan Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MDL(\'1.25\');// Money({ currency: Currency({ code: \'MDL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"parameters":[{"id":4257,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MDL","categories":[],"previousId":4252,"nextId":4258},{"id":4258,"name":"MGA","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"signatures":[{"id":4259,"name":"MGA","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malagasy Ariary money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MGA(\'1.25\');// Money({ currency: Currency({ code: \'MGA\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"parameters":[{"id":4260,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MGA","categories":[],"previousId":4255,"nextId":4261},{"id":4261,"name":"MKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"signatures":[{"id":4262,"name":"MKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macedonian Denar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MKD(\'1.25\');// Money({ currency: Currency({ code: \'MKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"parameters":[{"id":4263,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MKD","categories":[],"previousId":4258,"nextId":4264},{"id":4264,"name":"MMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"signatures":[{"id":4265,"name":"MMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Myanma Kyat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MMK(\'1.25\');// Money({ currency: Currency({ code: \'MMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"parameters":[{"id":4266,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MMK","categories":[],"previousId":4261,"nextId":4267},{"id":4267,"name":"MOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"signatures":[{"id":4268,"name":"MOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macanese Pataca money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MOP(\'1.25\');// Money({ currency: Currency({ code: \'MOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"parameters":[{"id":4269,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MOP","categories":[],"previousId":4264,"nextId":4270},{"id":4270,"name":"MUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"signatures":[{"id":4271,"name":"MUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mauritian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MUR(\'1.25\');// Money({ currency: Currency({ code: \'MUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"parameters":[{"id":4272,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MUR","categories":[],"previousId":4267,"nextId":4273},{"id":4273,"name":"MXN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"signatures":[{"id":4274,"name":"MXN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mexican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MXN(\'1.25\');// Money({ currency: Currency({ code: \'MXN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"parameters":[{"id":4275,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MXN","categories":[],"previousId":4270,"nextId":4276},{"id":4276,"name":"MYR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"signatures":[{"id":4277,"name":"MYR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malaysian Ringgit money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MYR(\'1.25\');// Money({ currency: Currency({ code: \'MYR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"parameters":[{"id":4278,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MYR","categories":[],"previousId":4273,"nextId":4279},{"id":4279,"name":"MZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"signatures":[{"id":4280,"name":"MZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mozambican Metical money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MZN(\'1.25\');// Money({ currency: Currency({ code: \'MZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"parameters":[{"id":4281,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MZN","categories":[],"previousId":4276,"nextId":4282},{"id":4282,"name":"NAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"signatures":[{"id":4283,"name":"NAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Namibian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NAD(\'1.25\');// Money({ currency: Currency({ code: \'NAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"parameters":[{"id":4284,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NAD","categories":[],"previousId":4279,"nextId":4285},{"id":4285,"name":"NGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"signatures":[{"id":4286,"name":"NGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nigerian Naira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NGN(\'1.25\');// Money({ currency: Currency({ code: \'NGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"parameters":[{"id":4287,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NGN","categories":[],"previousId":4282,"nextId":4288},{"id":4288,"name":"NIO","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"signatures":[{"id":4289,"name":"NIO","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nicaraguan C\xf3rdoba money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NIO(\'1.25\');// Money({ currency: Currency({ code: \'NIO\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"parameters":[{"id":4290,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NIO","categories":[],"previousId":4285,"nextId":4291},{"id":4291,"name":"NOK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"signatures":[{"id":4292,"name":"NOK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Norwegian Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NOK(\'1.25\');// Money({ currency: Currency({ code: \'NOK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"parameters":[{"id":4293,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NOK","categories":[],"previousId":4288,"nextId":4294},{"id":4294,"name":"NPR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"signatures":[{"id":4295,"name":"NPR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nepalese Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NPR(\'1.25\');// Money({ currency: Currency({ code: \'NPR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"parameters":[{"id":4296,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NPR","categories":[],"previousId":4291,"nextId":4297},{"id":4297,"name":"NZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"signatures":[{"id":4298,"name":"NZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Zealand Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NZD(\'1.25\');// Money({ currency: Currency({ code: \'NZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"parameters":[{"id":4299,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NZD","categories":[],"previousId":4294,"nextId":4300},{"id":4300,"name":"OMR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"signatures":[{"id":4301,"name":"OMR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Omani Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = OMR(\'1.25\');// Money({ currency: Currency({ code: \'OMR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"parameters":[{"id":4302,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/OMR","categories":[],"previousId":4297,"nextId":4303},{"id":4303,"name":"PAB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"signatures":[{"id":4304,"name":"PAB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Panamanian Balboa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PAB(\'1.25\');// Money({ currency: Currency({ code: \'PAB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"parameters":[{"id":4305,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PAB","categories":[],"previousId":4300,"nextId":4306},{"id":4306,"name":"PEN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"signatures":[{"id":4307,"name":"PEN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Peruvian Nuevo Sol money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PEN(\'1.25\');// Money({ currency: Currency({ code: \'PEN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"parameters":[{"id":4308,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PEN","categories":[],"previousId":4303,"nextId":4309},{"id":4309,"name":"PHP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"signatures":[{"id":4310,"name":"PHP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Philippine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PHP(\'1.25\');// Money({ currency: Currency({ code: \'PHP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"parameters":[{"id":4311,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PHP","categories":[],"previousId":4306,"nextId":4312},{"id":4312,"name":"PKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"signatures":[{"id":4313,"name":"PKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pakistani Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PKR(\'1.25\');// Money({ currency: Currency({ code: \'PKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"parameters":[{"id":4314,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PKR","categories":[],"previousId":4309,"nextId":4315},{"id":4315,"name":"PLN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"signatures":[{"id":4316,"name":"PLN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Polish Zloty money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PLN(\'1.25\');// Money({ currency: Currency({ code: \'PLN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"parameters":[{"id":4317,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PLN","categories":[],"previousId":4312,"nextId":4318},{"id":4318,"name":"PYG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"signatures":[{"id":4319,"name":"PYG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Paraguayan Guarani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PYG(\'1.25\');// Money({ currency: Currency({ code: \'PYG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"parameters":[{"id":4320,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PYG","categories":[],"previousId":4315,"nextId":4321},{"id":4321,"name":"QAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"signatures":[{"id":4322,"name":"QAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Qatari Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = QAR(\'1.25\');// Money({ currency: Currency({ code: \'QAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"parameters":[{"id":4323,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/QAR","categories":[],"previousId":4318,"nextId":4324},{"id":4324,"name":"RON","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"signatures":[{"id":4325,"name":"RON","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Romanian Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RON(\'1.25\');// Money({ currency: Currency({ code: \'RON\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"parameters":[{"id":4326,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RON","categories":[],"previousId":4321,"nextId":4327},{"id":4327,"name":"RSD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"signatures":[{"id":4328,"name":"RSD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Serbian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RSD(\'1.25\');// Money({ currency: Currency({ code: \'RSD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"parameters":[{"id":4329,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RSD","categories":[],"previousId":4324,"nextId":4330},{"id":4330,"name":"RUB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"signatures":[{"id":4331,"name":"RUB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Russian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RUB(\'1.25\');// Money({ currency: Currency({ code: \'RUB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"parameters":[{"id":4332,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RUB","categories":[],"previousId":4327,"nextId":4333},{"id":4333,"name":"RWF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"signatures":[{"id":4334,"name":"RWF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Rwandan Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RWF(\'1.25\');// Money({ currency: Currency({ code: \'RWF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"parameters":[{"id":4335,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RWF","categories":[],"previousId":4330,"nextId":4336},{"id":4336,"name":"SAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"signatures":[{"id":4337,"name":"SAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Saudi Riyal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SAR(\'1.25\');// Money({ currency: Currency({ code: \'SAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"parameters":[{"id":4338,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SAR","categories":[],"previousId":4333,"nextId":4339},{"id":4339,"name":"SDG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"signatures":[{"id":4340,"name":"SDG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sudanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SDG(\'1.25\');// Money({ currency: Currency({ code: \'SDG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"parameters":[{"id":4341,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SDG","categories":[],"previousId":4336,"nextId":4342},{"id":4342,"name":"SEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"signatures":[{"id":4343,"name":"SEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swedish Krona money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SEK(\'1.25\');// Money({ currency: Currency({ code: \'SEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"parameters":[{"id":4344,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SEK","categories":[],"previousId":4339,"nextId":4345},{"id":4345,"name":"SGD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"signatures":[{"id":4346,"name":"SGD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Singapore Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SGD(\'1.25\');// Money({ currency: Currency({ code: \'SGD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"parameters":[{"id":4347,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SGD","categories":[],"previousId":4342,"nextId":4348},{"id":4348,"name":"SOS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"signatures":[{"id":4349,"name":"SOS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Somali Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SOS(\'1.25\');// Money({ currency: Currency({ code: \'SOS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"parameters":[{"id":4350,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SOS","categories":[],"previousId":4345,"nextId":4351},{"id":4351,"name":"SYP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"signatures":[{"id":4352,"name":"SYP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Syrian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SYP(\'1.25\');// Money({ currency: Currency({ code: \'SYP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"parameters":[{"id":4353,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SYP","categories":[],"previousId":4348,"nextId":4354},{"id":4354,"name":"THB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"signatures":[{"id":4355,"name":"THB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Thai Baht money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = THB(\'1.25\');// Money({ currency: Currency({ code: \'THB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"parameters":[{"id":4356,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/THB","categories":[],"previousId":4351,"nextId":4357},{"id":4357,"name":"TND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"signatures":[{"id":4358,"name":"TND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tunisian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TND(\'1.25\');// Money({ currency: Currency({ code: \'TND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"parameters":[{"id":4359,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TND","categories":[],"previousId":4354,"nextId":4360},{"id":4360,"name":"TOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"signatures":[{"id":4361,"name":"TOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tongan Pa\u02bbanga money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TOP(\'1.25\');// Money({ currency: Currency({ code: \'TOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"parameters":[{"id":4362,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TOP","categories":[],"previousId":4357,"nextId":4363},{"id":4363,"name":"TRY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"signatures":[{"id":4364,"name":"TRY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Turkish Lira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TRY(\'1.25\');// Money({ currency: Currency({ code: \'TRY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"parameters":[{"id":4365,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TRY","categories":[],"previousId":4360,"nextId":4366},{"id":4366,"name":"TTD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"signatures":[{"id":4367,"name":"TTD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Trinidad and Tobago Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TTD(\'1.25\');// Money({ currency: Currency({ code: \'TTD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"parameters":[{"id":4368,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TTD","categories":[],"previousId":4363,"nextId":4369},{"id":4369,"name":"TWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"signatures":[{"id":4370,"name":"TWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Taiwan Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TWD(\'1.25\');// Money({ currency: Currency({ code: \'TWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"parameters":[{"id":4371,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TWD","categories":[],"previousId":4366,"nextId":4372},{"id":4372,"name":"TZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"signatures":[{"id":4373,"name":"TZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tanzanian Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TZS(\'1.25\');// Money({ currency: Currency({ code: \'TZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"parameters":[{"id":4374,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TZS","categories":[],"previousId":4369,"nextId":4375},{"id":4375,"name":"UAH","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"signatures":[{"id":4376,"name":"UAH","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ukrainian Hryvnia money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UAH(\'1.25\');// Money({ currency: Currency({ code: \'UAH\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"parameters":[{"id":4377,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UAH","categories":[],"previousId":4372,"nextId":4378},{"id":4378,"name":"UGX","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"signatures":[{"id":4379,"name":"UGX","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ugandan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UGX(\'1.25\');// Money({ currency: Currency({ code: \'UGX\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"parameters":[{"id":4380,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UGX","categories":[],"previousId":4375,"nextId":4054},{"id":4054,"name":"USD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"signatures":[{"id":4055,"name":"USD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"US Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = USD(\'1.25\');// Money({ currency: Currency({ code: \'USD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"parameters":[{"id":4056,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/USD","categories":[],"previousId":4378,"nextId":4381},{"id":4381,"name":"UYU","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"signatures":[{"id":4382,"name":"UYU","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uruguayan Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UYU(\'1.25\');// Money({ currency: Currency({ code: \'UYU\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"parameters":[{"id":4383,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UYU","categories":[],"previousId":4054,"nextId":4384},{"id":4384,"name":"UZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"signatures":[{"id":4385,"name":"UZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uzbekistan Som money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UZS(\'1.25\');// Money({ currency: Currency({ code: \'UZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"parameters":[{"id":4386,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UZS","categories":[],"previousId":4381,"nextId":4387},{"id":4387,"name":"VEF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"signatures":[{"id":4388,"name":"VEF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Venezuelan Bol\xedvar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VEF(\'1.25\');// Money({ currency: Currency({ code: \'VEF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"parameters":[{"id":4389,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/VEF","categories":[],"previousId":4384,"nextId":4390},{"id":4390,"name":"VND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"signatures":[{"id":4391,"name":"VND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Vietnamese Dong money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VND(\'1.25\');// Money({ currency: Currency({ code: \'VND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"parameters":[{"id":4392,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/VND","categories":[],"previousId":4387,"nextId":4393},{"id":4393,"name":"XAF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"signatures":[{"id":4394,"name":"XAF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BEAC money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XAF(\'1.25\');// Money({ currency: Currency({ code: \'XAF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"parameters":[{"id":4395,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/XAF","categories":[],"previousId":4390,"nextId":4396},{"id":4396,"name":"XOF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"signatures":[{"id":4397,"name":"XOF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BCEAO money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XOF(\'1.25\');// Money({ currency: Currency({ code: \'XOF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"parameters":[{"id":4398,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/XOF","categories":[],"previousId":4393,"nextId":4399},{"id":4399,"name":"YER","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"signatures":[{"id":4400,"name":"YER","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Yemeni Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = YER(\'1.25\');// Money({ currency: Currency({ code: \'YER\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"parameters":[{"id":4401,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/YER","categories":[],"previousId":4396,"nextId":4402},{"id":4402,"name":"ZAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"signatures":[{"id":4403,"name":"ZAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South African Rand money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZAR(\'1.25\');// Money({ currency: Currency({ code: \'ZAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"parameters":[{"id":4404,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZAR","categories":[],"previousId":4399,"nextId":4405},{"id":4405,"name":"ZMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"signatures":[{"id":4406,"name":"ZMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zambian Kwacha money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZMK(\'1.25\');// Money({ currency: Currency({ code: \'ZMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"parameters":[{"id":4407,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZMK","categories":[],"previousId":4402,"nextId":4408},{"id":4408,"name":"ZWL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"signatures":[{"id":4409,"name":"ZWL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zimbabwean Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZWL(\'1.25\');// Money({ currency: Currency({ code: \'ZWL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"parameters":[{"id":4410,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZWL","categories":[],"previousId":4405,"nextId":3818}],"groups":[{"title":"Functions","children":[4063,4066,4069,4072,4075,4078,4081,4084,4087,4090,4093,4096,4099,4102,4105,4108,4111,4114,4057,4117,4120,4123,4126,4129,4132,4135,4138,4141,4144,4147,4150,4153,4156,4159,4162,4060,4165,4168,4171,4174,4177,4180,4183,4186,4189,4192,4195,4198,4201,4204,4207,4210,4213,4216,4219,4222,4225,4228,4231,4234,4237,4240,4243,4246,4249,4252,4255,4258,4261,4264,4267,4270,4273,4276,4279,4282,4285,4288,4291,4294,4297,4300,4303,4306,4309,4312,4315,4318,4321,4324,4327,4330,4333,4336,4339,4342,4345,4348,4351,4354,4357,4360,4363,4366,4369,4372,4375,4378,4054,4381,4384,4387,4390,4393,4396,4399,4402,4405,4408]},{"title":"Namespaces","children":[3818,3922]},{"title":"Type Aliases","children":[3921,4053]}],"sources":[{"fileName":"packages/money/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/money/src/index.ts#L1"}],"permalink":"/std/api/money"},"urlSlug":"money"}],"packageName":"@w5s/money","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":11,"name":"@w5s/random","variant":"declaration","kind":2,"flags":{},"children":[{"id":4411,"name":"RandomConfiguration","variant":"declaration","kind":256,"flags":{},"children":[{"id":4412,"name":"randomNumberGenerator","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":9,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L9"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/random/src/RandomConfiguration.ts","qualifiedName":"RandomNumberFunction"},"name":"RandomNumberFunction","package":"@w5s/random"}}],"groups":[{"title":"Properties","children":[4412]}],"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L8"}],"permalink":"/std/api/random/interface/RandomConfiguration","categories":[],"previousId":4428,"nextId":4413},{"id":4413,"name":"RandomGenerator","variant":"declaration","kind":256,"flags":{},"children":[{"id":4417,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":66,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskFunction"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.[run]"}},{"id":4414,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"signatures":[{"id":4415,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"parameters":[{"id":4416,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskCanceler"},"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"groups":[{"title":"Properties","children":[4417]},{"title":"Methods","children":[4414]}],"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L5"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}],"permalink":"/std/api/random/interface/RandomGenerator","categories":[],"previousId":4411,"nextId":4418},{"id":4418,"name":"randomGenerator","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L7"}],"type":{"type":"reference","target":4413,"name":"RandomGenerator","package":"@w5s/random"},"defaultValue":"...","permalink":"/std/api/random#randomGenerator","categories":[],"previousId":4413},{"id":4419,"name":"randomBoolean","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"signatures":[{"id":4420,"name":"randomBoolean","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate booleans."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomBoolean(0.7);\\nTask.run(next);// Result.Ok(true|false);\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"parameters":[{"id":4421,"name":"trueWeight","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the probability to obtain true"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0.5"},{"id":4422,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4413,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomBoolean","categories":[],"nextId":4423},{"id":4423,"name":"randomInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"signatures":[{"id":4424,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate integers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomInt(-10, 10);\\nTask.run(next);// Result.Ok(N); where N is an integer between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"parameters":[{"id":4425,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":4426,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":4427,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4413,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomInt","categories":[],"previousId":4419,"nextId":4428},{"id":4428,"name":"randomNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"signatures":[{"id":4429,"name":"randomNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate floating numbers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomNumber(-10, 10);\\nTask.run(next);// Result.Ok(F); where F is a floating number between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"parameters":[{"id":4430,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4431,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4432,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4413,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomNumber","categories":[],"previousId":4423,"nextId":4411}],"groups":[{"title":"Functions","children":[4419,4423,4428]},{"title":"Interfaces","children":[4411,4413]},{"title":"Variables","children":[4418]}],"sources":[{"fileName":"packages/random/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/random/src/index.ts#L1"}],"permalink":"/std/api/random"},"urlSlug":"random"}],"packageName":"@w5s/random","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":12,"name":"@w5s/task","variant":"declaration","kind":2,"flags":{},"children":[{"id":4487,"name":"Task","variant":"declaration","kind":4,"flags":{},"children":[{"id":4653,"name":"ErrorOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts error type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":122,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L122"}],"typeParameters":[{"id":4654,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":4654,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":4644,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"inferred","name":"Error"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Error"},"name":"Error","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/task/namespace/Task#ErrorOf"},{"id":4651,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts value type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":118,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L118"}],"typeParameters":[{"id":4652,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":4652,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":4644,"typeArguments":[{"type":"inferred","name":"V"},{"type":"intrinsic","name":"any"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"V"},"name":"V","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/task/namespace/Task#ValueOf"},{"id":4488,"name":"all","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"signatures":[{"id":4489,"name":"all","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the array of all task values, or reject with the first error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.all([\\n  Task.resolve(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok([1, 2])\\n\\nconst failure = Task.all([\\n  Task.resolve(1),\\n  Task.reject(\'error\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(\'error\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4490,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":4483,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}}],"parameters":[{"id":4491,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4490,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4490,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":4651,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/all.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4490,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"}},{"type":"reference","target":4653,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4490,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4490,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Task","package":"@w5s/task"}},{"id":4492,"name":"all","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4493,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4494,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4495,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4493,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4494,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":4493,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},{"type":"reference","target":4494,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#all"},{"id":4496,"name":"allSettled","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"signatures":[{"id":4497,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves an array of all task results"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.allSettled([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst taskResults = Task.run(task);// [Result.Error(1), Result.Ok(2)]\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4498,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4483,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4499,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4498,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4498,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4651,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4498,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":4653,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4498,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Result","package":"@w5s/core"}},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}},{"id":4500,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4501,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4502,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4503,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4501,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4502,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4501,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4502,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#allSettled"},{"id":4504,"name":"andRun","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"signatures":[{"id":4505,"name":"andRun","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Similar to "},{"kind":"inline-tag","tag":"@link","text":"andThen","target":4514,"tsLinkText":""},{"kind":"text","text":" but the task keep "},{"kind":"code","text":"`task`"},{"kind":"text","text":" resolved value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andRun(success, (value) => Console.log(\'result=\', value));// console.log(\'result=foo\'); then resolves \'foo\'\\nTask.andRun(success, (value) => Task.reject(`SomeError`));// Task.reject(\'SomeError\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andRun(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"typeParameter":[{"id":4506,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4507,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4508,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4509,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4506,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4507,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4510,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4511,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"signatures":[{"id":4512,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"parameters":[{"id":4513,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4506,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4483,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":4508,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4506,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4507,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4508,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#andRun"},{"id":4514,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"signatures":[{"id":4515,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is successful, otherwise returns the failed task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andThen(success, (value) => Task.resolve(`${value}_then`));// Task.resolve(\'foo_then\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andThen(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"typeParameter":[{"id":4516,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4517,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4518,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4519,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4520,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4516,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4517,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4521,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4522,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"signatures":[{"id":4523,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"parameters":[{"id":4524,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4516,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4518,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4519,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4518,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4517,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4519,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#andThen"},{"id":4525,"name":"any","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"signatures":[{"id":4526,"name":"any","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the first value, or reject with an aggregated error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.any([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok(2)\\n\\nconst failure = Task.any([\\n  Task.reject(\'error1\'),\\n  Task.reject(\'error2\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(AggregateError({ errors: [\'error1\', \'error2\']}))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4527,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4483,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4528,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4527,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4651,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4527,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4527,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4527,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":4653,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/any.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4527,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}},{"id":4529,"name":"any","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4530,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4531,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4532,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4530,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4531,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4530,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4531,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#any"},{"id":4533,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"signatures":[{"id":4534,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Task constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getTime = Task(() => Task.ok(Date.now()));\\nconst fetchTask = (url: string) => Task(() => fetch(url).then(Task.ok, Task.error));\\nconst delay = (ms: number) => Task(() => new Promise(resolve => { setTimeout(() => resolve(Task.ok()); }), ms));\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"typeParameter":[{"id":4535,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4536,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4537,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the effect function"}]},"type":{"type":"reflection","declaration":{"id":4538,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"signatures":[{"id":4539,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"parameters":[{"id":4540,"name":"resolver","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":4541,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":4542,"name":"canceler","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canceler"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L25"}],"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4543,"name":"run","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task runner that can be used to run subtasks"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"type":{"type":"reflection","declaration":{"id":4544,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"signatures":[{"id":4545,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"typeParameter":[{"id":4546,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4547,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4548,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4546,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4547,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4546,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4547,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4542,4543]}],"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}]}}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4535,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4536,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4535,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4536,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#create"},{"id":4549,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"signatures":[{"id":4550,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":4551,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"typeParameter":[{"id":4552,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4553,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":4552,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":4552,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/task/namespace/Task#error"},{"id":4554,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"signatures":[{"id":4555,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a Task from a "},{"kind":"code","text":"`Symbol.run`"},{"kind":"text","text":" function or a TaskLike"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.from(({ resolve }) => resolve(\'hello\'));// from a callback\\nconst task = Task.from({ [Symbol.run]: ({ resolve }) => resolve(\'hello\') });// from a TaskLike\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"typeParameter":[{"id":4556,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4557,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4558,"name":"taskLike","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4556,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4557,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"reference","target":4477,"typeArguments":[{"type":"reference","target":4556,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4557,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":4556,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4557,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#from"},{"id":4559,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"signatures":[{"id":4560,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if anyValue is a valid "},{"kind":"code","text":"`Task`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.hasInstance(Task.resolve(...)); // true\\nTask.hasInstance({}); // false\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"parameters":[{"id":4561,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":4483,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"TaskLike","package":"@w5s/task"}}}],"permalink":"/std/api/task/namespace/Task#hasInstance"},{"id":4562,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"signatures":[{"id":4563,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ignores value of task"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.ignore(task);// Task.resolve()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"typeParameter":[{"id":4564,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4565,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the Task object"}]},"type":{"type":"reference","target":4644,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":4564,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":4564,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#ignore"},{"id":4566,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"signatures":[{"id":4567,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<NewValue, Error>`"},{"kind":"text","text":" by applying a function to a success value, leaving a failure untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.map(task, (value) => `${value}_bar`));// Task.resolve(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"typeParameter":[{"id":4568,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4569,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4570,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4571,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4568,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4569,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4572,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":4573,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"signatures":[{"id":4574,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"parameters":[{"id":4575,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4568,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4570,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4570,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4569,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#map"},{"id":4576,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"signatures":[{"id":4577,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained failure error, leaving a success value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nTask.mapError(task, (value) => `${value}_bar`));// Task.reject(\'error_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"typeParameter":[{"id":4578,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4579,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4580,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4581,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4578,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4579,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4582,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":4583,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"signatures":[{"id":4584,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"parameters":[{"id":4585,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4579,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4580,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4578,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4580,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#mapError"},{"id":4586,"name":"mapResult","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"signatures":[{"id":4587,"name":"mapResult","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<ValueFrom, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<ValueTo, ErrorTo>`"},{"kind":"text","text":" by applying a function to the result of the task."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nconst handledTask = Task.mapResult(task, (result) =>\\n   Result.isOk(result) ? result : Result.Ok(\'handled_value\') )\\n); // Task.resolve(\'handled_value\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"typeParameter":[{"id":4588,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4589,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4590,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4591,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4592,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4588,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4589,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4593,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A result mapper function"}]},"type":{"type":"reflection","declaration":{"id":4594,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"signatures":[{"id":4595,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"parameters":[{"id":4596,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4588,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4589,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4590,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4591,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4590,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4591,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#mapResult"},{"id":4597,"name":"ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"signatures":[{"id":4598,"name":"ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":4599,"name":"ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"typeParameter":[{"id":4600,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4601,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4600,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4600,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/task/namespace/Task#ok"},{"id":4602,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"signatures":[{"id":4603,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is failed, otherwise returns the successful task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.orElse(success, (value) => Task.resolve(`never_used`));// Task.resolve(\'foo\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.orElse(failure, (error) => Task.reject(`${value}_caught`));// Task.reject(\'PreviousError_caught\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"typeParameter":[{"id":4604,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4605,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4606,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4607,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4608,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4604,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4605,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4609,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":4610,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"signatures":[{"id":4611,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"parameters":[{"id":4612,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4605,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4606,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4607,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4604,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4606,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}]},{"type":"reference","target":4607,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#orElse"},{"id":4613,"name":"reject","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"signatures":[{"id":4614,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`error`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task(({ error }) => error(errorValue))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(1);\\nconst result = Task.run(task);// Result.Error(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":4615,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4615,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"void"}],"name":"Task","package":"@w5s/task"}},{"id":4616,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":4617,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}},{"id":4618,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4619,"name":"errorValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error value"}]},"type":{"type":"reference","target":4618,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4617,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4618,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#reject"},{"id":4620,"name":"resolve","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"signatures":[{"id":4621,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a successful "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`value`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task.from(({ resolve }) => resolve(value))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(1);\\nconst result = Task.run(task);// Result.Ok(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":4622,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":4622,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}},{"id":4623,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":4624,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4625,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4626,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the success value"}]},"type":{"type":"reference","target":4624,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4624,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4625,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#resolve"},{"id":4638,"name":"run","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"signatures":[{"id":4639,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Run "},{"kind":"code","text":"`task`"},{"kind":"text","text":" and return the result or a promise of the result\\n\\n**\u26a0 Impure function that may throw an error, it should be used on the edge of the program.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getMessage = Task.resolve(\'Hello World!\');\\nconst messageResult = Task.run(getMessage);// Result.Ok(\'Hello World!\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"typeParameter":[{"id":4640,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4641,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4642,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the task to be run"}]},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4640,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4641,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4643,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"},"defaultValue":"..."}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4640,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4641,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/api/task/namespace/Task#run"},{"id":4627,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"signatures":[{"id":4628,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`sideEffect()`"},{"kind":"text","text":".\\nWhen an exception is thrown then it rejects "},{"kind":"code","text":"`onError([thrown error])`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class ResponseError extends Error {}\\nconst fetch = Task.tryCall(\\n () => fetch(\'my/url\'), // Task will resolve Ok(fetch(\'my/url\'))\\n (error) => new ResponseError(), // Task will reject Error(new ResponseError())\\n);// Task<Response, ResponseError>\\n\\nconst randomNumber = Task.tryCall(async () => Math.random());// Task<number, never>\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"typeParameter":[{"id":4629,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4630,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4631,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":4632,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"signatures":[{"id":4633,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":4629,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4634,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":4635,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"signatures":[{"id":4636,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"parameters":[{"id":4637,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":4630,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4629,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4630,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#tryCall"}],"groups":[{"title":"Type Aliases","children":[4653,4651]},{"title":"Functions","children":[4488,4496,4504,4514,4525,4533,4549,4554,4559,4562,4566,4576,4586,4597,4602,4613,4620,4638,4627]}],"categories":[{"title":"Constructor","children":[4533,4549,4597,4613,4620]},{"title":"Type","children":[4559]},{"title":"__CATEGORY__","children":[4653,4651,4488,4496,4504,4514,4525,4554,4562,4566,4576,4586,4602,4638,4627]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"permalink":"/std/api/task/namespace/Task","previousId":4446,"nextId":4477},{"id":4644,"name":"Task","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An implementation of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!TaskLike"}]},"children":[{"id":4648,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4477,"typeArguments":[{"type":"reference","target":4649,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4650,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":4484,"name":"TaskLike.[run]"}},{"id":4645,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"signatures":[{"id":4646,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"parameters":[{"id":4647,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4649,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4650,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}],"groups":[{"title":"Properties","children":[4648]},{"title":"Methods","children":[4645]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"typeParameters":[{"id":4649,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4650,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4649,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4650,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"permalink":"/std/api/task/interface/Task","categories":[],"nextId":4433},{"id":4433,"name":"TaskCanceler","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Interface used to cancel running task"}]},"children":[{"id":4436,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/dist/Ref.d.ts","line":5,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4437,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4438,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ref.current"}}],"groups":[{"title":"Properties","children":[4436]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4434,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4435,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"}],"name":"Ref","package":"@w5s/core"}],"permalink":"/std/api/task/interface/TaskCanceler","categories":[],"previousId":4644,"nextId":4483},{"id":4483,"name":"TaskLike","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Task interface that represents a lazy computation that will be evaluated later.\\nThe result of the computation is a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"},{"kind":"text","text":"\\nA task is also cancelable and can run other subtasks"}]},"children":[{"id":4484,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4477,"typeArguments":[{"type":"reference","target":4485,"name":"Value","package":"@w5s/task","qualifiedName":"TaskLike.Value","refersToTypeParameter":true},{"type":"reference","target":4486,"name":"Error","package":"@w5s/task","qualifiedName":"TaskLike.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}}],"groups":[{"title":"Properties","children":[4484]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":70,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L70"}],"typeParameters":[{"id":4485,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4486,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":4644,"name":"Task"}],"permalink":"/std/api/task/interface/TaskLike","categories":[],"previousId":4433,"nextId":4458},{"id":4458,"name":"TaskParameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"All context passed to task in order to execute"}]},"children":[{"id":4467,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4468,"name":"execute","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The execute function to run task or subtask injecting parameters"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"type":{"type":"reflection","declaration":{"id":4469,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"signatures":[{"id":4470,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"typeParameter":[{"id":4471,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4472,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4473,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4471,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4472,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4474,"name":"overrides","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4446,"typeArguments":[{"type":"reference","target":4471,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4472,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParametersOverrides","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4463,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4464,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4465,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4466,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4476,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParameters.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4459,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4460,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4461,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4462,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4475,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParameters.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4467,4468,4463,4459]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L44"}],"typeParameters":[{"id":4475,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4476,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/task/interface/TaskParameters","categories":[],"previousId":4483,"nextId":4446},{"id":4446,"name":"TaskParametersOverrides","variant":"declaration","kind":256,"flags":{},"children":[{"id":4455,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.canceler"}},{"id":4451,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4452,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4453,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4454,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4457,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.reject"}},{"id":4447,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4448,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4449,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4450,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4456,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.resolve"}}],"groups":[{"title":"Properties","children":[4455,4451,4447]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":38,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L38"}],"typeParameters":[{"id":4456,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4457,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":4458,"typeArguments":[{"type":"reference","target":4456,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true},{"type":"reference","target":4457,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"},{"type":"union","types":[{"type":"literal","value":"resolve"},{"type":"literal","value":"reject"},{"type":"literal","value":"canceler"}]}],"name":"Pick","package":"typescript"},{"type":"literal","value":"canceler"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/task/interface/TaskParametersOverrides","categories":[],"previousId":4458,"nextId":4487},{"id":4477,"name":"TaskFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"typeParameters":[{"id":4481,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4482,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":4478,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"signatures":[{"id":4479,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":4480,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4458,"typeArguments":[{"type":"reference","target":4481,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4482,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/api/task#TaskFunction","categories":[],"previousId":4487,"nextId":4439},{"id":4439,"name":"TaskRunner","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that runs the task and returns a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"type":{"type":"reflection","declaration":{"id":4440,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"signatures":[{"id":4441,"name":"__type","variant":"signature","kind":4096,"flags":{},"typeParameter":[{"id":4444,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4445,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4442,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4483,"typeArguments":[{"type":"reference","target":4444,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4445,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4443,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4433,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":51,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4444,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4445,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/api/task#TaskRunner","categories":[],"previousId":4477}],"groups":[{"title":"Interfaces","children":[4644,4433,4483,4458,4446]},{"title":"Namespaces","children":[4487]},{"title":"Type Aliases","children":[4477,4439]}],"sources":[{"fileName":"packages/task/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task/src/index.ts#L1"}],"permalink":"/std/api/task"},"urlSlug":"task"}],"packageName":"@w5s/task","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":13,"name":"@w5s/task-timeout","variant":"declaration","kind":2,"flags":{},"children":[{"id":4655,"name":"timeout","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":23,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L23"}],"signatures":[{"id":4656,"name":"timeout","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a task that will reject a "},{"kind":"inline-tag","tag":"@link","text":"TimeoutError","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"code","text":"`task`"},{"kind":"text","text":" is not resolved or rejected within "},{"kind":"code","text":"`delay`"},{"kind":"text","text":"\\nIf timeout is omitted, the task is returned unchanged"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst longTask = Task.delay(TimeDuration.hours(1));\\nconst timeoutTask = timeout(longTask, TimeDuration.milliseconds(4));\\nTask.run(timeoutTask); // Result.Error(TimeoutError({ message: \'Task timed out after 4ms\', delay: 4 }))\\n// Note that `longTask` will be canceled and will never resolve nor reject\\n```"}]}]},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":23,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L23"}],"typeParameter":[{"id":4657,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4658,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4659,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"task to cancel after delay"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":4657,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"reference","target":4658,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4660,"name":"delay","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":4657,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"},{"type":"reference","target":4658,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task-timeout/function/timeout","categories":[]}],"groups":[{"title":"Functions","children":[4655]}],"sources":[{"fileName":"packages/task-timeout/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/index.ts#L1"}],"permalink":"/std/api/task-timeout"},"urlSlug":"task-timeout"}],"packageName":"@w5s/task-timeout","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":14,"name":"@w5s/time","variant":"declaration","kind":2,"flags":{},"children":[{"id":4661,"name":"Time","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time (i.e timestamp)"}]},"children":[{"id":4754,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":3724,"permalink":"/std/api/time/namespace/Time#typeName"},{"id":4761,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4762,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4763,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4764,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4765,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4766,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4767,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/time/namespace/Time#__inspect__"},{"id":4691,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/api/time/namespace/Time#maxValue"},{"id":4690,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/api/time/namespace/Time#minValue"},{"id":4738,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4739,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4740,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4741,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4742,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#!="},{"id":4702,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4703,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4704,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4705,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4706,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#<"},{"id":4697,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4698,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4699,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4700,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4701,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#<="},{"id":4743,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4744,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4745,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4746,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4747,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#=="},{"id":4712,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4713,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4714,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4715,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4716,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#>"},{"id":4707,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4708,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4709,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4710,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4711,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#>="},{"id":4687,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L66"}],"signatures":[{"id":4688,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L66"}],"parameters":[{"id":4689,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4788,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#__call__"},{"id":4768,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4769,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4770,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4771,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4772,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#__decode__"},{"id":4773,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4774,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4775,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4776,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/time/namespace/Time#__encode__"},{"id":4777,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4778,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4779,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#__schema__"},{"id":4679,"name":"add","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L47"}],"signatures":[{"id":4680,"name":"add","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Adds "},{"kind":"code","text":"`duration`"},{"kind":"text","text":" to "},{"kind":"code","text":"`time`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst now = Time.of(0);\\nconst duration = TimeDuration.of(10);\\nTime.add(now, duration);// now + 10ms\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L47"}],"parameters":[{"id":4681,"name":"time","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4682,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A duration value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#add"},{"id":4758,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4759,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4760,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#asInstance"},{"id":4780,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4781,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4782,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4783,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/Time#asString"},{"id":4727,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4728,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4729,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4730,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4731,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4732,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#clamp"},{"id":4692,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4693,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4694,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4695,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4696,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#compare"},{"id":4667,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"signatures":[{"id":4668,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves the current time in milliseconds after waiting "},{"kind":"code","text":"`duration`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst wait2s = Time.delay(TimeDuration.seconds(2));\\nconst logTime = Task.andThen(wait2s, (time) => Console.debug(time));\\nTask.run(logTime);// wait 2 seconds then console.debug(Date.now())\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"parameters":[{"id":4669,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds to wait"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/time/namespace/Time#delay"},{"id":4683,"name":"diff","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L63"}],"signatures":[{"id":4684,"name":"diff","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the difference between 2 time values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst begin = Time.of(0);\\nconst end = Time.of(10);\\nTime.diff(end, begin);// TimeDuration.of(10)\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L63"}],"parameters":[{"id":4685,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4686,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#diff"},{"id":4733,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4734,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4735,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4736,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4737,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#equals"},{"id":4673,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"signatures":[{"id":4674,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an ISO 8601 string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\nTime.format(time);// \'1970-01-01T00:00:00.000Z\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"parameters":[{"id":4675,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/Time#format"},{"id":4676,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"signatures":[{"id":4677,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"parameters":[{"id":4678,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4788,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#from"},{"id":4755,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4756,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4757,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}}],"permalink":"/std/api/time/namespace/Time#hasInstance"},{"id":4722,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4723,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4724,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4725,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4726,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#max"},{"id":4717,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4718,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4719,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4720,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4721,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#min"},{"id":4665,"name":"now","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L30"}],"signatures":[{"id":4666,"name":"now","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that resolves the current time in milliseconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst program = () => Task.andThen(Time.now(), (currentTime) => {\\n  // use currentTime\\n});\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L30"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/time/namespace/Time#now"},{"id":4662,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L29"}],"signatures":[{"id":4663,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Time value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L29"}],"parameters":[{"id":4664,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#of"},{"id":4670,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"signatures":[{"id":4671,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse an ISO 8601 string. If invalid, returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.parse(\'1970-01-01T00:00:00.000Z\');// 0\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"parameters":[{"id":4672,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#parse"},{"id":4751,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":4752,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":4753,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/Time#unwrap"},{"id":4748,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":4749,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":4750,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#wrap"}],"groups":[{"title":"References","children":[4754]},{"title":"Variables","children":[4761,4691,4690]},{"title":"Functions","children":[4738,4702,4697,4743,4712,4707,4687,4768,4773,4777,4679,4758,4780,4727,4692,4667,4683,4733,4673,4676,4755,4722,4717,4665,4662,4670,4751,4748]}],"categories":[{"title":"Bound","children":[4691,4690]},{"title":"Codec","children":[4768,4773,4777]},{"title":"Comparator","children":[4738,4702,4697,4743,4712,4707,4727,4692,4733,4722,4717]},{"title":"Constructor","children":[4662]},{"title":"String","children":[4780]},{"title":"Type","children":[4761,4758,4755]},{"title":"__CATEGORY__","children":[4754,4687,4679,4667,4683,4673,4676,4665,4670,4751,4748]}],"sources":[{"fileName":"packages/time/src/Time.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L18"},{"fileName":"packages/time/src/Time.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"permalink":"/std/api/time/namespace/Time","previousId":4788,"nextId":4803},{"id":4803,"name":"TimeDuration","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time duration (i.e amount of milliseconds)"}]},"children":[{"id":4947,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":3724,"permalink":"/std/api/time/namespace/TimeDuration#typeName"},{"id":4954,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4955,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4956,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4957,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4958,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4959,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4960,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/time/namespace/TimeDuration#__inspect__"},{"id":4931,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4932,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4933,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4934,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4935,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#!="},{"id":4881,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":4882,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":4883,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4884,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#*"},{"id":4873,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":4874,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":4875,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4876,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#+"},{"id":4877,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":4878,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":4879,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4880,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#-"},{"id":4895,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4896,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4897,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4898,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4899,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#<"},{"id":4890,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4891,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4892,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4893,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4894,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#<="},{"id":4936,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4937,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4938,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4939,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4940,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#=="},{"id":4905,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4906,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4907,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4908,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4909,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#>"},{"id":4900,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4901,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4902,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4903,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4904,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#>="},{"id":4851,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L54"}],"signatures":[{"id":4852,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L54"}],"parameters":[{"id":4853,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4796,"name":"TimeDurationObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#__call__"},{"id":4961,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4962,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4963,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4964,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4965,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#__decode__"},{"id":4966,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4967,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4968,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4969,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/time/namespace/TimeDuration#__encode__"},{"id":4970,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4971,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4972,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#__schema__"},{"id":4857,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":4858,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":4859,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4860,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#abs"},{"id":4951,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4952,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4953,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#asInstance"},{"id":4804,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L40"}],"signatures":[{"id":4805,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a TimeDuration object to its string representation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.asString(TimeDuration(0)); // == \\"0ms\\"\\nTimeDuration.asString(TimeDuration({ seconds: 2, milliseconds: 0 })); // == \\"2000ms\\"\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A string representation of the TimeDuration object."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L40"}],"parameters":[{"id":4806,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The TimeDuration object to convert."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/TimeDuration#asString"},{"id":4920,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4921,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4922,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4923,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4924,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4925,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#clamp"},{"id":4885,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4886,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4887,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4888,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4889,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#compare"},{"id":4845,"name":"days","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L52"}],"signatures":[{"id":4846,"name":"days","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" days"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.days(1);// 1000 * 60 * 60 * 24\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L52"}],"parameters":[{"id":4847,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#days"},{"id":4926,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4927,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4928,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4929,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4930,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#equals"},{"id":4830,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L47"}],"signatures":[{"id":4831,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L47"}],"parameters":[{"id":4832,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4796,"name":"TimeDurationObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#from"},{"id":4948,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4949,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4950,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}}],"permalink":"/std/api/time/namespace/TimeDuration#hasInstance"},{"id":4842,"name":"hours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L51"}],"signatures":[{"id":4843,"name":"hours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" hours"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.hours(1);// 1000 * 60 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L51"}],"parameters":[{"id":4844,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#hours"},{"id":4865,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"signatures":[{"id":4866,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"parameters":[{"id":4867,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4868,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#isNegative"},{"id":4861,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"signatures":[{"id":4862,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"parameters":[{"id":4863,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4864,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#isPositive"},{"id":4915,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4916,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4917,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4918,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4919,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#max"},{"id":4833,"name":"milliseconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L48"}],"signatures":[{"id":4834,"name":"milliseconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" milliseconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.milliseconds(1);// 1\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L48"}],"parameters":[{"id":4835,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#milliseconds"},{"id":4910,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4911,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4912,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4913,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4914,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#min"},{"id":4839,"name":"minutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L50"}],"signatures":[{"id":4840,"name":"minutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" minutes"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.minutes(1);// 1000 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L50"}],"parameters":[{"id":4841,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#minutes"},{"id":4854,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":4855,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":4856,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#negate"},{"id":4827,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L46"}],"signatures":[{"id":4828,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration from a number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.of(0);// typeof duration === \'number\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L46"}],"parameters":[{"id":4829,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#of"},{"id":4836,"name":"seconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L49"}],"signatures":[{"id":4837,"name":"seconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" seconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.seconds(1);// 1000\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L49"}],"parameters":[{"id":4838,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#seconds"},{"id":4869,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"signatures":[{"id":4870,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"parameters":[{"id":4871,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4872,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#sign"},{"id":4819,"name":"toDays","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"signatures":[{"id":4820,"name":"toDays","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to days."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toDays(TimeDuration.from({ days: 1 })); // == 1\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 })); // == 1.5\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in days."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"parameters":[{"id":4821,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4822,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toDays"},{"id":4815,"name":"toHours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"signatures":[{"id":4816,"name":"toHours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to hours."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toHours(TimeDuration(3600000));// == 1\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5));// == 1.5\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5, true));// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in hours."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"parameters":[{"id":4817,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4818,"name":"truncate","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toHours"},{"id":4811,"name":"toMinutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"signatures":[{"id":4812,"name":"toMinutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to minutes."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toMinutes(TimeDuration(60000)); // == 1.0\\nTimeDuration.toMinutes(TimeDuration(150000), true); // == 2.5\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in minutes."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"parameters":[{"id":4813,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4814,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toMinutes"},{"id":4807,"name":"toSeconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"signatures":[{"id":4808,"name":"toSeconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to seconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toSeconds(TimeDuration(1500));// == 1.5\\nTimeDuration.toSeconds(TimeDuration(1500), true);// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in seconds."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"parameters":[{"id":4809,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4810,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toSeconds"},{"id":4823,"name":"toWeeks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L45"}],"signatures":[{"id":4824,"name":"toWeeks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to weeks."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1 })); // == 1\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 })); // == 1.5\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in weeks."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L45"}],"parameters":[{"id":4825,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4826,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toWeeks"},{"id":4944,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":4945,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":4946,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#unwrap"},{"id":4848,"name":"weeks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L53"}],"signatures":[{"id":4849,"name":"weeks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" days"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.weeks(1);// 1000 * 60 * 60 * 24 * 7\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L53"}],"parameters":[{"id":4850,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of weeks"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#weeks"},{"id":4941,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":4942,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":4943,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#wrap"}],"groups":[{"title":"References","children":[4947]},{"title":"Variables","children":[4954]},{"title":"Functions","children":[4931,4881,4873,4877,4895,4890,4936,4905,4900,4851,4961,4966,4970,4857,4951,4804,4920,4885,4845,4926,4830,4948,4842,4865,4861,4915,4833,4910,4839,4854,4827,4836,4869,4819,4815,4811,4807,4823,4944,4848,4941]}],"categories":[{"title":"Codec","children":[4961,4966,4970]},{"title":"Comparator","children":[4931,4895,4890,4936,4905,4900,4920,4885,4926,4915,4910]},{"title":"Constructor","children":[4845,4842,4833,4839,4827,4836,4848]},{"title":"Numeric","children":[4881,4873,4877,4857,4865,4861,4854,4869]},{"title":"Type","children":[4954,4951,4948]},{"title":"__CATEGORY__","children":[4947,4851,4804,4830,4819,4815,4811,4807,4823,4944,4941]}],"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"},{"fileName":"packages/time/src/TimeDuration.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L34"}],"permalink":"/std/api/time/namespace/TimeDuration","previousId":4661,"nextId":4784},{"id":4796,"name":"TimeDurationParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":4798,"name":"days","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L13"}],"type":{"type":"intrinsic","name":"number"}},{"id":4799,"name":"hours","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L17"}],"type":{"type":"intrinsic","name":"number"}},{"id":4802,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L29"}],"type":{"type":"intrinsic","name":"number"}},{"id":4800,"name":"minutes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L21"}],"type":{"type":"intrinsic","name":"number"}},{"id":4801,"name":"seconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L25"}],"type":{"type":"intrinsic","name":"number"}},{"id":4797,"name":"weeks","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of weeks"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4798,4799,4802,4800,4801,4797]}],"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L5"}],"permalink":"/std/api/time/interface/TimeDurationParameters","categories":[],"previousId":4785,"nextId":4788},{"id":4788,"name":"TimeObject","variant":"declaration","kind":256,"flags":{},"children":[{"id":4791,"name":"day","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Day of month (1-31)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Day"},"name":"Day","package":"@w5s/core-type"}},{"id":4792,"name":"hour","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Hour of the day"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Hour"},"name":"Hour","package":"@w5s/core-type"}},{"id":4795,"name":"millisecond","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L33"}],"type":{"type":"intrinsic","name":"number"}},{"id":4793,"name":"minute","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Minute of the hour"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":4790,"name":"month","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Month number (1-12)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Month"},"name":"Month","package":"@w5s/core-type"}},{"id":4794,"name":"second","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Second of the minute"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":4789,"name":"year","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4791,4792,4795,4793,4790,4794,4789]}],"sources":[{"fileName":"packages/time/src/Time/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L5"}],"permalink":"/std/api/time/interface/TimeObject","categories":[],"previousId":4796,"nextId":4661},{"id":4784,"name":"Time","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a time typically returned by "},{"kind":"code","text":"`Date.now()`"}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L18"},{"fileName":"packages/time/src/Time.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"TimeType","package":"@w5s/time","qualifiedName":"Time"},"permalink":"/std/api/time#Time","categories":[],"previousId":4803,"nextId":4973},{"id":4973,"name":"TimeDuration","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a duration in milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"},{"fileName":"packages/time/src/TimeDuration.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L34"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDurationType","package":"@w5s/time","qualifiedName":"TimeDuration"},"permalink":"/std/api/time#TimeDuration","categories":[],"previousId":4784},{"id":4785,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":45,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L45"}],"signatures":[{"id":4786,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":45,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L45"}],"parameters":[{"id":4787,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4788,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/function/from","categories":[],"nextId":4796}],"groups":[{"title":"Functions","children":[4785]},{"title":"Interfaces","children":[4796,4788]},{"title":"Namespaces","children":[4661,4803]},{"title":"Type Aliases","children":[4784,4973]}],"sources":[{"fileName":"packages/time/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/time/src/index.ts#L1"}],"permalink":"/std/api/time"},"urlSlug":"time"}],"packageName":"@w5s/time","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":15,"name":"@w5s/uuid","variant":"declaration","kind":2,"flags":{},"children":[{"id":4977,"name":"UUID","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID namespace"}]},"children":[{"id":5005,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":3724,"permalink":"/std/api/uuid/namespace/UUID#typeName"},{"id":5012,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":5013,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":5014,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":5015,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":5016,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":5017,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":5018,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/uuid/namespace/UUID#__inspect__"},{"id":4997,"name":"id","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":20,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationId"},"name":"ApplicationId","package":"@w5s/application"},"permalink":"/std/api/uuid/namespace/UUID#id"},{"id":4989,"name":"initialConfiguration","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":33,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"},"permalink":"/std/api/uuid/namespace/UUID#initialConfiguration"},{"id":4998,"name":"state","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":24,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationState"},"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"permalink":"/std/api/uuid/namespace/UUID#state"},{"id":5035,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":5036,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":5037,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__call__"},{"id":5019,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":5020,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5021,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5022,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5023,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__decode__"},{"id":5024,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5025,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5026,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5027,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/uuid/namespace/UUID#__encode__"},{"id":5028,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5029,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__schema__"},{"id":5009,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":5010,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":5011,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#asInstance"},{"id":5031,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":5032,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":5033,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5034,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/uuid/namespace/UUID#asString"},{"id":4990,"name":"configure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"signatures":[{"id":4991,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"parameters":[{"id":4992,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/uuid/namespace/UUID#configure"},{"id":4978,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"signatures":[{"id":4979,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an "},{"kind":"code","text":"`UUID`"},{"kind":"text","text":" with only "},{"kind":"code","text":"`0`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst emptyUUID = UUID.empty();// \'00000000-0000-0000-0000-000000000000\'\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"type":{"type":"reference","target":5038,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/api/uuid/namespace/UUID#empty"},{"id":4993,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"signatures":[{"id":4994,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"typeParameter":[{"id":4995,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"literal","value":"randomUUIDGenerator"}}],"parameters":[{"id":4996,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":4995,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":4995,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}}}],"permalink":"/std/api/uuid/namespace/UUID#get"},{"id":5006,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":5007,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":5008,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}],"permalink":"/std/api/uuid/namespace/UUID#hasInstance"},{"id":4980,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"signatures":[{"id":4981,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID.of(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"parameters":[{"id":4982,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string representation"}]},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":5038,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/api/uuid/namespace/UUID#of"},{"id":4986,"name":"toBigInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"signatures":[{"id":4987,"name":"toBigInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a bigint from UUID"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\nconst bigint = UUID.toBigInt(uuid);// BigInt(\'Ox1c19548b7cac4222b722dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"parameters":[{"id":4988,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/uuid/namespace/UUID#toBigInt"},{"id":4983,"name":"toUint32Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"signatures":[{"id":4984,"name":"toUint32Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a UUID to an array of uint32 values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid: UUID;\\nconst parts = UUID.toUint32Array(uuid);\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"parameters":[{"id":4985,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the UUID to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Uint32Array"},"name":"Uint32Array","package":"typescript"}}],"permalink":"/std/api/uuid/namespace/UUID#toUint32Array"},{"id":5002,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":5003,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":5004,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"permalink":"/std/api/uuid/namespace/UUID#unwrap"},{"id":4999,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":5000,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":5001,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#wrap"}],"groups":[{"title":"References","children":[5005]},{"title":"Variables","children":[5012,4997,4989,4998]},{"title":"Functions","children":[5035,5019,5024,5028,5009,5031,4990,4978,4993,5006,4980,4986,4983,5002,4999]}],"categories":[{"title":"Codec","children":[5019,5024,5028]},{"title":"Constructor","children":[4978,4980]},{"title":"String","children":[5031]},{"title":"Type","children":[5012,5009,5006]},{"title":"__CATEGORY__","children":[5005,4997,4989,4998,5035,4990,4993,4986,4983,5002,4999]}],"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"permalink":"/std/api/uuid/namespace/UUID","previousId":4974,"nextId":5038},{"id":5038,"name":"UUID","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID string type"}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUIDType","package":"@w5s/core","qualifiedName":"UUID"},"permalink":"/std/api/uuid#UUID","categories":[],"previousId":4977,"nextId":4976},{"id":4976,"name":"UUIDString","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/dist/Type/UUID.d.ts","line":2,"character":12}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]},"permalink":"/std/api/uuid#UUIDString","categories":[],"previousId":5038},{"id":4974,"name":"randomUUID","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"signatures":[{"id":4975,"name":"randomUUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that returns a new "},{"kind":"code","text":"`UUID`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst createUser = (name: string) => Task.map(randomUUID(), (uuid) => ({\\n  id: uuid,\\n  name,\\n}));\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":5038,"name":"UUID","package":"@w5s/uuid"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/uuid/function/randomUUID","categories":[],"nextId":4977}],"groups":[{"title":"Functions","children":[4974]},{"title":"Namespaces","children":[4977]},{"title":"Type Aliases","children":[5038,4976]}],"sources":[{"fileName":"packages/uuid/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/index.ts#L1"}],"permalink":"/std/api/uuid"},"urlSlug":"uuid"}],"packageName":"@w5s/uuid","packageVersion":"1.0.0-alpha.0"}]')}}]);