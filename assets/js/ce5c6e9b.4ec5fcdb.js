"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[6809],{9147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var a=t(1085),s=t(1184);const o={sidebar_position:1},i="Enum",r={id:"manual/basics/enum",title:"Enum",description:"Motivation",source:"@site/docs/manual/0-basics/enum.md",sourceDirName:"manual/0-basics",slug:"/manual/basics/enum",permalink:"/std/docs/manual/basics/enum",draft:!1,unlisted:!1,editUrl:"https://github.com/w5s/std.git/tree/main/apps/website/docs/manual/0-basics/enum.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/std/docs/category/basics"},next:{title:"Option",permalink:"/std/docs/manual/basics/option"}},c={},u=[{value:"Motivation",id:"motivation",level:2},{value:"Declare an Enum",id:"declare-an-enum",level:2},{value:"Matching on values",id:"matching-on-values",level:2},{value:"Coding Guide",id:"coding-guide",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"enum",children:"Enum"}),"\n",(0,a.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,a.jsx)(n.p,{children:"Enums are useful for defining types that can only take on a limited set of values."}),"\n",(0,a.jsx)(n.h2,{id:"declare-an-enum",children:"Declare an Enum"}),"\n",(0,a.jsx)(n.p,{children:"An enum can be declared as the following example :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"export const MyEnumType = {\n    Foo: 'foo',\n    Bar: 'bar',\n};\nexport type MyEnumType = typeof MyEnumType[keyof typeof MyEnumType];\n"})}),"\n",(0,a.jsx)(n.h2,{id:"matching-on-values",children:"Matching on values"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { assertNever } from '@w5s/invariant';\n\nexport function getName(value: MyEnumType) {\n    switch (value) {\n        case MyEnumType.Foo:\n            return 'foo_name';\n        case MyEnumType.Bar:\n            return 'bar_name';\n        default:\n            assertNever(value);\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"coding-guide",children:"Coding Guide"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// \u2713 Export a const\n// \u2713 PascalCase\nexport const {{EnumType}} = {\n    // \u2713 PascalCase\n    {{EnumValueName}}: '{{EnumValue}}',\n    // ...\n};\n// \u2713 Export a type with the same name as the const\nexport type {{EnumType}} = typeof {{EnumType}}[keyof typeof {{EnumType}}];\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(4041);const s={},o=a.createContext(s);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);