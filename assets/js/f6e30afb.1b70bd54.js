"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[6370],{8417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"reflection":{"id":1,"name":"@w5s/application","variant":"declaration","kind":2,"flags":{},"children":[{"id":26,"name":"Application","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application instance type"}]},"children":[{"id":27,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"ApplicationRef.constructor"}},{"id":36,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":39,"name":"ApplicationId","package":"@w5s/application"},"inheritedFrom":{"type":"reference","target":42,"name":"ApplicationRef.id"}},{"id":28,"name":"initialConfiguration","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L39"}],"type":{"type":"reference","target":38,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}},{"id":37,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":40,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":43,"name":"ApplicationRef.state"}},{"id":29,"name":"configure","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"signatures":[{"id":30,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"parameters":[{"id":31,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":38,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":32,"name":"get","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"signatures":[{"id":33,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"typeParameter":[{"id":34,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":35,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":34,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":34,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":38,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}}}]}],"groups":[{"title":"Constructors","children":[27]},{"title":"Properties","children":[36,28,37]},{"title":"Methods","children":[29,32]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"typeParameters":[{"id":38,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"EmptyObject"},"name":"EmptyObject","package":"@w5s/application"}}],"extendedTypes":[{"type":"reference","target":41,"name":"ApplicationRef","package":"@w5s/application"}],"permalink":"/std/api/application/interface/Application","categories":[],"previousId":44,"nextId":41},{"id":41,"name":"ApplicationRef","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minimal Application interface"}]},"children":[{"id":42,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":39,"name":"ApplicationId","package":"@w5s/application"}},{"id":43,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":40,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"}}],"groups":[{"title":"Properties","children":[42,43]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L21"}],"extendedBy":[{"type":"reference","target":26,"name":"Application"}],"permalink":"/std/api/application/interface/ApplicationRef","categories":[],"previousId":26,"nextId":40},{"id":40,"name":"ApplicationState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application state generic type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L16"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"AnyObject"},"name":"AnyObject","package":"@w5s/application"}],"permalink":"/std/api/application/interface/ApplicationState","categories":[],"previousId":41,"nextId":48},{"id":48,"name":"Storage","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for the global Map that holds all application states"}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.collection.d.ts","qualifiedName":"Map"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Map","package":"typescript"}],"permalink":"/std/api/application/interface/Storage","categories":[],"previousId":40,"nextId":39},{"id":39,"name":"ApplicationId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application id type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L11"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ApplicationId"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/api/application#ApplicationId","categories":[],"previousId":48,"nextId":47},{"id":47,"name":"$storage","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L3"}],"type":{"type":"query","queryType":{"type":"reference","target":47,"name":"$storage","package":"@w5s/application"}},"defaultValue":"...","permalink":"/std/api/application#$storage","categories":[],"previousId":39},{"id":20,"name":"Application","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"signatures":[{"id":21,"name":"Application","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an app instance with a state ref that will be stored in "},{"kind":"code","text":"`applicationStore.current[id]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface MyAppConfiguration {\\n  foo: number\\n}\\n\\nconst myApp = Application<MyAppConfiguration>(\'my-app\', {\\n  foo: 1,\\n});\\nmyApp.configure({ foo: 2 });\\n\\nmyApp.state.current = {\\n  ...myApp.state.current,\\n  myProperty: \'hello world !\',\\n};\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"}],"typeParameter":[{"id":22,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":23,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application unique identifier"}]},"type":{"type":"intrinsic","name":"string"}},{"id":24,"name":"initialConfiguration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"type":{"type":"reference","target":22,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true},"defaultValue":"..."},{"id":25,"name":"store","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Application store ref where the data will be set"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":40,"name":"ApplicationState","package":"@w5s/application"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":26,"typeArguments":[{"type":"reference","target":22,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}}],"permalink":"/std/api/application/function/Application","categories":[],"nextId":49},{"id":49,"name":"useRef","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useRef.ts","line":56,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L56"}],"signatures":[{"id":50,"name":"useRef","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" stored at "},{"kind":"code","text":"`storage.get(key)`"},{"kind":"text","text":" or "},{"kind":"code","text":"`ref.value[key]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst globalStorage = useStorage(globalThis);\\nconst counterRef = useRef<number>(globalStorage, \'counter\', 1);\\n// globalStorage == Map { counter => 1 }\\n\\nconst state = Ref({});\\nconst counterRef = useRef<number>(state, \'counter\', 2);\\n// state == { counter: 2 }\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useRef.ts","line":56,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L56"}],"typeParameter":[{"id":51,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":52,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ref or storage containing the value"}]},"type":{"type":"union","types":[{"type":"reference","target":48,"name":"Storage","package":"@w5s/application"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}],"name":"Ref","package":"@w5s/core"}]}},{"id":53,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the key where data is stored"}]},"type":{"type":"intrinsic","name":"string"}},{"id":54,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value"}]},"type":{"type":"reference","target":51,"name":"V","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":51,"name":"V","package":"@w5s/application","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/api/application/function/useRef","categories":[],"previousId":20,"nextId":44},{"id":44,"name":"useStorage","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"signatures":[{"id":45,"name":"useStorage","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Get or create a map object storage for "},{"kind":"code","text":"`hostObject`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst objectStorage = useStorage(someObject);\\nconst globalStorage = useStorage(globalThis);\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"parameters":[{"id":46,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object hosting the storage"}]},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":48,"name":"Storage","package":"@w5s/application"}}],"permalink":"/std/api/application/function/useStorage","categories":[],"previousId":49,"nextId":26}],"groups":[{"title":"Functions","children":[20,49,44]},{"title":"Interfaces","children":[26,41,40,48]},{"title":"Type Aliases","children":[39]},{"title":"Variables","children":[47]}],"sources":[{"fileName":"packages/application/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/application/src/index.ts#L1"}],"permalink":"/std/api/application"},"urlSlug":"application"}],"packageName":"@w5s/application","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":2,"name":"@w5s/async","variant":"declaration","kind":2,"flags":{},"children":[{"id":96,"name":"TimerOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":97,"name":"signal","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The abort signal to use for the timer."}]},"sources":[{"fileName":"packages/async/src/TimerOptions.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/TimerOptions.ts#L5"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"AbortSignal"},"name":"AbortSignal","package":"typescript"}}],"groups":[{"title":"Properties","children":[97]}],"sources":[{"fileName":"packages/async/src/TimerOptions.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/async/src/TimerOptions.ts#L1"}],"permalink":"/std/api/async/interface/TimerOptions","categories":[],"previousId":80,"nextId":55},{"id":55,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/dist/index.d.ts","line":48,"character":5}],"typeParameters":[{"id":56,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":56,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":56,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/api/async#Awaitable","categories":[],"previousId":96,"nextId":67},{"id":67,"name":"ImmediateId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"The id returned by "},{"kind":"code","text":"`setImmediate`"}]},"sources":[{"fileName":"packages/async/src/ImmediateId.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/ImmediateId.ts#L6"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ImmediateId"}],"name":"Tag","package":"@w5s/core-type"}]},"permalink":"/std/api/async#ImmediateId","categories":[],"previousId":55},{"id":57,"name":"clearImmediate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/clearImmediate.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/clearImmediate.ts#L20"}],"signatures":[{"id":58,"name":"clearImmediate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A polyfill for "},{"kind":"inline-tag","tag":"@link","text":"clearImmediate","target":57,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst id = setImmediate(() => { ... });\\nclearImmediate(id);// This will cancel the call\\n```"}]}]},"sources":[{"fileName":"packages/async/src/clearImmediate.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/clearImmediate.ts#L20"}],"parameters":[{"id":59,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the id returned by "},{"kind":"code","text":"`setImmediate`"}]},"type":{"type":"reference","target":67,"name":"ImmediateId","package":"@w5s/async"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/async/function/clearImmediate","categories":[],"nextId":60},{"id":60,"name":"defer","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/defer.ts","line":32,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/defer.ts#L32"}],"signatures":[{"id":61,"name":"defer","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new Promise and returns it in an object, along with its resolve and reject functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction sayHelloWorld(ms: number): Promise<string> {\\n  const { promise, resolve, reject } = defer<string>();\\n  setTimeout(() => resolve(\'Hello world\'), ms);\\n  return promise;\\n}\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"An object with the properties promise, resolve, and reject."}]}]},"sources":[{"fileName":"packages/async/src/defer.ts","line":32,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/defer.ts#L32"}],"typeParameter":[{"id":62,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2024.promise.d.ts","qualifiedName":"PromiseWithResolvers"},"typeArguments":[{"type":"reference","target":62,"name":"T","package":"@w5s/async","refersToTypeParameter":true}],"name":"PromiseWithResolvers","package":"typescript"}}],"permalink":"/std/api/async/function/defer","categories":[],"previousId":57,"nextId":63},{"id":63,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/delay.ts","line":19,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L19"}],"signatures":[{"id":64,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a promise after waiting "},{"kind":"code","text":"`milliseconds`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nawait delay(5);// Will wait 5 milliseconds\\n\\nconst controller = new AbortController();\\nsetTimeout(() => controller.abort(new Error(\'CustomError\')));\\nawait delay(5, { signal: controller.signal });// Will reject with Error(\'CustomError\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/delay.ts","line":19,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L19"}],"parameters":[{"id":65,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the delay to wait in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}},{"id":66,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the timer options"}]},"type":{"type":"reference","target":96,"name":"TimerOptions","package":"@w5s/async"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/async/function/delay","categories":[],"previousId":60,"nextId":72},{"id":72,"name":"isPromise","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"signatures":[{"id":73,"name":"isPromise","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"Promise","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromise(Promise.resolve());// true\\nisPromise({ then() {} });// false\\nisPromise(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"parameters":[{"id":74,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}}}],"permalink":"/std/api/async/function/isPromise","categories":[],"previousId":63,"nextId":68},{"id":68,"name":"isPromiseLike","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"signatures":[{"id":69,"name":"isPromiseLike","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"PromiseLike","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromiseLike(Promise.resolve());// true\\nisPromiseLike({ then() {} });// true\\nisPromiseLike(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"typeParameter":[{"id":70,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":71,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":70,"name":"V","package":"@w5s/async","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}}}],"permalink":"/std/api/async/function/isPromiseLike","categories":[],"previousId":72,"nextId":75},{"id":75,"name":"setImmediate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/setImmediate.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/setImmediate.ts#L18"}],"signatures":[{"id":76,"name":"setImmediate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A polyfill for "},{"kind":"inline-tag","tag":"@link","text":"setImmediate","target":75,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst id = setImmediate(() => console.log(\'Hello World!\'));\\n```"}]}]},"sources":[{"fileName":"packages/async/src/setImmediate.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/setImmediate.ts#L18"}],"parameters":[{"id":77,"name":"callback","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the function to call"}]},"type":{"type":"reflection","declaration":{"id":78,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/setImmediate.ts","line":18,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/async/src/setImmediate.ts#L18"}],"signatures":[{"id":79,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/setImmediate.ts","line":18,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/async/src/setImmediate.ts#L18"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","target":67,"name":"ImmediateId","package":"@w5s/async"}}],"permalink":"/std/api/async/function/setImmediate","categories":[],"previousId":68,"nextId":80},{"id":80,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"signatures":[{"id":81,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`block().then(onSuccess, onError)`"},{"kind":"text","text":" when a asynchronous.\\nElse returns "},{"kind":"code","text":"`try { return onSuccess(block()) } catch (error) { onError(error) }`"},{"kind":"text","text":" when synchronous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst syncBlock = () => \'sync\'\\ntryCall(syncBlock, (_) => `${_}_foo`);// \'async_foo\'\\nconst asyncBlock = () => Promise.resolve(\'async\')\\ntryCall(asyncBlock, (_) => `${_}_foo`);// Promise.resolve(\'async_foo\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"typeParameter":[{"id":82,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":83,"name":"TResult1","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":82,"name":"T","package":"@w5s/async","refersToTypeParameter":true}},{"id":84,"name":"TResult2","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":85,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the callback returning an awaitable value"}]},"type":{"type":"reflection","declaration":{"id":86,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"signatures":[{"id":87,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":82,"name":"T","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":88,"name":"onSuccess","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":89,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"signatures":[{"id":90,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"parameters":[{"id":91,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":82,"name":"T","package":"@w5s/async","refersToTypeParameter":true}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":83,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}]}},{"id":92,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":93,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"signatures":[{"id":94,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"parameters":[{"id":95,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":84,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"union","types":[{"type":"reference","target":83,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true},{"type":"reference","target":84,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}]}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/api/async/function/tryCall","categories":[],"previousId":75,"nextId":96}],"groups":[{"title":"Functions","children":[57,60,63,72,68,75,80]},{"title":"Interfaces","children":[96]},{"title":"Type Aliases","children":[55,67]}],"categories":[{"title":"Type","children":[72,68]},{"title":"__CATEGORY__","children":[96,55,67,57,60,63,75,80]}],"sources":[{"fileName":"packages/async/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/async/src/index.ts#L1"}],"permalink":"/std/api/async"},"urlSlug":"async"}],"packageName":"@w5s/async","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":3,"name":"@w5s/bigdecimal","variant":"declaration","kind":2,"flags":{},"children":[{"id":99,"name":"BigDecimal","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`BigDecimal`"}]},"children":[{"id":242,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":243,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":244,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":245,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":246,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":247,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":248,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__inspect__"},{"id":235,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":51,"character":17}],"type":{"type":"literal","value":"BigDecimal"},"permalink":"/std/api/bigdecimal/namespace/BigDecimal#typeName"},{"id":215,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":216,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":217,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":218,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":219,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#!="},{"id":162,"name":"%?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedRemainder.d.ts","line":16,"character":4}],"signatures":[{"id":163,"name":"%?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedRemainder<T> = ...;\\nconst result = Numeric[\'%?\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedRemainder.d.ts","line":16,"character":4}],"parameters":[{"id":164,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":165,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#%?"},{"id":158,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":159,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":160,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":161,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#*"},{"id":150,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":151,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":152,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":153,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#+"},{"id":154,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":155,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":156,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":157,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#-"},{"id":179,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":180,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":181,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":182,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":183,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#<"},{"id":174,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":175,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":176,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":177,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":178,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#<="},{"id":220,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":221,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":222,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":223,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":224,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#=="},{"id":189,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":190,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":191,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":192,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":193,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#>"},{"id":184,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":185,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":186,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":187,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":188,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#>="},{"id":225,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"signatures":[{"id":226,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":227,"name":"stringValue","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":228,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":229,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":230,"name":"scale","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__call__"},{"id":249,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":250,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":251,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":252,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":253,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__decode__"},{"id":254,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":255,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":256,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":257,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__encode__"},{"id":258,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":259,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":260,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#__schema__"},{"id":134,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":135,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":136,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":137,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#abs"},{"id":239,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":240,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":241,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#asInstance"},{"id":123,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":124,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":125,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":126,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#asString"},{"id":204,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":205,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":206,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":207,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":208,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":209,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#clamp"},{"id":169,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":170,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":171,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":172,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":173,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#compare"},{"id":231,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"signatures":[{"id":232,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"parameters":[{"id":233,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":234,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#create"},{"id":210,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":211,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":212,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":213,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":214,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#equals"},{"id":114,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L41"}],"signatures":[{"id":115,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of a BigDecimal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.format(BigDecimal(\'1.020\')); // \'1.020\'\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L41"}],"parameters":[{"id":116,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#format"},{"id":117,"name":"fromBigInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L42"}],"signatures":[{"id":118,"name":"fromBigInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a bigint to a big decimal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.fromBigInt(1n); // BigDecimal(\'1\')\\nBigDecimal.fromBigInt(-1n); // BigDecimal(\'-1\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L42"}],"parameters":[{"id":119,"name":"bigIntValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the bigint value to convert to a big decimal"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#fromBigInt"},{"id":120,"name":"fromInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L43"}],"signatures":[{"id":121,"name":"fromInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts an integer to a big decimal."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.fromInt(Int(1)); // BigDecimal(\'1\')\\nBigDecimal.fromInt(Int(-1)); // BigDecimal(\'-1\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L43"}],"parameters":[{"id":122,"name":"intValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the integer value to convert to a big decimal"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#fromInt"},{"id":236,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":237,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":238,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#hasInstance"},{"id":142,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"signatures":[{"id":143,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"parameters":[{"id":144,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":145,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isNegative"},{"id":138,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"signatures":[{"id":139,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"parameters":[{"id":140,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":141,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isPositive"},{"id":130,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":131,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":132,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":133,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#isZero"},{"id":199,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":200,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":201,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":202,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":203,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#max"},{"id":194,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":195,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":196,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":197,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":198,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#min"},{"id":166,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":167,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":168,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#negate"},{"id":100,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"signatures":[{"id":101,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a normalized "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.normalize(BigDecimal(\'1.020\')); //  BigDecimal(\'1.02\')\\nBigDecimal.normalize(BigDecimal(\'1.0200\')); //  BigDecimal(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"parameters":[{"id":102,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#normalize"},{"id":103,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"signatures":[{"id":104,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" from "},{"kind":"code","text":"`value`"},{"kind":"text","text":" and "},{"kind":"code","text":"`scale`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.of(1n, 1); // BigDecimal(\'0.1\')\\nBigDecimal.of(-234n, 2); // BigDecimal(\'2.34\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"parameters":[{"id":105,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The base integer value."}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":106,"name":"scale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The scale."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#of"},{"id":111,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L40"}],"signatures":[{"id":112,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new BigDecimal from a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.parse(\'1.020\'); // Option.Some(BigDecimal(\'1.020\'))\\nBigDecimal.parse(\'A\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L40"}],"parameters":[{"id":113,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#parse"},{"id":107,"name":"scale","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"signatures":[{"id":108,"name":"scale","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Scales a given "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" to the specified scale."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst value = BigDecimal(\'1.02\');\\nBigDecimal.scale(value, 1); //  BigDecimal(\'1.0\')\\nBigDecimal.scale(value, 3); //  BigDecimal(\'1.020\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"parameters":[{"id":109,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":110,"name":"newScale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The new scale"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#scale"},{"id":146,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"signatures":[{"id":147,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"parameters":[{"id":148,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":149,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#sign"},{"id":127,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":128,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":129,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal#zero"}],"groups":[{"title":"Variables","children":[242,235]},{"title":"Functions","children":[215,162,158,150,154,179,174,220,189,184,225,249,254,258,134,239,123,204,169,231,210,114,117,120,236,142,138,130,199,194,166,100,103,111,107,146,127]}],"categories":[{"title":"Codec","children":[249,254,258]},{"title":"Comparator","children":[215,179,174,220,189,184,204,169,210,199,194]},{"title":"Constructor","children":[231,117,120,103]},{"title":"Formatting","children":[123]},{"title":"Numeric","children":[162,158,150,154,134,142,138,130,166,146,127]},{"title":"Scaling","children":[100,107]},{"title":"Type","children":[242,235,239,236]},{"title":"__CATEGORY__","children":[225,114,111]}],"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":22,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L22"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L29"}],"permalink":"/std/api/bigdecimal/namespace/BigDecimal","nextId":261},{"id":261,"name":"BigDecimal","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":22,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L22"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimalType","package":"@w5s/bigdecimal","qualifiedName":"BigDecimal"},"permalink":"/std/api/bigdecimal#BigDecimal","categories":[],"previousId":99,"nextId":98},{"id":98,"name":"BigDecimalString","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Valid BigDecimal string representation"}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L20"}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},"permalink":"/std/api/bigdecimal#BigDecimalString","categories":[],"previousId":261}],"groups":[{"title":"Namespaces","children":[99]},{"title":"Type Aliases","children":[261,98]}],"sources":[{"fileName":"packages/bigdecimal/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/index.ts#L1"}],"permalink":"/std/api/bigdecimal"},"urlSlug":"bigdecimal"}],"packageName":"@w5s/bigdecimal","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":4,"name":"@w5s/collection","variant":"declaration","kind":2,"flags":{},"children":[{"id":262,"name":"Array","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate readonly arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Array } from \'@w5s/collection\';\\n\\nconst array = Array.of(2, 1, 3);\\nconst reversed = Array.reverse(array);// [3, 1, 2]\\nconst sorted = Array.sort(array, (left, right) => left === right ? 0 : left < right ? -1 : 1);// [1, 2, 3]\\n```"}]}]},"children":[{"id":263,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L52"}],"signatures":[{"id":264,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an item at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nArray.at(array, 1) // Option.Some(\'bar\')\\nArray.at(array, -1) //  Option.Some(\'baz\') i.e. the last\\nArray.at(array, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L52"}],"typeParameter":[{"id":265,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":266,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"reference","target":265,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"ArrayLike","package":"typescript"}},{"id":267,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":265,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#at"},{"id":268,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L53"}],"signatures":[{"id":269,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenate all elements of arrays\\nEquivalent to "},{"kind":"code","text":"`[...array, ...extension[0], ...extension[1], ...]`"},{"kind":"text","text":","}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.concat([1, 2], [3, 4], [5, 6]);// [1, 2, 3, 4, 5, 6]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L53"}],"typeParameter":[{"id":270,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":271,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":270,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":272,"name":"extensions","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The other arrays to append"}]},"type":{"type":"array","elementType":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":270,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":270,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#concat"},{"id":273,"name":"deleteAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L54"}],"signatures":[{"id":274,"name":"deleteAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an array excluding the item at the "},{"kind":"code","text":"`index`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.deletedAt([1, 2, 3, 4], 1);// [1, 3, 4]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L54"}],"typeParameter":[{"id":275,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":276,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":275,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":277,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the deleted item in the array"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":275,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#deleteAt"},{"id":278,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L55"}],"signatures":[{"id":279,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always returns an empty array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.empty() // []\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L55"}],"typeParameter":[{"id":280,"name":"Item","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":280,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#empty"},{"id":281,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L56"}],"signatures":[{"id":282,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether all the members of an array satisfy the specified test."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.every([1, 2, 3], isEven); // false\\nArray.every([2, 4], isEven); // true\\nArray.every([], (value) => false); // true\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L56"}],"typeParameter":[{"id":283,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":284,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":285,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":283,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":286,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":287,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/every.ts#L20"}],"signatures":[{"id":288,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/every.ts#L20"}],"parameters":[{"id":289,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":283,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":290,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":291,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":283,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":284,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}}}]}}}],"type":{"type":"predicate","name":"self","asserts":false,"targetType":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":284,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}},{"id":292,"name":"every","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L56"}],"typeParameter":[{"id":293,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":294,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":293,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":295,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":296,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/every.ts#L24"}],"signatures":[{"id":297,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/every.ts#L24"}],"parameters":[{"id":298,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":293,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":299,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":300,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":293,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/collection/namespace/Array#every"},{"id":301,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L57"}],"signatures":[{"id":302,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the items of an array that meet the condition specified in a callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3, 4];\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.filter(array, isEven); // [2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L57"}],"typeParameter":[{"id":303,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":304,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":305,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":303,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":306,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The filter method calls the predicate function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":307,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/filter.ts#L19"}],"signatures":[{"id":308,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/filter.ts#L19"}],"parameters":[{"id":309,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":303,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":304,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":304,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":310,"name":"filter","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L57"}],"typeParameter":[{"id":311,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":312,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":311,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":313,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":314,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/filter.ts#L23"}],"signatures":[{"id":315,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/filter.ts#L23"}],"parameters":[{"id":316,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":311,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":317,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":318,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":311,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":311,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#filter"},{"id":319,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L58"}],"signatures":[{"id":320,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.find([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'ab\')\\nArray.find([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L58"}],"typeParameter":[{"id":321,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":322,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":323,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":321,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":324,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":325,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/find.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/find.ts#L20"}],"signatures":[{"id":326,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/find.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/find.ts#L20"}],"parameters":[{"id":327,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":321,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":328,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":329,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":321,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":322,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":322,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":330,"name":"find","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L58"}],"typeParameter":[{"id":331,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":332,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":331,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":333,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":334,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/find.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/find.ts#L24"}],"signatures":[{"id":335,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/find.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/find.ts#L24"}],"parameters":[{"id":336,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":331,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":337,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":338,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":331,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":331,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#find"},{"id":339,"name":"findIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L59"}],"signatures":[{"id":340,"name":"findIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(0)\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L59"}],"typeParameter":[{"id":341,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":342,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":341,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":343,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":344,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findIndex.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findIndex.ts#L20"}],"signatures":[{"id":345,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findIndex.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findIndex.ts#L20"}],"parameters":[{"id":346,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":341,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":347,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":348,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":341,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#findIndex"},{"id":349,"name":"findLast","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L60"}],"signatures":[{"id":350,"name":"findLast","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLast([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'abc\')\\nArray.findLast([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L60"}],"typeParameter":[{"id":351,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":352,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":353,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":351,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":354,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":355,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLast.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLast.ts#L20"}],"signatures":[{"id":356,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLast.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLast.ts#L20"}],"parameters":[{"id":357,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":351,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":358,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":359,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":351,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":352,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":352,"name":"RefinedItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":360,"name":"findLast","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L60"}],"typeParameter":[{"id":361,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":362,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":361,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":363,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":364,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLast.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLast.ts#L24"}],"signatures":[{"id":365,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLast.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLast.ts#L24"}],"parameters":[{"id":366,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":361,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":367,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":368,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":361,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":361,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#findLast"},{"id":369,"name":"findLastIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L61"}],"signatures":[{"id":370,"name":"findLastIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(2)\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L61"}],"typeParameter":[{"id":371,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":372,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":371,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":373,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":374,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLastIndex.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLastIndex.ts#L20"}],"signatures":[{"id":375,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/findLastIndex.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/findLastIndex.ts#L20"}],"parameters":[{"id":376,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":371,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":377,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":378,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":371,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#findLastIndex"},{"id":379,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L62"}],"signatures":[{"id":380,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array. Each calls should return an array.\\nThe final result is the concatenation of each arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\'];\\nconst concat = (_: string) => [_ + \'_1\', _ + \'_2\'];\\nArray.flatMap(array, concat); // [\'a_1\', \'a_2\', \'b_1\', \'b_2\', \'c_1\', \'c_2\']\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L62"}],"typeParameter":[{"id":381,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":382,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":383,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":381,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":384,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array and returns an array that will be concatenated."}]},"type":{"type":"reflection","declaration":{"id":385,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/flatMap.ts#L19"}],"signatures":[{"id":386,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/flatMap.ts#L19"}],"parameters":[{"id":387,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":381,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}},{"id":388,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":389,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":381,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":382,"name":"ToItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":382,"name":"ToItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#flatMap"},{"id":390,"name":"fromAsync","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L63"}],"signatures":[{"id":391,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L63"}],"typeParameter":[{"id":392,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":393,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":392,"name":"T","package":"@w5s/collection","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":392,"name":"T","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":392,"name":"T","package":"@w5s/collection","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":392,"name":"T","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}],"name":"Promise","package":"typescript"}},{"id":394,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L63"}],"typeParameter":[{"id":395,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":396,"name":"U","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":397,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":395,"name":"T","package":"@w5s/collection","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":395,"name":"T","package":"@w5s/collection","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}},{"id":398,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A mapping function to call on every element of iterableOrArrayLike.\\n     Each return value is awaited before being added to result array."}]},"type":{"type":"reflection","declaration":{"id":399,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/fromAsync.ts","line":27,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/fromAsync.ts#L27"}],"signatures":[{"id":400,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/fromAsync.ts","line":27,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/fromAsync.ts#L27"}],"parameters":[{"id":401,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":395,"name":"T","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}},{"id":402,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":396,"name":"U","package":"@w5s/collection","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":396,"name":"U","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}],"name":"Array","package":"@w5s/collection"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Array#fromAsync"},{"id":403,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L64"}],"signatures":[{"id":404,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an array of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.generate(3, () => \'a\');// == [\'a\', \'a\', \'a\']\\nArray.generate(3, (index) => index * 2);// == [0, 2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L64"}],"typeParameter":[{"id":405,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":406,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":407,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":408,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/generate.ts#L17"}],"signatures":[{"id":409,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/generate.ts#L17"}],"parameters":[{"id":410,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":405,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":405,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#generate"},{"id":411,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L65"}],"signatures":[{"id":412,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"code","text":"`Array.isArray()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.hasInstance(Array.empty()) // true\\nArray.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L65"}],"parameters":[{"id":413,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":527,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Array","package":"@w5s/collection"}}}],"permalink":"/std/api/collection/namespace/Array#hasInstance"},{"id":414,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L66"}],"signatures":[{"id":415,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether an array includes a certain item, returning true or false as appropriate."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.includes([\'a\', \'\', \'a\'], \'a\'); // true\\nArray.includes([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // true\\nArray.includes([\'a\', \'b\'], \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L66"}],"typeParameter":[{"id":416,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":417,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":416,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":418,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to search for."}]},"type":{"type":"reference","target":416,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":419,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The position in this array at which to begin searching for searchItem."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/collection/namespace/Array#includes"},{"id":420,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L67"}],"signatures":[{"id":421,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.indexOf([\'a\', \'\', \'a\'], \'a\'); // Option.Some(0)\\nArray.indexOf([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // Option.Some(2)\\nArray.indexOf([\'a\', \'b\'], \'absent\'); // Option.Some(\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L67"}],"typeParameter":[{"id":422,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":423,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":422,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":424,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":422,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":425,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#indexOf"},{"id":426,"name":"insertAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L68"}],"signatures":[{"id":427,"name":"insertAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.insertAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'b\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L68"}],"typeParameter":[{"id":428,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":429,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":428,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":430,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":431,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":428,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":428,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#insertAt"},{"id":432,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L69"}],"signatures":[{"id":433,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.isEmpty([]);// true\\nArray.isEmpty([\'a\', \'b\', \'c\']);// false\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L69"}],"parameters":[{"id":434,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/collection/namespace/Array#isEmpty"},{"id":435,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L70"}],"signatures":[{"id":436,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of a specified "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.lastIndexOf([\'a\', \'b\', \'a\'], \'a\') // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\', \'a\', \'b\', \'a\'], \'a\', 4); // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\'], \'absent\') // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L70"}],"typeParameter":[{"id":437,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":438,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":437,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":439,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":437,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":440,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index of the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#lastIndexOf"},{"id":441,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L71"}],"signatures":[{"id":442,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array, and returns an array that contains the results."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3];\\nconst double = (_: number) => _ * 2;\\nArray.map(array, double); // [2, 4, 6]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L71"}],"typeParameter":[{"id":443,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":444,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":445,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":443,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":446,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":447,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/map.ts#L18"}],"signatures":[{"id":448,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/map.ts#L18"}],"parameters":[{"id":449,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":443,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}},{"id":450,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":451,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":443,"name":"FromItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"reference","target":444,"name":"ToItem","package":"@w5s/collection","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":444,"name":"ToItem","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#map"},{"id":452,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L72"}],"signatures":[{"id":453,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new array from a set of items."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.of(1, 2, 3);// [1, 2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L72"}],"typeParameter":[{"id":454,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":455,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A set of items to include in the new array object."}]},"type":{"type":"array","elementType":{"type":"reference","target":454,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":454,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#of"},{"id":456,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L73"}],"signatures":[{"id":457,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduce(array, concat, \'$\') // \'$foo:bar:baz\'\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L73"}],"typeParameter":[{"id":458,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":459,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":460,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":458,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":461,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":462,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/reduce.ts#L19"}],"signatures":[{"id":463,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/reduce.ts#L19"}],"parameters":[{"id":464,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":459,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}},{"id":465,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":458,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":466,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":467,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":458,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"reference","target":459,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}]}}},{"id":468,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":459,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":459,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}],"permalink":"/std/api/collection/namespace/Array#reduce"},{"id":469,"name":"reduceRight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L74"}],"signatures":[{"id":470,"name":"reduceRight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduceRight(array, concat, \'$\') // \'$baz:bar:foo\'\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L74"}],"typeParameter":[{"id":471,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":472,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":473,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":471,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":474,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":475,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/reduceRight.ts#L19"}],"signatures":[{"id":476,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/reduceRight.ts#L19"}],"parameters":[{"id":477,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":472,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}},{"id":478,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":471,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":479,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":480,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":471,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"reference","target":472,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}]}}},{"id":481,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":472,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":472,"name":"ReturnValue","package":"@w5s/collection","refersToTypeParameter":true}}],"permalink":"/std/api/collection/namespace/Array#reduceRight"},{"id":482,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L75"}],"signatures":[{"id":483,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a reversed array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.reverse([1, 2, 3]);// [3, 2, 1]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L75"}],"typeParameter":[{"id":484,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":485,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":484,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":484,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#reverse"},{"id":486,"name":"setAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L76"}],"signatures":[{"id":487,"name":"setAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Replace "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.setAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L76"}],"typeParameter":[{"id":488,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":489,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":488,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":490,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the updated item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":491,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":488,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":488,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#setAt"},{"id":492,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L77"}],"signatures":[{"id":493,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.size([]) // 0\\nArray.size([\'foo\', \'bar\']) // 2\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L77"}],"parameters":[{"id":494,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Array#size"},{"id":495,"name":"slice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":78,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L78"}],"signatures":[{"id":496,"name":"slice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a section of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([1, 2, 3, 4], 1, 3);// [2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":78,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L78"}],"typeParameter":[{"id":497,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":498,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":497,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":499,"name":"start","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The beginning of the specified portion of the array."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}},{"id":500,"name":"end","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The end of the specified portion of the array. This is exclusive of the item at the index "},{"kind":"code","text":"`end`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":497,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#slice"},{"id":508,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":80,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L80"}],"signatures":[{"id":509,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether the specified callback function returns true for any item of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.some([1, 2, 3], isEven); // true\\nArray.some([1, 3], isEven); // false\\nArray.some([], (value) => true); // false\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":80,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L80"}],"typeParameter":[{"id":510,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":511,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":510,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":512,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":513,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/some.ts#L20"}],"signatures":[{"id":514,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/some.ts#L20"}],"parameters":[{"id":515,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":510,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":516,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":517,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":510,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/collection/namespace/Array#some"},{"id":518,"name":"sort","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":81,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L81"}],"signatures":[{"id":519,"name":"sort","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a sorted array using "},{"kind":"code","text":"`compareFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([11, 2, 22, 1], Number.compare);// [1, 2, 11, 22]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":81,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L81"}],"typeParameter":[{"id":520,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":521,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":520,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":522,"name":"compareFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Function used to determine the order of the items. It is expected to return\\na negative value if first argument is less than second argument, zero if they\'re equal and a positive\\nvalue otherwise."}]},"type":{"type":"reflection","declaration":{"id":523,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/sort.ts#L16"}],"signatures":[{"id":524,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array/sort.ts#L16"}],"parameters":[{"id":525,"name":"a","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":520,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}},{"id":526,"name":"b","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":520,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":520,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#sort"},{"id":501,"name":"splice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Array.ts","line":79,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L79"}],"signatures":[{"id":502,"name":"splice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\', \'d\', \'e\'];\\n// Remove 2 items starting at index 1\\nsplice(array, 1, 2); // [\'a\', \'d\', \'e\']\\n// Insert items at index 2\\nsplice(array, 2, 0, \'x\', \'y\'); // [\'a\', \'b\', \'x\', \'y\', \'c\', \'d\', \'e\']\\n// Replace items at index 1\\nsplice(array, 1, 2, \'u\', \'v\'); // [\'a\', \'u\', \'v\', \'d\', \'e\']\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":79,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L79"}],"typeParameter":[{"id":503,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":504,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":503,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}},{"id":505,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":506,"name":"deleteCount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of deleted items"}]},"type":{"type":"intrinsic","name":"number"}},{"id":507,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":503,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}}}],"type":{"type":"reference","target":527,"typeArguments":[{"type":"reference","target":503,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Array","package":"@w5s/collection"}}],"permalink":"/std/api/collection/namespace/Array#splice"}],"groups":[{"title":"Functions","children":[263,268,273,278,281,301,319,339,349,369,379,390,403,411,414,420,426,432,435,441,452,456,469,482,486,492,495,508,518,501]}],"categories":[{"title":"Accessor","children":[263,492]},{"title":"Constructor","children":[278,403,452]},{"title":"Predicate","children":[281,414,432,508]},{"title":"Type","children":[411]},{"title":"__CATEGORY__","children":[268,273,301,319,339,349,369,379,390,420,426,435,441,456,469,482,486,495,518,501]}],"sources":[{"fileName":"packages/collection/src/Array.ts","line":36,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L36"},{"fileName":"packages/collection/src/Array.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L51"}],"permalink":"/std/api/collection/namespace/Array","nextId":530},{"id":530,"name":"Record","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate Record"}]},"children":[{"id":531,"name":"delete","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L28"}],"signatures":[{"id":532,"name":"delete","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record without the "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.delete(record, \'myProperty\'); // {}\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L28"}],"typeParameter":[{"id":533,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":534,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":535,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":533,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":534,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":536,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":533,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":533,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":534,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#delete"},{"id":537,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L29"}],"signatures":[{"id":538,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an empty "},{"kind":"inline-tag","tag":"@link","text":"Record","target":530,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst empty = Record.empty(); // frozen {}\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L29"}],"typeParameter":[{"id":539,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":540,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":539,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":540,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#empty"},{"id":541,"name":"entries","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L30"}],"signatures":[{"id":542,"name":"entries","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [[\'first\', 1], [\'second\', 2]]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L30"}],"typeParameter":[{"id":543,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":544,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":545,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":543,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":544,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":543,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":544,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}]}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#entries"},{"id":546,"name":"forEach","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L31"}],"signatures":[{"id":547,"name":"forEach","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Call "},{"kind":"code","text":"`fn(value, key, record)`"},{"kind":"text","text":" on each entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.forEach(record, (value, key, record) => {\\n // call (1, \'first\', record)\\n // call (2, \'second\', record)\\n}); // 2\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L31"}],"typeParameter":[{"id":548,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":549,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":550,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":548,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":549,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"parameters":[{"id":551,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":550,"name":"D","package":"@w5s/collection","refersToTypeParameter":true}},{"id":552,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"callback called on each entry"}]},"type":{"type":"reflection","declaration":{"id":553,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/collection/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record/forEach.ts#L20"}],"signatures":[{"id":554,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/collection/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record/forEach.ts#L20"}],"parameters":[{"id":555,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":549,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}},{"id":556,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":548,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}},{"id":557,"name":"record","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":550,"name":"D","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/collection/namespace/Record#forEach"},{"id":558,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L32"}],"signatures":[{"id":559,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Record","target":530,"tsLinkText":""},{"kind":"text","text":" from an iterable of [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = Record.from([[\'a\', 1], [\'b\', 2]]); // frozen { a: 1, b: 2}\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L32"}],"typeParameter":[{"id":560,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":561,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":562,"name":"iterable","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":560,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":561,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":560,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":561,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#from"},{"id":563,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L33"}],"signatures":[{"id":564,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an Option of value for the given "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.get(record, \'myProperty\'); // Option.Some(\'myValue\')\\nRecord.get(record, \'nonExistent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L33"}],"typeParameter":[{"id":565,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":566,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":567,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":565,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":566,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":568,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":565,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":566,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Record#get"},{"id":569,"name":"has","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L34"}],"signatures":[{"id":570,"name":"has","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if "},{"kind":"code","text":"`record`"},{"kind":"text","text":" contains "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.has(record, \'myProperty\'); // true\\nRecord.has(record, \'nonExistent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L34"}],"typeParameter":[{"id":571,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}}],"parameters":[{"id":572,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":571,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}},{"id":573,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":571,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/collection/namespace/Record#has"},{"id":574,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L35"}],"signatures":[{"id":575,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.keys(record)); // [\'first\', \'second\']\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L35"}],"typeParameter":[{"id":576,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}}],"parameters":[{"id":577,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":576,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":576,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#keys"},{"id":578,"name":"set","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L36"}],"signatures":[{"id":579,"name":"set","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record including the new "},{"kind":"code","text":"`[key, value]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.set(record, \'myOtherProperty\', \'myOtherValue\'); // { myProperty: \'myValue\', myOtherProperty: \'myOtherValue\' }\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L36"}],"typeParameter":[{"id":580,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":581,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":582,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":580,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":581,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":583,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":580,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true}},{"id":584,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry value"}]},"type":{"type":"reference","target":581,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":580,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":581,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#set"},{"id":585,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L37"}],"signatures":[{"id":586,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the number of entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.size(record); // 2\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L37"}],"typeParameter":[{"id":587,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"parameters":[{"id":588,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":587,"name":"D","package":"@w5s/collection","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/collection/namespace/Record#size"},{"id":589,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L38"}],"signatures":[{"id":590,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [1, 2]\\n```"}]}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L38"}],"typeParameter":[{"id":591,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":592,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":593,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":591,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},{"type":"reference","target":592,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":592,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/collection/namespace/Record#values"}],"groups":[{"title":"Functions","children":[531,537,541,546,558,563,569,574,578,585,589]}],"categories":[{"title":"Accessor","children":[563,585]},{"title":"Constructor","children":[537,558]},{"title":"__CATEGORY__","children":[531,541,546,569,574,578,589]}],"sources":[{"fileName":"packages/collection/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L18"},{"fileName":"packages/collection/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L27"}],"permalink":"/std/api/collection/namespace/Record","previousId":262,"nextId":527},{"id":527,"name":"Array","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"inline-tag","tag":"@link","text":"CoreArray","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Array$1"},"tsLinkText":""}]},"sources":[{"fileName":"packages/collection/src/Array.ts","line":36,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L36"},{"fileName":"packages/collection/src/Array.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Array.ts#L51"}],"typeParameters":[{"id":528,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Array$1"},"typeArguments":[{"type":"reference","target":528,"name":"Item","package":"@w5s/collection","refersToTypeParameter":true}],"name":"CoreArray","package":"@w5s/core-type","qualifiedName":"Array$1"},"permalink":"/std/api/collection#Array","categories":[],"previousId":530,"nextId":594},{"id":594,"name":"Record","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Record is an immutable mapping "},{"kind":"code","text":"`{ [string]: value }`"}]},"sources":[{"fileName":"packages/collection/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L18"},{"fileName":"packages/collection/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L27"}],"typeParameters":[{"id":595,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":529,"name":"RecordKey","package":"@w5s/collection"}},{"id":596,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"mapped","parameter":"P","parameterType":{"type":"reference","target":595,"name":"Key","package":"@w5s/collection","refersToTypeParameter":true},"templateType":{"type":"reference","target":596,"name":"Value","package":"@w5s/collection","refersToTypeParameter":true},"readonlyModifier":"+"},"permalink":"/std/api/collection#Record","categories":[],"previousId":527,"nextId":529},{"id":529,"name":"RecordKey","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/collection/src/Record.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/Record.ts#L13"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"permalink":"/std/api/collection#RecordKey","categories":[],"previousId":594}],"groups":[{"title":"Namespaces","children":[262,530]},{"title":"Type Aliases","children":[527,594,529]}],"sources":[{"fileName":"packages/collection/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/collection/src/index.ts#L1"}],"permalink":"/std/api/collection"},"urlSlug":"collection"}],"packageName":"@w5s/collection","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":5,"name":"@w5s/console","variant":"declaration","kind":2,"flags":{},"children":[{"id":615,"name":"ANSICode","variant":"declaration","kind":4,"flags":{},"children":[{"id":616,"name":"color","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"signatures":[{"id":617,"name":"color","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the ANSI escape sequence for the given color."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ncolor(\'red\')(\'foo\') // \'\\\\x1b[31mfoo\\\\x1b[39m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"the ANSI escape sequence for the given color"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"parameters":[{"id":618,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"one of: black, red, green, yellow, blue, magenta, cyan, white"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/color.ts","qualifiedName":"Color"},"name":"Color","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#color"},{"id":622,"name":"fontStyle","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"signatures":[{"id":623,"name":"fontStyle","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font style."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontStyle(\'italic\')(\'foo\');// \'\\\\u001B[3mfoo\\\\u001B[22m\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"parameters":[{"id":624,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font style to retrieve the escape code for. Can be \'normal\' or \'italic\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontStyle.ts","qualifiedName":"FontStyle"},"name":"FontStyle","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#fontStyle"},{"id":619,"name":"fontWeight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"signatures":[{"id":620,"name":"fontWeight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font weight."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontWeight(\'bold\')(\'foo\') // \'\\\\x1b[1mfoo\\\\x1b[22m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"parameters":[{"id":621,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font weight to retrieve the escape code for. Can be \'bold\' or \'dim\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontWeight.ts","qualifiedName":"FontWeight"},"name":"FontWeight","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#fontWeight"},{"id":625,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"signatures":[{"id":626,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://en.wikipedia.org/wiki/ANSI_escape_code"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.format([1, 2], \'m\');// \'\\\\u001b[1;2m\'\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"parameters":[{"id":627,"name":"args","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a list of arguments"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":628,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a code suffix"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/console/namespace/ANSICode#format"},{"id":629,"name":"strip","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"signatures":[{"id":630,"name":"strip","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Strip ANSI escape codes from the string."}],"blockTags":[{"tag":"@example","name":"Usage","content":[{"kind":"code","text":"```typescript\\nANSICode.strip(red(\\"Hello, world!\\"));// == \\"Hello, world!\\"\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"parameters":[{"id":631,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The text to remove ANSI escape codes from"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/console/namespace/ANSICode#strip"},{"id":632,"name":"style","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"signatures":[{"id":633,"name":"style","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Apply ANSI styles to a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.style({ color: \'red\', fontWeight: \'bold\' })(\'foo\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and applies the styles."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"parameters":[{"id":634,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The style definition."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/style.ts","qualifiedName":"Style"},"name":"Style","package":"@w5s/console"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reflection","declaration":{"id":635,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"signatures":[{"id":636,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"parameters":[{"id":637,"name":"_","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/std/api/console/namespace/ANSICode#style"},{"id":638,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"signatures":[{"id":639,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wraps a given string with ANSI escape codes for styling."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and returns it wrapped with the specified ANSI codes."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"parameters":[{"id":640,"name":"open","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An array of numbers representing the opening ANSI codes."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":641,"name":"close","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A number representing the closing ANSI code."}]},"type":{"type":"intrinsic","name":"number"}},{"id":642,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string representing the ANSI code suffix."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/api/console/namespace/ANSICode#wrap"}],"groups":[{"title":"Functions","children":[616,622,619,625,629,632,638]}],"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":12,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L12"}],"permalink":"/std/api/console/namespace/ANSICode","categories":[],"nextId":597},{"id":597,"name":"Console","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to write in stdin (NodeJS) or WebConsole (browser)"}]},"children":[{"id":598,"name":"debug","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"signatures":[{"id":599,"name":"debug","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`debug`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.debug(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"parameters":[{"id":600,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#debug"},{"id":610,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"signatures":[{"id":611,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`error`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.error(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"parameters":[{"id":612,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#error"},{"id":604,"name":"info","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"signatures":[{"id":605,"name":"info","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`info`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.info(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"parameters":[{"id":606,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#info"},{"id":613,"name":"isWeb","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"signatures":[{"id":614,"name":"isWeb","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/console/namespace/Console#isWeb"},{"id":601,"name":"log","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"signatures":[{"id":602,"name":"log","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`log`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.log(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"parameters":[{"id":603,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#log"},{"id":607,"name":"warn","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"signatures":[{"id":608,"name":"warn","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.warn(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"parameters":[{"id":609,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/console/namespace/Console#warn"}],"groups":[{"title":"Functions","children":[598,610,604,613,601,607]}],"sources":[{"fileName":"packages/console/src/Console.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L13"}],"permalink":"/std/api/console/namespace/Console","categories":[],"previousId":615}],"groups":[{"title":"Namespaces","children":[615,597]}],"sources":[{"fileName":"packages/console/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/console/src/index.ts#L1"}],"permalink":"/std/api/console"},"urlSlug":"console"}],"packageName":"@w5s/console","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":6,"name":"@w5s/core","variant":"declaration","kind":2,"flags":{},"children":[{"id":649,"name":"Boolean","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`boolean`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Boolean } from \'@w5s/core\';\\n\\nif (Boolean.hasInstance(unknownValue)) {\\n  // typeof unknownValue === \'boolean\'\\n}\\n```"}]}]},"children":[{"id":716,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":717,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":718,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":719,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":720,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":721,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":722,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Boolean#__inspect__"},{"id":709,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/core/namespace/Boolean#typeName"},{"id":699,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":700,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":701,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":702,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":703,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#!="},{"id":663,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":664,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":665,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":666,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":667,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#<"},{"id":658,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":659,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":660,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":661,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":662,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#<="},{"id":704,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":705,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":706,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":707,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":708,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#=="},{"id":673,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":674,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":675,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":676,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":677,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#>"},{"id":668,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":669,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":670,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":671,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":672,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#>="},{"id":723,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":724,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":725,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":726,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":727,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#__decode__"},{"id":728,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":729,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":730,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":731,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Boolean#__encode__"},{"id":732,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":733,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":734,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#__schema__"},{"id":713,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":714,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":715,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#asInstance"},{"id":735,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":736,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":737,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":738,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Boolean#asString"},{"id":688,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":689,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":690,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":691,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":692,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":693,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#clamp"},{"id":653,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":654,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1471,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1431}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":655,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":656,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":657,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Boolean#compare"},{"id":694,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":695,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":696,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":697,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":698,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#equals"},{"id":710,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":711,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":712,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/std/api/core/namespace/Boolean#hasInstance"},{"id":683,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":684,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":685,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":686,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":687,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#max"},{"id":678,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":679,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":680,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":681,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":682,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#min"},{"id":650,"name":"not","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":651,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":652,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Boolean#not"}],"groups":[{"title":"Variables","children":[716,709]},{"title":"Functions","children":[699,663,658,704,673,668,723,728,732,713,735,688,653,694,710,683,678,650]}],"categories":[{"title":"Codec","children":[723,728,732]},{"title":"Comparator","children":[699,663,658,704,673,668,688,653,694,683,678]},{"title":"Formatting","children":[735]},{"title":"Type","children":[716,709,713,710]},{"title":"__CATEGORY__","children":[650]}],"sources":[{"fileName":"packages/core/src/Boolean.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Boolean.ts#L18"}],"permalink":"/std/api/core/namespace/Boolean","previousId":2301,"nextId":751},{"id":751,"name":"Callable","variant":"declaration","kind":4,"flags":{},"children":[{"id":752,"name":"symbol","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Symbol.call"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L43"}],"type":{"type":"reference","target":1986,"name":"Symbol.call","package":"@w5s/core"},"defaultValue":"Symbol.call","permalink":"/std/api/core/namespace/Callable#symbol"}],"groups":[{"title":"Variables","children":[752]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"permalink":"/std/api/core/namespace/Callable","categories":[],"previousId":649,"nextId":755},{"id":755,"name":"Char","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate characters"}]},"children":[{"id":838,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709,"permalink":"/std/api/core/namespace/Char#typeName"},{"id":845,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":846,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":847,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":848,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":849,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":850,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":851,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#__inspect__"},{"id":759,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/core/namespace/Char#indexType"},{"id":775,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#maxValue"},{"id":774,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Char#minValue"},{"id":822,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":823,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":824,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":825,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":826,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#!="},{"id":786,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":787,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":788,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":789,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":790,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#<"},{"id":781,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":782,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":783,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":784,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":785,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#<="},{"id":827,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":828,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":829,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":830,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":831,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#=="},{"id":796,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":797,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":798,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":799,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":800,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#>"},{"id":791,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":792,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":793,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":794,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":795,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#>="},{"id":868,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":869,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":870,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__call__"},{"id":852,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":853,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":854,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":855,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":856,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__decode__"},{"id":857,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":858,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":859,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":860,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Char#__encode__"},{"id":861,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":862,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":863,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#__schema__"},{"id":842,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":843,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":844,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#asInstance"},{"id":864,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":865,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":866,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":867,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Char#asString"},{"id":760,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":761,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":762,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#at"},{"id":811,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":812,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":813,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":814,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":815,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":816,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#clamp"},{"id":776,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":777,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1471,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1431}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":778,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":779,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":780,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#compare"},{"id":817,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":818,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":819,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":820,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":821,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/Char#equals"},{"id":756,"name":"fromCodePoint","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"signatures":[{"id":757,"name":"fromCodePoint","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Char created by using the specified code point."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nChar.fromCodePoint(65, 9731) == \\"A\u2603\\"\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"parameters":[{"id":758,"name":"code","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of string codes"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"reference","target":871,"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#fromCodePoint"},{"id":839,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":840,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":841,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Char#hasInstance"},{"id":763,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":764,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":765,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#indexOf"},{"id":806,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":807,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":808,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":809,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":810,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#max"},{"id":801,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":802,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":803,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":804,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":805,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#min"},{"id":770,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":771,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":772,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":773,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1531,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#range"},{"id":766,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":767,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":768,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":769,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Char#rangeSize"},{"id":835,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"signatures":[{"id":836,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":837,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Char#unwrap"},{"id":832,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"signatures":[{"id":833,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"parameters":[{"id":834,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Char#wrap"}],"groups":[{"title":"References","children":[838]},{"title":"Variables","children":[845,759,775,774]},{"title":"Functions","children":[822,786,781,827,796,791,868,852,857,861,842,864,760,811,776,817,756,839,763,806,801,770,766,835,832]}],"categories":[{"title":"Bound","children":[775,774]},{"title":"Codec","children":[852,857,861]},{"title":"Comparator","children":[822,786,781,827,796,791,811,776,817,806,801]},{"title":"Constructor","children":[756]},{"title":"Formatting","children":[864]},{"title":"Indexable","children":[759,760,763,770,766]},{"title":"Type","children":[845,842,839,835,832]},{"title":"__CATEGORY__","children":[838,868]}],"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"permalink":"/std/api/core/namespace/Char","previousId":751,"nextId":872},{"id":872,"name":"Codec","variant":"declaration","kind":4,"flags":{},"children":[{"id":909,"name":"Context","variant":"declaration","kind":256,"flags":{},"children":[{"id":914,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Error result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"type":{"type":"reflection","declaration":{"id":915,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"signatures":[{"id":916,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"parameters":[{"id":917,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":918,"name":"asType","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":919,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}},{"id":910,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Ok result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"type":{"type":"reflection","declaration":{"id":911,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"signatures":[{"id":912,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"parameters":[{"id":913,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":919,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":919,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[914,910]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":68,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L68"}],"typeParameters":[{"id":919,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Codec#Context"},{"id":907,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":66,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L66"}],"typeParameters":[{"id":908,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":908,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":893,"typeArguments":[{"type":"inferred","name":"Type"}],"name":"Codec","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Type"},"name":"Type","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/core/namespace/Codec#TypeOf"},{"id":873,"name":"decode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"signatures":[{"id":874,"name":"decode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" containing the decoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = \'2022-07-31T14:04:48.449Z\';\\nconst decoded = Codec.decode(codec, input);// Result.Ok(\'2022-07-31T14:04:48.449Z\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"typeParameter":[{"id":875,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":876,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":875,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__decode__"}],"name":"Pick","package":"typescript"}},{"id":877,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":875,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#decode"},{"id":878,"name":"encode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"signatures":[{"id":879,"name":"encode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = new Date(\'2022-07-31T14:04:48.449Z\');\\nconst encoded = Codec.encode(codec, input);// \'2022-07-31T14:04:48.449Z\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"typeParameter":[{"id":880,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":881,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the encoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":880,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__encode__"}],"name":"Pick","package":"typescript"}},{"id":882,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"reference","target":880,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Codec#encode"},{"id":883,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"signatures":[{"id":884,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a lazy evaluated codec. Useful for recursive structures."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Node {\\n  value: unknown,\\n  children: Node[]\\n}\\nconst Node = object<Node>({\\n  content: string,\\n  responses: Codec.lazy(() => array(Node))\\n})\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"typeParameter":[{"id":885,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":886,"name":"getCodec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the accessor to the codec"}]},"type":{"type":"reflection","declaration":{"id":887,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"signatures":[{"id":888,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":885,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":885,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#lazy"},{"id":889,"name":"schema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"signatures":[{"id":890,"name":"schema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCodec.schema(string);// { type: \'string\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"typeParameter":[{"id":891,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":892,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":891,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__schema__"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Codec#schema"}],"groups":[{"title":"Interfaces","children":[909]},{"title":"Type Aliases","children":[907]},{"title":"Functions","children":[873,878,883,889]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"permalink":"/std/api/core/namespace/Codec","categories":[],"previousId":755,"nextId":1017},{"id":1017,"name":"Enum","variant":"declaration","kind":4,"flags":{},"children":[{"id":1039,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module containing methods for working with enum types"}]},"children":[{"id":1040,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2353,"name":"Module.typeName"},"target":709},{"id":1085,"name":"[enumKeys]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L48"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}},"inheritedFrom":{"type":"reference","target":1088,"name":"EnumLike.[enumKeys]"}},{"id":1047,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1048,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1049,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1050,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}},{"id":1051,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1052,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1053,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2360,"name":"Module.__inspect__"}},{"id":1070,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"inheritedFrom":{"type":"reference","target":1132,"name":"Indexable.indexType"}},{"id":1054,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1055,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1056,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1057,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1058,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2368,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2367,"name":"Module.__decode__"}},{"id":1059,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1060,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1061,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1062,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2373,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2372,"name":"Module.__encode__"}},{"id":1063,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1064,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1065,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2377,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2376,"name":"Module.__schema__"}},{"id":1044,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1045,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1046,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2358,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2357,"name":"Module.asInstance"}},{"id":1066,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1067,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1068,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1069,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2380,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2379,"name":"Module.asString"}},{"id":1071,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1072,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1073,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1134,"name":"Indexable.at"}}],"inheritedFrom":{"type":"reference","target":1133,"name":"Indexable.at"}},{"id":1041,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1042,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1043,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}},"inheritedFrom":{"type":"reference","target":2355,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2354,"name":"Module.hasInstance"}},{"id":1074,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1075,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1076,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1137,"name":"Indexable.indexOf"}}],"inheritedFrom":{"type":"reference","target":1136,"name":"Indexable.indexOf"}},{"id":1081,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1082,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1083,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}},{"id":1084,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1531,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1144,"name":"Indexable.range"}}],"inheritedFrom":{"type":"reference","target":1143,"name":"Indexable.range"}},{"id":1077,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1078,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1079,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}},{"id":1080,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":1140,"name":"Indexable.rangeSize"}}],"inheritedFrom":{"type":"reference","target":1139,"name":"Indexable.rangeSize"}}],"groups":[{"title":"References","children":[1040]},{"title":"Properties","children":[1085,1047,1070]},{"title":"Methods","children":[1054,1059,1063,1044,1066,1071,1041,1074,1081,1077]}],"categories":[{"title":"Codec","children":[1054,1059,1063]},{"title":"Formatting","children":[1066]},{"title":"Indexable","children":[1070,1071,1074,1081,1077]},{"title":"Type","children":[1047,1044,1041]},{"title":"__CATEGORY__","children":[1040,1085]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":35,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L35"}],"typeParameters":[{"id":1086,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","target":2352,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":1130,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}},{"type":"intrinsic","name":"number"}],"name":"Indexable","package":"@w5s/core"},{"type":"reference","target":1087,"typeArguments":[{"type":"reference","target":1086,"name":"T","package":"@w5s/core","qualifiedName":"Enum.Module.T","refersToTypeParameter":true}],"name":"EnumLike","package":"@w5s/core"}],"permalink":"/std/api/core/namespace/Enum#Module"},{"id":1035,"name":"KeyOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum keys of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":26,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L26"}],"typeParameters":[{"id":1036,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"ArrayValue"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":1995,"name":"Symbol.enumKeys","package":"@w5s/core"}},"objectType":{"type":"reference","target":1036,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"name":"ArrayValue","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Enum#KeyOf"},{"id":1037,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum values of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":30,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L30"}],"typeParameters":[{"id":1038,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":1035,"typeArguments":[{"type":"reference","target":1038,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"KeyOf","package":"@w5s/core","qualifiedName":"Enum.KeyOf"},"objectType":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/api/core/namespace/Enum#ValueOf"},{"id":1018,"name":"enumKeys","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Symbol for the property holding enum keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L15"}],"type":{"type":"intrinsic","name":"symbol"},"defaultValue":"Symbol.enumKeys","permalink":"/std/api/core/namespace/Enum#enumKeys"},{"id":1019,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"signatures":[{"id":1020,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Enum Object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({\\n  // typeName: \'MyEnum\', // Add this we want a named Enum\\n  Foo: \'foo\',\\n  Bar: \'bar\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"typeParameter":[{"id":1021,"name":"T","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1022,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"intersection","types":[{"type":"reference","target":1021,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":1023,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1024,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1024]}],"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}]}}]}}],"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reference","target":1021,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Enum#define"},{"id":1025,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"signatures":[{"id":1026,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.keys(MyEnum) // [\'Foo\', \'Bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"typeParameter":[{"id":1027,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1028,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1027,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1035,"typeArguments":[{"type":"reference","target":1027,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.KeyOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/api/core/namespace/Enum#keys"},{"id":1029,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"signatures":[{"id":1030,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.values(MyEnum) // [\'foo\', \'bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"typeParameter":[{"id":1031,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1032,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1031,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1037,"typeArguments":[{"type":"reference","target":1031,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.ValueOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/api/core/namespace/Enum#values"}],"groups":[{"title":"Interfaces","children":[1039]},{"title":"Type Aliases","children":[1035,1037]},{"title":"Variables","children":[1018]},{"title":"Functions","children":[1019,1025,1029]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":51,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L51"}],"permalink":"/std/api/core/namespace/Enum","categories":[],"previousId":872,"nextId":1149},{"id":1149,"name":"Indexable","variant":"declaration","kind":4,"flags":{},"children":[{"id":1150,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":1157,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexType"}},{"id":1154,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1155,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1156,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}},{"id":1151,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1152,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1153,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}},{"id":1162,"name":"range","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1163,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1164,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1165,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1531,"typeArguments":[{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}},{"id":1158,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1159,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1160,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1161,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"groups":[{"title":"Properties","children":[1157]},{"title":"Methods","children":[1154,1151,1162,1158]}],"categories":[{"title":"Indexable","children":[1157,1154,1151,1162,1158]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":102,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L102"}],"typeParameters":[{"id":1166,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1167,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":1130,"typeArguments":[{"type":"reference","target":1166,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1167,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"},{"type":"union","types":[{"type":"literal","value":"rangeSize"},{"type":"literal","value":"range"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/core/namespace/Indexable#Parameters"}],"groups":[{"title":"Interfaces","children":[1150]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"permalink":"/std/api/core/namespace/Indexable","categories":[],"previousId":1017,"nextId":1168},{"id":1168,"name":"Int","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"children":[{"id":1175,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709,"permalink":"/std/api/core/namespace/Int#typeName"},{"id":1182,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1183,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1184,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1185,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":1186,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1187,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1188,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Int#__inspect__"},{"id":1205,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":1206,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":1207,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/core/namespace/Int#__call__"},{"id":1189,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1190,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1191,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1192,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1193,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#__decode__"},{"id":1194,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1195,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1196,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1197,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Int#__encode__"},{"id":1198,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1199,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1200,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#__schema__"},{"id":1179,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1180,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1181,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Int#asInstance"},{"id":1201,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1202,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1203,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1204,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Int#asString"},{"id":1176,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1177,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1178,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}}],"permalink":"/std/api/core/namespace/Int#hasInstance"},{"id":1172,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"signatures":[{"id":1173,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":1174,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Int#unwrap"},{"id":1169,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"signatures":[{"id":1170,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"parameters":[{"id":1171,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/core/namespace/Int#wrap"}],"groups":[{"title":"References","children":[1175]},{"title":"Variables","children":[1182]},{"title":"Functions","children":[1205,1189,1194,1198,1179,1201,1176,1172,1169]}],"categories":[{"title":"Codec","children":[1189,1194,1198]},{"title":"Formatting","children":[1201]},{"title":"Type","children":[1182,1179,1176,1172,1169]},{"title":"__CATEGORY__","children":[1175,1205]}],"sources":[{"fileName":"packages/core/src/Int.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L8"},{"fileName":"packages/core/src/Int.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L16"}],"permalink":"/std/api/core/namespace/Int","previousId":1149,"nextId":1213},{"id":1213,"name":"JSON","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to encode/decode JSON. Instead of throwing errors like "},{"kind":"code","text":"`globalThis.JSON`"},{"kind":"text","text":", functions returns "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { JSON } from \'@w5s/core\';\\n\\nconst object = { a: true };\\nconst encoded = JSON.stringify(object); // Result.Ok(\'{\\"a\\":true}\')\\nif (Result.isOk(encoded)) {\\n  const decoded = JSON.parse(encoded); // Result.Ok({ a: true })\\n}\\n```"}]}]},"children":[{"id":1214,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"signatures":[{"id":1215,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse using "},{"kind":"code","text":"`JSON.parse()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = \'{ \\"a\\": true }\';\\nJSON.parse(valid); // Result.Ok({ a: true })\\n\\nconst invalid = \'{ \\"a\\": }\';\\nJSON.parse(invalid); // Result.Error(new SyntaxError(\'Unexpected token } in JSON at position 7\'))\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"parameters":[{"id":1216,"name":"anyString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/SyntaxError.ts","qualifiedName":"SyntaxError"},"name":"SyntaxError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/JSON#parse"},{"id":1217,"name":"stringify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"signatures":[{"id":1218,"name":"stringify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert to string using "},{"kind":"code","text":"`JSON.stringify()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = { a: true };\\nJSON.stringify(valid); // Result.Ok(\'{\\"a\\":true}\')\\n\\nconst circular = {\\n  get ref() {\\n    return this;\\n  },\\n};\\nJSON.stringify(circular);// Result.Error(new TypeError(...));\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"parameters":[{"id":1219,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to convert"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TypeError.ts","qualifiedName":"TypeError"},"name":"TypeError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/JSON#stringify"}],"groups":[{"title":"Functions","children":[1214,1217]}],"sources":[{"fileName":"packages/core/src/JSON.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L37"}],"permalink":"/std/api/core/namespace/JSON","categories":[],"previousId":1168,"nextId":1234},{"id":1234,"name":"Numeric","variant":"declaration","kind":4,"flags":{},"children":[{"id":1235,"name":"Add","variant":"declaration","kind":256,"flags":{},"children":[{"id":1236,"name":"+","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":1237,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":1238,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1240,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1239,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1241,"name":"Right","package":"@w5s/core","qualifiedName":"Add.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1242,"name":"Output","package":"@w5s/core","qualifiedName":"Add.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1236]}],"categories":[{"title":"Numeric","children":[1236]}],"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L1"}],"typeParameters":[{"id":1240,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1241,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1240,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1242,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1240,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Add"},{"id":1243,"name":"CheckedAdd","variant":"declaration","kind":256,"flags":{},"children":[{"id":1244,"name":"+?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"signatures":[{"id":1245,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"parameters":[{"id":1246,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1248,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1247,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1249,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedAdd.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1250,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedAdd.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1244]}],"categories":[{"title":"Numeric","children":[1244]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L3"}],"typeParameters":[{"id":1248,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1249,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1248,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1250,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1248,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedAdd"},{"id":1251,"name":"CheckedDivide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1252,"name":"/?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"signatures":[{"id":1253,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"parameters":[{"id":1254,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1256,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1255,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1257,"name":"Divider","package":"@w5s/core","qualifiedName":"CheckedDivide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1258,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedDivide.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1252]}],"categories":[{"title":"Numeric","children":[1252]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L3"}],"typeParameters":[{"id":1256,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1257,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1256,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1258,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1256,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedDivide"},{"id":1259,"name":"CheckedMultiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1260,"name":"*?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"signatures":[{"id":1261,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"parameters":[{"id":1262,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1264,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1263,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1265,"name":"Multiplier","package":"@w5s/core","qualifiedName":"CheckedMultiply.Multiplier","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1266,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedMultiply.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1260]}],"categories":[{"title":"Numeric","children":[1260]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L3"}],"typeParameters":[{"id":1264,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1265,"name":"Multiplier","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1264,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1266,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1264,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedMultiply"},{"id":1267,"name":"CheckedPower","variant":"declaration","kind":256,"flags":{},"children":[{"id":1268,"name":"**?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"signatures":[{"id":1269,"name":"**?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedPower<T> = ...;\\nconst result = TNumeric[\'**?\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"parameters":[{"id":1270,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1272,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}},{"id":1271,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1273,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedPower.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1274,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedPower.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1268]}],"categories":[{"title":"Numeric","children":[1268]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L3"}],"typeParameters":[{"id":1272,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1273,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1272,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}},{"id":1274,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1272,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedPower"},{"id":1275,"name":"CheckedRemainder","variant":"declaration","kind":256,"flags":{},"children":[{"id":1276,"name":"%?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedRemainder.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedRemainder.ts#L17"}],"signatures":[{"id":1277,"name":"%?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedRemainder<T> = ...;\\nconst result = Numeric[\'%?\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedRemainder.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedRemainder.ts#L17"}],"parameters":[{"id":1278,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1280,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedRemainder.Base","refersToTypeParameter":true}},{"id":1279,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1281,"name":"Divider","package":"@w5s/core","qualifiedName":"CheckedRemainder.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1282,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedRemainder.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1276]}],"categories":[{"title":"Numeric","children":[1276]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedRemainder.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedRemainder.ts#L3"}],"typeParameters":[{"id":1280,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1281,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1280,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedRemainder.Base","refersToTypeParameter":true}},{"id":1282,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1280,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedRemainder.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedRemainder"},{"id":1283,"name":"CheckedSubtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1284,"name":"-?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"signatures":[{"id":1285,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"parameters":[{"id":1286,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1288,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1287,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1289,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedSubtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1290,"name":"Output","package":"@w5s/core","qualifiedName":"CheckedSubtract.Output","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1284]}],"categories":[{"title":"Numeric","children":[1284]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L3"}],"typeParameters":[{"id":1288,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1289,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1288,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1290,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1288,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#CheckedSubtract"},{"id":1291,"name":"Divide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1292,"name":"/","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"signatures":[{"id":1293,"name":"/","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Divide<T> = ...;\\nconst result = Numeric[\'/\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"parameters":[{"id":1294,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the base part"}]},"type":{"type":"reference","target":1296,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1295,"name":"divider","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the divider part"}]},"type":{"type":"reference","target":1297,"name":"Divider","package":"@w5s/core","qualifiedName":"Divide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1298,"name":"Output","package":"@w5s/core","qualifiedName":"Divide.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1292]}],"categories":[{"title":"Numeric","children":[1292]}],"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L1"}],"typeParameters":[{"id":1296,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1297,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1296,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1298,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1296,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Divide"},{"id":1299,"name":"Multiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1300,"name":"*","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":1301,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":1302,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1304,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1303,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1305,"name":"Right","package":"@w5s/core","qualifiedName":"Multiply.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1306,"name":"Output","package":"@w5s/core","qualifiedName":"Multiply.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1300]}],"categories":[{"title":"Numeric","children":[1300]}],"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L1"}],"typeParameters":[{"id":1304,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1305,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1304,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1306,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1304,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Multiply"},{"id":1307,"name":"Negate","variant":"declaration","kind":256,"flags":{},"children":[{"id":1308,"name":"negate","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1309,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1310,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1311,"name":"Self","package":"@w5s/core","qualifiedName":"Negate.Self","refersToTypeParameter":true}}],"type":{"type":"reference","target":1312,"name":"Output","package":"@w5s/core","qualifiedName":"Negate.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1308]}],"categories":[{"title":"Numeric","children":[1308]}],"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L1"}],"typeParameters":[{"id":1311,"name":"Self","variant":"typeParam","kind":131072,"flags":{}},{"id":1312,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1311,"name":"Self","package":"@w5s/core","qualifiedName":"Negate.Self","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Negate"},{"id":1313,"name":"Power","variant":"declaration","kind":256,"flags":{},"children":[{"id":1314,"name":"**","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"signatures":[{"id":1315,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"parameters":[{"id":1316,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1318,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}},{"id":1317,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1319,"name":"Right","package":"@w5s/core","qualifiedName":"Power.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1320,"name":"Output","package":"@w5s/core","qualifiedName":"Power.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1314]}],"categories":[{"title":"Numeric","children":[1314]}],"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L1"}],"typeParameters":[{"id":1318,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1319,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1318,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}},{"id":1320,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1318,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Power"},{"id":1321,"name":"Remainder","variant":"declaration","kind":256,"flags":{},"children":[{"id":1322,"name":"%","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"signatures":[{"id":1323,"name":"%","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Remainder<T> = ...;\\nconst result = Numeric[\'%\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"parameters":[{"id":1324,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1326,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}},{"id":1325,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1327,"name":"Divider","package":"@w5s/core","qualifiedName":"Remainder.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1328,"name":"Output","package":"@w5s/core","qualifiedName":"Remainder.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1322]}],"categories":[{"title":"Numeric","children":[1322]}],"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L1"}],"typeParameters":[{"id":1326,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1327,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1326,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}},{"id":1328,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1326,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Remainder"},{"id":1329,"name":"Signed","variant":"declaration","kind":256,"flags":{},"children":[{"id":1330,"name":"abs","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1331,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1332,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1333,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]},{"id":1338,"name":"isNegative","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L40"}],"signatures":[{"id":1339,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L40"}],"parameters":[{"id":1340,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1341,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1334,"name":"isPositive","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L27"}],"signatures":[{"id":1335,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L27"}],"parameters":[{"id":1336,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1337,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1342,"name":"sign","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L53"}],"signatures":[{"id":1343,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L53"}],"parameters":[{"id":1344,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1345,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1346,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1330,1338,1334,1342]}],"categories":[{"title":"Numeric","children":[1330,1338,1334,1342]}],"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L1"}],"typeParameters":[{"id":1346,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Numeric#Signed"},{"id":1347,"name":"Subtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1348,"name":"-","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":1349,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":1350,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1352,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1351,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1353,"name":"Right","package":"@w5s/core","qualifiedName":"Subtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1354,"name":"Output","package":"@w5s/core","qualifiedName":"Subtract.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1348]}],"categories":[{"title":"Numeric","children":[1348]}],"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L1"}],"typeParameters":[{"id":1352,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1353,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1352,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1354,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1352,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Numeric#Subtract"},{"id":1355,"name":"Zero","variant":"declaration","kind":256,"flags":{},"children":[{"id":1359,"name":"isZero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1360,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1361,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1362,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1363,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1356,"name":"zero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1357,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1358,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1363,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1359,1356]}],"categories":[{"title":"Numeric","children":[1359,1356]}],"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L1"}],"typeParameters":[{"id":1363,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Numeric#Zero"}],"groups":[{"title":"Interfaces","children":[1235,1243,1251,1259,1267,1275,1283,1291,1299,1307,1313,1321,1329,1347,1355]}],"sources":[{"fileName":"packages/core/src/Numeric/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/index.ts#L1"}],"permalink":"/std/api/core/namespace/Numeric","categories":[],"previousId":1213,"nextId":1370},{"id":1370,"name":"Option","variant":"declaration","kind":4,"flags":{},"children":[{"id":1426,"name":"None","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`undefined`"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":72,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L72"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/api/core/namespace/Option#None"},{"id":1427,"name":"Some","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Non "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and non "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" value"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L77"}],"typeParameters":[{"id":1428,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1428,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","target":1428,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/api/core/namespace/Option#Some"},{"id":1375,"name":"None","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/api/core/namespace/Option#None"},{"id":1371,"name":"Some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"signatures":[{"id":1372,"name":"Some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"An identity function that validates passed value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"typeParameter":[{"id":1373,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1374,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the non empty value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1373,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1373,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#Some"},{"id":1376,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"signatures":[{"id":1377,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":" if the option is "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":", otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" with the value and returns the result.\\nSome languages call this operation "},{"kind":"code","text":"`flatMap`"},{"kind":"text","text":" or "},{"kind":"code","text":"`chain`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (x: number): Option<number> => Option.Some(x * x);\\n\\nOption.andThen(Option.Some(2), square); // Option.Some(16)\\nOption.andThen(Option.None, square); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"typeParameter":[{"id":1378,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1379,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1380,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1378,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}},{"id":1381,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1382,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L20"}],"signatures":[{"id":1383,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L20"}],"parameters":[{"id":1384,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1378,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1379,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1379,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#andThen"},{"id":1385,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"signatures":[{"id":1386,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to coerce value to "},{"kind":"code","text":"`Option`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.from(null);// undefined\\nOption.from(undefined);// undefined\\nOption.from(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"typeParameter":[{"id":1387,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1388,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the converted value"}]},"type":{"type":"reference","target":1387,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1387,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option/from.ts","qualifiedName":"NullableValues"},"name":"NullableValues","package":"@w5s/core"}],"name":"Exclude","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#from"},{"id":1389,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"signatures":[{"id":1390,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nconst x = None;\\nOption.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"typeParameter":[{"id":1391,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1392,"name":"DefaultValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1393,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1391,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}},{"id":1394,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a default value"}]},"type":{"type":"reflection","declaration":{"id":1395,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"signatures":[{"id":1396,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"type":{"type":"reference","target":1392,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1391,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1392,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/api/core/namespace/Option#getOrElse"},{"id":1397,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L61"}],"signatures":[{"id":1398,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", throw an error if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Some(\'foo\');\\nOption.getOrThrow(x);// \'foo\'\\n\\nlet x = None;\\nOption.getOrThrow(x);// throw TypeError(\'option must not be a null|undefined\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L61"}],"typeParameter":[{"id":1399,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1400,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1399,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}}],"type":{"type":"reference","target":1399,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Option#getOrThrow"},{"id":1401,"name":"isNone","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L62"}],"signatures":[{"id":1402,"name":"isNone","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"code","text":"`null`"},{"kind":"text","text":"or "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isNone(None);// true\\nOption.isNone(undefined);// true\\nOption.isNone(null);// true\\n\\nOption.isNone(Some(\'foo\'));// false\\nOption.isNone(\'foo\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L62"}],"parameters":[{"id":1403,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1429,"typeArguments":[{"type":"intrinsic","name":"never"}],"name":"OptionLike","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Option#isNone"},{"id":1404,"name":"isSome","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"signatures":[{"id":1405,"name":"isSome","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is neither "},{"kind":"code","text":"`null`"},{"kind":"text","text":" nor "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isSome(Option.None);// false\\nOption.isSome(undefined);// false\\nOption.isSome(null);// false\\n\\nOption.isSome(Option.Some(\'foo\'));// true\\nOption.isSome(\'foo\');// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"typeParameter":[{"id":1406,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1407,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1406,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1406,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1429,"typeArguments":[{"type":"intrinsic","name":"never"}],"name":"OptionLike","package":"@w5s/core"}],"name":"Exclude","package":"typescript"}}}],"permalink":"/std/api/core/namespace/Option#isSome"},{"id":1408,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L64"}],"signatures":[{"id":1409,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Option<U>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"code","text":"`Some`"},{"kind":"text","text":" value, leaving a "},{"kind":"code","text":"`None`"},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.map(x, (value) => `${value}_bar`));// Some(\'foo_bar\') == \'foo_bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L64"}],"typeParameter":[{"id":1410,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1411,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1412,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1410,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}},{"id":1413,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1414,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L18"}],"signatures":[{"id":1415,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L18"}],"parameters":[{"id":1416,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1410,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1411,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}]}}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1411,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#map"},{"id":1417,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L65"}],"signatures":[{"id":1418,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the option if it contains a value, otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" and returns the result."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst alt = () => Some(\'bar\')\\n\\nOption.orElse(Option.Some(\'foo\'), alt); // Option.Some(\'foo\')\\nOption.orElse(Option.None, alt); // Option.Some(\'bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L65"}],"typeParameter":[{"id":1419,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1420,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1419,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}},{"id":1421,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1422,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":17,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L17"}],"signatures":[{"id":1423,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":17,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L17"}],"type":{"type":"reference","target":1429,"typeArguments":[{"type":"reference","target":1419,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionLike","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1419,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Option#orElse"}],"groups":[{"title":"Type Aliases","children":[1426,1427]},{"title":"Variables","children":[1375]},{"title":"Functions","children":[1371,1376,1385,1389,1397,1401,1404,1408,1417]}],"categories":[{"title":"Accessor","children":[1389,1397]},{"title":"Constructor","children":[1371,1385]},{"title":"Type","children":[1401,1404]},{"title":"__CATEGORY__","children":[1426,1427,1375,1376,1408,1417]}],"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":55,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"},{"fileName":"packages/core/src/Option.ts","line":68,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L68"}],"permalink":"/std/api/core/namespace/Option","previousId":1234,"nextId":1431},{"id":1431,"name":"Order","variant":"declaration","kind":4,"flags":{},"children":[{"id":1441,"name":"combine","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L26"}],"signatures":[{"id":1442,"name":"combine","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Person {\\n  name: string;\\n  age: number;\\n}\\nconst comparePerson = Order.combine<Person>(\\n  // 1. Compare by name (ascending)\\n  Order.compareBy((person) => person.name, String.compare),\\n  // 2. Compare by age (ascending)\\n  Order.compareBy((person) => person.age, Number.compare),\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L26"}],"typeParameter":[{"id":1443,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1444,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1443,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}},{"id":1445,"name":"others","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1443,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}}],"type":{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1443,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#combine"},{"id":1432,"name":"compareBy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L25"}],"signatures":[{"id":1433,"name":"compareBy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1431,"tsLinkText":""},{"kind":"text","text":" function that will map the parameters using "},{"kind":"code","text":"`selectFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst compareByName = Order.compareBy((named: { name: string }) => named.name, String.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L25"}],"typeParameter":[{"id":1434,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":1435,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1436,"name":"selector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes a "},{"kind":"code","text":"`From`"},{"kind":"text","text":" value and returns a "},{"kind":"code","text":"`To`"},{"kind":"text","text":" value."}]},"type":{"type":"reflection","declaration":{"id":1437,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":14,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L14"}],"signatures":[{"id":1438,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":14,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L14"}],"parameters":[{"id":1439,"name":"from","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1435,"name":"To","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1434,"name":"From","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":1440,"name":"compareTo","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1431,"tsLinkText":""},{"kind":"text","text":" function."}]},"type":{"type":"reference","target":1469,"typeArguments":[{"type":"reference","target":1434,"name":"From","package":"@w5s/core","refersToTypeParameter":true}],"name":"OrderLike","package":"@w5s/core"}}],"type":{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1435,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#compareBy"},{"id":1446,"name":"primitive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L27"}],"signatures":[{"id":1447,"name":"primitive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"An order function for "},{"kind":"inline-tag","tag":"@link","text":"Primitive"},{"kind":"text","text":" values (i.e. boolean, bigint, number, string)"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n[1, 3, 2].toSorted(Order.primitive); // [1, 2, 3]\\n[\'a\', \'c\', \'b\'].toSorted(Order.primitive); // [\'a\', \'b\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L27"}],"parameters":[{"id":1448,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":1449,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}},{"id":1450,"name":"primitive","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L27"}],"parameters":[{"id":1451,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":1452,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}},{"id":1453,"name":"primitive","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L27"}],"parameters":[{"id":1454,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1455,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}},{"id":1456,"name":"primitive","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L27"}],"parameters":[{"id":1457,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1458,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#primitive"},{"id":1459,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L28"}],"signatures":[{"id":1460,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a reversed "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1431,"tsLinkText":""},{"kind":"text","text":" from the given "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1431,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Comparable","target":930},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOrder.reverse(Number.compare); // == (left, right) => Ordering.reverse(Number.compare(left, right))\\nOrder.reverse(Number); // == reverse(Number.compare)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L28"}],"typeParameter":[{"id":1461,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1462,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparator function or comparable object to be reversed."}]},"type":{"type":"reference","target":1469,"typeArguments":[{"type":"reference","target":1461,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"OrderLike","package":"@w5s/core"}}],"type":{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1461,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Order#reverse"}],"groups":[{"title":"Functions","children":[1441,1432,1446,1459]}],"categories":[{"title":"Constructor","children":[1432]},{"title":"__CATEGORY__","children":[1441,1446,1459]}],"sources":[{"fileName":"packages/core/src/Order.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L14"},{"fileName":"packages/core/src/Order.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L24"}],"permalink":"/std/api/core/namespace/Order","previousId":1370,"nextId":1471},{"id":1471,"name":"Ordering","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate ordering values"}]},"children":[{"id":1477,"name":"Equal","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0","permalink":"/std/api/core/namespace/Ordering#Equal"},{"id":1478,"name":"Greater","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1","permalink":"/std/api/core/namespace/Ordering#Greater"},{"id":1476,"name":"Less","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1","permalink":"/std/api/core/namespace/Ordering#Less"},{"id":1523,"name":"[enumKeys]","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L48"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"Less"},{"type":"literal","value":"Equal"},{"type":"literal","value":"Greater"}]}}},"permalink":"/std/api/core/namespace/Ordering#[enumKeys]"},{"id":1485,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1486,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1487,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1488,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1489,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1490,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1491,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Ordering#__inspect__"},{"id":1508,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/core/namespace/Ordering#indexType"},{"id":1475,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"},{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'","permalink":"/std/api/core/namespace/Ordering#typeName"},{"id":1492,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1493,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1494,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1495,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1496,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#__decode__"},{"id":1497,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1498,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1499,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1500,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/Ordering#__encode__"},{"id":1501,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1502,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1503,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#__schema__"},{"id":1482,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1483,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1484,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#asInstance"},{"id":1504,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1505,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1506,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1507,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/Ordering#asString"},{"id":1509,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1510,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1511,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#at"},{"id":1479,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1480,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1481,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}}],"permalink":"/std/api/core/namespace/Ordering#hasInstance"},{"id":1512,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1513,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1514,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#indexOf"},{"id":1519,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1520,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1521,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1522,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1531,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#range"},{"id":1515,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1516,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1517,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1518,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/core/namespace/Ordering#rangeSize"},{"id":1472,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"signatures":[{"id":1473,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reverses the "},{"kind":"code","text":"`Ordering`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Less`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Less`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nreverse(Ordering.Less); // == Ordering.Greater\\nreverse(Ordering.Greater); // == Ordering.Less\\nreverse(Ordering.Equal); // == Ordering.Equal\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"parameters":[{"id":1474,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ordering"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Ordering#reverse"}],"groups":[{"title":"Variables","children":[1477,1478,1476,1523,1485,1508,1475]},{"title":"Functions","children":[1492,1497,1501,1482,1504,1509,1479,1512,1519,1515,1472]}],"categories":[{"title":"Codec","children":[1492,1497,1501]},{"title":"Formatting","children":[1504]},{"title":"Indexable","children":[1508,1509,1512,1519,1515]},{"title":"Type","children":[1485,1475,1482,1479]},{"title":"__CATEGORY__","children":[1477,1478,1476,1523,1472]}],"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"permalink":"/std/api/core/namespace/Ordering","previousId":1431,"nextId":1543},{"id":1543,"name":"Ref","variant":"declaration","kind":4,"flags":{},"children":[{"id":1564,"name":"current","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Current value symbol"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":25,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L25"}],"type":{"type":"literal","value":"current"},"defaultValue":"\'current\'","permalink":"/std/api/core/namespace/Ref#current"},{"id":1544,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"signatures":[{"id":1545,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" has a "},{"kind":"code","text":"`current`"},{"kind":"text","text":" property"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nRef.hasInstance(Ref(123)) // true\\nRef.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"parameters":[{"id":1546,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1539,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Ref","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Ref#hasInstance"},{"id":1556,"name":"modify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1557,"name":"modify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value using a mapping function that returns the new value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.modify(ref, (current) => current + \'bar\'); // Ref.read(ref) == \'foobar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"typeParameter":[{"id":1558,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1559,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1539,"typeArguments":[{"type":"reference","target":1558,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1560,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapping function that will be applied"}]},"type":{"type":"reflection","declaration":{"id":1561,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1562,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"parameters":[{"id":1563,"name":"current","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1558,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1558,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/namespace/Ref#modify"},{"id":1547,"name":"read","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"signatures":[{"id":1548,"name":"read","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current ref value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.read(ref); // \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"typeParameter":[{"id":1549,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1550,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1539,"typeArguments":[{"type":"reference","target":1549,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":1549,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Ref#read"},{"id":1551,"name":"write","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"signatures":[{"id":1552,"name":"write","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.write(ref, \'bar\'); // Ref.read(ref) == \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"typeParameter":[{"id":1553,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1554,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1539,"typeArguments":[{"type":"reference","target":1553,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1555,"name":"newValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the new value to be set"}]},"type":{"type":"reference","target":1553,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/namespace/Ref#write"}],"groups":[{"title":"Variables","children":[1564]},{"title":"Functions","children":[1544,1556,1547,1551]}],"categories":[{"title":"Accessor","children":[1556,1547,1551]},{"title":"Type","children":[1544]},{"title":"__CATEGORY__","children":[1564]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"permalink":"/std/api/core/namespace/Ref","previousId":1471,"nextId":1565},{"id":1565,"name":"Result","variant":"declaration","kind":4,"flags":{},"children":[{"id":1689,"name":"Error","variant":"declaration","kind":256,"flags":{},"children":[{"id":1691,"name":"error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The error value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L89"}],"type":{"type":"reference","target":1692,"name":"E","package":"@w5s/core","qualifiedName":"Result.Error.E","refersToTypeParameter":true}},{"id":1690,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`false`"},{"kind":"text","text":" only for Error objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L85"}],"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[1691,1690]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":81,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L81"}],"typeParameters":[{"id":1692,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Result#Error"},{"id":1685,"name":"Ok","variant":"declaration","kind":256,"flags":{},"children":[{"id":1686,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" only for Ok objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":74,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L74"}],"type":{"type":"literal","value":true}},{"id":1687,"name":"value","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The success value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":78,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L78"}],"type":{"type":"reference","target":1688,"name":"V","package":"@w5s/core","qualifiedName":"Result.Ok.V","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[1686,1687]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":70,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L70"}],"typeParameters":[{"id":1688,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/namespace/Result#Ok"},{"id":1571,"name":"Error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"signatures":[{"id":1572,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":1573,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"typeParameter":[{"id":1574,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1575,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":1574,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1574,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#Error"},{"id":1566,"name":"Ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"signatures":[{"id":1567,"name":"Ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":1568,"name":"Ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"typeParameter":[{"id":1569,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1570,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1569,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1569,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#Ok"},{"id":1576,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"signatures":[{"id":1577,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (num: number): Result<number, \'TestError\'> => Result.Ok(num * num);\\nResult.andThen(Result.Ok(4), square); // Result.Ok(16)\\nResult.andThen(Result.Error(\'TestError\'), square); // Result.Error(\'TestError\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"typeParameter":[{"id":1578,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1579,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1580,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1581,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1582,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1578,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1579,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1583,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a value mapping function"}]},"type":{"type":"reflection","declaration":{"id":1584,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"signatures":[{"id":1585,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"parameters":[{"id":1586,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1578,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1580,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1581,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1580,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":1579,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1581,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#andThen"},{"id":1587,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"signatures":[{"id":1588,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1375,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.get(x);// Option.Some(\'foo\')\\n\\nlet x = Error(\'foo\');\\nResult.get(x);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1589,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1590,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1589,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1427,"typeArguments":[{"type":"reference","target":1589,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1591,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"parameters":[{"id":1592,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1426,"name":"Option.None","package":"@w5s/core"}},{"id":1593,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1594,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1595,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1594,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1594,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#get"},{"id":1596,"name":"getError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"signatures":[{"id":1597,"name":"getError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1375,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getError(x);// Option.None\\n\\nlet x = Error(\'foo\');\\nResult.getError(x);// Option.Some(\'foo\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1598,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1599,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1598,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1427,"typeArguments":[{"type":"reference","target":1598,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1600,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"parameters":[{"id":1601,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1426,"name":"Option.None","package":"@w5s/core"}},{"id":1602,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1603,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1604,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":1603,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1603,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#getError"},{"id":1605,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"signatures":[{"id":1606,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"typeParameter":[{"id":1607,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1608,"name":"VDefault","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1609,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1607,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}},{"id":1610,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns default value"}]},"type":{"type":"reflection","declaration":{"id":1611,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"signatures":[{"id":1612,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"type":{"type":"reference","target":1608,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1607,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1608,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/api/core/namespace/Result#getOrElse"},{"id":1613,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"signatures":[{"id":1614,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":", throw "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":".\\n\\n **\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrThrow(x);// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrThrow(x);// throw \'error\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"typeParameter":[{"id":1615,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1616,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1615,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1615,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Result#getOrThrow"},{"id":1617,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"signatures":[{"id":1618,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nResult.hasInstance(null); // === false\\nResult.hasInstance(Result.Ok(null)); // === true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"parameters":[{"id":1619,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}}],"permalink":"/std/api/core/namespace/Result#hasInstance"},{"id":1620,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"signatures":[{"id":1621,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(Result.isError(x));// false\\n\\nlet x = Error(\'foo\');\\nconsole.log(Result.isError(x));// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"typeParameter":[{"id":1622,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1623,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1624,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1622,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1623,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1689,"typeArguments":[{"type":"reference","target":1623,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Error","package":"@w5s/core","qualifiedName":"Result.Error"}}}],"permalink":"/std/api/core/namespace/Result#isError"},{"id":1625,"name":"isOk","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"signatures":[{"id":1626,"name":"isOk","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(isOk(x));// true\\n\\nlet x = Error(\'foo\');\\nconsole.log(isOk(x));// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"typeParameter":[{"id":1627,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1628,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1629,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1627,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1628,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1685,"typeArguments":[{"type":"reference","target":1627,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ok","package":"@w5s/core","qualifiedName":"Result.Ok"}}}],"permalink":"/std/api/core/namespace/Result#isOk"},{"id":1630,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"signatures":[{"id":1631,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<ValueFrom, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<ValueTo, Error>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Ok(\'foo\');\\nResult.map(result, (value) => `${value}_bar`));// Ok(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"typeParameter":[{"id":1632,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1633,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1634,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1635,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1632,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1634,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1636,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1637,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"signatures":[{"id":1638,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"parameters":[{"id":1639,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1632,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1633,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1633,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1634,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#map"},{"id":1640,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"signatures":[{"id":1641,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Error(\'foo\');\\nResult.mapError(result, (value) => `${value}_bar`));// Error(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"typeParameter":[{"id":1642,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1643,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1644,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1645,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1642,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1643,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1646,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error  mapper function"}]},"type":{"type":"reflection","declaration":{"id":1647,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"signatures":[{"id":1648,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"parameters":[{"id":1649,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1643,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1644,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1642,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1644,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#mapError"},{"id":1650,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"signatures":[{"id":1651,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1571,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1566,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on result values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst handleError = (message: string) => Result.Ok(message + \'_handled\');\\nResult.orElse(Result.Error(\'TestError\'), square); // Result.Ok(\'TestError_handled\')\\nResult.orElse(Result.Ok(4), square); // Result.Ok(4)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"typeParameter":[{"id":1652,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1653,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1654,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1655,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1656,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1652,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1653,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1657,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a error mapping function"}]},"type":{"type":"reflection","declaration":{"id":1658,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"signatures":[{"id":1659,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"parameters":[{"id":1660,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1653,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1654,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1655,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1652,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1654,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"reference","target":1655,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#orElse"},{"id":1661,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"signatures":[{"id":1662,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Ok(block())`"},{"kind":"text","text":". If an error was thrown then it returns "},{"kind":"code","text":"`Error(onError(<<thrown error>>))`"},{"kind":"text","text":" instead"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class InvalidURLError extends Error {}\\nconst result = Result.tryCall(\\n () => new URL(\'my/url\'),\\n (error) => new InvalidURLError()\\n);\\n\\nconst class FetchError extends Error {}\\nconst result = Result.tryCall(\\n () => fetch(\'my/url\'),\\n () => new FetchError()\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":1663,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1664,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1665,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":1666,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1667,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1663,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}},{"id":1668,"name":"onError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":1669,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1670,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"parameters":[{"id":1671,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1664,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1663,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1664,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":1672,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":1673,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1674,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1675,"name":"block","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1676,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1677,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1673,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}},{"id":1678,"name":"onError","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1679,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1680,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"parameters":[{"id":1681,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1674,"name":"E","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1673,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1674,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Result#tryCall"}],"groups":[{"title":"Interfaces","children":[1689,1685]},{"title":"Functions","children":[1571,1566,1576,1587,1596,1605,1613,1617,1620,1625,1630,1640,1650,1661]}],"categories":[{"title":"Accessor","children":[1587,1596,1605,1613]},{"title":"Constructor","children":[1571,1566]},{"title":"Type","children":[1617,1620,1625]},{"title":"__CATEGORY__","children":[1689,1685,1576,1630,1640,1650,1661]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"permalink":"/std/api/core/namespace/Result","previousId":1543,"nextId":1693},{"id":1693,"name":"String","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`string`"}]},"children":[{"id":1820,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709,"permalink":"/std/api/core/namespace/String#typeName"},{"id":1827,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1828,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1829,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1830,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1831,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1832,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1833,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/core/namespace/String#__inspect__"},{"id":1810,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1811,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1812,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1813,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1814,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#!="},{"id":1774,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1775,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1776,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1777,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1778,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#<"},{"id":1769,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":1770,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1771,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1772,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1773,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#<="},{"id":1815,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1816,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1817,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1818,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1819,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#=="},{"id":1784,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1785,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1786,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1787,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1788,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#>"},{"id":1779,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1780,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1781,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1782,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1783,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#>="},{"id":1834,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1835,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1836,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1837,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1838,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#__decode__"},{"id":1839,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1840,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1841,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1842,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/core/namespace/String#__encode__"},{"id":1843,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1844,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1845,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#__schema__"},{"id":1824,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1825,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1826,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#asInstance"},{"id":1846,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1847,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1848,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1849,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#asString"},{"id":1694,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"signatures":[{"id":1695,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the character at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst string = \'bar\';\\nString.at(string, 1) // Option.Some(\'a\')\\nString.at(string, -1) //  Option.Some(\'r\') i.e. the last\\nString.at(string, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"parameters":[{"id":1696,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1697,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":871,"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#at"},{"id":1799,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1800,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1801,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1802,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1803,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1804,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#clamp"},{"id":1764,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":1765,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1471,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1431}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":1766,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1767,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1768,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#compare"},{"id":1698,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"signatures":[{"id":1699,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.concat([\'a\', \'b\', \'c\']) // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"parameters":[{"id":1700,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#concat"},{"id":1701,"name":"endsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"signatures":[{"id":1702,"name":"endsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string ends with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.endsWith(\'abc\', \'bc\'); // true\\nString.endsWith(\'abc\', \'ab\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"parameters":[{"id":1703,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1704,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#endsWith"},{"id":1805,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1806,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1807,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1808,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1809,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#equals"},{"id":1821,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1822,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1823,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/api/core/namespace/String#hasInstance"},{"id":1705,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"signatures":[{"id":1706,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.includes(\'abc\', \'ab\'); // true\\nString.includes(\'abc\', \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"parameters":[{"id":1707,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1708,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#includes"},{"id":1709,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"signatures":[{"id":1710,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.indexOf(\'aa\', \'a\'); // Option.Some(0)\\nString.indexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.indexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"parameters":[{"id":1711,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1712,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1713,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1208,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#indexOf"},{"id":1714,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"signatures":[{"id":1715,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.isEmpty(\'\');// true\\nString.isEmpty(\'abc\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"parameters":[{"id":1716,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#isEmpty"},{"id":1717,"name":"join","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"signatures":[{"id":1718,"name":"join","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.join(\'|\', [\'a\', \'b\', \'c\']) // \'a|b|c\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"parameters":[{"id":1719,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the separator"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1720,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#join"},{"id":1721,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"signatures":[{"id":1722,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.lastIndexOf(\'aa\', \'a\'); // Option.Some(1)\\nString.lastIndexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.lastIndexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"parameters":[{"id":1723,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1724,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1725,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1208,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#lastIndexOf"},{"id":1794,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1795,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1796,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1797,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1798,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#max"},{"id":1789,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1790,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1791,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1792,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1793,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#min"},{"id":1726,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"signatures":[{"id":1727,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new string from all parts passed as arguments"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.of(\'a\', \'b\', \'c\') // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"parameters":[{"id":1728,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"a list of parts"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#of"},{"id":1729,"name":"padEnd","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"signatures":[{"id":1730,"name":"padEnd","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padEnd(\'abc\', 9, \'1234\'); // \'abcd1234\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"parameters":[{"id":1731,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1732,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":1733,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#padEnd"},{"id":1734,"name":"padStart","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"signatures":[{"id":1735,"name":"padStart","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padStart(\'abc\', 9, \'1234\'); // \'1234abcd\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"parameters":[{"id":1736,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1737,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":1738,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#padStart"},{"id":1739,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"signatures":[{"id":1740,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.size(\'\') // 0\\nString.size(\'foo bar\') // 6\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"parameters":[{"id":1741,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1208,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/String#size"},{"id":1742,"name":"split","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"signatures":[{"id":1743,"name":"split","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Split a string into substrings using the specified separator and return them as an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.split(\'a|b|c\', \'|\'); // [\'a\', \'b\', \'c\']\\nString.split(\'a|b|c\', \'|\', 2); // [\'a\', \'b\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"parameters":[{"id":1744,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1745,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reflection","declaration":{"id":1746,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1747,"name":"[split]","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"signatures":[{"id":1748,"name":"[split]","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"parameters":[{"id":1749,"name":"string","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1750,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"groups":[{"title":"Methods","children":[1747]}],"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}]}}]}},{"id":1751,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value used to limit the number of elements returned in the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/api/core/namespace/String#split"},{"id":1752,"name":"startsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"signatures":[{"id":1753,"name":"startsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string starts with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.startsWith(\'abc\', \'ab\'); // true\\nString.startsWith(\'abc\', \'bc\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"parameters":[{"id":1754,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1755,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/core/namespace/String#startsWith"},{"id":1756,"name":"truncate","variant":"declaration","kind":64,"flags":{},"children":[{"id":1760,"name":"defaultOptions","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}],"type":{"type":"reflection","declaration":{"id":1761,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1762,"name":"ellipsis","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L44"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'...\'"},{"id":1763,"name":"maxLength","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":45,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L45"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[1762,1763]}],"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}]}},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[1760]}],"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"signatures":[{"id":1757,"name":"truncate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Truncates a string to a specified length, adding \'...\' if necessary."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntruncate(\'Hello World\', { maxLength: 1 }); // \'Hello World\'\\ntruncate(\'Hello World\', { maxLength: 5 }); // \'He...\'\\ntruncate(\'Hello World\', { maxLength: 5, ellipsis: \'[...]\' }); // \'He[...]\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"parameters":[{"id":1758,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The input string to truncate. If not provided or null/undefined,\\n                          will return the default truncation string (\'...\')"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1759,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An optional object containing additional options for the truncation."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/String/truncate.ts","qualifiedName":"truncate.Options"},"name":"Options","package":"@w5s/core","qualifiedName":"truncate.Options"},"defaultValue":"truncate.defaultOptions"}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/core/namespace/String#truncate"}],"groups":[{"title":"References","children":[1820]},{"title":"Variables","children":[1827]},{"title":"Functions","children":[1810,1774,1769,1815,1784,1779,1834,1839,1843,1824,1846,1694,1799,1764,1698,1701,1805,1821,1705,1709,1714,1717,1721,1794,1789,1726,1729,1734,1739,1742,1752,1756]}],"categories":[{"title":"Accessor","children":[1694,1739]},{"title":"Codec","children":[1834,1839,1843]},{"title":"Combinator","children":[1698,1717]},{"title":"Comparator","children":[1810,1774,1769,1815,1784,1779,1799,1764,1805,1794,1789]},{"title":"Constructor","children":[1726]},{"title":"Formatting","children":[1846]},{"title":"Predicate","children":[1701,1705,1714,1752]},{"title":"Type","children":[1827,1824,1821]},{"title":"__CATEGORY__","children":[1820,1709,1721,1729,1734,1742,1756]}],"sources":[{"fileName":"packages/core/src/String.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L24"}],"permalink":"/std/api/core/namespace/String","previousId":1565,"nextId":1856},{"id":1856,"name":"Struct","variant":"declaration","kind":4,"flags":{},"children":[{"id":1919,"name":"DefineParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":1933,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1934,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1935,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1936,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},{"id":1937,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1938,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1939,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":1947,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":1948,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":1949,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":1950,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.hasInstance"}},{"id":1920,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":90,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L90"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":1925,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1926,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1927,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1928,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1929,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}},{"id":1921,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1922,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1923,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1924,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}},{"id":1930,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1931,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1932,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}},{"id":1940,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1941,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1942,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":1943,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1944,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1945,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1946,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"groups":[{"title":"Properties","children":[1933,1947,1920]},{"title":"Methods","children":[1925,1921,1930,1940,1943]}],"categories":[{"title":"Codec","children":[1925,1921,1930]},{"title":"Formatting","children":[1943]},{"title":"Type","children":[1933,1940]},{"title":"__CATEGORY__","children":[1947,1920]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}],"typeParameters":[{"id":1951,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1850,"typeArguments":[{"type":"reflection","declaration":{"id":1952,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1953,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1953]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}]}}],"name":"Struct","package":"@w5s/core"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":2319,"typeArguments":[{"type":"reference","target":1951,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Type.Parameters","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/core/namespace/Struct#DefineParameters"},{"id":1870,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":1908,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":1909,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L40"}],"signatures":[{"id":1910,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L40"}],"parameters":[{"id":1911,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1868,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":749,"name":"Callable.__call__"}},{"id":1885,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":1886,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1887,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1888,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},{"id":1889,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1890,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":1891,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2360,"name":"Module.__inspect__"}},{"id":1878,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":60,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L60"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":2353,"name":"Module.typeName"}},{"id":1892,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1893,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1894,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1895,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1896,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2368,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2367,"name":"Module.__decode__"}},{"id":1897,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1898,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1899,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1900,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2373,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2372,"name":"Module.__encode__"}},{"id":1901,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1902,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1903,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2377,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2376,"name":"Module.__schema__"}},{"id":1882,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1883,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1884,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2358,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2357,"name":"Module.asInstance"}},{"id":1904,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1905,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1906,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1907,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2380,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2379,"name":"Module.asString"}},{"id":1874,"name":"create","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L54"}],"signatures":[{"id":1875,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L54"}],"parameters":[{"id":1876,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1877,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":1868,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]},{"id":1879,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1880,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1881,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2355,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2354,"name":"Module.hasInstance"}}],"groups":[{"title":"Properties","children":[1908,1885,1878]},{"title":"Methods","children":[1892,1897,1901,1882,1904,1874,1879]}],"categories":[{"title":"Callable","children":[1908]},{"title":"Codec","children":[1892,1897,1901]},{"title":"Constructor","children":[1874]},{"title":"Formatting","children":[1904]},{"title":"Type","children":[1885,1878,1882,1879]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":38,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L38"}],"typeParameters":[{"id":1912,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1850,"name":"Struct","package":"@w5s/core"}}],"signatures":[{"id":1913,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":47,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L47"}],"parameters":[{"id":1914,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":1868,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":747,"typeArguments":[{"type":"reflection","declaration":{"id":1871,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L40"}],"signatures":[{"id":1872,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":1873,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1868,"typeArguments":[{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1912,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/api/core/namespace/Struct#Module"},{"id":1917,"name":"ModuleParameter","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":69,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L69"}],"typeParameters":[{"id":1918,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2301,"typeArguments":[{"type":"reference","target":1918,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":1988,"name":"Symbol.inspect","package":"@w5s/core"}],"name":"Pick","package":"typescript"},{"type":"reference","target":643,"typeArguments":[{"type":"reference","target":1918,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}]},"permalink":"/std/api/core/namespace/Struct#ModuleParameter"},{"id":1868,"name":"Parameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new Struct"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":36,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L36"}],"typeParameters":[{"id":1869,"name":"Model","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1869,"name":"Model","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1916,"name":"Struct.type","package":"@w5s/core"}],"name":"Omit","package":"typescript"},"permalink":"/std/api/core/namespace/Struct#Parameters"},{"id":1916,"name":"type","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":65,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L65"},{"fileName":"packages/core/src/Struct.ts","line":67,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L67"}],"type":{"type":"query","queryType":{"type":"reference","target":1915,"name":"type","package":"@w5s/core","qualifiedName":"Struct.type"}},"permalink":"/std/api/core/namespace/Struct#type"},{"id":1915,"name":"type","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"The type property discriminator"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":65,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L65"},{"fileName":"packages/core/src/Struct.ts","line":67,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L67"}],"type":{"type":"literal","value":"_"},"defaultValue":"\'_\'","permalink":"/std/api/core/namespace/Struct#type"},{"id":1857,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":84,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L84"}],"signatures":[{"id":1858,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Struct from "},{"kind":"code","text":"`properties`"},{"kind":"text","text":".\\nStruct adds debugging / inspecting abilities"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.define<{ some: boolean }>({ typeName: \'SomeType\' });\\n\\nStruct.create(SomeType, { some: true });// Struct { _: \'SomeType\', some: true }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":84,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L84"}],"typeParameter":[{"id":1859,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1860,"name":"module","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1917,"typeArguments":[{"type":"reference","target":1859,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"ModuleParameter","package":"@w5s/core","qualifiedName":"Struct.ModuleParameter"}},{"id":1861,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1859,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1859,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/namespace/Struct#create"},{"id":1862,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"signatures":[{"id":1863,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Struct`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"Module","target":1870,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Model = Struct<{ [Struct.type]: \'Model\', foo: boolean }>\\nconst Model = Struct.define<Model>({ typeName: \'Model\' });\\n\\nconst instance = Model({ foo: true }); // { _: \'Model\', foo: true }\\nModel.typeName === \'Model\' // true\\nModel.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"typeParameter":[{"id":1864,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":1865,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1866,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":48,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1866]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}]}}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":1867,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1919,"typeArguments":[{"type":"reference","target":1864,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"DefineParameters","package":"@w5s/core","qualifiedName":"Struct.DefineParameters"}}],"type":{"type":"reference","target":1870,"typeArguments":[{"type":"reference","target":1864,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Struct.Module"}}],"permalink":"/std/api/core/namespace/Struct#define"}],"groups":[{"title":"Interfaces","children":[1919,1870]},{"title":"Type Aliases","children":[1917,1868,1916]},{"title":"Variables","children":[1915]},{"title":"Functions","children":[1857,1862]}],"categories":[{"title":"Constructor","children":[1870]},{"title":"__CATEGORY__","children":[1919,1917,1868,1916,1915,1857,1862]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L21"},{"fileName":"packages/core/src/Struct.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L32"}],"permalink":"/std/api/core/namespace/Struct","previousId":1693,"nextId":1954},{"id":1954,"name":"Symbol","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of well known symbols"}]},"children":[{"id":1984,"name":"asyncDispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":1983,"name":"asyncDispose","package":"@w5s/core","qualifiedName":"Symbol.asyncDispose"}},"permalink":"/std/api/core/namespace/Symbol#asyncDispose"},{"id":1958,"name":"asyncIterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":1957,"name":"asyncIterator","package":"@w5s/core","qualifiedName":"Symbol.asyncIterator"}},"permalink":"/std/api/core/namespace/Symbol#asyncIterator"},{"id":1986,"name":"call","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"query","queryType":{"type":"reference","target":1985,"name":"call","package":"@w5s/core","qualifiedName":"Symbol.call"}},"permalink":"/std/api/core/namespace/Symbol#call"},{"id":1992,"name":"decode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"query","queryType":{"type":"reference","target":1991,"name":"decode","package":"@w5s/core","qualifiedName":"Symbol.decode"}},"permalink":"/std/api/core/namespace/Symbol#decode"},{"id":1982,"name":"dispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":1981,"name":"dispose","package":"@w5s/core","qualifiedName":"Symbol.dispose"}},"permalink":"/std/api/core/namespace/Symbol#dispose"},{"id":1990,"name":"encode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"query","queryType":{"type":"reference","target":1989,"name":"encode","package":"@w5s/core","qualifiedName":"Symbol.encode"}},"permalink":"/std/api/core/namespace/Symbol#encode"},{"id":1996,"name":"enumKeys","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"query","queryType":{"type":"reference","target":1995,"name":"enumKeys","package":"@w5s/core","qualifiedName":"Symbol.enumKeys"}},"permalink":"/std/api/core/namespace/Symbol#enumKeys"},{"id":1960,"name":"hasInstance","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":1959,"name":"hasInstance","package":"@w5s/core","qualifiedName":"Symbol.hasInstance"}},"permalink":"/std/api/core/namespace/Symbol#hasInstance"},{"id":1988,"name":"inspect","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"query","queryType":{"type":"reference","target":1987,"name":"inspect","package":"@w5s/core","qualifiedName":"Symbol.inspect"}},"permalink":"/std/api/core/namespace/Symbol#inspect"},{"id":1962,"name":"isConcatSpreadable","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":1961,"name":"isConcatSpreadable","package":"@w5s/core","qualifiedName":"Symbol.isConcatSpreadable"}},"permalink":"/std/api/core/namespace/Symbol#isConcatSpreadable"},{"id":1956,"name":"iterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":1955,"name":"iterator","package":"@w5s/core","qualifiedName":"Symbol.iterator"}},"permalink":"/std/api/core/namespace/Symbol#iterator"},{"id":1964,"name":"match","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":1963,"name":"match","package":"@w5s/core","qualifiedName":"Symbol.match"}},"permalink":"/std/api/core/namespace/Symbol#match"},{"id":1966,"name":"matchAll","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":1965,"name":"matchAll","package":"@w5s/core","qualifiedName":"Symbol.matchAll"}},"permalink":"/std/api/core/namespace/Symbol#matchAll"},{"id":1968,"name":"replace","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":1967,"name":"replace","package":"@w5s/core","qualifiedName":"Symbol.replace"}},"permalink":"/std/api/core/namespace/Symbol#replace"},{"id":1998,"name":"run","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"query","queryType":{"type":"reference","target":1997,"name":"run","package":"@w5s/core","qualifiedName":"Symbol.run"}},"permalink":"/std/api/core/namespace/Symbol#run"},{"id":1994,"name":"schema","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"query","queryType":{"type":"reference","target":1993,"name":"schema","package":"@w5s/core","qualifiedName":"Symbol.schema"}},"permalink":"/std/api/core/namespace/Symbol#schema"},{"id":1970,"name":"search","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":1969,"name":"search","package":"@w5s/core","qualifiedName":"Symbol.search"}},"permalink":"/std/api/core/namespace/Symbol#search"},{"id":1972,"name":"species","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":1971,"name":"species","package":"@w5s/core","qualifiedName":"Symbol.species"}},"permalink":"/std/api/core/namespace/Symbol#species"},{"id":1974,"name":"split","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":1973,"name":"split","package":"@w5s/core","qualifiedName":"Symbol.split"}},"permalink":"/std/api/core/namespace/Symbol#split"},{"id":1978,"name":"toPrimitive","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":1977,"name":"toPrimitive","package":"@w5s/core","qualifiedName":"Symbol.toPrimitive"}},"permalink":"/std/api/core/namespace/Symbol#toPrimitive"},{"id":1976,"name":"toStringTag","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":1975,"name":"toStringTag","package":"@w5s/core","qualifiedName":"Symbol.toStringTag"}},"permalink":"/std/api/core/namespace/Symbol#toStringTag"},{"id":1980,"name":"unscopables","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":1979,"name":"unscopables","package":"@w5s/core","qualifiedName":"Symbol.unscopables"}},"permalink":"/std/api/core/namespace/Symbol#unscopables"},{"id":1983,"name":"asyncDispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to asynchronously release resources held by an object. Called by the semantics of the await using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.asyncDispose"},"name":"GlobalSymbol.asyncDispose","package":"typescript","qualifiedName":"SymbolConstructor.asyncDispose","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#asyncDispose"},{"id":1957,"name":"asyncIterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default async iterator for an object. Called by the semantics of the for-await-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"SymbolConstructor.asyncIterator"},"name":"GlobalSymbol.asyncIterator","package":"typescript","qualifiedName":"SymbolConstructor.asyncIterator","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#asyncIterator"},{"id":1985,"name":"call","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Call signature"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"literal","value":"__call__"},"defaultValue":"\'__call__\'","permalink":"/std/api/core/namespace/Symbol#call"},{"id":1991,"name":"decode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Decode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":872}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"literal","value":"__decode__"},"defaultValue":"\'__decode__\'","permalink":"/std/api/core/namespace/Symbol#decode"},{"id":1981,"name":"dispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to release resources held by an object. Called by the semantics of the using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.dispose"},"name":"GlobalSymbol.dispose","package":"typescript","qualifiedName":"SymbolConstructor.dispose","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#dispose"},{"id":1989,"name":"encode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":872}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"literal","value":"__encode__"},"defaultValue":"\'__encode__\'","permalink":"/std/api/core/namespace/Symbol#encode"},{"id":1995,"name":"enumKeys","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Enum keys"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#enumKeys"},{"id":1959,"name":"hasInstance","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that determines if a constructor object recognizes an object as one of the constructor\u2019s instances. Called by the semantics of the instanceof operator."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.hasInstance"},"name":"GlobalSymbol.hasInstance","package":"typescript","qualifiedName":"SymbolConstructor.hasInstance","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#hasInstance"},{"id":1987,"name":"inspect","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Type","target":2094}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"literal","value":"__inspect__"},"defaultValue":"\'__inspect__\'","permalink":"/std/api/core/namespace/Symbol#inspect"},{"id":1961,"name":"isConcatSpreadable","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A Boolean value that if true indicates that an object should flatten to its array elements by Array.prototype.concat."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.isConcatSpreadable"},"name":"GlobalSymbol.isConcatSpreadable","package":"typescript","qualifiedName":"SymbolConstructor.isConcatSpreadable","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#isConcatSpreadable"},{"id":1955,"name":"iterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default iterator for an object. Called by the semantics of the for-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"SymbolConstructor.iterator"},"name":"GlobalSymbol.iterator","package":"typescript","qualifiedName":"SymbolConstructor.iterator","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#iterator"},{"id":1963,"name":"match","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.match method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.match"},"name":"GlobalSymbol.match","package":"typescript","qualifiedName":"SymbolConstructor.match","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#match"},{"id":1965,"name":"matchAll","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.matchAll method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.matchAll"},"name":"GlobalSymbol.matchAll","package":"typescript","qualifiedName":"SymbolConstructor.matchAll","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#matchAll"},{"id":1967,"name":"replace","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.replace"},"name":"GlobalSymbol.replace","package":"typescript","qualifiedName":"SymbolConstructor.replace","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#replace"},{"id":1997,"name":"run","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Task run effect"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#run"},{"id":1993,"name":"schema","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Schema property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":872}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"literal","value":"__schema__"},"defaultValue":"\'__schema__\'","permalink":"/std/api/core/namespace/Symbol#schema"},{"id":1969,"name":"search","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.search"},"name":"GlobalSymbol.search","package":"typescript","qualifiedName":"SymbolConstructor.search","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#search"},{"id":1971,"name":"species","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A function valued property that is the constructor function that is used to create derived objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.species"},"name":"GlobalSymbol.species","package":"typescript","qualifiedName":"SymbolConstructor.species","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#species"},{"id":1973,"name":"split","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that splits a string at the indices that match the regular expression. Called by the String.prototype.split method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.split"},"name":"GlobalSymbol.split","package":"typescript","qualifiedName":"SymbolConstructor.split","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#split"},{"id":1977,"name":"toPrimitive","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that converts an object to a corresponding primitive value. Called by the ToPrimitive abstract operation."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toPrimitive"},"name":"GlobalSymbol.toPrimitive","package":"typescript","qualifiedName":"SymbolConstructor.toPrimitive","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#toPrimitive"},{"id":1975,"name":"toStringTag","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A String value that is used in the creation of the default string description of an object. Called by the built-in method Object.prototype.toString."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toStringTag"},"name":"GlobalSymbol.toStringTag","package":"typescript","qualifiedName":"SymbolConstructor.toStringTag","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#toStringTag"},{"id":1979,"name":"unscopables","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"An Object whose truthy properties are properties that are excluded from the \'with\' environment bindings of the associated objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.unscopables"},"name":"GlobalSymbol.unscopables","package":"typescript","qualifiedName":"SymbolConstructor.unscopables","preferValues":true}},"defaultValue":"...","permalink":"/std/api/core/namespace/Symbol#unscopables"}],"groups":[{"title":"Type Aliases","children":[1984,1958,1986,1992,1982,1990,1996,1960,1988,1962,1956,1964,1966,1968,1998,1994,1970,1972,1974,1978,1976,1980]},{"title":"Variables","children":[1983,1957,1985,1991,1981,1989,1995,1959,1987,1961,1955,1963,1965,1967,1997,1993,1969,1971,1973,1977,1975,1979]}],"sources":[{"fileName":"packages/core/src/Symbol.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L12"}],"permalink":"/std/api/core/namespace/Symbol","categories":[],"previousId":1856,"nextId":1999},{"id":1999,"name":"Tag","variant":"declaration","kind":4,"flags":{},"children":[{"id":2040,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2050,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2353,"name":"Module.typeName"},"target":709},{"id":2080,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2081,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2082,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2083,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":749,"name":"Callable.__call__"}},{"id":2057,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2058,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2059,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2060,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},{"id":2061,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2062,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2063,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2360,"name":"Module.__inspect__"}},{"id":2064,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2065,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2066,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2067,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2068,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2368,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2367,"name":"Module.__decode__"}},{"id":2069,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2070,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2071,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2072,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2373,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2372,"name":"Module.__encode__"}},{"id":2073,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2074,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2075,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2377,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2376,"name":"Module.__schema__"}},{"id":2054,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2055,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2056,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2358,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2357,"name":"Module.asInstance"}},{"id":2076,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2077,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2078,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2079,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2380,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2379,"name":"Module.asString"}},{"id":2051,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2052,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2053,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2355,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2354,"name":"Module.hasInstance"}},{"id":2047,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"signatures":[{"id":2048,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":2049,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}]},{"id":2044,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"signatures":[{"id":2045,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"parameters":[{"id":2046,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}],"groups":[{"title":"References","children":[2050]},{"title":"Properties","children":[2080,2057]},{"title":"Methods","children":[2064,2069,2073,2054,2076,2051,2047,2044]}],"categories":[{"title":"Callable","children":[2080]},{"title":"Codec","children":[2064,2069,2073]},{"title":"Formatting","children":[2076]},{"title":"Type","children":[2057,2054,2051,2047,2044]},{"title":"__CATEGORY__","children":[2050]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"typeParameters":[{"id":2084,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2085,"name":"To","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"signatures":[{"id":2086,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":28,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L28"}],"parameters":[{"id":2087,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":747,"typeArguments":[{"type":"reflection","declaration":{"id":2041,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2042,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2043,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2085,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/api/core/namespace/Tag#Module"},{"id":2007,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2013,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2014,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2015,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2016,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}},{"id":2017,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2018,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2019,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2325,"name":"Parameters.__inspect__"}},{"id":2008,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2009,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2010,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2011,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":2320,"name":"Parameters.hasInstance"}},{"id":2012,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2324,"name":"Parameters.typeName"}},{"id":2023,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2024,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2025,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2026,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2027,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2336,"name":"Parameters.__decode__"}}],"inheritedFrom":{"type":"reference","target":2335,"name":"Parameters.__decode__"}},{"id":2028,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2029,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2031,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2341,"name":"Parameters.__encode__"}}],"inheritedFrom":{"type":"reference","target":2340,"name":"Parameters.__encode__"}},{"id":2032,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2033,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2034,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2345,"name":"Parameters.__schema__"}}],"inheritedFrom":{"type":"reference","target":2344,"name":"Parameters.__schema__"}},{"id":2020,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2021,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2022,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2333,"name":"Parameters.asInstance"}}],"inheritedFrom":{"type":"reference","target":2332,"name":"Parameters.asInstance"}},{"id":2035,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2036,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2037,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2038,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2348,"name":"Parameters.asString"}}],"inheritedFrom":{"type":"reference","target":2347,"name":"Parameters.asString"}}],"groups":[{"title":"Properties","children":[2013,2008,2012]},{"title":"Methods","children":[2023,2028,2032,2020,2035]}],"categories":[{"title":"Codec","children":[2023,2028,2032]},{"title":"Formatting","children":[2035]},{"title":"Type","children":[2013,2012,2020]},{"title":"__CATEGORY__","children":[2008]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":19,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L19"}],"typeParameters":[{"id":2039,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2319,"typeArguments":[{"type":"reference","target":2039,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}],"permalink":"/std/api/core/namespace/Tag#Parameters"},{"id":2000,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"signatures":[{"id":2001,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Tag module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Foo = string & Tag<\'Foo\'>;\\nconst Foo = Tag.define<string, Foo>({\\n  typeName: \'Foo\',\\n  hasInstance: (anyValue) => typeof anyValue === \'string\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"typeParameter":[{"id":2002,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2003,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2004,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2007,"typeArguments":[{"type":"reference","target":2003,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Tag.Parameters"}}],"type":{"type":"reference","target":2040,"typeArguments":[{"type":"reference","target":2002,"name":"From","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2003,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Tag.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Tag#define"}],"groups":[{"title":"Interfaces","children":[2040,2007]},{"title":"Functions","children":[2000]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"permalink":"/std/api/core/namespace/Tag","categories":[],"previousId":1954,"nextId":2094},{"id":2094,"name":"Type","variant":"declaration","kind":4,"flags":{},"children":[{"id":2352,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2353,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2302,"name":"Type.typeName"},"target":709},{"id":2360,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2361,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2362,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2363,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},{"id":2364,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2365,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2366,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2309,"name":"Type.__inspect__"}},{"id":2367,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2368,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2369,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2370,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2371,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":895,"name":"Codec.__decode__"}}],"inheritedFrom":{"type":"reference","target":894,"name":"Codec.__decode__"}},{"id":2372,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2373,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2374,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2375,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":900,"name":"Codec.__encode__"}}],"inheritedFrom":{"type":"reference","target":899,"name":"Codec.__encode__"}},{"id":2376,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2377,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2378,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":904,"name":"Codec.__schema__"}}],"inheritedFrom":{"type":"reference","target":903,"name":"Codec.__schema__"}},{"id":2357,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2358,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2359,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2307,"name":"Type.asInstance"}}],"inheritedFrom":{"type":"reference","target":2306,"name":"Type.asInstance"}},{"id":2379,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2380,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2381,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2382,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":645,"name":"AsString.asString"}}],"inheritedFrom":{"type":"reference","target":644,"name":"AsString.asString"}},{"id":2354,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2355,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2356,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2304,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2303,"name":"Type.hasInstance"}}],"groups":[{"title":"References","children":[2353]},{"title":"Properties","children":[2360]},{"title":"Methods","children":[2367,2372,2376,2357,2379,2354]}],"categories":[{"title":"Codec","children":[2367,2372,2376]},{"title":"Formatting","children":[2379]},{"title":"Type","children":[2360,2357,2354]},{"title":"__CATEGORY__","children":[2353]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":143,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L143"}],"typeParameters":[{"id":2383,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2301,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"reference","target":643,"typeArguments":[{"type":"reference","target":2383,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"extendedBy":[{"type":"reference","target":1039,"name":"Module"},{"type":"reference","target":1870,"name":"Module"},{"type":"reference","target":2040,"name":"Module"}],"permalink":"/std/api/core/namespace/Type#Module"},{"id":2319,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2325,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2326,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2327,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2328,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}},{"id":2329,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2330,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2331,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":2320,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2321,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2322,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2323,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":2324,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":2335,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2336,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2337,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2338,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2339,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}},{"id":2340,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2341,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2342,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2343,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}},{"id":2344,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2345,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2346,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}},{"id":2332,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2333,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2334,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":2347,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2348,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2349,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2350,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"groups":[{"title":"Properties","children":[2325,2320,2324]},{"title":"Methods","children":[2335,2340,2344,2332,2347]}],"categories":[{"title":"Codec","children":[2335,2340,2344]},{"title":"Formatting","children":[2347]},{"title":"Type","children":[2325,2324,2332]},{"title":"__CATEGORY__","children":[2320]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":133,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L133"}],"typeParameters":[{"id":2351,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2301,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"Omit","package":"typescript"},{"type":"union","types":[{"type":"literal","value":"asInstance"},{"type":"reference","target":1988,"name":"Symbol.inspect","package":"@w5s/core"}]}],"name":"PartialKeys","package":"@w5s/core-type"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"name":"Partial","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":643,"typeArguments":[{"type":"reference","target":2351,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"name":"Partial","package":"typescript"}],"extendedBy":[{"type":"reference","target":2007,"name":"Parameters"}],"permalink":"/std/api/core/namespace/Type#Parameters"},{"id":2317,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract the type of object from its module"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":128,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L128"}],"typeParameters":[{"id":2318,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":2318,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":2301,"typeArguments":[{"type":"inferred","name":"T"}],"name":"Type","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"T"},"name":"T","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/core/namespace/Type#TypeOf"},{"id":2161,"name":"Ordering","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":114,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L114"}],"type":{"type":"reference","target":1033,"typeArguments":[{"type":"reflection","declaration":{"id":2162,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2165,"name":"Equal","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0"},{"id":2166,"name":"Greater","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1"},{"id":2164,"name":"Less","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1"},{"id":2163,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'"}],"groups":[{"title":"Properties","children":[2165,2166,2164,2163]}],"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":7,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L7"}]}}],"name":"Enum","package":"@w5s/core"},"permalink":"/std/api/core/namespace/Type#Ordering"},{"id":2179,"name":"RegExp","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":119,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L119"}],"type":{"type":"reflection","declaration":{"id":2180,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2185,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2192,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2193,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2194,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2195,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}},{"id":2196,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2197,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2198,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2181,"name":"parse","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L51"}],"type":{"type":"reflection","declaration":{"id":2182,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"signatures":[{"id":2183,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"parameters":[{"id":2184,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]}}},{"id":2199,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2200,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2201,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2202,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2203,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2204,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2205,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2206,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2207,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2208,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2209,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2210,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2189,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2190,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2191,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]},{"id":2211,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2212,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2213,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2214,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2186,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2187,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2188,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}}]}],"groups":[{"title":"References","children":[2185]},{"title":"Properties","children":[2192,2181]},{"title":"Methods","children":[2199,2204,2208,2189,2211,2186]}],"categories":[{"title":"Codec","children":[2199,2204,2208]},{"title":"Formatting","children":[2211]},{"title":"Type","children":[2192,2189,2186]},{"title":"__CATEGORY__","children":[2185,2181]}],"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":26,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L26"}]}},"permalink":"/std/api/core/namespace/Type#RegExp"},{"id":2135,"name":"bigint","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L108"}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#bigint"},{"id":2136,"name":"boolean","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L109"}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#boolean"},{"id":2151,"name":"number","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L111"}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#number"},{"id":2173,"name":"string","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":116,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L116"}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#string"},{"id":2178,"name":"unknown","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":118,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L118"}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/api/core/namespace/Type#unknown"},{"id":2117,"name":"Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"signatures":[{"id":2118,"name":"Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a codec for "},{"kind":"code","text":"`Array<V>`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec = Type.Array(dateISO);\\nconst encoded = Codec.encode(codec, [new Date(\'1970-01-01T00:00:00.000Z\')]);// [\'1970-01-01T00:00:00.000Z\']\\nconst decoded = Codec.decode(codec, [\'1970-01-01T00:00:00.000Z\']);// Result.Ok([Date(\'1970-01-01T00:00:00.000Z\')])\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"typeParameter":[{"id":2119,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2120,"name":"Item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module for array item"}]},"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2119,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Array.ts","qualifiedName":"Array"},"typeArguments":[{"type":"reference","target":2119,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Array"},{"id":2121,"name":"Char","variant":"declaration","kind":64,"flags":{},"children":[{"id":2134,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":868},{"id":2130,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":852},{"id":2131,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":857},{"id":2129,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":845},{"id":2132,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":861},{"id":2128,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":842},{"id":2133,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":864},{"id":2127,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":839},{"id":2126,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2125,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"target":835},{"id":2124,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"target":832}],"groups":[{"title":"References","children":[2134,2130,2131,2129,2132,2128,2133,2127,2126,2125,2124]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"signatures":[{"id":2122,"name":"Char","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"parameters":[{"id":2123,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Char"},{"id":2137,"name":"Int","variant":"declaration","kind":64,"flags":{},"children":[{"id":2150,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":1205},{"id":2146,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":1189},{"id":2147,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":1194},{"id":2145,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":1182},{"id":2148,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":1198},{"id":2144,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":1179},{"id":2149,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":1201},{"id":2143,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":1176},{"id":2142,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2141,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"target":1172},{"id":2140,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"target":1169}],"groups":[{"title":"References","children":[2150,2146,2147,2145,2148,2144,2149,2143,2142,2141,2140]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"signatures":[{"id":2138,"name":"Int","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"parameters":[{"id":2139,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/core/namespace/Type#Int"},{"id":2152,"name":"Object","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"signatures":[{"id":2153,"name":"Object","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Type for "},{"kind":"code","text":"`P`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.Object({ created: dateISO }, \'SomeType\');\\nconst encoded = Codec.encode(SomeType, { created: new Date(\'1970-01-01T00:00:00.000Z\') });// { created: \'1970-01-01T00:00:00.000Z\' }\\nconst decoded = Codec.decode(SomeType, { created: \'1970-01-01T00:00:00.000Z\' });// Result.Ok({ created: Date(\'1970-01-01T00:00:00.000Z\') })\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"typeParameter":[{"id":2154,"name":"P","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2155,"name":"Properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec for each array item"}]},"type":{"type":"mapped","parameter":"K","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":2352,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Object.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2154,"name":"P","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"readonlyModifier":"+"}},{"id":2156,"name":"typeName","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":2154,"name":"P","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Object"},{"id":2157,"name":"Option","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"signatures":[{"id":2158,"name":"Option","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new optional type from "},{"kind":"code","text":"`Value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst OptionString = Type.Option(Type.String);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"typeParameter":[{"id":2159,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2160,"name":"Value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value type"}]},"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2159,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2159,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionType","package":"@w5s/core","qualifiedName":"Option"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Option"},{"id":2167,"name":"Record","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"signatures":[{"id":2168,"name":"Record","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"typeParameter":[{"id":2169,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}},{"id":2170,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"parameters":[{"id":2171,"name":"Key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2169,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":2172,"name":"Value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2170,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":2317,"typeArguments":[{"type":"reference","target":2169,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"},{"type":"reference","target":2317,"typeArguments":[{"type":"reference","target":2170,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Record","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Record"},{"id":2174,"name":"Tuple","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"signatures":[{"id":2175,"name":"Tuple","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"typeParameter":[{"id":2176,"name":"C","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2177,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2176,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2176,"name":"C","package":"@w5s/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":2317,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Tuple.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2176,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"},"readonlyModifier":"+"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#Tuple"},{"id":2258,"name":"URL","variant":"declaration","kind":64,"flags":{},"children":[{"id":2267,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2297,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2298,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2299,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2300,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}}},{"id":2274,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2275,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2276,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2277,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}},{"id":2278,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2279,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2280,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2281,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2282,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2283,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2284,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2285,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2286,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2287,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2288,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2289,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2290,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2291,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2292,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2271,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2272,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2273,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2293,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2294,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2295,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2296,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2268,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2269,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2270,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}}]},{"id":2264,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"signatures":[{"id":2265,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":2266,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2261,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"signatures":[{"id":2262,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"parameters":[{"id":2263,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2267]},{"title":"Properties","children":[2297,2274]},{"title":"Methods","children":[2281,2286,2290,2271,2293,2268,2264,2261]}],"categories":[{"title":"Callable","children":[2297]},{"title":"Codec","children":[2281,2286,2290]},{"title":"Formatting","children":[2293]},{"title":"Type","children":[2274,2271,2268,2264,2261]},{"title":"__CATEGORY__","children":[2267]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"signatures":[{"id":2259,"name":"URL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"parameters":[{"id":2260,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#URL"},{"id":2215,"name":"UUID","variant":"declaration","kind":64,"flags":{},"children":[{"id":2224,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2254,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2255,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2256,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2257,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}}},{"id":2231,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2232,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2233,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2234,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":2235,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2236,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2237,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2238,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2239,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2240,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2241,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2242,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2243,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2244,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2245,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2246,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2247,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2248,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2249,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2228,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2229,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2230,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2250,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2251,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2252,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2253,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2225,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2226,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2227,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}]},{"id":2221,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"signatures":[{"id":2222,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":2223,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}]},{"id":2218,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"signatures":[{"id":2219,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"parameters":[{"id":2220,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2224]},{"title":"Properties","children":[2254,2231]},{"title":"Methods","children":[2238,2243,2247,2228,2250,2225,2221,2218]}],"categories":[{"title":"Callable","children":[2254]},{"title":"Codec","children":[2238,2243,2247]},{"title":"Formatting","children":[2250]},{"title":"Type","children":[2231,2228,2225,2221,2218]},{"title":"__CATEGORY__","children":[2224]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"signatures":[{"id":2216,"name":"UUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"parameters":[{"id":2217,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#UUID"},{"id":2099,"name":"constant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"signatures":[{"id":2100,"name":"constant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type for constant "},{"kind":"code","text":"`value`"},{"kind":"text","text":". An encoded value can be specified as second argument."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst constantType = Type.constant(\'_\'); // Encoded and decoded value are \'_\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someSymbol = Symbol(\'someSymbol\');\\nconst someSymbolType = Type.constant(someSymbol, \'__someSymbol__\'); // Encoded value is \'__someSymbol__\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2101,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}],"parameters":[{"id":2102,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoded constant value"}]},"type":{"type":"reference","target":2101,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2103,"name":"encodedValue","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the encoded value (required only for non JSON representable values)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2101,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}},{"id":2104,"name":"constant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2105,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":2106,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2105,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2107,"name":"encodedValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2105,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#constant"},{"id":2108,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"signatures":[{"id":2109,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Type module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface NewType {\\n  foo: boolean;\\n}\\nconst NewType = Type.define<NewType>({\\n  typeName: \'NewType\',\\n  hasInstance(value) {\\n    return typeof value.foo === \'boolean\';\\n  },\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"typeParameter":[{"id":2110,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2111,"name":"parameters","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type parameters"}]},"type":{"type":"reference","target":2319,"typeArguments":[{"type":"reference","target":2110,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2110,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#define"},{"id":2112,"name":"ensure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"signatures":[{"id":2113,"name":"ensure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ensure that "},{"kind":"code","text":"`value`"},{"kind":"text","text":" is a valid "},{"kind":"code","text":"`T`"},{"kind":"text","text":". Throw a TypeError otherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nType.ensure(Type.String, \'foo\'); // void\\nType.ensure(Type.String, 42); // throw new Error(\'42 is not a valid String\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"typeParameter":[{"id":2114,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2115,"name":"Type","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module"}]},"type":{"type":"reference","target":2301,"typeArguments":[{"type":"reference","target":2114,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"}},{"id":2116,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to ensure"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":true,"targetType":{"type":"reference","target":2114,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}}],"permalink":"/std/api/core/namespace/Type#ensure"},{"id":2095,"name":"union","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"signatures":[{"id":2096,"name":"union","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a union of all types"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ABType = Type.anyOf(AType, BType);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"typeParameter":[{"id":2097,"name":"Types","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2352,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2098,"name":"types","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2097,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2352,"typeArguments":[{"type":"reference","target":2317,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","target":2097,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/api/core/namespace/Type#union"}],"groups":[{"title":"Interfaces","children":[2352,2319]},{"title":"Type Aliases","children":[2317]},{"title":"Variables","children":[2161,2179,2135,2136,2151,2173,2178]},{"title":"Functions","children":[2117,2121,2137,2152,2157,2167,2174,2258,2215,2099,2108,2112,2095]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"permalink":"/std/api/core/namespace/Type","categories":[],"previousId":1999,"nextId":753},{"id":989,"name":"CodecError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Codec Error constructor"}]},"children":[{"id":1011,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":1012,"name":"new CodecError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":1013,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":1014,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1015,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[1015]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}},{"id":1016,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).input"}},{"id":999,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"CodecError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).errorName"}},{"id":1000,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":1001,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":1002,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}},{"id":1003,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":1004,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":1005,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":1006,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":1007,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":1008,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":1009,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":1010,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[1011]},{"title":"Properties","children":[1016,999]},{"title":"Methods","children":[1000,1003]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":8,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":990,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":994,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":992,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":991,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"CodecError"}},{"id":993,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[994,992,991,993]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":995,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":996,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"CodecError"}}],"groups":[{"title":"Properties","children":[996]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":997,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":998,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[998]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/core/class/CodecError","categories":[],"nextId":743},{"id":643,"name":"AsString","variant":"declaration","kind":256,"flags":{},"children":[{"id":644,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":645,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":646,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":647,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":648,"name":"T","package":"@w5s/core","qualifiedName":"AsString.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[644]}],"categories":[{"title":"Formatting","children":[644]}],"sources":[{"fileName":"packages/core/src/AsString.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L1"}],"typeParameters":[{"id":648,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2352,"name":"Module"}],"permalink":"/std/api/core/interface/AsString","previousId":1525,"nextId":739},{"id":739,"name":"Bounded","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generic bound module of value "},{"kind":"code","text":"`T`"}]},"children":[{"id":741,"name":"maxValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":742,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}},{"id":740,"name":"minValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":742,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[741,740]}],"categories":[{"title":"Bound","children":[741,740]}],"sources":[{"fileName":"packages/core/src/Bounded.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L4"}],"typeParameters":[{"id":742,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/interface/Bounded","previousId":643,"nextId":747},{"id":747,"name":"Callable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable interface"}]},"children":[{"id":748,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":749,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reference","target":750,"name":"F","package":"@w5s/core","qualifiedName":"Callable.F","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[748]},{"title":"Properties","children":[749]}],"categories":[{"title":"Callable","children":[749]},{"title":"__CATEGORY__","children":[748]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"typeParameters":[{"id":750,"name":"F","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}}],"extendedBy":[{"type":"reference","target":1870,"name":"Module"},{"type":"reference","target":2040,"name":"Module"}],"permalink":"/std/api/core/interface/Callable","previousId":739,"nextId":893},{"id":893,"name":"Codec","variant":"declaration","kind":256,"flags":{},"children":[{"id":894,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":895,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":896,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":897,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":898,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":909,"typeArguments":[{"type":"reference","target":906,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1682,"typeArguments":[{"type":"reference","target":906,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true},{"type":"reference","target":989,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":899,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":900,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":901,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":902,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":906,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":903,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":904,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":905,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[894,899,903]}],"categories":[{"title":"Codec","children":[894,899,903]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"typeParameters":[{"id":906,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2352,"name":"Module"}],"permalink":"/std/api/core/interface/Codec","previousId":747,"nextId":930},{"id":930,"name":"Comparable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have total order"}]},"children":[{"id":931,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":1101,"name":"Equal.constructor"}},{"id":978,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":979,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":980,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":981,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":982,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1108,"name":"Equal.!="}}],"inheritedFrom":{"type":"reference","target":1107,"name":"Equal.!="}},{"id":942,"name":"<","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":943,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":944,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":945,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":946,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":937,"name":"<=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":938,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":939,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":940,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":941,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":983,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":984,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":985,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":986,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":987,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1113,"name":"Equal.=="}}],"inheritedFrom":{"type":"reference","target":1112,"name":"Equal.=="}},{"id":952,"name":">","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":953,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":954,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":955,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":956,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":947,"name":">=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":948,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":949,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":950,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":951,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":967,"name":"clamp","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":968,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":969,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":970,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":971,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":972,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":932,"name":"compare","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":933,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1471,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1431}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":934,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":935,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":936,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]},{"id":973,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":974,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":975,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":976,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":977,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1103,"name":"Equal.equals"}}],"inheritedFrom":{"type":"reference","target":1102,"name":"Equal.equals"}},{"id":962,"name":"max","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":963,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":964,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":965,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":966,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":957,"name":"min","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":958,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":959,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":960,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":961,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[931]},{"title":"Methods","children":[978,942,937,983,952,947,967,932,973,962,957]}],"categories":[{"title":"Comparator","children":[978,942,937,983,952,947,967,932,973,962,957]},{"title":"__CATEGORY__","children":[931]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"typeParameters":[{"id":988,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":1100,"typeArguments":[{"type":"reference","target":988,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}],"permalink":"/std/api/core/interface/Comparable","previousId":893,"nextId":1087},{"id":1087,"name":"EnumLike","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Interface for objects that can be used as enums"}]},"children":[{"id":1088,"name":"[enumKeys]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L48"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1089,"name":"T","package":"@w5s/core","qualifiedName":"EnumLike.T","refersToTypeParameter":true}}}}}],"groups":[{"title":"Properties","children":[1088]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L44"}],"typeParameters":[{"id":1089,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"extendedBy":[{"type":"reference","target":1039,"name":"Module"}],"permalink":"/std/api/core/interface/EnumLike","categories":[],"previousId":930,"nextId":1100},{"id":1100,"name":"Equal","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have equivalence relation"}]},"children":[{"id":1101,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1107,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1108,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1109,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1110,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1111,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1112,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1113,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1114,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1115,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1116,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1102,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1103,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1104,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1105,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1106,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1117,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","children":[1101]},{"title":"Methods","children":[1107,1112,1102]}],"categories":[{"title":"Comparator","children":[1107,1112,1102]},{"title":"__CATEGORY__","children":[1101]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"typeParameters":[{"id":1117,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":930,"name":"Comparable"}],"permalink":"/std/api/core/interface/Equal","previousId":1087,"nextId":1130},{"id":1130,"name":"Indexable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type Indexable is a type with values that can be indexed by a number."}]},"children":[{"id":1131,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1132,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1148,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1148,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":1133,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1134,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1135,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1148,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1136,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1137,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1138,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":1148,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1143,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1144,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1145,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1146,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1531,"typeArguments":[{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"}}]},{"id":1139,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1140,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1141,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1142,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1148,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[1131]},{"title":"Properties","children":[1132]},{"title":"Methods","children":[1133,1136,1143,1139]}],"categories":[{"title":"Indexable","children":[1132,1133,1136,1143,1139]},{"title":"__CATEGORY__","children":[1131]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"typeParameters":[{"id":1147,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1148,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"extendedBy":[{"type":"reference","target":1039,"name":"Module"}],"permalink":"/std/api/core/interface/Indexable","previousId":1100,"nextId":1228},{"id":1228,"name":"Not","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for the unary "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operator"}]},"children":[{"id":1229,"name":"not","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":1230,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":1231,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1232,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"type":{"type":"reference","target":1233,"name":"Output","package":"@w5s/core","qualifiedName":"Not.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1229]}],"sources":[{"fileName":"packages/core/src/Not.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L4"}],"typeParameters":[{"id":1232,"name":"Self","variant":"typeParam","kind":131072,"flags":{}},{"id":1233,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1232,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"permalink":"/std/api/core/interface/Not","categories":[],"previousId":1130,"nextId":1531},{"id":1531,"name":"Range","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A range is a sequence of elements that are contiguous in some way."}]},"children":[{"id":1533,"name":"rangeEnd","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"End of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":14,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L14"}],"type":{"type":"reference","target":1534,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}},{"id":1532,"name":"rangeStart","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Start of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":10,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L10"}],"type":{"type":"reference","target":1534,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[1533,1532]}],"sources":[{"fileName":"packages/core/src/Range.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L6"}],"typeParameters":[{"id":1534,"name":"T","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the elements in the range."}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1534,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}],"permalink":"/std/api/core/interface/Range","categories":[],"previousId":1228,"nextId":1539},{"id":1539,"name":"Ref","variant":"declaration","kind":256,"flags":{},"children":[{"id":1540,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1541,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L5"}],"type":{"type":"reference","target":1542,"name":"Value","package":"@w5s/core","qualifiedName":"Ref.Value","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[1540]},{"title":"Properties","children":[1541]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"typeParameters":[{"id":1542,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/core/interface/Ref","categories":[],"previousId":1531,"nextId":2301},{"id":2301,"name":"Type","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":2302,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":709},{"id":2309,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":1856},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reflection","declaration":{"id":2310,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2311,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2312,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2316,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}},{"id":2313,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2314,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}},{"id":2315,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2088,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2306,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2307,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2308,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1424,"typeArguments":[{"type":"reference","target":2316,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":2303,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2304,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2305,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2316,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}}}]}],"groups":[{"title":"References","children":[2302]},{"title":"Properties","children":[2309]},{"title":"Methods","children":[2306,2303]}],"categories":[{"title":"Type","children":[2309,2306,2303]},{"title":"__CATEGORY__","children":[2302]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"typeParameters":[{"id":2316,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2352,"name":"Module"}],"permalink":"/std/api/core/interface/Type","previousId":1539,"nextId":649},{"id":753,"name":"CallableFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A callable function with callable interface"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"}],"typeParameters":[{"id":754,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":747,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":752,"name":"Callable.symbol","package":"@w5s/core"}},"objectType":{"type":"reference","target":754,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"type":"reference","target":754,"name":"T","package":"@w5s/core","refersToTypeParameter":true}]},"permalink":"/std/api/core#CallableFunction","categories":[],"previousId":2094,"nextId":871},{"id":871,"name":"Char","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Character value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"CharType","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"tsLinkText":""}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"CharType","package":"@w5s/core","qualifiedName":"Char"},"permalink":"/std/api/core#Char","categories":[],"previousId":753,"nextId":1033},{"id":1033,"name":"Enum","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":51,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L51"}],"typeParameters":[{"id":1034,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1034,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1039,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1034,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"literal","value":"typeName"}],"name":"Omit","package":"typescript"}],"name":"Enum.Module","package":"@w5s/core"}]},"permalink":"/std/api/core#Enum","categories":[],"previousId":871,"nextId":2088},{"id":2088,"name":"InspectFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"type":{"type":"reflection","declaration":{"id":2089,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"signatures":[{"id":2090,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2091,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":2092,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2093,"name":"InspectOptions","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/std/api/core#InspectFunction","categories":[],"previousId":1033,"nextId":2093},{"id":2093,"name":"InspectOptions","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"@w5s/core"},"permalink":"/std/api/core#InspectOptions","categories":[],"previousId":2088,"nextId":1208},{"id":1208,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L8"},{"fileName":"packages/core/src/Int.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L16"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"IntType","package":"@w5s/core","qualifiedName":"Int"},"permalink":"/std/api/core#Int","categories":[],"previousId":2093,"nextId":1209},{"id":1209,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L11"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"reflection","declaration":{"id":1210,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L17"}],"indexSignature":{"id":1211,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L18"}],"parameters":[{"id":1212,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1209,"name":"JSONValue","package":"@w5s/core"}}}}]},"permalink":"/std/api/core#JSONValue","categories":[],"previousId":1208,"nextId":1424},{"id":1424,"name":"Option","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" is the type used to represent either a defined value "},{"kind":"code","text":"`Some<Value>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`None`"},{"kind":"text","text":" (i.e. "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":")\\n\\nThis module focuses on handling "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" values in a functional style, to avoid throwing errors at runtime.\\nBecause "},{"kind":"code","text":"`Option.None = undefined`"},{"kind":"text","text":", this modules provides an opinionated way to remove confusion between "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":".\\n\\nSome other libraries uses object to implement Maybe/Option monad but has drawbacks :\\n- ECMAScript already uses nullable/undefined values everywhere\\n- Each library that does not uses the "},{"kind":"code","text":"`Some/None`"},{"kind":"text","text":" must be patched / overridden\\n- it creates a third empty value "},{"kind":"code","text":"`None`"},{"kind":"text","text":" in addition to "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Option.Some(\'Django\') : Option.None;\\nconst displayName = (option) => Option.map(option, (value) => \'name: \'+ value);\\nconst print = (option) => {\\n  if (Option.isNone(option)) {\\n    console.warn(\'None\');\\n  } else {\\n    console.log(\'Some(\', option, \')\');\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const option = displayName(getName(i));\\n  print(option); // alternate console.log(\'Some(Django)\'); and console.warn(\'None\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":55,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"},{"fileName":"packages/core/src/Option.ts","line":68,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L68"}],"typeParameters":[{"id":1425,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the contained value"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1425,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1426,"name":"Option.None","package":"@w5s/core"}]},"permalink":"/std/api/core#Option","categories":[],"previousId":1209,"nextId":1429},{"id":1429,"name":"OptionLike","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`OptionLike<Value>`"},{"kind":"text","text":" is the type used to represent either a Nullable value"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":50,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L50"}],"typeParameters":[{"id":1430,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1430,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"},"permalink":"/std/api/core#OptionLike","categories":[],"previousId":1424,"nextId":1463},{"id":1463,"name":"Order","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1471,"tsLinkText":""},{"kind":"text","text":" thats represents the comparison result"}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L14"},{"fileName":"packages/core/src/Order.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L24"}],"typeParameters":[{"id":1468,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":1464,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":14,"character":23,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L14"}],"signatures":[{"id":1465,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":1466,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1468,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1467,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1468,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1524,"name":"Ordering","package":"@w5s/core"}}]}},"permalink":"/std/api/core#Order","categories":[],"previousId":1429,"nextId":1469},{"id":1469,"name":"OrderLike","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that is an Order or Comparable with only compare property required"}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L19"}],"typeParameters":[{"id":1470,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":1463,"typeArguments":[{"type":"reference","target":1470,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":930,"typeArguments":[{"type":"reference","target":1470,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"},{"type":"literal","value":"compare"}],"name":"Pick","package":"typescript"}]},"permalink":"/std/api/core#OrderLike","categories":[],"previousId":1463,"nextId":1524},{"id":1524,"name":"Ordering","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"OrderingType","package":"@w5s/core","qualifiedName":"Ordering"},"permalink":"/std/api/core#Ordering","categories":[],"previousId":1469,"nextId":1682},{"id":1682,"name":"Result","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Result<Value, Error>`"},{"kind":"text","text":" is the type used to represent either a "},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" or a "},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" as a function return value.\\n"},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" should be used when the result is the expected value.\\n"},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" should be used when recoverable error occurred (i.e. an error that does not require the program to stop)\\n\\nResults can be used with async functions returning "},{"kind":"code","text":"`Promise<Result<Value, Error>>`"},{"kind":"text","text":".\\n\\n**Important: Rejected "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" and thrown "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" should only occur when the program has an unexpected state that should stop the execution**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Result.Ok(\'Django\') : Result.Error(\'error!\');\\nconst displayName = (result) => Result.map(result, (value) => \'name: \'+ value);\\nconst print = (result) => {\\n  if (Result.isError(result)) {\\n    console.error(result.error);\\n  } else {\\n    console.log(result.value);\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const result = displayName(getName(i));\\n  print(result); // alternate console.log(\'name: Django\'); and console.error(\'error!\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"typeParameters":[{"id":1683,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of value in case of "},{"kind":"code","text":"`Ok`"}]}},{"id":1684,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of error in case of "},{"kind":"code","text":"`Error`"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1685,"typeArguments":[{"type":"reference","target":1683,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Ok","package":"@w5s/core"},{"type":"reference","target":1689,"typeArguments":[{"type":"reference","target":1684,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Error","package":"@w5s/core"}]},"permalink":"/std/api/core#Result","categories":[],"previousId":1524,"nextId":1850},{"id":1850,"name":"Struct","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L21"},{"fileName":"packages/core/src/Struct.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L32"}],"typeParameters":[{"id":1851,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":1852,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1853,"name":"_","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type unique identifier"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":26,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L26"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1853]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":22,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L22"}]}},"default":{"type":"reflection","declaration":{"id":1854,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1855,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":28,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L28"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1855]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":27,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L27"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":1851,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"},"permalink":"/std/api/core#Struct","categories":[],"previousId":1682,"nextId":2005},{"id":2005,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core-type!Tag"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"typeParameters":[{"id":2006,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"reference","target":2006,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CoreTypeTag","package":"@w5s/core-type","qualifiedName":"Tag"},"permalink":"/std/api/core#Tag","categories":[],"previousId":1850},{"id":743,"name":"Callable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"signatures":[{"id":744,"name":"Callable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new function from callable interface"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst myCallable = Callable({\\n  [Callable.symbol]: (arg: number) => arg,\\n  myMethod: () => {},\\n});\\n// myCallable(1)\\n// myCallable.myMethod();\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"}],"typeParameter":[{"id":745,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":747,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"parameters":[{"id":746,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":745,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":753,"typeArguments":[{"type":"reference","target":745,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CallableFunction","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Callable","categories":[],"previousId":989,"nextId":920},{"id":920,"name":"Comparable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"signatures":[{"id":921,"name":"Comparable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct Comparable instance"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NumberComparable = Comparable({\\n  compare: (left, right) => left - right,\\n});\\nNumberComparable[\'==\'](0, 0); // true\\nNumberComparable[\'<\'](0, 1); // true\\nNumberComparable[\'>\'](0, 1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"typeParameter":[{"id":922,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":923,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":924,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":925,"name":"compare","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparison function"}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"type":{"type":"reflection","declaration":{"id":926,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"signatures":[{"id":927,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"parameters":[{"id":928,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":922,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":929,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":922,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[925]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}]}}}],"type":{"type":"reference","target":930,"typeArguments":[{"type":"reference","target":922,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Comparable","categories":[],"previousId":743,"nextId":1090},{"id":1090,"name":"Equal","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"signatures":[{"id":1091,"name":"Equal","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Equal module constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TEqual = Equal<T>({\\n  \'==\': (left, right) => { /* ... */ },\\n});\\nconst value: T;\\n\\nTEqual[\'==\'](value, value); // true;\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"typeParameter":[{"id":1092,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1093,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1094,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1095,"name":"equals","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"type":{"type":"reflection","declaration":{"id":1096,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"signatures":[{"id":1097,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"parameters":[{"id":1098,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1092,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1099,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1092,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"groups":[{"title":"Properties","children":[1095]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}]}}}],"type":{"type":"reference","target":1100,"typeArguments":[{"type":"reference","target":1092,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Equal","categories":[],"previousId":920,"nextId":1125},{"id":1125,"name":"Indexable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"signatures":[{"id":1126,"name":"Indexable","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"}],"typeParameter":[{"id":1127,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1128,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"parameters":[{"id":1129,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1150,"typeArguments":[{"type":"reference","target":1127,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1128,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Indexable.Parameters"}}],"type":{"type":"reference","target":1130,"typeArguments":[{"type":"reference","target":1127,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1128,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Indexable","categories":[],"previousId":1090,"nextId":1535},{"id":1535,"name":"Ref","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"signatures":[{"id":1536,"name":"Ref","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" object containing a value\\nThis implementation is compatible with "},{"kind":"code","text":"`React.createRef()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(123);// { current: initialValue }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"}],"typeParameter":[{"id":1537,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1538,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value contained"}]},"type":{"type":"reference","target":1537,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1539,"typeArguments":[{"type":"reference","target":1537,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/api/core/function/Ref","categories":[],"previousId":1125,"nextId":1118},{"id":1118,"name":"identity","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"signatures":[{"id":1119,"name":"identity","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the unchanged given "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nidentity(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"typeParameter":[{"id":1120,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1121,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input and return value"}]},"type":{"type":"reference","target":1120,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1120,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/api/core/function/identity","categories":[],"previousId":1535,"nextId":1122},{"id":1122,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"signatures":[{"id":1123,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" and ignore passed value.\\n\\nThis should be used in conjunction with eslint rules such as [@typescript-eslint/no-misused-promises](https://typescript-eslint.io/rules/no-misused-promises/)\\nto explicitly ignore a promise returned by a callback."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst doSomething = () => \'foo\'; // string\\nconst doSomethingIgnore = () => ignore(doSomething()); // undefined as void\\n\\nconst doAsync = async () => \'foo\'; // Promise<string>\\nconst doSyncIgnore = () => ignore(doAsync()); // undefined as void\\n```"}]}]},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"parameters":[{"id":1124,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value that should be ignored"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core/function/ignore","categories":[],"previousId":1118,"nextId":1220},{"id":1220,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1221,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the result of "},{"kind":"code","text":"`getValue`"},{"kind":"text","text":", that will be called once.\\nUseful for expensive computation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst expensiveRead = lazy(() => fs.readDirSync(\'my/dir\'));\\n// fs.readDirSync not called\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync called, return value is put in cache\\n);\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync not called, return value from cache\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"typeParameter":[{"id":1222,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1223,"name":"getValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the computation"}]},"type":{"type":"reflection","declaration":{"id":1224,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1225,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"type":{"type":"reference","target":1222,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reflection","declaration":{"id":1226,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1227,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"reference","target":1222,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"permalink":"/std/api/core/function/lazy","categories":[],"previousId":1122,"nextId":1364},{"id":1364,"name":"omit","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/omit.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/omit.ts#L15"}],"signatures":[{"id":1365,"name":"omit","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new object by excluding the specified keys from the provided object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst object = { foo: true, bar: true, baz: true };\\nomit(object, [\'foo\']); // {  bar: true, baz: true };\\nomit(object, [\'foo\', \'bar\']); // { baz: true };\\nconsole.log(object); // > { foo: true, bar: true, baz: true }; (unchanged)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/omit.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/omit.ts#L15"}],"typeParameter":[{"id":1366,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}},{"id":1367,"name":"K","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":1368,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":1366,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}},{"id":1369,"name":"keys","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the keys to exclude"}]},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":1367,"name":"K","package":"@w5s/core","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1366,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1367,"name":"K","package":"@w5s/core","refersToTypeParameter":true}],"name":"Omit","package":"typescript"}}],"permalink":"/std/api/core/function/omit","categories":[],"previousId":1220,"nextId":1525},{"id":1525,"name":"pick","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/pick.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/pick.ts#L16"}],"signatures":[{"id":1526,"name":"pick","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new object by including the specified keys from provided object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst object = { foo: true, bar: true, baz: true };\\npick(object, [ \'foo\' ]); // { foo: true, };\\nconsole.log(object); // > { foo: true, bar: true, baz: true }; (unchanged)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/pick.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/pick.ts#L16"}],"typeParameter":[{"id":1527,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}},{"id":1528,"name":"K","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":1529,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":1527,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}},{"id":1530,"name":"keys","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The keys to pick in the new object."}]},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":1528,"name":"K","package":"@w5s/core","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":1527,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1528,"name":"K","package":"@w5s/core","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}}],"permalink":"/std/api/core/function/pick","categories":[],"previousId":1364,"nextId":643}],"groups":[{"title":"Classes","children":[989]},{"title":"Functions","children":[743,920,1090,1125,1535,1118,1122,1220,1364,1525]},{"title":"Interfaces","children":[643,739,747,893,930,1087,1100,1130,1228,1531,1539,2301]},{"title":"Namespaces","children":[649,751,755,872,1017,1149,1168,1213,1234,1370,1431,1471,1543,1565,1693,1856,1954,1999,2094]},{"title":"Type Aliases","children":[753,871,1033,2088,2093,1208,1209,1424,1429,1463,1469,1524,1682,1850,2005]}],"categories":[{"title":"Constructor","children":[989,1535]},{"title":"Functor","children":[920,1090]},{"title":"__CATEGORY__","children":[649,751,755,872,1017,1149,1168,1213,1234,1370,1431,1471,1543,1565,1693,1856,1954,1999,2094,643,739,747,893,930,1087,1100,1130,1228,1531,1539,2301,753,871,1033,2088,2093,1208,1209,1424,1429,1463,1469,1524,1682,1850,2005,743,1125,1118,1122,1220,1364,1525]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/index.ts#L1"}],"permalink":"/std/api/core"},"urlSlug":"core"}],"packageName":"@w5s/core","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":7,"name":"@w5s/core-type","variant":"declaration","kind":2,"flags":{},"children":[{"id":2430,"name":"ExpectAssertionObject","variant":"declaration","kind":256,"flags":{},"children":[{"id":2439,"name":"toBe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"type":{"type":"reflection","declaration":{"id":2440,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"signatures":[{"id":2441,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"parameters":[{"id":2442,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2435,"name":"toBeGreaterThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2436,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"signatures":[{"id":2437,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"parameters":[{"id":2438,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2431,"name":"toBeLessThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"type":{"type":"reflection","declaration":{"id":2432,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"signatures":[{"id":2433,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"parameters":[{"id":2434,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2443,"name":"toEqual","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"signatures":[{"id":2444,"name":"toEqual","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"parameters":[{"id":2445,"name":"expected","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2446,"name":"toHaveProperty","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"signatures":[{"id":2447,"name":"toHaveProperty","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"parameters":[{"id":2448,"name":"property","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}},{"id":2449,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2450,"name":"toThrow","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"signatures":[{"id":2451,"name":"toThrow","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"parameters":[{"id":2452,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[2439,2435,2431]},{"title":"Methods","children":[2443,2446,2450]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L4"}],"permalink":"/std/api/core-type/interface/ExpectAssertionObject","categories":[],"previousId":2390,"nextId":2456},{"id":2456,"name":"ExpectFunction","variant":"declaration","kind":256,"flags":{},"children":[{"id":2457,"name":"fail","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"type":{"type":"reflection","declaration":{"id":2458,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"signatures":[{"id":2459,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"parameters":[{"id":2460,"name":"message","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"never"}}]}}}],"groups":[{"title":"Properties","children":[2457]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L17"}],"signatures":[{"id":2461,"name":"ExpectFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}],"parameters":[{"id":2462,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intersection","types":[{"type":"reference","target":2430,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2463,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2464,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2430,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2464]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}},{"type":"reflection","declaration":{"id":2465,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2467,"name":"rejects","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L20"}],"type":{"type":"reference","target":2453,"name":"ExpectAssertion","package":"@w5s/core-type"}},{"id":2466,"name":"resolves","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L19"}],"type":{"type":"reference","target":2453,"name":"ExpectAssertion","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2467,2466]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}]}}]}}],"permalink":"/std/api/core-type/interface/ExpectFunction","categories":[],"previousId":2430,"nextId":2513},{"id":2513,"name":"TestEachFunction","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":45,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L45"}],"signatures":[{"id":2514,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L46"}],"typeParameter":[{"id":2515,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"tuple","elements":[{"type":"intrinsic","name":"any"}]}]}}],"parameters":[{"id":2516,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2515,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2499,"typeArguments":[{"type":"reference","target":2515,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2517,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L47"}],"typeParameter":[{"id":2518,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"parameters":[{"id":2519,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2518,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2499,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/TestingLibrary.ts","qualifiedName":"ExtractEachCallbackArgs"},"typeArguments":[{"type":"reference","target":2518,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"ExtractEachCallbackArgs","package":"@w5s/core-type"}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2520,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L48"}],"typeParameter":[{"id":2521,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2522,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2521,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2499,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2521,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2523,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L49"}],"parameters":[{"id":2524,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}}],"type":{"type":"reference","target":2499,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}}],"permalink":"/std/api/core-type/interface/TestEachFunction","categories":[],"previousId":2456,"nextId":2499},{"id":2499,"name":"TestEachFunctionReturn","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":41,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L41"}],"typeParameters":[{"id":2500,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"signatures":[{"id":2501,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2502,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2503,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2504,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"signatures":[{"id":2505,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2506,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2500,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2395,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2507,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2508,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2509,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2510,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"signatures":[{"id":2511,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2512,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2500,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2395,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core-type/interface/TestEachFunctionReturn","categories":[],"previousId":2513,"nextId":2468},{"id":2468,"name":"TestingLibrary","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Common interface for testing libraries like jest and vitest"}]},"children":[{"id":2469,"name":"describe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"type":{"type":"reflection","declaration":{"id":2470,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2471,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"reflection","declaration":{"id":2472,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2473,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"parameters":[{"id":2474,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2475,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2476,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2477,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2471]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"signatures":[{"id":2478,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"parameters":[{"id":2479,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2480,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2481,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"signatures":[{"id":2482,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2498,"name":"expect","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L38"}],"type":{"type":"reference","target":2456,"name":"ExpectFunction","package":"@w5s/core-type"}},{"id":2483,"name":"it","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"type":{"type":"reflection","declaration":{"id":2484,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2492,"name":"each","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":36,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L36"}],"type":{"type":"reference","target":2513,"name":"TestEachFunction","package":"@w5s/core-type"}},{"id":2485,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"reflection","declaration":{"id":2486,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2487,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"parameters":[{"id":2488,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2489,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2490,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2491,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2492,2485]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"signatures":[{"id":2493,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"parameters":[{"id":2494,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2495,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2496,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"signatures":[{"id":2497,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2469,2498,2483]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L28"}],"permalink":"/std/api/core-type/interface/TestingLibrary","categories":[],"previousId":2499,"nextId":2384},{"id":2384,"name":"AnyFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes any kind of parameters and returns anything"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction decorate<F extends AnyFunction>(fn: F): F {\\n  // ...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"type":{"type":"reflection","declaration":{"id":2385,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"signatures":[{"id":2386,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2387,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/std/api/core-type#AnyFunction","categories":[],"previousId":2468,"nextId":2388},{"id":2388,"name":"Array","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for immutable array"}]},"sources":[{"fileName":"packages/core-type/src/Array.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Array.ts#L4"}],"typeParameters":[{"id":2389,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":2389,"name":"Item","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},"permalink":"/std/api/core-type#Array","categories":[],"previousId":2384,"nextId":2395},{"id":2395,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/src/Awaitable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Awaitable.ts#L7"}],"typeParameters":[{"id":2396,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":2396,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":2396,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/api/core-type#Awaitable","categories":[],"previousId":2388,"nextId":2397},{"id":2397,"name":"Day","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Day of the month"}]},"sources":[{"fileName":"packages/core-type/src/Day.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Day.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31}]},"permalink":"/std/api/core-type#Day","categories":[],"previousId":2395,"nextId":2398},{"id":2398,"name":"EmptyObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Empty object type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.totaltypescript.com/the-empty-object-type-in-typescript"}]}]},"sources":[{"fileName":"packages/core-type/src/EmptyObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/EmptyObject.ts#L6"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PropertyKey"},"name":"PropertyKey","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"},"permalink":"/std/api/core-type#EmptyObject","categories":[],"previousId":2397,"nextId":2453},{"id":2453,"name":"ExpectAssertion","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}],"type":{"type":"intersection","types":[{"type":"reference","target":2430,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2454,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2455,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2430,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2455]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}}]},"permalink":"/std/api/core-type#ExpectAssertion","categories":[],"previousId":2398,"nextId":2399},{"id":2399,"name":"Hour","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An hour of the day"}]},"sources":[{"fileName":"packages/core-type/src/Hour.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Hour.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23}]},"permalink":"/std/api/core-type#Hour","categories":[],"previousId":2453,"nextId":2400},{"id":2400,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value"}]},"sources":[{"fileName":"packages/core-type/src/Int.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Int.ts#L6"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":2425,"typeArguments":[{"type":"literal","value":"Int"}],"name":"Tag","package":"@w5s/core-type"}]},"permalink":"/std/api/core-type#Int","categories":[],"previousId":2399,"nextId":2401},{"id":2401,"name":"JSONArray","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONArray.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONArray.ts#L6"}],"type":{"type":"array","elementType":{"type":"reference","target":2407,"name":"JSONValue","package":"@w5s/core-type"}},"permalink":"/std/api/core-type#JSONArray","categories":[],"previousId":2400,"nextId":2402},{"id":2402,"name":"JSONObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Record of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2403,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"indexSignature":{"id":2404,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L7"}],"parameters":[{"id":2405,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2407,"name":"JSONValue","package":"@w5s/core-type"}}}},"permalink":"/std/api/core-type#JSONObject","categories":[],"previousId":2401,"nextId":2406},{"id":2406,"name":"JSONPrimitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any JSON primitive\\n\\n- null\\n- boolean\\n- number\\n- string"}]},"sources":[{"fileName":"packages/core-type/src/JSONPrimitive.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONPrimitive.ts#L9"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]},"permalink":"/std/api/core-type#JSONPrimitive","categories":[],"previousId":2402,"nextId":2407},{"id":2407,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core-type/src/JSONValue.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONValue.ts#L8"}],"type":{"type":"union","types":[{"type":"reference","target":2406,"name":"JSONPrimitive","package":"@w5s/core-type"},{"type":"reference","target":2401,"name":"JSONArray","package":"@w5s/core-type"},{"type":"reference","target":2402,"name":"JSONObject","package":"@w5s/core-type"}]},"permalink":"/std/api/core-type#JSONValue","categories":[],"previousId":2406,"nextId":2408},{"id":2408,"name":"Minute","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minute of an hour"}]},"sources":[{"fileName":"packages/core-type/src/Minute.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Minute.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31},{"type":"literal","value":32},{"type":"literal","value":33},{"type":"literal","value":34},{"type":"literal","value":35},{"type":"literal","value":36},{"type":"literal","value":37},{"type":"literal","value":38},{"type":"literal","value":39},{"type":"literal","value":40},{"type":"literal","value":41},{"type":"literal","value":42},{"type":"literal","value":43},{"type":"literal","value":44},{"type":"literal","value":45},{"type":"literal","value":46},{"type":"literal","value":47},{"type":"literal","value":48},{"type":"literal","value":49},{"type":"literal","value":50},{"type":"literal","value":51},{"type":"literal","value":52},{"type":"literal","value":53},{"type":"literal","value":54},{"type":"literal","value":55},{"type":"literal","value":56},{"type":"literal","value":57},{"type":"literal","value":58},{"type":"literal","value":59}]},"permalink":"/std/api/core-type#Minute","categories":[],"previousId":2407,"nextId":2409},{"id":2409,"name":"Month","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Month of the year"}]},"sources":[{"fileName":"packages/core-type/src/Month.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Month.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12}]},"permalink":"/std/api/core-type#Month","categories":[],"previousId":2408,"nextId":2410},{"id":2410,"name":"Nullable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that can be either "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":", "},{"kind":"code","text":"`null`"},{"kind":"text","text":", or "},{"kind":"code","text":"`T`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype NullableNumber = Nullable<number>;\\n\\nfunction someFunction(value: NullableNumber) {\\n  // value is number | undefined | null\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Nullable.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Nullable.ts#L13"}],"typeParameters":[{"id":2411,"name":"T","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"},{"type":"reference","target":2411,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}]},"permalink":"/std/api/core-type#Nullable","categories":[],"previousId":2409,"nextId":2412},{"id":2412,"name":"ObjectLike","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type representing non primitive values. This includes :\\n- symbol\\n- object (null is excluded)\\n- function"}]},"sources":[{"fileName":"packages/core-type/src/ObjectLike.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/ObjectLike.ts#L8"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]},"permalink":"/std/api/core-type#ObjectLike","categories":[],"previousId":2410,"nextId":2413},{"id":2413,"name":"PartialKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a partial type of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" for keys in "},{"kind":"code","text":"`Keys`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { required: boolean; optional1: string; optional2: string; };\\ntype OptionalT = PartialKeys<T, \'optional\'>; // { required: boolean; optional1?: string; optional2?: string; };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/PartialKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/PartialKeys.ts#L12"}],"typeParameters":[{"id":2414,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2415,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2414,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2416,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2414,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2415,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2414,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2415,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Partial","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/api/core-type#PartialKeys","categories":[],"previousId":2412,"nextId":2416},{"id":2416,"name":"Pretty","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Flatten the type. Useful for IDE information."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype A = { a: boolean };\\ntype B = { b: string };\\ntype AB = Pretty<A & B>; // { a: boolean; b: string; }\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}],"typeParameters":[{"id":2418,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"intersection","types":[{"type":"mapped","parameter":"KeyType","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2418,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/Pretty.ts","qualifiedName":"KeyType"},"name":"KeyType","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2418,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}},{"type":"reflection","declaration":{"id":2417,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}]}}]},"permalink":"/std/api/core-type#Pretty","categories":[],"previousId":2413,"nextId":2419},{"id":2419,"name":"Primitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Primitive values are immutable data at the lowest level of the language.\\n\\nThere are 7 primitive types\\n- string\\n- number\\n- symbol\\n- bigint\\n- boolean\\n- null\\n- undefined"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive"}]}]},"sources":[{"fileName":"packages/core-type/src/Primitive.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Primitive.ts#L15"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"permalink":"/std/api/core-type#Primitive","categories":[],"previousId":2416,"nextId":2420},{"id":2420,"name":"Radix36","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number parsing/formatting radix\\n\\nFor example this can be used for a strict use of "},{"kind":"inline-tag","tag":"@link","text":"parseInt","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"parseInt"},"tsLinkText":""}]},"sources":[{"fileName":"packages/core-type/src/Radix36.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Radix36.ts#L6"}],"type":{"type":"union","types":[{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31},{"type":"literal","value":32},{"type":"literal","value":33},{"type":"literal","value":34},{"type":"literal","value":35},{"type":"literal","value":36}]},"permalink":"/std/api/core-type#Radix36","categories":[],"previousId":2419,"nextId":2421},{"id":2421,"name":"RequiredKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Make specified "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" properties in "},{"kind":"code","text":"`T`"},{"kind":"text","text":" required"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { foo?: boolean, bar?: string }\\ntype RequiredT = RequiredKeys<T, \'bar\'>; // { foo?: boolean; bar: string };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/RequiredKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/RequiredKeys.ts#L12"}],"typeParameters":[{"id":2422,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2423,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2422,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2416,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2422,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2423,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Required"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2422,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2423,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Required","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/api/core-type#RequiredKeys","categories":[],"previousId":2420,"nextId":2424},{"id":2424,"name":"Second","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Second of a minute"}]},"sources":[{"fileName":"packages/core-type/src/Second.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Second.ts#L6"}],"type":{"type":"reference","target":2408,"name":"Minute","package":"@w5s/core-type"},"permalink":"/std/api/core-type#Second","categories":[],"previousId":2421,"nextId":2425},{"id":2425,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enhance "},{"kind":"code","text":"`Base`"},{"kind":"text","text":" by adding tags. Every tag is prefixed by "},{"kind":"code","text":"`@@`"},{"kind":"text","text":" as a convention to never be used by runtime code"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype PositiveNumber = number & Tag<\'Positive\'>;\\nconst isPositive = (n: number): n is PositiveNumber => n >= 0;\\nconst squareRoot = (n: PositiveNumber): PositiveNumber => Math.sqrt(n) as PositiveNumber;\\nconst value = 0;\\nsquareRoot(value); // tsc: Error\\nif (isPositive(value)) {\\n  squareRoot(value); // tsc: Passed\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}],"typeParameters":[{"id":2428,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2429,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"literal","value":true}}],"type":{"type":"reflection","declaration":{"id":2426,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2427,"name":"@@tag","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L17"}],"type":{"type":"mapped","parameter":"K","parameterType":{"type":"reference","target":2428,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},"templateType":{"type":"reference","target":2429,"name":"Value","package":"@w5s/core-type","refersToTypeParameter":true},"readonlyModifier":"+"}}],"groups":[{"title":"Properties","children":[2427]}],"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}]}},"permalink":"/std/api/core-type#Tag","categories":[],"previousId":2424,"nextId":2525},{"id":2525,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all values from the keys "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" of "},{"kind":"code","text":"`T`"},{"kind":"text","text":". If "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" is omitted, all keys are used."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype AllValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }> // \'bar\' | \'baz\' | boolean\\ntype SomeValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }, \'Baz\' | \'Bar\'> // \'bar\' | \'baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/ValueOf.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/ValueOf.ts#L10"}],"typeParameters":[{"id":2526,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2527,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2526,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"default":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2526,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":2527,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2526,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"permalink":"/std/api/core-type#ValueOf","categories":[],"previousId":2425,"nextId":2528},{"id":2528,"name":"Year","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/core-type/src/Year.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Year.ts#L4"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/core-type#Year","categories":[],"previousId":2525},{"id":2390,"name":"assertType","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"signatures":[{"id":2391,"name":"assertType","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when "},{"kind":"code","text":"`Actual`"},{"kind":"text","text":" is not strictly equal to "},{"kind":"code","text":"`Expected`"},{"kind":"text","text":".\\nThis is a type helper and does nothing at run time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Expected = \'foo\'\\nassertType<\'foo\', Expected>(true);// -> everything is fine\\nassertType<\'bar\', Expected>(true);// -> ts raises an error\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"typeParameter":[{"id":2392,"name":"Actual","variant":"typeParam","kind":131072,"flags":{}},{"id":2393,"name":"Expected","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2394,"name":"_shouldBeEqual","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an inferred value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/assertType.ts","qualifiedName":"IsExact"},"typeArguments":[{"type":"reference","target":2392,"name":"Actual","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2393,"name":"Expected","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"IsExact","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/core-type/function/assertType","categories":[],"nextId":2430}],"groups":[{"title":"Functions","children":[2390]},{"title":"Interfaces","children":[2430,2456,2513,2499,2468]},{"title":"Type Aliases","children":[2384,2388,2395,2397,2398,2453,2399,2400,2401,2402,2406,2407,2408,2409,2410,2412,2413,2416,2419,2420,2421,2424,2425,2525,2528]}],"sources":[{"fileName":"packages/core-type/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/index.ts#L1"}],"permalink":"/std/api/core-type"},"urlSlug":"core-type"}],"packageName":"@w5s/core-type","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":8,"name":"@w5s/env","variant":"declaration","kind":2,"flags":{},"children":[{"id":2530,"name":"Env","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A dictionary of environment variables"}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"indexSignature":{"id":2531,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/env/src/Env.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L28"}],"parameters":[{"id":2532,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}},"permalink":"/std/api/env/interface/Env","categories":[],"nextId":2529},{"id":2529,"name":"Env","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An object containing the environment variables"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NODE_ENV = Env[\'NODE_ENV\'];\\n```"}]}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"type":{"type":"reference","target":2530,"name":"Env","package":"@w5s/env"},"permalink":"/std/api/env#Env","categories":[],"previousId":2530}],"groups":[{"title":"Interfaces","children":[2530]},{"title":"Variables","children":[2529]}],"sources":[{"fileName":"packages/env/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/env/src/index.ts#L1"}],"permalink":"/std/api/env"},"urlSlug":"env"}],"packageName":"@w5s/env","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":9,"name":"@w5s/error","variant":"declaration","kind":2,"flags":{},"children":[{"id":2533,"name":"AbortError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The AbortError object indicates an error that the operation was aborted."}]},"children":[{"id":2553,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2554,"name":"new AbortError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2555,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2556,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2533,"name":"AbortError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).constructor"}},{"id":2541,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"AbortError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).errorName"}},{"id":2542,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2543,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2544,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).asString"}},{"id":2545,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2546,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2547,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2548,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2549,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2550,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2551,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2552,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'This operation was aborted\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2553]},{"title":"Properties","children":[2541]},{"title":"Methods","children":[2542,2545]}],"sources":[{"fileName":"packages/error/src/AbortError.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AbortError.ts#L7"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2534,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2538,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2536,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2535,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"AbortError"}},{"id":2537,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2538,2536,2535,2537]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2539,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2540,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"AbortError"}}],"groups":[{"title":"Properties","children":[2540]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/AbortError","categories":[],"nextId":2557},{"id":2557,"name":"AggregateError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.AggregateError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2021.promise.d.ts","qualifiedName":"AggregateError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { AggregateError } from \'@w5s/error\';\\n\\ntry {\\n  throw new AggregateError([new Error(\\"some error\\")], \\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof AggregateError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"AggregateError\\"\\n  console.log(e.errors); // [ Error: \\"some error\\" ]\\n}\\n```"}]}]},"children":[{"id":2558,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"signatures":[{"id":2559,"name":"new AggregateError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"AggregateError constructor"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"typeParameter":[{"id":2560,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"parameters":[{"id":2561,"name":"errors","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an iterable of error"}]},"type":{"type":"reference","target":2560,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}},{"id":2562,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2557,"typeArguments":[{"type":"reference","target":2560,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"AggregateError","package":"@w5s/error"},"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2564,"name":"errors","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of error"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L26"}],"type":{"type":"conditional","checkType":{"type":"reference","target":2560,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"trueType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2560,"typeArguments":[{"type":"reference","target":2560,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}}}]}},"falseType":{"type":"conditional","checkType":{"type":"reference","target":2560,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},"trueType":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true}},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":2563,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L21"}],"type":{"type":"literal","value":"AggregateError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2558]},{"title":"Properties","children":[2564,2563]}],"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":37,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L37"},{"fileName":"packages/error/src/AggregateError.ts","line":20,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L20"}],"typeParameters":[{"id":2565,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/AggregateError","categories":[],"previousId":2533,"nextId":2566},{"id":2566,"name":"ArgumentError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ArgumentError object indicates an error that the program wrong argument is passed to a function"}]},"children":[{"id":2586,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2587,"name":"new ArgumentError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2588,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2589,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2566,"name":"ArgumentError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}},{"id":2574,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"ArgumentError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).errorName"}},{"id":2575,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2576,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2577,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}},{"id":2578,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2579,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2580,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2581,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2582,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2583,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2584,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2585,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2586]},{"title":"Properties","children":[2574]},{"title":"Methods","children":[2575,2578]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2567,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2571,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2569,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2568,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"ArgumentError"}},{"id":2570,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2571,2569,2568,2570]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2572,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2573,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"ArgumentError"}}],"groups":[{"title":"Properties","children":[2573]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/ArgumentError","categories":[],"previousId":2557,"nextId":2602},{"id":2602,"name":"Error","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.Error","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Error } from \'@w5s/error\';\\n\\nthrow new Error(\'my message\', { cause: someError });\\n```"}]}]},"children":[{"id":2603,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"signatures":[{"id":2604,"name":"new Error","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"parameters":[{"id":2605,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2606,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error options"}]},"type":{"type":"reference","target":2666,"name":"ErrorOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2602,"name":"Error","package":"@w5s/error"}}]},{"id":2610,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error cause"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L34"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2608,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L24"}],"type":{"type":"intrinsic","name":"string"}},{"id":2607,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L19"}],"type":{"type":"literal","value":"Error"}},{"id":2609,"name":"stack","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error stack description (when supported)"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L29"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[2603]},{"title":"Properties","children":[2610,2608,2607,2609]}],"sources":[{"fileName":"packages/error/src/Error.ts","line":45,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L45"},{"fileName":"packages/error/src/Error.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L15"}],"permalink":"/std/api/error/class/Error","categories":[],"previousId":2566,"nextId":2668},{"id":2668,"name":"EvalError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.EvalError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"EvalError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe EvalError object indicates an error regarding the global eval() function. This exception is not thrown by JavaScript anymore, however the EvalError object remains for compatibility."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { EvalError } from \'@w5s/error\';\\n\\ntry {\\n  throw new EvalError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeEvalErrorError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"EvalError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2669,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2670,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2671,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2668,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2672,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2673,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2674,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2668,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2675,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/EvalError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L27"}],"type":{"type":"literal","value":"EvalError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2669]},{"title":"Properties","children":[2675]}],"sources":[{"fileName":"packages/error/src/EvalError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L30"},{"fileName":"packages/error/src/EvalError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/EvalError","categories":[],"previousId":2602,"nextId":2683},{"id":2683,"name":"InvariantError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The InvariantError object indicates an error that the program violates a fundamental assumption or condition.\\nThis exception is typically used to indicate bugs in the code, such as incorrect assumptions about the state of an object or function.\\nThe InvariantError object should be thrown when a violation of an invariant occurs and should not be caught by the program.\\nInstead, it should be handled by the program\'s error handling mechanism."}]},"children":[{"id":2703,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2704,"name":"new InvariantError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2705,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2706,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2683,"name":"InvariantError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}},{"id":2691,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"InvariantError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).errorName"}},{"id":2692,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2693,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2694,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}},{"id":2695,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2696,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2697,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2698,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2699,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2700,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2701,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2702,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2703]},{"title":"Properties","children":[2691]},{"title":"Methods","children":[2692,2695]}],"sources":[{"fileName":"packages/error/src/InvariantError.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/InvariantError.ts#L10"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2684,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2688,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2686,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2685,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"InvariantError"}},{"id":2687,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2688,2686,2685,2687]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2689,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2690,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"InvariantError"}}],"groups":[{"title":"Properties","children":[2690]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/InvariantError","categories":[],"previousId":2668,"nextId":2713},{"id":2713,"name":"NotImplementedError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The NotImplementedError object indicates an error that the current function was not implemented"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction someFunction() {\\n  throw NotImplementedError();// message can be customized\\n}\\n```"}]}]},"children":[{"id":2733,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2734,"name":"new NotImplementedError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2735,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2736,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2713,"name":"NotImplementedError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}},{"id":2721,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"NotImplementedError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).errorName"}},{"id":2722,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2723,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2724,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}},{"id":2725,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2726,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2727,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2728,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2729,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2730,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2731,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2732,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2733]},{"title":"Properties","children":[2721]},{"title":"Methods","children":[2722,2725]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L13"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2714,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2718,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2716,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2715,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"NotImplementedError"}},{"id":2717,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2718,2716,2715,2717]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2719,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2720,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"NotImplementedError"}}],"groups":[{"title":"Properties","children":[2720]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/NotImplementedError","categories":[],"previousId":2683,"nextId":2737},{"id":2737,"name":"RangeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.RangeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RangeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nA RangeError is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { RangeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new RangeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"RangeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2738,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2739,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2740,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2737,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2741,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2742,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2743,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2737,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2744,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/RangeError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L27"}],"type":{"type":"literal","value":"RangeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2738]},{"title":"Properties","children":[2744]}],"sources":[{"fileName":"packages/error/src/RangeError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L30"},{"fileName":"packages/error/src/RangeError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/RangeError","categories":[],"previousId":2713,"nextId":2745},{"id":2745,"name":"ReferenceError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.ReferenceError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReferenceError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe ReferenceError object represents an error when a variable that doesn\'t exist (or hasn\'t yet been initialized) in the current scope is referenced."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { ReferenceError } from \'@w5s/error\';\\n\\ntry {\\n  throw new ReferenceError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof ReferenceError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"ReferenceError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2746,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2747,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2748,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2745,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2749,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2750,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2751,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2745,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2752,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L26"}],"type":{"type":"literal","value":"ReferenceError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2746]},{"title":"Properties","children":[2752]}],"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L29"},{"fileName":"packages/error/src/ReferenceError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/ReferenceError","categories":[],"previousId":2737,"nextId":2753},{"id":2753,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The RuntimeError object indicates an error that an error occurred during the runtime of a program."}]},"children":[{"id":2773,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2774,"name":"new RuntimeError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2775,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2776,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2753,"name":"RuntimeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}},{"id":2761,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"RuntimeError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).errorName"}},{"id":2762,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2763,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2764,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}},{"id":2765,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2766,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2767,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2768,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2769,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2770,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2771,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2772,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2773]},{"title":"Properties","children":[2761]},{"title":"Methods","children":[2762,2765]}],"sources":[{"fileName":"packages/error/src/RuntimeError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RuntimeError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2754,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2758,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2756,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2755,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"RuntimeError"}},{"id":2757,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2758,2756,2755,2757]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2759,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2760,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"RuntimeError"}}],"groups":[{"title":"Properties","children":[2760]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/RuntimeError","categories":[],"previousId":2745,"nextId":2777},{"id":2777,"name":"SyntaxError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.SyntaxError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"SyntaxError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe SyntaxError object represents an error when trying to interpret syntactically invalid code. It is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { SyntaxError } from \'@w5s/error\';\\n\\ntry {\\n  throw new SyntaxError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof SyntaxError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"SyntaxError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2778,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2779,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2780,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2777,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2781,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2782,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2783,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2777,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2784,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L26"}],"type":{"type":"literal","value":"SyntaxError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2778]},{"title":"Properties","children":[2784]}],"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L29"},{"fileName":"packages/error/src/SyntaxError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/SyntaxError","categories":[],"previousId":2753,"nextId":2788},{"id":2788,"name":"TimeoutError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The TimeoutError object indicates an error that the operation took too much time and was canceled"}]},"children":[{"id":2808,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2809,"name":"new TimeoutError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2810,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reflection","declaration":{"id":2811,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2788,"name":"TimeoutError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}},{"id":2796,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"TimeoutError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).errorName"}},{"id":2797,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2798,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2799,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}},{"id":2800,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2801,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2802,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2803,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2804,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2805,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2806,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2807,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2808]},{"title":"Properties","children":[2796]},{"title":"Methods","children":[2797,2800]}],"sources":[{"fileName":"packages/error/src/TimeoutError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TimeoutError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2789,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2793,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2791,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2790,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"TimeoutError"}},{"id":2792,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2793,2791,2790,2792]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2794,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2795,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"TimeoutError"}}],"groups":[{"title":"Properties","children":[2795]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/error/class/TimeoutError","categories":[],"previousId":2777,"nextId":2812},{"id":2812,"name":"TypeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.TypeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TypeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe TypeError object represents an error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { TypeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new TypeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof TypeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"TypeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2813,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2814,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2815,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2812,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2816,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2817,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2818,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2812,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2819,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/TypeError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L26"}],"type":{"type":"literal","value":"TypeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2813]},{"title":"Properties","children":[2819]}],"sources":[{"fileName":"packages/error/src/TypeError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L29"},{"fileName":"packages/error/src/TypeError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/TypeError","categories":[],"previousId":2788,"nextId":2820},{"id":2820,"name":"URIError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.URIError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"URIError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe URIError object represents an error when a global URI handling function was used in a wrong way."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { URIError } from \'@w5s/error\';\\n\\ntry {\\n  throw new URIError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof URIError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"URIError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2821,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":2822,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2823,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2820,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2824,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":2825,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":2826,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":2820,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2827,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/URIError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L26"}],"type":{"type":"literal","value":"URIError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2821]},{"title":"Properties","children":[2827]}],"sources":[{"fileName":"packages/error/src/URIError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L29"},{"fileName":"packages/error/src/URIError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/api/error/class/URIError","categories":[],"previousId":2812,"nextId":2611},{"id":2615,"name":"ErrorClass","variant":"declaration","kind":256,"flags":{},"children":[{"id":2616,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2636,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2637,"name":"new ErrorClass","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"typeParameter":[{"id":2638,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reflection","declaration":{"id":2639,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}}],"parameters":[{"id":2640,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2659,"typeArguments":[{"type":"reference","target":2638,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassParameters","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2641,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2647,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2645,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2642,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":2643,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2644,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2635,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2644]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2638,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}}},{"id":2646,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2647,2645,2642,2646]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2648,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2649,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2635,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2649]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2638,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2617,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"reference","target":2635,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Pretty.errorName"}},{"id":2618,"name":"prototype","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L48"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2619,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2623,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2621,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2620,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"intrinsic","name":"string"}},{"id":2622,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2623,2621,2620,2622]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.prototype"}},{"id":2624,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2625,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2626,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}},{"id":2627,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2628,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2629,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2630,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2631,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2632,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2633,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2634,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2547,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"groups":[{"title":"Constructors","children":[2616,2636]},{"title":"Properties","children":[2617,2618]},{"title":"Methods","children":[2624,2627]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"typeParameters":[{"id":2635,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Pretty"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":2594,"name":"CustomError","package":"@w5s/error"}}],"name":"Pretty","package":"@w5s/core-type"}],"permalink":"/std/api/error/interface/ErrorClass","categories":[],"previousId":2828,"nextId":2655},{"id":2655,"name":"ErrorClassOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":2657,"name":"errorMessage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default error message"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L52"}],"type":{"type":"intrinsic","name":"string"}},{"id":2656,"name":"errorName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L48"}],"type":{"type":"reference","target":2658,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClassOptions.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2657,2656]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L44"}],"typeParameters":[{"id":2658,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/error/interface/ErrorClassOptions","categories":[],"previousId":2615,"nextId":2666},{"id":2666,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":2667,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cause of the error"}]},"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L5"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[2667]}],"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L1"}],"permalink":"/std/api/error/interface/ErrorOptions","categories":[],"previousId":2655,"nextId":2595},{"id":2595,"name":"CustomError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Standard extendable error type"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"typeParameters":[{"id":2601,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"globalThis.Error","package":"typescript","qualifiedName":"Error"},{"type":"reflection","declaration":{"id":2596,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2600,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2598,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2597,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"reference","target":2601,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}}},{"id":2599,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2600,2598,2597,2599]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":2601,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"permalink":"/std/api/error#CustomError","categories":[],"previousId":2666,"nextId":2659},{"id":2659,"name":"ErrorClassParameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new CustomError"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":71,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L71"}],"typeParameters":[{"id":2660,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"conditional","checkType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"RequiredKeysOf"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2660,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"}],"name":"RequiredKeysOf","package":"@w5s/error"},"extendsType":{"type":"intrinsic","name":"never"},"trueType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reference","target":2660,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]},"falseType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":2661,"typeArguments":[{"type":"reference","target":2660,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}},"permalink":"/std/api/error#ErrorClassParameters","categories":[],"previousId":2595,"nextId":2661},{"id":2661,"name":"ErrorClassProperties","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all properties passed to constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":79,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L79"}],"typeParameters":[{"id":2665,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2665,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":2662,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2664,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional cause"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L90"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2663,"name":"message","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional message, if omitted default one will be used"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L86"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2664,2663]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":82,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L82"}]}}]},"permalink":"/std/api/error#ErrorClassProperties","categories":[],"previousId":2659,"nextId":2650},{"id":2650,"name":"ErrorType","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L6"}],"typeParameters":[{"id":2653,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2654,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":2595,"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":2651,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2652,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2653,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2652]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2654,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"CustomError","package":"@w5s/error"},"permalink":"/std/api/error#ErrorType","categories":[],"previousId":2661,"nextId":2594},{"id":2594,"name":"CustomError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst parentError: Error;\\nconst error = new CustomError({\\n  name: \'FooError\' as const, // this is required\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]},{"tag":"@param","name":"properties","content":[{"kind":"text","text":"initial properties"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorConstructor"},"name":"CustomErrorConstructor","package":"@w5s/error"},"permalink":"/std/api/error#CustomError","categories":[],"previousId":2650},{"id":2611,"name":"ErrorClass","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2612,"name":"ErrorClass","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"ErrorClass","target":2611,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nexport class MyError extends ErrorClass({\\n  errorName: \'MyError\',\\n  // errorMessage: \'my message\',\\n})<{\\n  foo: boolean;\\n}> {};\\n\\nconst instance = MyError({ foo: true, message: \'hey!\' }); // Error { name: \'MyError\', message: \'hey!\', foo: true }\\nMyError.errorName === \'MyError\' // true\\nMyError.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"}],"typeParameter":[{"id":2613,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":2614,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the options for the new error type"}]},"type":{"type":"reference","target":2655,"typeArguments":[{"type":"reference","target":2613,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2615,"typeArguments":[{"type":"reference","target":2613,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClass","package":"@w5s/error"}}],"permalink":"/std/api/error/function/ErrorClass","categories":[],"previousId":2820,"nextId":2590},{"id":2590,"name":"assertNever","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"signatures":[{"id":2591,"name":"assertNever","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when accessing this function and throws a TypeError at runtime\\nThis is useful for exhaustive switch check."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst print = (fruit: \'banana\'|\'kiwi\') => {\\n  switch (fruit) {\\n    case \'banana\': return \'\ud83c\udf4c Banana\';\\n    case \'kiwi\': return \'\ud83e\udd5d Kiwi\';\\n    default: return assertNever(fruit); // <- This line will report an error if a case is missing\\n  }\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"typeParameter":[{"id":2592,"name":"V","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2593,"name":"subject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the never value that should be reported"}]},"type":{"type":"reference","target":2592,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"type":{"type":"reference","target":2592,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"permalink":"/std/api/error/function/assertNever","categories":[],"previousId":2611,"nextId":2676},{"id":2676,"name":"invariant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"},{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"},{"fileName":"packages/error/src/invariant.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L18"}],"signatures":[{"id":2677,"name":"invariant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else throws "},{"kind":"code","text":"`Error { name: \'InvariantError\', message }`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninvariant(true, \'this should be true\');// pass\\ninvariant(false, \'this should be true\');// throw new Error(\'this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"}],"parameters":[{"id":2678,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"literal","value":false}},{"id":2679,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"never"}},{"id":2680,"name":"invariant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"}],"parameters":[{"id":2681,"name":"condition","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":2682,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"predicate","name":"condition","asserts":true}}],"permalink":"/std/api/error/function/invariant","categories":[],"previousId":2590,"nextId":2707},{"id":2707,"name":"isDOMException","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/isDOMException.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isDOMException.ts#L16"}],"signatures":[{"id":2708,"name":"isDOMException","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the provided value is a DOMException object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisDOMException(new DOMException(\'Test Error\')); // true\\n\\nisDOMException(new TypeError(\'Test Error\')); // false\\nisDOMException(undefined); // false\\nisDOMException({ name: \'Error\' }); // false\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"true if the value is an Error object, false otherwise."}]}]},"sources":[{"fileName":"packages/error/src/isDOMException.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isDOMException.ts#L16"}],"parameters":[{"id":2709,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"DOMException"},"name":"DOMException","package":"typescript"}}}],"permalink":"/std/api/error/function/isDOMException","categories":[],"previousId":2676,"nextId":2710},{"id":2710,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/isError.ts","line":19,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L19"}],"signatures":[{"id":2711,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the provided value is an Error object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisError(new Error(\'Test Error\')); // true\\nisError(new TypeError(\'Test Error\')); // true\\n\\nisError(undefined); // false\\nisError({ name: \'Error\' }); // false\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"true if the value is an Error object, false otherwise."}]}]},"sources":[{"fileName":"packages/error/src/isError.ts","line":19,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L19"}],"parameters":[{"id":2712,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}}],"permalink":"/std/api/error/function/isError","categories":[],"previousId":2707,"nextId":2785},{"id":2785,"name":"panic","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"signatures":[{"id":2786,"name":"panic","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Throw the given "},{"kind":"code","text":"`error`"},{"kind":"text","text":" to stop execution. Can be used as expression unlike throw statement."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst unknownValue: unknown = 123;\\nconst stringValue = typeof unknownValue === \'string\' ? unknownValue : panic(new Error(\'not a string\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"parameters":[{"id":2787,"name":"error","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error to throw"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"never"}}],"permalink":"/std/api/error/function/panic","categories":[],"previousId":2710,"nextId":2828},{"id":2828,"name":"warning","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"signatures":[{"id":2829,"name":"warning","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else print a message using "},{"kind":"code","text":"`console.warn`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nwarning(true, \'this should be true\');// pass\\nwarning(false, \'this should be true\');// console.warn(\'Warning: this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"parameters":[{"id":2830,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":2831,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/error/function/warning","categories":[],"previousId":2785,"nextId":2615}],"groups":[{"title":"Classes","children":[2533,2557,2566,2602,2668,2683,2713,2737,2745,2753,2777,2788,2812,2820]},{"title":"Functions","children":[2611,2590,2676,2707,2710,2785,2828]},{"title":"Interfaces","children":[2615,2655,2666]},{"title":"Type Aliases","children":[2595,2659,2661,2650]},{"title":"Variables","children":[2594]}],"categories":[{"title":"Constructor","children":[2594]},{"title":"__CATEGORY__","children":[2533,2557,2566,2602,2668,2683,2713,2737,2745,2753,2777,2788,2812,2820,2615,2655,2666,2595,2659,2661,2650,2611,2590,2676,2707,2710,2785,2828]}],"sources":[{"fileName":"packages/error/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/error/src/index.ts#L1"}],"permalink":"/std/api/error"},"urlSlug":"error"}],"packageName":"@w5s/error","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":10,"name":"@w5s/http","variant":"declaration","kind":2,"flags":{},"children":[{"id":2954,"name":"Client","variant":"declaration","kind":4,"flags":{},"children":[{"id":2962,"name":"Options","variant":"declaration","kind":256,"flags":{},"children":[{"id":2971,"name":"fetch","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":2972,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"signatures":[{"id":2973,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":2974,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2975,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":2976,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"parameters":[{"id":2977,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2978,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.fetch"}},{"id":2963,"name":"onRequest","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2964,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":2965,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":2966,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":2832,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onRequest"}},{"id":2967,"name":"onResponse","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":2968,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":2969,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":2970,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":2832,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onResponse"}},{"id":2979,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.timeout"}}],"groups":[{"title":"Properties","children":[2971,2963,2967,2979]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":45,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L45"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":2935,"name":"Client","package":"@w5s/http"}],"name":"Partial","package":"typescript"}],"permalink":"/std/api/http/namespace/Client#Options"},{"id":2980,"name":"defaultTimeoutDuration","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/Client.ts","line":47,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L47"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},"defaultValue":"...","permalink":"/std/api/http/namespace/Client#defaultTimeoutDuration"},{"id":2958,"name":"getRequestTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"signatures":[{"id":2959,"name":"getRequestTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for the request and client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getRequestTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"parameters":[{"id":2960,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2935,"name":"Client","package":"@w5s/http"}},{"id":2961,"name":"requestObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Client#getRequestTimeoutDuration"},{"id":2955,"name":"getTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"signatures":[{"id":2956,"name":"getTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"parameters":[{"id":2957,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2935,"name":"Client","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Client#getTimeoutDuration"}],"groups":[{"title":"Interfaces","children":[2962]},{"title":"Variables","children":[2980]},{"title":"Functions","children":[2958,2955]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/api/http/namespace/Client","categories":[],"previousId":3474,"nextId":2833},{"id":2833,"name":"HTTPError","variant":"declaration","kind":4,"flags":{},"children":[{"id":2834,"name":"InvalidURL","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when url passed is invalid"}]},"children":[{"id":2856,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":2857,"name":"new InvalidURL","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":2858,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":2859,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2860,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2860]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2834,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}},{"id":2861,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).input"}},{"id":2844,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPInvalidURLError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).errorName"}},{"id":2845,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":2846,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":2847,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}},{"id":2848,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":2849,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":2850,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2851,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":2852,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":2853,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2854,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2855,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[2856]},{"title":"Properties","children":[2861,2844]},{"title":"Methods","children":[2845,2848]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":14,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L14"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2835,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2839,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2837,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2836,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}},{"id":2838,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2839,2837,2836,2838]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":2840,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2841,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}}],"groups":[{"title":"Properties","children":[2841]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":2842,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2843,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2843]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#InvalidURL"},{"id":2862,"name":"NetworkError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A network error when "},{"kind":"code","text":"`fetch`"},{"kind":"text","text":" fails"}]},"children":[{"id":2882,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":2883,"name":"new NetworkError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":2884,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":2885,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2862,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}},{"id":2870,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPNetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).errorName"}},{"id":2871,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":2872,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":2873,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}},{"id":2874,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":2875,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":2876,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2877,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":2878,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":2879,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2880,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2881,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[2882]},{"title":"Properties","children":[2870]},{"title":"Methods","children":[2871,2874]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2863,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2867,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2865,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2864,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}},{"id":2866,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2867,2865,2864,2866]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":2868,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2869,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}}],"groups":[{"title":"Properties","children":[2869]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#NetworkError"},{"id":2886,"name":"ParserError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A parsing error when the body cannot be parsed"}]},"children":[{"id":2906,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":2907,"name":"new ParserError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":2908,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":2909,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}},{"id":2894,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).errorName"}},{"id":2895,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":2896,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":2897,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}},{"id":2898,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":2899,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":2900,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2901,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":2902,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":2903,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2904,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2905,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1005,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[2906]},{"title":"Properties","children":[2894]},{"title":"Methods","children":[2895,2898]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2887,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2891,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2889,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":2888,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}},{"id":2890,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2891,2889,2888,2890]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":2892,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2893,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}}],"groups":[{"title":"Properties","children":[2893]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/api/http/namespace/HTTPError#ParserError"}],"groups":[{"title":"Classes","children":[2834,2862,2886]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"permalink":"/std/api/http/namespace/HTTPError","categories":[],"previousId":2954,"nextId":3490},{"id":3490,"name":"Response","variant":"declaration","kind":4,"flags":{},"children":[{"id":3491,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":3494,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3499,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.body"}},{"id":3498,"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3035,"name":"Headers","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.headers"}},{"id":3496,"name":"ok","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.ok"}},{"id":3497,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3477,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.redirected"}},{"id":3493,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3088,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3474,"name":"Status","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.status"}},{"id":3495,"name":"type","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3508,"name":"ResponseType","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.type"}},{"id":3492,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.url"}}],"groups":[{"title":"Properties","children":[3494,3498,3496,3497,3493,3495,3492]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":59,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L59"}],"typeParameters":[{"id":3499,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":3499,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"},{"type":"union","types":[{"type":"literal","value":"ok"},{"type":"literal","value":"redirected"},{"type":"literal","value":"type"},{"type":"literal","value":"headers"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/http/namespace/Response#Parameters"}],"groups":[{"title":"Interfaces","children":[3491]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"permalink":"/std/api/http/namespace/Response","categories":[],"previousId":2833,"nextId":2914},{"id":2914,"name":"ResponseParser","variant":"declaration","kind":4,"flags":{},"children":[{"id":2919,"name":"arrayBuffer","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"signatures":[{"id":2920,"name":"arrayBuffer","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ArrayBuffer response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.arrayBuffer); // Task<ArrayBuffer, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"parameters":[{"id":2921,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"},{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#arrayBuffer"},{"id":2925,"name":"blob","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"signatures":[{"id":2926,"name":"blob","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Blob response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.blob); // Task<Blob, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"parameters":[{"id":2927,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Blob"},"name":"Blob","package":"typescript"},{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#blob"},{"id":2922,"name":"formData","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"signatures":[{"id":2923,"name":"formData","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.formData); // Task<FormData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"parameters":[{"id":2924,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"FormData"},"name":"FormData","package":"typescript"},{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#formData"},{"id":2915,"name":"json","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"signatures":[{"id":2916,"name":"json","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype MyData = { foo: string, bar: boolean };\\n\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.json<MyData>(\'unsafe\')); // Task<MyData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"typeParameter":[{"id":2917,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"parameters":[{"id":2918,"name":"CodecModule","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":"unsafe"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec"},"typeArguments":[{"type":"reference","target":2917,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}]}}],"type":{"type":"reference","target":2910,"typeArguments":[{"type":"reference","target":2917,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"ResponseParser","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/ResponseParser#json"},{"id":2928,"name":"text","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"signatures":[{"id":2929,"name":"text","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Text response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.text); // Task<string, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"parameters":[{"id":2930,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/namespace/ResponseParser#text"}],"groups":[{"title":"Functions","children":[2919,2925,2922,2915,2928]}],"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"permalink":"/std/api/http/namespace/ResponseParser","categories":[],"previousId":3490,"nextId":3088},{"id":3088,"name":"Status","variant":"declaration","kind":4,"flags":{},"children":[{"id":3183,"name":"Accepted","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.3\\n\\nThe request has been received but not yet acted upon. It is non-committal, meaning that there is no way in HTTP to later send an asynchronous response indicating the outcome of processing the request. It is intended for cases where another process or server handles the request, or for batch processing."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":9,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L9"}],"type":{"type":"reflection","declaration":{"id":3184,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3185,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3186,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3185,3186]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Accepted"},{"id":3187,"name":"BadGateway","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.3\\n\\nThis error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L16"}],"type":{"type":"reflection","declaration":{"id":3188,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3189,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3190,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3189,3190]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#BadGateway"},{"id":3191,"name":"BadRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.1\\n\\nThis response means that server could not understand the request due to invalid syntax."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L23"}],"type":{"type":"reflection","declaration":{"id":3192,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3193,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3194,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3193,3194]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#BadRequest"},{"id":3195,"name":"Conflict","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.8\\n\\nThis response is sent when a request conflicts with the current state of the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":30,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3196,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3197,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3198,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3197,3198]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Conflict"},{"id":3199,"name":"Continue","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.1\\n\\nThis interim response indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L37"}],"type":{"type":"reflection","declaration":{"id":3200,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3201,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3202,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3201,3202]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Continue"},{"id":3203,"name":"Created","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.2\\n\\nThe request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a PUT request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":44,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L44"}],"type":{"type":"reflection","declaration":{"id":3204,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3205,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3206,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3205,3206]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Created"},{"id":3335,"name":"EarlyHints","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://www.rfc-editor.org/rfc/rfc8297#page-3\\n\\nThis code indicates to the client that the server is likely to send a final response with the header fields included in the informational response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":281,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L281"}],"type":{"type":"reflection","declaration":{"id":3336,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3337,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3338,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3337,3338]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#EarlyHints"},{"id":3207,"name":"ExpectationFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.14\\n\\nThis response code means the expectation indicated by the Expect request header field can\'t be met by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L51"}],"type":{"type":"reflection","declaration":{"id":3208,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3209,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3210,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3209,3210]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ExpectationFailed"},{"id":3211,"name":"FailedDependency","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.5\\n\\nThe request failed due to failure of a previous request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":58,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L58"}],"type":{"type":"reflection","declaration":{"id":3212,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3213,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3214,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3213,3214]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#FailedDependency"},{"id":3215,"name":"Forbidden","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.3\\n\\nThe client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client\'s identity is known to the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":65,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L65"}],"type":{"type":"reflection","declaration":{"id":3216,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3217,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3218,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3217,3218]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Forbidden"},{"id":3219,"name":"GatewayTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.5\\n\\nThis error response is given when the server is acting as a gateway and cannot get a response in time."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":72,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L72"}],"type":{"type":"reflection","declaration":{"id":3220,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3221,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3222,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3221,3222]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#GatewayTimeout"},{"id":3223,"name":"Gone","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.9\\n\\nThis response would be sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for \\"limited-time, promotional services\\". APIs should not feel compelled to indicate resources that have been deleted with this status code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L79"}],"type":{"type":"reflection","declaration":{"id":3224,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3225,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3226,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3225,3226]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Gone"},{"id":3227,"name":"HTTPVersionNotSupported","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.6\\n\\nThe HTTP version used in the request is not supported by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L86"}],"type":{"type":"reflection","declaration":{"id":3228,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3229,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3230,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3229,3230]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#HTTPVersionNotSupported"},{"id":3231,"name":"IMATeapot","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2324#section-2.3.2\\n\\nAny attempt to brew coffee with a teapot should result in the error code \\"418 I\'m a teapot\\". The resulting entity body MAY be short and stout."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":93,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L93"}],"type":{"type":"reflection","declaration":{"id":3232,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3233,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3234,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3233,3234]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#IMATeapot"},{"id":3235,"name":"InsufficientSpaceOnResource","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe 507 (Insufficient Storage) status code means the method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. This condition is considered to be temporary. If the request which received this status code was the result of a user action, the request MUST NOT be repeated until it is requested by a separate user action."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":100,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L100"}],"type":{"type":"reflection","declaration":{"id":3236,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3237,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3238,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3237,3238]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InsufficientSpaceOnResource"},{"id":3239,"name":"InsufficientStorage","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":107,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L107"}],"type":{"type":"reflection","declaration":{"id":3240,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3241,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3242,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3241,3242]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InsufficientStorage"},{"id":3243,"name":"InternalServerError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.1\\n\\nThe server encountered an unexpected condition that prevented it from fulfilling the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":114,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L114"}],"type":{"type":"reflection","declaration":{"id":3244,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3245,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3246,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3245,3246]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#InternalServerError"},{"id":3247,"name":"LengthRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.10\\n\\nThe server rejected the request because the Content-Length header field is not defined and the server requires it."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":121,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L121"}],"type":{"type":"reflection","declaration":{"id":3248,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3249,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3250,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3249,3250]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#LengthRequired"},{"id":3251,"name":"Locked","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.4\\n\\nThe resource that is being accessed is locked."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":128,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L128"}],"type":{"type":"reflection","declaration":{"id":3252,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3253,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3254,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3253,3254]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Locked"},{"id":3255,"name":"MethodFailure","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt\\n\\nA deprecated response used by the Spring Framework when a method has failed."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":137,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L137"}],"type":{"type":"reflection","declaration":{"id":3256,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3257,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3258,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3257,3258]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MethodFailure"},{"id":3259,"name":"MethodNotAllowed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.5\\n\\nThe request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":144,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L144"}],"type":{"type":"reflection","declaration":{"id":3260,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3261,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3262,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3261,3262]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MethodNotAllowed"},{"id":3411,"name":"MisdirectedRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7540#section-9.1.2\\n\\nDefined in the specification of HTTP/2 to indicate that a server is not able to produce a response for the combination of scheme and authority that are included in the request URI."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":416,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L416"}],"type":{"type":"reflection","declaration":{"id":3412,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3413,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3414,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3413,3414]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MisdirectedRequest"},{"id":3263,"name":"MovedPermanently","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.2\\n\\nThis response code means that URI of requested resource has been changed. Probably, new URI would be given in the response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":151,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L151"}],"type":{"type":"reflection","declaration":{"id":3264,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3265,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3266,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3265,3266]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MovedPermanently"},{"id":3267,"name":"MovedTemporarily","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.3\\n\\nThis response code means that URI of requested resource has been changed temporarily. New changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":158,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L158"}],"type":{"type":"reflection","declaration":{"id":3268,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3269,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3270,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3269,3270]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MovedTemporarily"},{"id":3271,"name":"MultiStatus","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.2\\n\\nA Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":165,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L165"}],"type":{"type":"reflection","declaration":{"id":3272,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3273,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3274,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3273,3274]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MultiStatus"},{"id":3275,"name":"MultipleChoices","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.1\\n\\nThe request has more than one possible responses. User-agent or user should choose one of them. There is no standardized way to choose one of the responses."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":172,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L172"}],"type":{"type":"reflection","declaration":{"id":3276,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3277,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3278,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3277,3278]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#MultipleChoices"},{"id":3279,"name":"NetworkAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-6\\n\\nThe 511 status code indicates that the client needs to authenticate to gain network access."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L179"}],"type":{"type":"reflection","declaration":{"id":3280,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3281,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3282,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3281,3282]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NetworkAuthenticationRequired"},{"id":3283,"name":"NoContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.5\\n\\nThere is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":186,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L186"}],"type":{"type":"reflection","declaration":{"id":3284,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3285,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3286,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3285,3286]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NoContent"},{"id":3287,"name":"NonAuthoritativeInformation","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.4\\n\\nThis response code means returned meta-information set is not exact set as available from the origin server, but collected from a local or a third party copy. Except this condition, 200 OK response should be preferred instead of this response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":193,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L193"}],"type":{"type":"reflection","declaration":{"id":3288,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3289,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3290,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3289,3290]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NonAuthoritativeInformation"},{"id":3291,"name":"NotAcceptable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.6\\n\\nThis response is sent when the web server, after performing server-driven content negotiation, doesn\'t find any content following the criteria given by the user agent."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":200,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L200"}],"type":{"type":"reflection","declaration":{"id":3292,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3293,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3294,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3293,3294]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotAcceptable"},{"id":3295,"name":"NotFound","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.4\\n\\nThe server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":207,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L207"}],"type":{"type":"reflection","declaration":{"id":3296,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3297,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3298,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3297,3298]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotFound"},{"id":3299,"name":"NotImplemented","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.2\\n\\nThe request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":214,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L214"}],"type":{"type":"reflection","declaration":{"id":3300,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3301,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3302,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3301,3302]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotImplemented"},{"id":3303,"name":"NotModified","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.1\\n\\nThis is used for caching purposes. It is telling to client that response has not been modified. So, client can continue to use same cached version of response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":221,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L221"}],"type":{"type":"reflection","declaration":{"id":3304,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3305,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3306,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3305,3306]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#NotModified"},{"id":3307,"name":"OK","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.1\\n\\nThe request has succeeded. The meaning of a success varies depending on the HTTP method:\\nGET: The resource has been fetched and is transmitted in the message body.\\nHEAD: The entity headers are in the message body.\\nPOST: The resource describing the result of the action is transmitted in the message body.\\nTRACE: The message body contains the request message as received by the server"}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":232,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L232"}],"type":{"type":"reflection","declaration":{"id":3308,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3309,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3310,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3309,3310]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#OK"},{"id":3311,"name":"PartialContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.1\\n\\nThis response code is used because of range header sent by the client to separate download into multiple streams."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L239"}],"type":{"type":"reflection","declaration":{"id":3312,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3313,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3314,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3313,3314]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PartialContent"},{"id":3315,"name":"PaymentRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.2\\n\\nThis response code is reserved for future use. Initial aim for creating this code was using it for digital payment systems however this is not used currently."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":246,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L246"}],"type":{"type":"reflection","declaration":{"id":3316,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3317,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3318,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3317,3318]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PaymentRequired"},{"id":3319,"name":"PermanentRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7538#section-3\\n\\nThis means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":253,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L253"}],"type":{"type":"reflection","declaration":{"id":3320,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3321,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3322,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3321,3322]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PermanentRedirect"},{"id":3323,"name":"PreconditionFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.2\\n\\nThe client has indicated preconditions in its headers which the server does not meet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L260"}],"type":{"type":"reflection","declaration":{"id":3324,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3325,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3326,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3325,3326]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PreconditionFailed"},{"id":3327,"name":"PreconditionRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-3\\n\\nThe origin server requires the request to be conditional. Intended to prevent the \'lost update\' problem, where a client GETs a resource\'s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":267,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L267"}],"type":{"type":"reflection","declaration":{"id":3328,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3329,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3330,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3329,3330]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#PreconditionRequired"},{"id":3331,"name":"Processing","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.1\\n\\nThis code indicates that the server has received and is processing the request, but no response is available yet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":274,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L274"}],"type":{"type":"reflection","declaration":{"id":3332,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3333,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3334,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3333,3334]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Processing"},{"id":3343,"name":"ProxyAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.2\\n\\nThis is similar to 401 but authentication is needed to be done by a proxy."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":295,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L295"}],"type":{"type":"reflection","declaration":{"id":3344,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3345,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3346,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3345,3346]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ProxyAuthenticationRequired"},{"id":3355,"name":"RequestEntityTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.11\\n\\nRequest entity is larger than limits defined by server; the server might close the connection or return an Retry-After header field."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":316,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L316"}],"type":{"type":"reflection","declaration":{"id":3356,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3357,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3358,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3357,3358]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestEntityTooLarge"},{"id":3347,"name":"RequestHeaderFieldsTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-5\\n\\nThe server is unwilling to process the request because its header fields are too large. The request MAY be resubmitted after reducing the size of the request header fields."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":302,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L302"}],"type":{"type":"reflection","declaration":{"id":3348,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3349,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3350,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3349,3350]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestHeaderFieldsTooLarge"},{"id":3351,"name":"RequestTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.7\\n\\nThis response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L309"}],"type":{"type":"reflection","declaration":{"id":3352,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3353,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3354,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3353,3354]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestTimeout"},{"id":3359,"name":"RequestURITooLong","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.12\\n\\nThe URI requested by the client is longer than the server is willing to interpret."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":323,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L323"}],"type":{"type":"reflection","declaration":{"id":3360,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3361,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3362,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3361,3362]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestURITooLong"},{"id":3363,"name":"RequestedRangeNotSatisfiable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.4\\n\\nThe range specified by the Range header field in the request can\'t be fulfilled; it\'s possible that the range is outside the size of the target URI\'s data."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L330"}],"type":{"type":"reflection","declaration":{"id":3364,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3365,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3366,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3365,3366]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#RequestedRangeNotSatisfiable"},{"id":3367,"name":"ResetContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.6\\n\\nThis response code is sent after accomplishing request to tell user agent reset document view which sent this request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":337,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L337"}],"type":{"type":"reflection","declaration":{"id":3368,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3369,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3370,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3369,3370]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ResetContent"},{"id":3371,"name":"SeeOther","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.4\\n\\nServer sent this response to directing client to get requested resource to another URI with an GET request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":344,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L344"}],"type":{"type":"reflection","declaration":{"id":3372,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3373,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3374,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3373,3374]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#SeeOther"},{"id":3375,"name":"ServiceUnavailable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.4\\n\\nThe server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This responses should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":351,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L351"}],"type":{"type":"reflection","declaration":{"id":3376,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3377,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3378,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3377,3378]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#ServiceUnavailable"},{"id":3379,"name":"SwitchingProtocols","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.2\\n\\nThis code is sent in response to an Upgrade request header by the client, and indicates the protocol the server is switching too."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":358,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L358"}],"type":{"type":"reflection","declaration":{"id":3380,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3381,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3382,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3381,3382]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#SwitchingProtocols"},{"id":3383,"name":"TemporaryRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.7\\n\\nServer sent this response to directing client to get requested resource to another URI with same method that used prior request. This has the same semantic than the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":365,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L365"}],"type":{"type":"reflection","declaration":{"id":3384,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3385,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3386,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3385,3386]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#TemporaryRedirect"},{"id":3387,"name":"TooManyRequests","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-4\\n\\nThe user has sent too many requests in a given amount of time (\\"rate limiting\\")."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":372,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L372"}],"type":{"type":"reflection","declaration":{"id":3388,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3389,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3390,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3389,3390]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#TooManyRequests"},{"id":3391,"name":"Unauthorized","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.1\\n\\nAlthough the HTTP standard specifies \\"unauthorized\\", semantically this response means \\"unauthenticated\\". That is, the client must authenticate itself to get the requested response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L379"}],"type":{"type":"reflection","declaration":{"id":3392,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3393,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3394,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3393,3394]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#Unauthorized"},{"id":3395,"name":"UnavailableForLegalReasons","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7725\\n\\nThe user-agent requested a resource that cannot legally be provided, such as a web page censored by a government."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":386,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L386"}],"type":{"type":"reflection","declaration":{"id":3396,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3397,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3398,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3397,3398]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnavailableForLegalReasons"},{"id":3399,"name":"UnprocessableEntity","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.3\\n\\nThe request was well-formed but was unable to be followed due to semantic errors."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":393,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L393"}],"type":{"type":"reflection","declaration":{"id":3400,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3401,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3402,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3401,3402]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnprocessableEntity"},{"id":3403,"name":"UnsupportedMediaType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.13\\n\\nThe media format of the requested data is not supported by the server, so the server is rejecting the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":400,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L400"}],"type":{"type":"reflection","declaration":{"id":3404,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3405,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3406,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3405,3406]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UnsupportedMediaType"},{"id":3339,"name":"UpgradeRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.15\\n\\nThe server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":288,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L288"}],"type":{"type":"reflection","declaration":{"id":3340,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3341,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3342,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3341,3342]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UpgradeRequired"},{"id":3407,"name":"UseProxy","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.6\\n\\nWas defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L409"}],"type":{"type":"reflection","declaration":{"id":3408,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3409,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":3410,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3409,3410]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/api/http/namespace/Status#UseProxy"},{"id":3428,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3429,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":3430,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":3431,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3432,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3433,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3434,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3433,3434]}]}}],"name":"Readonly","package":"typescript"}},{"id":3435,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3436,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3437,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/http/namespace/Status#__inspect__"},{"id":3089,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/http/namespace/Status#indexType"},{"id":3182,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/api/http/namespace/Status#maxValue"},{"id":3181,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/api/http/namespace/Status#minValue"},{"id":3415,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/http/namespace/Status#typeName"},{"id":3171,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3172,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3173,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3174,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3175,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#!="},{"id":3135,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3136,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3137,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3138,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3139,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#<"},{"id":3130,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3131,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3132,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3133,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3134,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#<="},{"id":3176,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3177,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3178,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3179,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3180,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#=="},{"id":3145,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3146,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3147,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3148,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3149,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#>"},{"id":3140,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3141,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3142,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3143,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3144,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#>="},{"id":3466,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"signatures":[{"id":3467,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"typeParameter":[{"id":3468,"name":"Code","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"parameters":[{"id":3469,"name":"statusCode","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3468,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3470,"name":"statusMessage","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":3471,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3472,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":3468,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3473,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3472,3473]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}}}],"permalink":"/std/api/http/namespace/Status#__call__"},{"id":3438,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3439,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3440,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3441,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3442,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3443,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3444,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3445,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3444,3445]}]}}],"name":"Readonly","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3446,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3447,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3448,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3447,3448]}]}}],"name":"Readonly","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#__decode__"},{"id":3449,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3450,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3451,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3452,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3453,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3454,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3455,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3454,3455]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/http/namespace/Status#__encode__"},{"id":3456,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3457,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3458,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#__schema__"},{"id":3422,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":3423,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":3424,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3425,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3426,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3427,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3426,3427]}]}}],"name":"Readonly","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#asInstance"},{"id":3459,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3460,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3461,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3462,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3463,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3464,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3465,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3464,3465]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/http/namespace/Status#asString"},{"id":3090,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":3091,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":3092,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3093,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3094,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3095,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3094,3095]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#at"},{"id":3160,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3161,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3162,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3163,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3164,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3165,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#clamp"},{"id":3125,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3126,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3127,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3128,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3129,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#compare"},{"id":3166,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3167,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3168,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3169,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3170,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/http/namespace/Status#equals"},{"id":3416,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":3417,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":3418,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3419,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3420,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int"},{"id":3421,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3420,3421]}]}}],"name":"Readonly","package":"typescript"}}}],"permalink":"/std/api/http/namespace/Status#hasInstance"},{"id":3096,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":3097,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":3098,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3099,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3100,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3101,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3100,3101]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#indexOf"},{"id":3155,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3156,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3157,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3158,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3159,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#max"},{"id":3150,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3151,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3152,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3153,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3154,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/api/http/namespace/Status#min"},{"id":3112,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":3113,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":3114,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3115,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3116,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3117,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3116,3117]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3118,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3119,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3120,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3121,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3120,3121]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3122,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3123,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3124,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3123,3124]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/http/namespace/Status#range"},{"id":3102,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":3103,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":3104,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3105,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3106,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3107,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3106,3107]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3108,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3109,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3110,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3111,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3110,3111]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/http/namespace/Status#rangeSize"}],"groups":[{"title":"Variables","children":[3183,3187,3191,3195,3199,3203,3335,3207,3211,3215,3219,3223,3227,3231,3235,3239,3243,3247,3251,3255,3259,3411,3263,3267,3271,3275,3279,3283,3287,3291,3295,3299,3303,3307,3311,3315,3319,3323,3327,3331,3343,3355,3347,3351,3359,3363,3367,3371,3375,3379,3383,3387,3391,3395,3399,3403,3339,3407,3428,3089,3182,3181,3415]},{"title":"Functions","children":[3171,3135,3130,3176,3145,3140,3466,3438,3449,3456,3422,3459,3090,3160,3125,3166,3416,3096,3155,3150,3112,3102]}],"categories":[{"title":"Bound","children":[3182,3181]},{"title":"Codec","children":[3438,3449,3456]},{"title":"Comparator","children":[3171,3135,3130,3176,3145,3140,3160,3125,3166,3155,3150]},{"title":"Formatting","children":[3459]},{"title":"Indexable","children":[3089,3090,3096,3112,3102]},{"title":"Type","children":[3428,3415,3422,3416]},{"title":"__CATEGORY__","children":[3183,3187,3191,3195,3199,3203,3335,3207,3211,3215,3219,3223,3227,3231,3235,3239,3243,3247,3251,3255,3259,3411,3263,3267,3271,3275,3279,3283,3287,3291,3295,3299,3303,3307,3311,3315,3319,3323,3327,3331,3343,3355,3347,3351,3359,3363,3367,3371,3375,3379,3383,3387,3391,3395,3399,3403,3339,3407,3466]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"permalink":"/std/api/http/namespace/Status","previousId":2914,"nextId":2832},{"id":2935,"name":"Client","variant":"declaration","kind":256,"flags":{},"children":[{"id":2936,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":2945,"name":"fetch","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":2946,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"signatures":[{"id":2947,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":2948,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2949,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":2950,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"parameters":[{"id":2951,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2952,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}}},{"id":2937,"name":"onRequest","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2938,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":2939,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":2940,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":2832,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":2941,"name":"onResponse","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":2942,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":2943,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":2944,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":2832,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":2953,"name":"timeout","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]}}],"groups":[{"title":"Constructors","children":[2936]},{"title":"Properties","children":[2945,2937,2941,2953]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/api/http/interface/Client","categories":[],"previousId":3084,"nextId":3035},{"id":3035,"name":"Headers","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record type"}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Headers/Headers.ts","qualifiedName":"Headers"},"name":"Headers","package":"@w5s/http"}],"permalink":"/std/api/http/interface/Headers","categories":[],"previousId":2935,"nextId":3481},{"id":3481,"name":"Response","variant":"declaration","kind":256,"flags":{},"children":[{"id":3488,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3489,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Body","refersToTypeParameter":true}},{"id":3482,"name":"headers","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3035,"name":"Headers","package":"@w5s/http"}},{"id":3483,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3487,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3477,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3484,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3088,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3474,"name":"Status","package":"@w5s/http"}},{"id":3485,"name":"type","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3508,"name":"ResponseType","package":"@w5s/http"}},{"id":3486,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3488,3482,3483,3487,3484,3485,3486]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"typeParameters":[{"id":3489,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/http/interface/Response","categories":[],"previousId":3035,"nextId":2910},{"id":2910,"name":"ResponseParser","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A transformation function taking an "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3477,"tsLinkText":""},{"kind":"text","text":" as input"}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"typeParameters":[{"id":2911,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"signatures":[{"id":2912,"name":"ResponseParser","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L15"}],"parameters":[{"id":2913,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2911,"name":"Value","package":"@w5s/http","qualifiedName":"ResponseParser.Value","refersToTypeParameter":true},{"type":"reference","target":2886,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/interface/ResponseParser","categories":[],"previousId":3481,"nextId":3474},{"id":3474,"name":"Status","variant":"declaration","kind":256,"flags":{},"children":[{"id":3475,"name":"statusCode","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"defaultValue":"Int","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusCode"}},{"id":3476,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusMessage"}}],"groups":[{"title":"Properties","children":[3475,3476]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}],"permalink":"/std/api/http/interface/Status","categories":[],"previousId":2910,"nextId":2954},{"id":2832,"name":"HTTPError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Union type of http client errors"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"type":{"type":"union","types":[{"type":"reference","target":2862,"name":"HTTPError.NetworkError","package":"@w5s/http"},{"type":"reference","target":2834,"name":"HTTPError.InvalidURL","package":"@w5s/http"},{"type":"reference","target":2886,"name":"HTTPError.ParserError","package":"@w5s/http"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"}]},"permalink":"/std/api/http#HTTPError","categories":[],"previousId":3088,"nextId":2931},{"id":2931,"name":"Method","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Method type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/method"}]}]},"sources":[{"fileName":"packages/http/src/Method.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Method.ts#L6"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/api/http#Method","categories":[],"previousId":2832,"nextId":2993},{"id":2993,"name":"ReferrerPolicy","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP referrer policy type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy"}]}]},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":2981,"name":"ReferrerPolicy","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#ReferrerPolicy","categories":[],"previousId":2931,"nextId":3045},{"id":3045,"name":"RequestCache","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP cache type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/cache"}]}]},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3036,"name":"RequestCache","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestCache","categories":[],"previousId":2993,"nextId":3052},{"id":3052,"name":"RequestCredentials","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP credentials"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"}]}]},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3046,"name":"RequestCredentials","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestCredentials","categories":[],"previousId":3045,"nextId":3076},{"id":3076,"name":"RequestDestination","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP destination"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"}]}]},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3053,"name":"RequestDestination","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestDestination","categories":[],"previousId":3052,"nextId":3083},{"id":3083,"name":"RequestRedirect","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP redirect type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect"}]}]},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3077,"name":"RequestRedirect","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#RequestRedirect","categories":[],"previousId":3076,"nextId":3508},{"id":3508,"name":"ResponseType","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Response type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3500,"name":"ResponseType","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/http#ResponseType","categories":[],"previousId":3083,"nextId":2981},{"id":2981,"name":"ReferrerPolicy","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":2982,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2984,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":2985,"name":"NoReferrer","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L7"}],"type":{"type":"literal","value":"no-referrer"},"defaultValue":"\'no-referrer\'"},{"id":2986,"name":"NoReferrerWhenDowngrade","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L8"}],"type":{"type":"literal","value":"no-referrer-when-downgrade"},"defaultValue":"\'no-referrer-when-downgrade\'"},{"id":2988,"name":"Origin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L10"}],"type":{"type":"literal","value":"origin"},"defaultValue":"\'origin\'"},{"id":2990,"name":"OriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L12"}],"type":{"type":"literal","value":"origin-when-cross-origin"},"defaultValue":"\'origin-when-cross-origin\'"},{"id":2987,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L9"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":2989,"name":"StrictOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L11"}],"type":{"type":"literal","value":"strict-origin"},"defaultValue":"\'strict-origin\'"},{"id":2991,"name":"StrictOriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L13"}],"type":{"type":"literal","value":"strict-origin-when-cross-origin"},"defaultValue":"\'strict-origin-when-cross-origin\'"},{"id":2992,"name":"UnsafeURL","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L14"}],"type":{"type":"literal","value":"unsafe-url"},"defaultValue":"\'unsafe-url\'"},{"id":2983,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L5"}],"type":{"type":"literal","value":"ReferrerPolicy"},"defaultValue":"\'ReferrerPolicy\'"}],"groups":[{"title":"Properties","children":[2984,2985,2986,2988,2990,2987,2989,2991,2992,2983]}],"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#ReferrerPolicy","categories":[],"previousId":3508,"nextId":3036},{"id":3036,"name":"RequestCache","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3037,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3039,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L6"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3043,"name":"ForceCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L10"}],"type":{"type":"literal","value":"force-cache"},"defaultValue":"\'force-cache\'"},{"id":3042,"name":"NoCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L9"}],"type":{"type":"literal","value":"no-cache"},"defaultValue":"\'no-cache\'"},{"id":3040,"name":"NoStore","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L7"}],"type":{"type":"literal","value":"no-store"},"defaultValue":"\'no-store\'"},{"id":3044,"name":"OnlyIfCached","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L11"}],"type":{"type":"literal","value":"only-if-cached"},"defaultValue":"\'only-if-cached\'"},{"id":3041,"name":"Reload","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L8"}],"type":{"type":"literal","value":"reload"},"defaultValue":"\'reload\'"},{"id":3038,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L5"}],"type":{"type":"literal","value":"RequestCache"},"defaultValue":"\'RequestCache\'"}],"groups":[{"title":"Properties","children":[3039,3043,3042,3040,3044,3041,3038]}],"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestCache","categories":[],"previousId":2981,"nextId":3046},{"id":3046,"name":"RequestCredentials","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3047,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3049,"name":"Include","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L6"}],"type":{"type":"literal","value":"include"},"defaultValue":"\'include\'"},{"id":3050,"name":"Omit","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L7"}],"type":{"type":"literal","value":"omit"},"defaultValue":"\'omit\'"},{"id":3051,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L8"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":3048,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L5"}],"type":{"type":"literal","value":"RequestCredentials"},"defaultValue":"\'RequestCredentials\'"}],"groups":[{"title":"Properties","children":[3049,3050,3051,3048]}],"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestCredentials","categories":[],"previousId":3036,"nextId":3053},{"id":3053,"name":"RequestDestination","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3054,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3057,"name":"Audio","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L7"}],"type":{"type":"literal","value":"audio"},"defaultValue":"\'audio\'"},{"id":3058,"name":"AudioWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L8"}],"type":{"type":"literal","value":"audioworklet"},"defaultValue":"\'audioworklet\'"},{"id":3059,"name":"Document","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L9"}],"type":{"type":"literal","value":"document"},"defaultValue":"\'document\'"},{"id":3060,"name":"Embed","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L10"}],"type":{"type":"literal","value":"embed"},"defaultValue":"\'embed\'"},{"id":3056,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":3061,"name":"Font","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L11"}],"type":{"type":"literal","value":"font"},"defaultValue":"\'font\'"},{"id":3062,"name":"Frame","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L12"}],"type":{"type":"literal","value":"frame"},"defaultValue":"\'frame\'"},{"id":3063,"name":"Iframe","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L13"}],"type":{"type":"literal","value":"iframe"},"defaultValue":"\'iframe\'"},{"id":3064,"name":"Image","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L14"}],"type":{"type":"literal","value":"image"},"defaultValue":"\'image\'"},{"id":3065,"name":"Manifest","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L15"}],"type":{"type":"literal","value":"manifest"},"defaultValue":"\'manifest\'"},{"id":3066,"name":"Object","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L16"}],"type":{"type":"literal","value":"object"},"defaultValue":"\'object\'"},{"id":3067,"name":"PaintWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L17"}],"type":{"type":"literal","value":"paintworklet"},"defaultValue":"\'paintworklet\'"},{"id":3068,"name":"Report","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L18"}],"type":{"type":"literal","value":"report"},"defaultValue":"\'report\'"},{"id":3069,"name":"Script","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L19"}],"type":{"type":"literal","value":"script"},"defaultValue":"\'script\'"},{"id":3070,"name":"SharedWorker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L20"}],"type":{"type":"literal","value":"sharedworker"},"defaultValue":"\'sharedworker\'"},{"id":3071,"name":"Style","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L21"}],"type":{"type":"literal","value":"style"},"defaultValue":"\'style\'"},{"id":3072,"name":"Track","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L22"}],"type":{"type":"literal","value":"track"},"defaultValue":"\'track\'"},{"id":3073,"name":"Video","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L23"}],"type":{"type":"literal","value":"video"},"defaultValue":"\'video\'"},{"id":3074,"name":"Worker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L24"}],"type":{"type":"literal","value":"worker"},"defaultValue":"\'worker\'"},{"id":3075,"name":"XSLT","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L25"}],"type":{"type":"literal","value":"xslt"},"defaultValue":"\'xslt\'"},{"id":3055,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L5"}],"type":{"type":"literal","value":"RequestDestination"},"defaultValue":"\'RequestDestination\'"}],"groups":[{"title":"Properties","children":[3057,3058,3059,3060,3056,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3055]}],"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestDestination","categories":[],"previousId":3046,"nextId":3077},{"id":3077,"name":"RequestRedirect","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3078,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3081,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L7"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3080,"name":"Follow","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L6"}],"type":{"type":"literal","value":"follow"},"defaultValue":"\'follow\'"},{"id":3082,"name":"Manual","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L8"}],"type":{"type":"literal","value":"manual"},"defaultValue":"\'manual\'"},{"id":3079,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L5"}],"type":{"type":"literal","value":"RequestRedirect"},"defaultValue":"\'RequestRedirect\'"}],"groups":[{"title":"Properties","children":[3081,3080,3082,3079]}],"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#RequestRedirect","categories":[],"previousId":3053,"nextId":3500},{"id":3500,"name":"ResponseType","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3501,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3502,"name":"Basic","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L5"}],"type":{"type":"literal","value":"basic"},"defaultValue":"\'basic\'"},{"id":3503,"name":"CORS","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L6"}],"type":{"type":"literal","value":"cors"},"defaultValue":"\'cors\'"},{"id":3504,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L7"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3505,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L8"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3506,"name":"Opaque","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L9"}],"type":{"type":"literal","value":"opaque"},"defaultValue":"\'opaque\'"},{"id":3507,"name":"OpaqueRedirect","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L10"}],"type":{"type":"literal","value":"opaqueredirect"},"defaultValue":"\'opaqueredirect\'"}],"groups":[{"title":"Properties","children":[3502,3503,3504,3505,3506,3507]}],"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/http#ResponseType","categories":[],"previousId":3077},{"id":2932,"name":"Client","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"signatures":[{"id":2933,"name":"Client","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"}],"parameters":[{"id":2934,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2962,"name":"Options","package":"@w5s/http","qualifiedName":"Client.Options"},"defaultValue":"{}"}],"type":{"type":"reference","target":2935,"name":"Client","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Client","categories":[],"nextId":2994},{"id":2994,"name":"Headers","variant":"declaration","kind":64,"flags":{},"children":[{"id":3001,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3002,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"signatures":[{"id":3003,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":3004,"name":"values","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3035,"name":"Headers","package":"@w5s/http"}}]}},"defaultValue":"..."},{"id":3012,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3013,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":3014,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":3015,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}},{"id":3016,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3017,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3018,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2997,"name":"empty","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L29"}],"type":{"type":"reflection","declaration":{"id":2998,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"signatures":[{"id":2999,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an empty "},{"kind":"inline-tag","tag":"@link","text":"Headers","target":3035,"tsLinkText":""},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst response = Response({\\n  headers: Headers.empty(),\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3000,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":1,"character":29,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L1"}]}}],"name":"Readonly","package":"typescript"}}]}}},{"id":3005,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/Headers.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/Headers.ts#L7"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'Headers\'"},{"id":3019,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3020,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3021,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3022,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3023,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":3024,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3025,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3026,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3027,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":3028,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3029,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}]},{"id":3009,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":3010,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":3011,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":3031,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3032,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3033,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3034,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":3006,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":3007,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":3008,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}}]}],"groups":[{"title":"Properties","children":[3001,3012,2997,3005]},{"title":"Methods","children":[3019,3024,3028,3009,3031,3006]}],"categories":[{"title":"Codec","children":[3019,3024,3028]},{"title":"Formatting","children":[3031]},{"title":"Type","children":[3012,3009,3006]},{"title":"__CATEGORY__","children":[3001,2997,3005]}],"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"signatures":[{"id":2995,"name":"Headers","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst headersFromIterable = Headers([\\n [\'key1\', \'value1\'],\\n [\'key2\', \'value2\']\\n]);// { key1: \'value1, key2: \'value2\' }\\nconst headersFromObject = Headers({\\n key1: \'value1\',\\n key2: \'value2\'\\n});// { key1: \'value1, key2: \'value2\' }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":2996,"name":"values","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a record or iterable to initialize"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3035,"name":"Headers","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Headers","previousId":2932,"nextId":3477},{"id":3477,"name":"Response","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"signatures":[{"id":3478,"name":"Response","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":12,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L12"}],"typeParameter":[{"id":3479,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3480,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3491,"typeArguments":[{"type":"reference","target":3479,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/http","qualifiedName":"Response.Parameters"}}],"type":{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":3479,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"}}],"permalink":"/std/api/http/function/Response","categories":[],"previousId":2994,"nextId":3084},{"id":3084,"name":"requestSend","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"signatures":[{"id":3085,"name":"requestSend","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!Task"},{"kind":"text","text":" that will send an HTTP request"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst responseTask = requestSend({\\n  url: \'http://someurl.com\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"parameters":[{"id":3086,"name":"client","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Client"}]},"type":{"type":"reference","target":2935,"name":"Client","package":"@w5s/http"}},{"id":3087,"name":"requestObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request parameters"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":3481,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":2832,"name":"HTTPError","package":"@w5s/http"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/http/function/requestSend","categories":[],"previousId":3477,"nextId":2935}],"groups":[{"title":"Functions","children":[2932,2994,3477,3084]},{"title":"Interfaces","children":[2935,3035,3481,2910,3474]},{"title":"Namespaces","children":[2954,2833,3490,2914,3088]},{"title":"Type Aliases","children":[2832,2931,2993,3045,3052,3076,3083,3508]},{"title":"Variables","children":[2981,3036,3046,3053,3077,3500]}],"categories":[{"title":"Constructor","children":[2994]},{"title":"__CATEGORY__","children":[2954,2833,3490,2914,3088,2935,3035,3481,2910,3474,2832,2931,2993,3045,3052,3076,3083,3508,2981,3036,3046,3053,3077,3500,2932,3477,3084]}],"sources":[{"fileName":"packages/http/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/http/src/index.ts#L1"}],"permalink":"/std/api/http"},"urlSlug":"http"}],"packageName":"@w5s/http","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":11,"name":"@w5s/iterable","variant":"declaration","kind":2,"flags":{},"children":[{"id":3509,"name":"AsyncIterable","variant":"declaration","kind":4,"flags":{},"children":[{"id":3510,"name":"chunks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L24"}],"signatures":[{"id":3511,"name":"chunks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Splits an async iterable into chunks of a specified size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterator = AsyncIterable.from([1, 2, 3, 4, 5]);\\nconst chunks = AsyncIterable.chunks(iterator, 2); // == AsyncIterable.of([1, 2], [3, 4], [5])\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L24"}],"typeParameter":[{"id":3512,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3513,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable to split into chunks"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3512,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"}},{"id":3514,"name":"chunkSize","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the size of each chunk"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3512,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#chunks"},{"id":3515,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L25"}],"signatures":[{"id":3516,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenates multiple iterables into a single iterable"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(\\n  AsyncIterable.of(1, 2),\\n  AsyncIterable.of(3, 4),\\n);\\nAsyncIterable.concat(iterable); // == AsyncIterable.of(1, 2, 3, 4)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L25"}],"typeParameter":[{"id":3517,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3518,"name":"iterables","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An array of iterables to concatenate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3517,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3517,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#concat"},{"id":3519,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L26"}],"signatures":[{"id":3520,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iterable constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.create(() => ({\\n  next() { ... }\\n}))\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L26"}],"typeParameter":[{"id":3521,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3522,"name":"iteratorFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"function that creates a new iterator"}]},"type":{"type":"reflection","declaration":{"id":3523,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/create.ts","line":13,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/create.ts#L13"}],"signatures":[{"id":3524,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/create.ts","line":13,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/create.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterator"},"typeArguments":[{"type":"reference","target":3521,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterator","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3521,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#create"},{"id":3525,"name":"drop","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L27"}],"signatures":[{"id":3526,"name":"drop","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Skips the given number of elements at the start of this iterator."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nAsyncIterable.drop(iterable, 1); // == AsyncIterable.of(2, 3)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L27"}],"typeParameter":[{"id":3527,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3528,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3527,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"}},{"id":3529,"name":"limit","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the limit of items to take"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3527,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#drop"},{"id":3530,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L28"}],"signatures":[{"id":3531,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an iterable that have no value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.from(AsyncIterable.empty()) // == []\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L28"}],"typeParameter":[{"id":3532,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3532,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#empty"},{"id":3533,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L29"}],"signatures":[{"id":3534,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tests whether all elements in the async iterable pass the test implemented by the provided function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nawait AsyncIterable.every(iterable, (currentValue) => currentValue >= 1); // true\\nawait AsyncIterable.every(iterable, (currentValue) => currentValue >= 2); // false\\nawait AsyncIterable.every(iterable, (currentValue) => currentValue < 0); // false\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L29"}],"typeParameter":[{"id":3535,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3536,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3535,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3537,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":3538,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/every.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/every.ts#L21"}],"signatures":[{"id":3539,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/every.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/every.ts#L21"}],"parameters":[{"id":3540,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3535,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3541,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#every"},{"id":3542,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L30"}],"signatures":[{"id":3543,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new iterator that filters values using "},{"kind":"code","text":"`predicate`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nAsyncIterable.filter(\\n  iterable,\\n  (currentValue, currentIndex) => currentValue > 1,\\n);// == AsyncIterable.of(2, 3)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L30"}],"typeParameter":[{"id":3544,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3545,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable to be filtered"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3544,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3546,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a boolean"}]},"type":{"type":"reflection","declaration":{"id":3547,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/filter.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/filter.ts#L21"}],"signatures":[{"id":3548,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/filter.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/filter.ts#L21"}],"parameters":[{"id":3549,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3544,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3550,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3544,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#filter"},{"id":3551,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L31"}],"signatures":[{"id":3552,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the first element for which the given function returns true, otherwise undefined."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(\\n  { name: \'amy\', id: 1 },\\n  { name: \'bob\', id: 2 }\\n);\\nawait AsyncIterable.find(iterable, (item) => item.name === \'bob\') // { name: \'bob\', id: 2 }\\nawait AsyncIterable.find(iterable, (item) => item.name === \'cat\') // undefined\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L31"}],"typeParameter":[{"id":3553,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3554,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The input collection."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3553,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3555,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function to test whether an item in the collection should be returned."}]},"type":{"type":"reflection","declaration":{"id":3556,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/find.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/find.ts#L22"}],"signatures":[{"id":3557,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/find.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/find.ts#L22"}],"parameters":[{"id":3558,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3553,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3559,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":3553,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#find"},{"id":3560,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L32"}],"signatures":[{"id":3561,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Iterable which applies "},{"kind":"code","text":"`mapFn`"},{"kind":"text","text":" and concatenate the result to the previous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nawait AsyncIterable.flatMap(\\n  iterable,\\n  (currentValue, currentIndex) => AsyncIterable.of(currentValue, currentValue * 2),\\n);// == AsyncIterable.of(1, 2, 2, 4, 3, 6)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L32"}],"typeParameter":[{"id":3562,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":3563,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3564,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable source"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3562,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3565,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a new value"}]},"type":{"type":"reflection","declaration":{"id":3566,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/flatMap.ts","line":20,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/flatMap.ts#L20"}],"signatures":[{"id":3567,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/flatMap.ts","line":20,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/flatMap.ts#L20"}],"parameters":[{"id":3568,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3562,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3569,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3563,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3563,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#flatMap"},{"id":3570,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L33"}],"signatures":[{"id":3571,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an iterable of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nAsyncIterable.generate(3, () => \'a\');// == AsyncIterable.of(\'a\', \'a\', \'a\')\\nAsyncIterable.generate(3, (index) => index * 2);// == AsyncIterable.of(0, 2, 4)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L33"}],"typeParameter":[{"id":3572,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3573,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":3574,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":3575,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/generate.ts#L17"}],"signatures":[{"id":3576,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/generate.ts#L17"}],"parameters":[{"id":3577,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":3572,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3572,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#generate"},{"id":3578,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L34"}],"signatures":[{"id":3579,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a valid "},{"kind":"inline-tag","tag":"@link","text":"AsyncIterable","target":3509,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nAsyncIterable.hasInstance({});// false\\nAsyncIterable.hasInstance([]);// true\\nAsyncIterable.hasInstance({ [Symbol.iterator]: () => ({ next: () => ({ done: true }) }) });// true\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L34"}],"parameters":[{"id":3580,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"}}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#hasInstance"},{"id":3581,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L35"}],"signatures":[{"id":3582,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Iterable which applies "},{"kind":"code","text":"`mapFn`"},{"kind":"text","text":" to each values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nAsyncIterable.map(\\n  iterable,\\n  async (currentValue, currentIndex) => currentValue * 2,\\n);// == AsyncIterable.of(2, 4, 6)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L35"}],"typeParameter":[{"id":3583,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":3584,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3585,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable source"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3583,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3586,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a new value"}]},"type":{"type":"reflection","declaration":{"id":3587,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/map.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/map.ts#L21"}],"signatures":[{"id":3588,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/map.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/map.ts#L21"}],"parameters":[{"id":3589,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3583,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3590,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":3584,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3584,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#map"},{"id":3591,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L36"}],"signatures":[{"id":3592,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create an iterable of given "},{"kind":"code","text":"`values`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nAsyncIterable.of(\'a\', \'b\', \'c\');// \'a\', \'b\', \'c\'\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L36"}],"typeParameter":[{"id":3593,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3594,"name":"values","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The values of the iterable"}]},"type":{"type":"array","elementType":{"type":"reference","target":3593,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3593,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#of"},{"id":3595,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L37"}],"signatures":[{"id":3596,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reduce an "},{"kind":"code","text":"`initialValue`"},{"kind":"text","text":" to the "},{"kind":"code","text":"`reducer`"},{"kind":"text","text":" function"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nawait AsyncIterable.reduce(\\n  iterable,\\n  (total, value) => total + value,\\n  0,\\n);// 6\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L37"}],"typeParameter":[{"id":3597,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":3598,"name":"Return","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3599,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator reduced"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3597,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3600,"name":"reducer","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reducer function"}]},"type":{"type":"reflection","declaration":{"id":3601,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/reduce.ts","line":23,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/reduce.ts#L23"}],"signatures":[{"id":3602,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/reduce.ts","line":23,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/reduce.ts#L23"}],"parameters":[{"id":3603,"name":"accumulator","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3598,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3604,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3597,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3605,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":3598,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":3606,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value passed to the reducer"}]},"type":{"type":"reference","target":3598,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3598,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#reduce"},{"id":3607,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L38"}],"signatures":[{"id":3608,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of iterable"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nawait AsyncIterable.size(iterable); // 3\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L38"}],"typeParameter":[{"id":3609,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3610,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3609,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#size"},{"id":3611,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L39"}],"signatures":[{"id":3612,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tests whether any element in the async iterable pass the test implemented by the provided function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nawait AsyncIterable.some(iterable, (currentValue) => currentValue >= 1); // true\\nawait AsyncIterable.some(iterable, (currentValue) => currentValue >= 2); // true\\nawait AsyncIterable.some(iterable, (currentValue) => currentValue < 0); // false\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L39"}],"typeParameter":[{"id":3613,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3614,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3613,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3615,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":3616,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/some.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/some.ts#L21"}],"signatures":[{"id":3617,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable/some.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable/some.ts#L21"}],"parameters":[{"id":3618,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3613,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3619,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#some"},{"id":3620,"name":"take","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L40"}],"signatures":[{"id":3621,"name":"take","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Take a specified number of elements from an iterable."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = AsyncIterable.of(1, 2, 3);\\nAsyncIterable.take(iterable, 2); // == AsyncIterable.of(1, 2)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L40"}],"typeParameter":[{"id":3622,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3623,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3622,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"}},{"id":3624,"name":"limit","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the limit of items to take"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":3622,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#take"},{"id":3625,"name":"zip","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L41"}],"signatures":[{"id":3626,"name":"zip","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Combine two iterables into an iterable of couple of their values.\\nThe result has the size of the smallest iterable used."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst left = AsyncIterable.of(1, 2, 3);\\nconst right = AsyncIterable.of(\'a\', \'b\');\\nAsyncIterable.zip(left, right);// == AsyncIterable.of([1, \'a\'], [2, \'b\'])\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L41"}],"typeParameter":[{"id":3627,"name":"L","variant":"typeParam","kind":131072,"flags":{}},{"id":3628,"name":"R","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3629,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left iterable"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3627,"name":"L","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}},{"id":3630,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right iterable"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/iterable/src/AsyncIterableLike.ts","qualifiedName":"AsyncIterableLike"},"typeArguments":[{"type":"reference","target":3628,"name":"R","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"AsyncIterableLike","package":"@w5s/iterable"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":3627,"name":"L","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"reference","target":3628,"name":"R","package":"@w5s/iterable","refersToTypeParameter":true}]}],"name":"AsyncIterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/AsyncIterable#zip"}],"groups":[{"title":"Functions","children":[3510,3515,3519,3525,3530,3533,3542,3551,3560,3570,3578,3581,3591,3595,3607,3611,3620,3625]}],"categories":[{"title":"Accessor","children":[3607]},{"title":"Constructor","children":[3519,3530,3570,3591]},{"title":"Predicate","children":[3533,3611]},{"title":"Type","children":[3578]},{"title":"__CATEGORY__","children":[3510,3515,3525,3542,3551,3560,3581,3595,3620,3625]}],"sources":[{"fileName":"packages/iterable/src/AsyncIterable.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/AsyncIterable.ts#L23"}],"permalink":"/std/api/iterable/namespace/AsyncIterable","nextId":3631},{"id":3631,"name":"Iterable","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate Iterable"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.create(() => ({\\n  next() { ... }\\n}));\\n\\nconst iterable = Iterable.create(function* () { ... })\\n```"}]}]},"children":[{"id":3632,"name":"chunks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L35"}],"signatures":[{"id":3633,"name":"chunks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Splits an iterable into chunks of a specified size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst chunks = Iterable.chunks([1, 2, 3, 4, 5], 2); // == Iterable.of([1, 2], [3, 4], [5])\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L35"}],"typeParameter":[{"id":3634,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3635,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable to split into chunks"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3634,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3636,"name":"chunkSize","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the size of each chunk"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3634,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#chunks"},{"id":3637,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L36"}],"signatures":[{"id":3638,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenates multiple iterables into a single iterable"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(\\n  Iterable.of(1, 2),\\n  Iterable.of(3, 4),\\n);\\nIterable.concat(iterable); // == Iterable.of(1, 2, 3, 4)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L36"}],"typeParameter":[{"id":3639,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3640,"name":"iterables","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An array of iterables to concatenate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3639,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3639,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#concat"},{"id":3641,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L37"}],"signatures":[{"id":3642,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iterable constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.create(() => ({\\n  next() { ... }\\n}))\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L37"}],"typeParameter":[{"id":3643,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3644,"name":"iteratorFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"function that creates a new iterator"}]},"type":{"type":"reflection","declaration":{"id":3645,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/create.ts","line":13,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/create.ts#L13"}],"signatures":[{"id":3646,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/create.ts","line":13,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/create.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterator"},"typeArguments":[{"type":"reference","target":3643,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterator","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3643,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#create"},{"id":3647,"name":"drop","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L38"}],"signatures":[{"id":3648,"name":"drop","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Skips the given number of elements at the start of this iterator."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nIterable.drop(iterable, 1); // == Iterable.of(2, 3)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L38"}],"typeParameter":[{"id":3649,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3650,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3649,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3651,"name":"limit","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the limit of items to take"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3649,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#drop"},{"id":3652,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L39"}],"signatures":[{"id":3653,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an iterable that have no value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.from(Iterable.empty()) // == []\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L39"}],"typeParameter":[{"id":3654,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3654,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#empty"},{"id":3655,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L40"}],"signatures":[{"id":3656,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tests whether all elements in the iterable pass the test implemented by the provided function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nIterable.every(iterable, (currentValue) => currentValue >= 1); // true\\nIterable.every(iterable, (currentValue) => currentValue >= 2); // false\\nIterable.every(iterable, (currentValue) => currentValue < 0); // false\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L40"}],"typeParameter":[{"id":3657,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3658,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3657,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3659,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":3660,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/every.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/every.ts#L19"}],"signatures":[{"id":3661,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/every.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/every.ts#L19"}],"parameters":[{"id":3662,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3657,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3663,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/iterable/namespace/Iterable#every"},{"id":3664,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L41"}],"signatures":[{"id":3665,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new iterable that filters values using "},{"kind":"code","text":"`predicate`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = [1, 2, 3];\\nIterable.filter(\\n  iterable,\\n  (currentValue, currentIndex) => currentValue > 1,\\n);// == Iterable.of(2, 3)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L41"}],"typeParameter":[{"id":3666,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3667,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator to be filtered"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3666,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3668,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a boolean"}]},"type":{"type":"reflection","declaration":{"id":3669,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/filter.ts#L19"}],"signatures":[{"id":3670,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/filter.ts#L19"}],"parameters":[{"id":3671,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3666,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3672,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3666,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#filter"},{"id":3673,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L42"}],"signatures":[{"id":3674,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the first element for which the given function returns true, otherwise undefined."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(\\n  { name: \'amy\', id: 1 },\\n  { name: \'bob\', id: 2 }\\n);\\nfind(iterable, (item) => item.name === \'bob\') // { name: \'bob\', id: 2 }\\nfind(iterable, (item) => item.name === \'cat\') // undefined\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L42"}],"typeParameter":[{"id":3675,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3676,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The input collection."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3675,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3677,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function to test whether an item in the collection should be returned."}]},"type":{"type":"reflection","declaration":{"id":3678,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/find.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/find.ts#L20"}],"signatures":[{"id":3679,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/find.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/find.ts#L20"}],"parameters":[{"id":3680,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3675,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3681,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":3675,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/iterable/namespace/Iterable#find"},{"id":3682,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L43"}],"signatures":[{"id":3683,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Iterable which applies "},{"kind":"code","text":"`mapFn`"},{"kind":"text","text":" and concatenate the result to the previous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nIterable.flatMap(\\n  iterable,\\n  (currentValue, currentIndex) => Iterable.of(currentValue, currentValue * 2),\\n);// == Iterable.of(1, 2, 2, 4, 3, 6)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L43"}],"typeParameter":[{"id":3684,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":3685,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3686,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable source"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3684,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3687,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a new value"}]},"type":{"type":"reflection","declaration":{"id":3688,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/flatMap.ts#L19"}],"signatures":[{"id":3689,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/flatMap.ts#L19"}],"parameters":[{"id":3690,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3684,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3691,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3685,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3685,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#flatMap"},{"id":3692,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L44"}],"signatures":[{"id":3693,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nIterable.from([1, 2, 3]);// Iterable.of(1, 2, 3)\\nIterable.from(function* () { yield 1; yield 2; yield 3; })// Iterable.of(1, 2, 3)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L44"}],"typeParameter":[{"id":3694,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3695,"name":"source","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3694,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reflection","declaration":{"id":3696,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/from.ts","line":11,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/from.ts#L11"}],"signatures":[{"id":3697,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/from.ts","line":11,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/from.ts#L11"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterator"},"typeArguments":[{"type":"reference","target":3694,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterator","package":"typescript"}}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3694,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#from"},{"id":3698,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L45"}],"signatures":[{"id":3699,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an iterable of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nIterable.generate(3, () => \'a\');// == Iterable.of(\'a\', \'a\', \'a\')\\nIterable.generate(3, (index) => index * 2);// == Iterable.of(0, 2, 4)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L45"}],"typeParameter":[{"id":3700,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3701,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":3702,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":3703,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/generate.ts","line":16,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/generate.ts#L16"}],"signatures":[{"id":3704,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/generate.ts","line":16,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/generate.ts#L16"}],"parameters":[{"id":3705,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":3700,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3700,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#generate"},{"id":3706,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L46"}],"signatures":[{"id":3707,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a valid "},{"kind":"inline-tag","tag":"@link","text":"Iterable","target":3631,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nIterable.hasInstance({});// false\\nIterable.hasInstance([]);// true\\nIterable.hasInstance({ [Symbol.iterator]: () => ({ next: () => ({ done: true }) }) });// true\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L46"}],"parameters":[{"id":3708,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}}],"permalink":"/std/api/iterable/namespace/Iterable#hasInstance"},{"id":3709,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L47"}],"signatures":[{"id":3710,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Iterable which applies "},{"kind":"code","text":"`mapFn`"},{"kind":"text","text":" to each values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = [1, 2, 3];\\nIterable.map(\\n  iterable,\\n  (currentValue, currentIndex) => currentValue * 2,\\n);// == Iterable.of(2, 4, 6)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L47"}],"typeParameter":[{"id":3711,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":3712,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3713,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterable source"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3711,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3714,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a new value"}]},"type":{"type":"reflection","declaration":{"id":3715,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/map.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/map.ts#L19"}],"signatures":[{"id":3716,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/map.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/map.ts#L19"}],"parameters":[{"id":3717,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3711,"name":"ValueFrom","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3718,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":3712,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3712,"name":"ValueTo","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#map"},{"id":3719,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L48"}],"signatures":[{"id":3720,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create an iterable of given "},{"kind":"code","text":"`values`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nIterable.of(\'a\', \'b\', \'c\');// \'a\', \'b\', \'c\'\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L48"}],"typeParameter":[{"id":3721,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3722,"name":"values","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The values of the iterable"}]},"type":{"type":"array","elementType":{"type":"reference","target":3721,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3721,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#of"},{"id":3723,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L49"}],"signatures":[{"id":3724,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reduce an "},{"kind":"code","text":"`initialValue`"},{"kind":"text","text":" to the "},{"kind":"code","text":"`reducer`"},{"kind":"text","text":" function"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = [1, 2, 3];\\nIterable.reduce(iterable, (total, currentValue, currentIndex) => total + value, 0);// 6\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L49"}],"typeParameter":[{"id":3725,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":3726,"name":"Return","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3727,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator reduced"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3725,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3728,"name":"reducer","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reducer function"}]},"type":{"type":"reflection","declaration":{"id":3729,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/reduce.ts","line":17,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/reduce.ts#L17"}],"signatures":[{"id":3730,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/reduce.ts","line":17,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/reduce.ts#L17"}],"parameters":[{"id":3731,"name":"accumulator","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3726,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3732,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3725,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3733,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":3726,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}}]}}},{"id":3734,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value passed to the reducer"}]},"type":{"type":"reference","target":3726,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}}],"type":{"type":"reference","target":3726,"name":"Return","package":"@w5s/iterable","refersToTypeParameter":true}}],"permalink":"/std/api/iterable/namespace/Iterable#reduce"},{"id":3735,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L50"}],"signatures":[{"id":3736,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of iterable"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nsize(iterable); // 3\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L50"}],"typeParameter":[{"id":3737,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3738,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3737,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/api/iterable/namespace/Iterable#size"},{"id":3739,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L51"}],"signatures":[{"id":3740,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tests whether any element in the iterable pass the test implemented by the provided function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nIterable.some(iterable, (currentValue) => currentValue >= 1); // true\\nIterable.some(iterable, (currentValue) => currentValue >= 2); // true\\nIterable.some(iterable, (currentValue) => currentValue < 0); // false\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L51"}],"typeParameter":[{"id":3741,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3742,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3741,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3743,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":3744,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/some.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/some.ts#L19"}],"signatures":[{"id":3745,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable/some.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable/some.ts#L19"}],"parameters":[{"id":3746,"name":"currentValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3741,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}},{"id":3747,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/iterable/namespace/Iterable#some"},{"id":3748,"name":"take","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L52"}],"signatures":[{"id":3749,"name":"take","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Take a specified number of elements from an iterable."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst iterable = Iterable.of(1, 2, 3);\\nIterable.take(iterable, 2); // == Iterable.of(1, 2)\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L52"}],"typeParameter":[{"id":3750,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3751,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the iterator"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3750,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3752,"name":"limit","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the limit of items to take"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3750,"name":"Value","package":"@w5s/iterable","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#take"},{"id":3753,"name":"zip","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L53"}],"signatures":[{"id":3754,"name":"zip","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Combine two iterables into an iterable of couple of their values.\\nThe result has the size of the smallest iterable used."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst left = [1, 2, 3];\\nconst right = [\'a\', \'b\'];\\nIterable.zip(left, right);// == Iterable.of([1, \'a\'], [2, \'b\'])\\n```"}]}]},"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L53"}],"typeParameter":[{"id":3755,"name":"L","variant":"typeParam","kind":131072,"flags":{}},{"id":3756,"name":"R","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3757,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left iterable"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3755,"name":"L","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}},{"id":3758,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right iterable"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":3756,"name":"R","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":3755,"name":"L","package":"@w5s/iterable","refersToTypeParameter":true},{"type":"reference","target":3756,"name":"R","package":"@w5s/iterable","refersToTypeParameter":true}]}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/api/iterable/namespace/Iterable#zip"}],"groups":[{"title":"Functions","children":[3632,3637,3641,3647,3652,3655,3664,3673,3682,3692,3698,3706,3709,3719,3723,3735,3739,3748,3753]}],"categories":[{"title":"Accessor","children":[3735]},{"title":"Constructor","children":[3641,3652,3692,3698,3719]},{"title":"Predicate","children":[3655,3739]},{"title":"Type","children":[3706]},{"title":"__CATEGORY__","children":[3632,3637,3647,3664,3673,3682,3709,3723,3748,3753]}],"sources":[{"fileName":"packages/iterable/src/Iterable.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/Iterable.ts#L34"}],"permalink":"/std/api/iterable/namespace/Iterable","previousId":3509}],"groups":[{"title":"Namespaces","children":[3509,3631]}],"sources":[{"fileName":"packages/iterable/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/iterable/src/index.ts#L1"}],"permalink":"/std/api/iterable"},"urlSlug":"iterable"}],"packageName":"@w5s/iterable","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":12,"name":"@w5s/money","variant":"declaration","kind":2,"flags":{},"children":[{"id":3759,"name":"Currency","variant":"declaration","kind":4,"flags":{},"children":[{"id":3834,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3835,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":3836,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":3837,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3838,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3839,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3840,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Currency#__inspect__"},{"id":3854,"name":"defaultPrecision","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L56"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"permalink":"/std/api/money/namespace/Currency#defaultPrecision"},{"id":3853,"name":"defaultRounding","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L55"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"permalink":"/std/api/money/namespace/Currency#defaultRounding"},{"id":3827,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":51,"character":17}],"type":{"type":"literal","value":"Currency"},"permalink":"/std/api/money/namespace/Currency#typeName"},{"id":3810,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3811,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3812,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3813,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3814,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#!="},{"id":3774,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3775,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3776,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3777,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3778,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#<"},{"id":3769,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3770,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3771,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3772,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3773,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#<="},{"id":3815,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3816,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3817,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3818,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3819,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#=="},{"id":3784,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3785,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3786,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3787,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3788,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#>"},{"id":3779,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3780,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3781,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3782,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3783,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#>="},{"id":3820,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L58"}],"signatures":[{"id":3821,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":58,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L58"}],"parameters":[{"id":3822,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency.Parameters"},"name":"Parameters","package":"@w5s/money","qualifiedName":"Currency.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#__call__"},{"id":3841,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3842,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3843,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3844,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3845,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#__decode__"},{"id":3846,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3847,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3848,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3849,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/money/namespace/Currency#__encode__"},{"id":3850,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3851,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3852,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#__schema__"},{"id":3831,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":3832,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":3833,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#asInstance"},{"id":3760,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3761,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3762,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3763,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Currency#asString"},{"id":3799,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3800,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3801,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3802,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3803,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3804,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#clamp"},{"id":3764,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3765,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3766,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3767,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3768,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Currency#compare"},{"id":3823,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"signatures":[{"id":3824,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"parameters":[{"id":3825,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3826,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#create"},{"id":3805,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3806,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3807,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3808,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3809,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Currency#equals"},{"id":3828,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":3829,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":3830,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}}],"permalink":"/std/api/money/namespace/Currency#hasInstance"},{"id":3794,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3795,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3796,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3797,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3798,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#max"},{"id":3789,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3790,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3791,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3792,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3793,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Currency#min"}],"groups":[{"title":"Variables","children":[3834,3854,3853,3827]},{"title":"Functions","children":[3810,3774,3769,3815,3784,3779,3820,3841,3846,3850,3831,3760,3799,3764,3823,3805,3828,3794,3789]}],"categories":[{"title":"Codec","children":[3841,3846,3850]},{"title":"Comparator","children":[3810,3774,3769,3815,3784,3779,3799,3764,3805,3794,3789]},{"title":"Constructor","children":[3823]},{"title":"Formatting","children":[3760]},{"title":"Type","children":[3834,3827,3831,3828]},{"title":"__CATEGORY__","children":[3854,3853,3820]}],"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"permalink":"/std/api/money/namespace/Currency","previousId":4343,"nextId":3856},{"id":3856,"name":"Money","variant":"declaration","kind":4,"flags":{},"children":[{"id":3966,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3967,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":3968,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":3969,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3970,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3971,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3972,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/money/namespace/Money#__inspect__"},{"id":3959,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":51,"character":17}],"type":{"type":"literal","value":"Money"},"permalink":"/std/api/money/namespace/Money#typeName"},{"id":3945,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3946,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3947,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3948,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3949,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#!="},{"id":3892,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"signatures":[{"id":3893,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiply operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'*\'](EUR(2), BigDecimal(\'2\'));// EUR(\\"4\\")\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"parameters":[{"id":3894,"name":"money","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"money object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3895,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"multiplication factor"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#*"},{"id":3882,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"signatures":[{"id":3883,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'+\'](EUR(1), EUR(2));// Result.Ok(EUR(1))\\nMoney[\'+\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"parameters":[{"id":3884,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3885,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3886,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#+"},{"id":3887,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"signatures":[{"id":3888,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtract operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'-\'](EUR(2), EUR(1));// Result.Ok(EUR(1))\\nMoney[\'-\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"parameters":[{"id":3889,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3890,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3891,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#-"},{"id":3909,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3910,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3911,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3912,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3913,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#<"},{"id":3904,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3905,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3906,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3907,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3908,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#<="},{"id":3950,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3951,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3952,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3953,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3954,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#=="},{"id":3919,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3920,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3921,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3922,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3923,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#>"},{"id":3914,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3915,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3916,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3917,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3918,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#>="},{"id":3985,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":3986,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":3987,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#__call__"},{"id":3973,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3974,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3975,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3976,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3977,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#__decode__"},{"id":3978,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3979,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3980,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3981,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/money/namespace/Money#__encode__"},{"id":3982,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3983,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3984,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#__schema__"},{"id":3963,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":3964,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":3965,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#asInstance"},{"id":3866,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3867,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3868,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3869,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Money#asString"},{"id":3934,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3935,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3936,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3937,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3938,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3939,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#clamp"},{"id":3899,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3900,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3901,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3902,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3903,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#compare"},{"id":3955,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"signatures":[{"id":3956,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":45,"character":8}],"parameters":[{"id":3957,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3958,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#create"},{"id":3940,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3941,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3942,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3943,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3944,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#equals"},{"id":3857,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"signatures":[{"id":3858,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a formatted representation of money"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.format(EUR(\'1.10\'));// \'1.10EUR\';\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"parameters":[{"id":3859,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/money/namespace/Money#format"},{"id":3960,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":3961,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":3962,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}}],"permalink":"/std/api/money/namespace/Money#hasInstance"},{"id":3878,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"signatures":[{"id":3879,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"parameters":[{"id":3880,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3881,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isNegative"},{"id":3874,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"signatures":[{"id":3875,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"parameters":[{"id":3876,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3877,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isPositive"},{"id":3870,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"signatures":[{"id":3871,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.isZero(EUR(\'0\')); // true\\nMoney.isZero(EUR(\'1\')); // false\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"parameters":[{"id":3872,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3873,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/money/namespace/Money#isZero"},{"id":3929,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3930,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3931,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3932,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3933,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#max"},{"id":3924,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3925,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3926,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3927,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3928,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#min"},{"id":3896,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":3897,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":3898,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#negate"},{"id":3860,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"signatures":[{"id":3861,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Normalizes a "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object to its simplest form.\\nThis means that the decimal part is reduced to its lowest terms."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.normalize(USD(\'1.020\'));// USD(\'1.02\')\\nMoney.normalize(USD(\'1.02\'));// USD(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"parameters":[{"id":3862,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/namespace/Money#normalize"},{"id":3863,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"signatures":[{"id":3864,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns a "},{"kind":"inline-tag","tag":"@link","text":"Money","target":3856,"tsLinkText":""},{"kind":"text","text":"\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.parse(\'1.1EUR\');// Option.Some(EUR(\'1.1\'))\\nMoney.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"parameters":[{"id":3865,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/money/namespace/Money#parse"}],"groups":[{"title":"Variables","children":[3966,3959]},{"title":"Functions","children":[3945,3892,3882,3887,3909,3904,3950,3919,3914,3985,3973,3978,3982,3963,3866,3934,3899,3955,3940,3857,3960,3878,3874,3870,3929,3924,3896,3860,3863]}],"categories":[{"title":"Codec","children":[3973,3978,3982]},{"title":"Comparator","children":[3945,3909,3904,3950,3919,3914,3934,3899,3940,3929,3924]},{"title":"Constructor","children":[3955]},{"title":"Formatting","children":[3866]},{"title":"Numeric","children":[3892,3882,3887,3878,3874,3870,3896]},{"title":"Type","children":[3966,3959,3963,3960]},{"title":"__CATEGORY__","children":[3985,3857,3860,3863]}],"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"permalink":"/std/api/money/namespace/Money","previousId":3759,"nextId":3855},{"id":3855,"name":"Currency","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"CurrencyType","package":"@w5s/money","qualifiedName":"Currency"},"permalink":"/std/api/money#Currency","categories":[],"previousId":3856,"nextId":3988},{"id":3988,"name":"Money","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"MoneyType","package":"@w5s/money","qualifiedName":"Money"},"permalink":"/std/api/money#Money","categories":[],"previousId":3855},{"id":3998,"name":"AED","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"signatures":[{"id":3999,"name":"AED","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"United Arab Emirates Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AED(\'1.25\');// Money({ currency: Currency({ code: \'AED\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"parameters":[{"id":4000,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AED","categories":[],"nextId":4001},{"id":4001,"name":"AFN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"signatures":[{"id":4002,"name":"AFN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Afghan Afghani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AFN(\'1.25\');// Money({ currency: Currency({ code: \'AFN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"parameters":[{"id":4003,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AFN","categories":[],"previousId":3998,"nextId":4004},{"id":4004,"name":"ALL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"signatures":[{"id":4005,"name":"ALL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Albanian Lek money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ALL(\'1.25\');// Money({ currency: Currency({ code: \'ALL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"parameters":[{"id":4006,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ALL","categories":[],"previousId":4001,"nextId":4007},{"id":4007,"name":"AMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"signatures":[{"id":4008,"name":"AMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Armenian Dram money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AMD(\'1.25\');// Money({ currency: Currency({ code: \'AMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"parameters":[{"id":4009,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AMD","categories":[],"previousId":4004,"nextId":4010},{"id":4010,"name":"ARS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"signatures":[{"id":4011,"name":"ARS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Argentine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ARS(\'1.25\');// Money({ currency: Currency({ code: \'ARS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"parameters":[{"id":4012,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ARS","categories":[],"previousId":4007,"nextId":4013},{"id":4013,"name":"AUD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"signatures":[{"id":4014,"name":"AUD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Australian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AUD(\'1.25\');// Money({ currency: Currency({ code: \'AUD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"parameters":[{"id":4015,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AUD","categories":[],"previousId":4010,"nextId":4016},{"id":4016,"name":"AZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"signatures":[{"id":4017,"name":"AZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Azerbaijani Manat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AZN(\'1.25\');// Money({ currency: Currency({ code: \'AZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"parameters":[{"id":4018,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/AZN","categories":[],"previousId":4013,"nextId":4019},{"id":4019,"name":"BAM","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"signatures":[{"id":4020,"name":"BAM","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bosnia-Herzegovina Convertible Mark money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BAM(\'1.25\');// Money({ currency: Currency({ code: \'BAM\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"parameters":[{"id":4021,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BAM","categories":[],"previousId":4016,"nextId":4022},{"id":4022,"name":"BDT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"signatures":[{"id":4023,"name":"BDT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bangladeshi Taka money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BDT(\'1.25\');// Money({ currency: Currency({ code: \'BDT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"parameters":[{"id":4024,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BDT","categories":[],"previousId":4019,"nextId":4025},{"id":4025,"name":"BGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"signatures":[{"id":4026,"name":"BGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bulgarian Lev money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BGN(\'1.25\');// Money({ currency: Currency({ code: \'BGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"parameters":[{"id":4027,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BGN","categories":[],"previousId":4022,"nextId":4028},{"id":4028,"name":"BHD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"signatures":[{"id":4029,"name":"BHD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bahraini Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BHD(\'1.25\');// Money({ currency: Currency({ code: \'BHD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"parameters":[{"id":4030,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BHD","categories":[],"previousId":4025,"nextId":4031},{"id":4031,"name":"BIF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"signatures":[{"id":4032,"name":"BIF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Burundian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BIF(\'1.25\');// Money({ currency: Currency({ code: \'BIF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"parameters":[{"id":4033,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BIF","categories":[],"previousId":4028,"nextId":4034},{"id":4034,"name":"BND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"signatures":[{"id":4035,"name":"BND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brunei Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BND(\'1.25\');// Money({ currency: Currency({ code: \'BND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"parameters":[{"id":4036,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BND","categories":[],"previousId":4031,"nextId":4037},{"id":4037,"name":"BOB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"signatures":[{"id":4038,"name":"BOB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bolivian Boliviano money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BOB(\'1.25\');// Money({ currency: Currency({ code: \'BOB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"parameters":[{"id":4039,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BOB","categories":[],"previousId":4034,"nextId":4040},{"id":4040,"name":"BRL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"signatures":[{"id":4041,"name":"BRL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brazilian Real money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BRL(\'1.25\');// Money({ currency: Currency({ code: \'BRL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"parameters":[{"id":4042,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BRL","categories":[],"previousId":4037,"nextId":4043},{"id":4043,"name":"BWP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"signatures":[{"id":4044,"name":"BWP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Botswanan Pula money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BWP(\'1.25\');// Money({ currency: Currency({ code: \'BWP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"parameters":[{"id":4045,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BWP","categories":[],"previousId":4040,"nextId":4046},{"id":4046,"name":"BYN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"signatures":[{"id":4047,"name":"BYN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belarusian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BYN(\'1.25\');// Money({ currency: Currency({ code: \'BYN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"parameters":[{"id":4048,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BYN","categories":[],"previousId":4043,"nextId":4049},{"id":4049,"name":"BZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"signatures":[{"id":4050,"name":"BZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belize Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BZD(\'1.25\');// Money({ currency: Currency({ code: \'BZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"parameters":[{"id":4051,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/BZD","categories":[],"previousId":4046,"nextId":3992},{"id":3992,"name":"CAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"signatures":[{"id":3993,"name":"CAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canadian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CAD(\'1.25\');// Money({ currency: Currency({ code: \'CAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"parameters":[{"id":3994,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CAD","categories":[],"previousId":4049,"nextId":4052},{"id":4052,"name":"CDF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"signatures":[{"id":4053,"name":"CDF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Congolese Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CDF(\'1.25\');// Money({ currency: Currency({ code: \'CDF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"parameters":[{"id":4054,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CDF","categories":[],"previousId":3992,"nextId":4055},{"id":4055,"name":"CHF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"signatures":[{"id":4056,"name":"CHF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swiss Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CHF(\'1.25\');// Money({ currency: Currency({ code: \'CHF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"parameters":[{"id":4057,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CHF","categories":[],"previousId":4052,"nextId":4058},{"id":4058,"name":"CLP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"signatures":[{"id":4059,"name":"CLP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chilean Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CLP(\'1.25\');// Money({ currency: Currency({ code: \'CLP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"parameters":[{"id":4060,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CLP","categories":[],"previousId":4055,"nextId":4061},{"id":4061,"name":"CNY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"signatures":[{"id":4062,"name":"CNY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chinese Yuan money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CNY(\'1.25\');// Money({ currency: Currency({ code: \'CNY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"parameters":[{"id":4063,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CNY","categories":[],"previousId":4058,"nextId":4064},{"id":4064,"name":"COP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"signatures":[{"id":4065,"name":"COP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Colombian Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = COP(\'1.25\');// Money({ currency: Currency({ code: \'COP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"parameters":[{"id":4066,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/COP","categories":[],"previousId":4061,"nextId":4067},{"id":4067,"name":"CRC","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"signatures":[{"id":4068,"name":"CRC","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Costa Rican Col\xf3n money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CRC(\'1.25\');// Money({ currency: Currency({ code: \'CRC\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"parameters":[{"id":4069,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CRC","categories":[],"previousId":4064,"nextId":4070},{"id":4070,"name":"CVE","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"signatures":[{"id":4071,"name":"CVE","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cape Verdean Escudo money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CVE(\'1.25\');// Money({ currency: Currency({ code: \'CVE\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"parameters":[{"id":4072,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CVE","categories":[],"previousId":4067,"nextId":4073},{"id":4073,"name":"CZK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"signatures":[{"id":4074,"name":"CZK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Czech Republic Koruna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CZK(\'1.25\');// Money({ currency: Currency({ code: \'CZK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"parameters":[{"id":4075,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/CZK","categories":[],"previousId":4070,"nextId":4076},{"id":4076,"name":"DJF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"signatures":[{"id":4077,"name":"DJF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Djiboutian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DJF(\'1.25\');// Money({ currency: Currency({ code: \'DJF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"parameters":[{"id":4078,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DJF","categories":[],"previousId":4073,"nextId":4079},{"id":4079,"name":"DKK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"signatures":[{"id":4080,"name":"DKK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Danish Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DKK(\'1.25\');// Money({ currency: Currency({ code: \'DKK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"parameters":[{"id":4081,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DKK","categories":[],"previousId":4076,"nextId":4082},{"id":4082,"name":"DOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"signatures":[{"id":4083,"name":"DOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Dominican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DOP(\'1.25\');// Money({ currency: Currency({ code: \'DOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"parameters":[{"id":4084,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DOP","categories":[],"previousId":4079,"nextId":4085},{"id":4085,"name":"DZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"signatures":[{"id":4086,"name":"DZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Algerian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DZD(\'1.25\');// Money({ currency: Currency({ code: \'DZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"parameters":[{"id":4087,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/DZD","categories":[],"previousId":4082,"nextId":4088},{"id":4088,"name":"EEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"signatures":[{"id":4089,"name":"EEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Estonian Kroon money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EEK(\'1.25\');// Money({ currency: Currency({ code: \'EEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"parameters":[{"id":4090,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EEK","categories":[],"previousId":4085,"nextId":4091},{"id":4091,"name":"EGP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"signatures":[{"id":4092,"name":"EGP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Egyptian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EGP(\'1.25\');// Money({ currency: Currency({ code: \'EGP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"parameters":[{"id":4093,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EGP","categories":[],"previousId":4088,"nextId":4094},{"id":4094,"name":"ERN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"signatures":[{"id":4095,"name":"ERN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Eritrean Nakfa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ERN(\'1.25\');// Money({ currency: Currency({ code: \'ERN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"parameters":[{"id":4096,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ERN","categories":[],"previousId":4091,"nextId":4097},{"id":4097,"name":"ETB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"signatures":[{"id":4098,"name":"ETB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ethiopian Birr money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ETB(\'1.25\');// Money({ currency: Currency({ code: \'ETB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"parameters":[{"id":4099,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ETB","categories":[],"previousId":4094,"nextId":3995},{"id":3995,"name":"EUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"signatures":[{"id":3996,"name":"EUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Euro money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EUR(\'1.25\');// Money({ currency: Currency({ code: \'EUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"parameters":[{"id":3997,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/EUR","categories":[],"previousId":4097,"nextId":4100},{"id":4100,"name":"GBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"signatures":[{"id":4101,"name":"GBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"British Pound Sterling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GBP(\'1.25\');// Money({ currency: Currency({ code: \'GBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"parameters":[{"id":4102,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GBP","categories":[],"previousId":3995,"nextId":4103},{"id":4103,"name":"GEL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"signatures":[{"id":4104,"name":"GEL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Georgian Lari money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GEL(\'1.25\');// Money({ currency: Currency({ code: \'GEL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"parameters":[{"id":4105,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GEL","categories":[],"previousId":4100,"nextId":4106},{"id":4106,"name":"GHS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"signatures":[{"id":4107,"name":"GHS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ghanaian Cedi money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GHS(\'1.25\');// Money({ currency: Currency({ code: \'GHS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"parameters":[{"id":4108,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GHS","categories":[],"previousId":4103,"nextId":4109},{"id":4109,"name":"GNF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"signatures":[{"id":4110,"name":"GNF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guinean Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GNF(\'1.25\');// Money({ currency: Currency({ code: \'GNF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"parameters":[{"id":4111,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GNF","categories":[],"previousId":4106,"nextId":4112},{"id":4112,"name":"GTQ","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"signatures":[{"id":4113,"name":"GTQ","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guatemalan Quetzal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GTQ(\'1.25\');// Money({ currency: Currency({ code: \'GTQ\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"parameters":[{"id":4114,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/GTQ","categories":[],"previousId":4109,"nextId":4115},{"id":4115,"name":"HKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"signatures":[{"id":4116,"name":"HKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hong Kong Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HKD(\'1.25\');// Money({ currency: Currency({ code: \'HKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"parameters":[{"id":4117,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HKD","categories":[],"previousId":4112,"nextId":4118},{"id":4118,"name":"HNL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"signatures":[{"id":4119,"name":"HNL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Honduran Lempira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HNL(\'1.25\');// Money({ currency: Currency({ code: \'HNL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"parameters":[{"id":4120,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HNL","categories":[],"previousId":4115,"nextId":4121},{"id":4121,"name":"HRK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"signatures":[{"id":4122,"name":"HRK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Croatian Kuna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HRK(\'1.25\');// Money({ currency: Currency({ code: \'HRK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"parameters":[{"id":4123,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HRK","categories":[],"previousId":4118,"nextId":4124},{"id":4124,"name":"HUF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"signatures":[{"id":4125,"name":"HUF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hungarian Forint money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HUF(\'1.25\');// Money({ currency: Currency({ code: \'HUF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"parameters":[{"id":4126,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/HUF","categories":[],"previousId":4121,"nextId":4127},{"id":4127,"name":"IDR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"signatures":[{"id":4128,"name":"IDR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indonesian Rupiah money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IDR(\'1.25\');// Money({ currency: Currency({ code: \'IDR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"parameters":[{"id":4129,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IDR","categories":[],"previousId":4124,"nextId":4130},{"id":4130,"name":"ILS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"signatures":[{"id":4131,"name":"ILS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Israeli New Sheqel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ILS(\'1.25\');// Money({ currency: Currency({ code: \'ILS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"parameters":[{"id":4132,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ILS","categories":[],"previousId":4127,"nextId":4133},{"id":4133,"name":"INR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"signatures":[{"id":4134,"name":"INR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = INR(\'1.25\');// Money({ currency: Currency({ code: \'INR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"parameters":[{"id":4135,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/INR","categories":[],"previousId":4130,"nextId":4136},{"id":4136,"name":"IQD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"signatures":[{"id":4137,"name":"IQD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iraqi Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IQD(\'1.25\');// Money({ currency: Currency({ code: \'IQD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"parameters":[{"id":4138,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IQD","categories":[],"previousId":4133,"nextId":4139},{"id":4139,"name":"IRR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"signatures":[{"id":4140,"name":"IRR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iranian Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IRR(\'1.25\');// Money({ currency: Currency({ code: \'IRR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"parameters":[{"id":4141,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/IRR","categories":[],"previousId":4136,"nextId":4142},{"id":4142,"name":"ISK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"signatures":[{"id":4143,"name":"ISK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Icelandic Kr\xf3na money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ISK(\'1.25\');// Money({ currency: Currency({ code: \'ISK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"parameters":[{"id":4144,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ISK","categories":[],"previousId":4139,"nextId":4145},{"id":4145,"name":"JMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"signatures":[{"id":4146,"name":"JMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jamaican Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JMD(\'1.25\');// Money({ currency: Currency({ code: \'JMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"parameters":[{"id":4147,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JMD","categories":[],"previousId":4142,"nextId":4148},{"id":4148,"name":"JOD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"signatures":[{"id":4149,"name":"JOD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jordanian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JOD(\'1.25\');// Money({ currency: Currency({ code: \'JOD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"parameters":[{"id":4150,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JOD","categories":[],"previousId":4145,"nextId":4151},{"id":4151,"name":"JPY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"signatures":[{"id":4152,"name":"JPY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Japanese Yen money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JPY(\'1.25\');// Money({ currency: Currency({ code: \'JPY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"parameters":[{"id":4153,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/JPY","categories":[],"previousId":4148,"nextId":4154},{"id":4154,"name":"KES","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"signatures":[{"id":4155,"name":"KES","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kenyan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KES(\'1.25\');// Money({ currency: Currency({ code: \'KES\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"parameters":[{"id":4156,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KES","categories":[],"previousId":4151,"nextId":4157},{"id":4157,"name":"KHR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"signatures":[{"id":4158,"name":"KHR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cambodian Riel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KHR(\'1.25\');// Money({ currency: Currency({ code: \'KHR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"parameters":[{"id":4159,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KHR","categories":[],"previousId":4154,"nextId":4160},{"id":4160,"name":"KMF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"signatures":[{"id":4161,"name":"KMF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Comorian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KMF(\'1.25\');// Money({ currency: Currency({ code: \'KMF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"parameters":[{"id":4162,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KMF","categories":[],"previousId":4157,"nextId":4163},{"id":4163,"name":"KRW","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"signatures":[{"id":4164,"name":"KRW","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South Korean Won money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KRW(\'1.25\');// Money({ currency: Currency({ code: \'KRW\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"parameters":[{"id":4165,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KRW","categories":[],"previousId":4160,"nextId":4166},{"id":4166,"name":"KWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"signatures":[{"id":4167,"name":"KWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kuwaiti Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KWD(\'1.25\');// Money({ currency: Currency({ code: \'KWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"parameters":[{"id":4168,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KWD","categories":[],"previousId":4163,"nextId":4169},{"id":4169,"name":"KZT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"signatures":[{"id":4170,"name":"KZT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kazakhstani Tenge money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KZT(\'1.25\');// Money({ currency: Currency({ code: \'KZT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"parameters":[{"id":4171,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/KZT","categories":[],"previousId":4166,"nextId":4172},{"id":4172,"name":"LBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"signatures":[{"id":4173,"name":"LBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lebanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LBP(\'1.25\');// Money({ currency: Currency({ code: \'LBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"parameters":[{"id":4174,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LBP","categories":[],"previousId":4169,"nextId":4175},{"id":4175,"name":"LKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"signatures":[{"id":4176,"name":"LKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sri Lankan Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LKR(\'1.25\');// Money({ currency: Currency({ code: \'LKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"parameters":[{"id":4177,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LKR","categories":[],"previousId":4172,"nextId":4178},{"id":4178,"name":"LTL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"signatures":[{"id":4179,"name":"LTL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lithuanian Litas money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LTL(\'1.25\');// Money({ currency: Currency({ code: \'LTL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"parameters":[{"id":4180,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LTL","categories":[],"previousId":4175,"nextId":4181},{"id":4181,"name":"LVL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"signatures":[{"id":4182,"name":"LVL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Latvian Lats money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LVL(\'1.25\');// Money({ currency: Currency({ code: \'LVL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"parameters":[{"id":4183,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LVL","categories":[],"previousId":4178,"nextId":4184},{"id":4184,"name":"LYD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"signatures":[{"id":4185,"name":"LYD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Libyan Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LYD(\'1.25\');// Money({ currency: Currency({ code: \'LYD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"parameters":[{"id":4186,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/LYD","categories":[],"previousId":4181,"nextId":4187},{"id":4187,"name":"MAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"signatures":[{"id":4188,"name":"MAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moroccan Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MAD(\'1.25\');// Money({ currency: Currency({ code: \'MAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"parameters":[{"id":4189,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MAD","categories":[],"previousId":4184,"nextId":4190},{"id":4190,"name":"MDL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"signatures":[{"id":4191,"name":"MDL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moldovan Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MDL(\'1.25\');// Money({ currency: Currency({ code: \'MDL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"parameters":[{"id":4192,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MDL","categories":[],"previousId":4187,"nextId":4193},{"id":4193,"name":"MGA","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"signatures":[{"id":4194,"name":"MGA","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malagasy Ariary money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MGA(\'1.25\');// Money({ currency: Currency({ code: \'MGA\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"parameters":[{"id":4195,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MGA","categories":[],"previousId":4190,"nextId":4196},{"id":4196,"name":"MKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"signatures":[{"id":4197,"name":"MKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macedonian Denar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MKD(\'1.25\');// Money({ currency: Currency({ code: \'MKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"parameters":[{"id":4198,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MKD","categories":[],"previousId":4193,"nextId":4199},{"id":4199,"name":"MMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"signatures":[{"id":4200,"name":"MMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Myanma Kyat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MMK(\'1.25\');// Money({ currency: Currency({ code: \'MMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"parameters":[{"id":4201,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MMK","categories":[],"previousId":4196,"nextId":4202},{"id":4202,"name":"MOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"signatures":[{"id":4203,"name":"MOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macanese Pataca money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MOP(\'1.25\');// Money({ currency: Currency({ code: \'MOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"parameters":[{"id":4204,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MOP","categories":[],"previousId":4199,"nextId":4205},{"id":4205,"name":"MUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"signatures":[{"id":4206,"name":"MUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mauritian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MUR(\'1.25\');// Money({ currency: Currency({ code: \'MUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"parameters":[{"id":4207,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MUR","categories":[],"previousId":4202,"nextId":4208},{"id":4208,"name":"MXN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"signatures":[{"id":4209,"name":"MXN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mexican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MXN(\'1.25\');// Money({ currency: Currency({ code: \'MXN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"parameters":[{"id":4210,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MXN","categories":[],"previousId":4205,"nextId":4211},{"id":4211,"name":"MYR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"signatures":[{"id":4212,"name":"MYR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malaysian Ringgit money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MYR(\'1.25\');// Money({ currency: Currency({ code: \'MYR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"parameters":[{"id":4213,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MYR","categories":[],"previousId":4208,"nextId":4214},{"id":4214,"name":"MZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"signatures":[{"id":4215,"name":"MZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mozambican Metical money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MZN(\'1.25\');// Money({ currency: Currency({ code: \'MZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"parameters":[{"id":4216,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/MZN","categories":[],"previousId":4211,"nextId":4217},{"id":4217,"name":"NAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"signatures":[{"id":4218,"name":"NAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Namibian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NAD(\'1.25\');// Money({ currency: Currency({ code: \'NAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"parameters":[{"id":4219,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NAD","categories":[],"previousId":4214,"nextId":4220},{"id":4220,"name":"NGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"signatures":[{"id":4221,"name":"NGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nigerian Naira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NGN(\'1.25\');// Money({ currency: Currency({ code: \'NGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"parameters":[{"id":4222,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NGN","categories":[],"previousId":4217,"nextId":4223},{"id":4223,"name":"NIO","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"signatures":[{"id":4224,"name":"NIO","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nicaraguan C\xf3rdoba money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NIO(\'1.25\');// Money({ currency: Currency({ code: \'NIO\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"parameters":[{"id":4225,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NIO","categories":[],"previousId":4220,"nextId":4226},{"id":4226,"name":"NOK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"signatures":[{"id":4227,"name":"NOK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Norwegian Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NOK(\'1.25\');// Money({ currency: Currency({ code: \'NOK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"parameters":[{"id":4228,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NOK","categories":[],"previousId":4223,"nextId":4229},{"id":4229,"name":"NPR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"signatures":[{"id":4230,"name":"NPR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nepalese Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NPR(\'1.25\');// Money({ currency: Currency({ code: \'NPR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"parameters":[{"id":4231,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NPR","categories":[],"previousId":4226,"nextId":4232},{"id":4232,"name":"NZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"signatures":[{"id":4233,"name":"NZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Zealand Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NZD(\'1.25\');// Money({ currency: Currency({ code: \'NZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"parameters":[{"id":4234,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/NZD","categories":[],"previousId":4229,"nextId":4235},{"id":4235,"name":"OMR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"signatures":[{"id":4236,"name":"OMR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Omani Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = OMR(\'1.25\');// Money({ currency: Currency({ code: \'OMR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"parameters":[{"id":4237,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/OMR","categories":[],"previousId":4232,"nextId":4238},{"id":4238,"name":"PAB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"signatures":[{"id":4239,"name":"PAB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Panamanian Balboa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PAB(\'1.25\');// Money({ currency: Currency({ code: \'PAB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"parameters":[{"id":4240,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PAB","categories":[],"previousId":4235,"nextId":4241},{"id":4241,"name":"PEN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"signatures":[{"id":4242,"name":"PEN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Peruvian Nuevo Sol money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PEN(\'1.25\');// Money({ currency: Currency({ code: \'PEN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"parameters":[{"id":4243,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PEN","categories":[],"previousId":4238,"nextId":4244},{"id":4244,"name":"PHP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"signatures":[{"id":4245,"name":"PHP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Philippine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PHP(\'1.25\');// Money({ currency: Currency({ code: \'PHP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"parameters":[{"id":4246,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PHP","categories":[],"previousId":4241,"nextId":4247},{"id":4247,"name":"PKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"signatures":[{"id":4248,"name":"PKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pakistani Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PKR(\'1.25\');// Money({ currency: Currency({ code: \'PKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"parameters":[{"id":4249,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PKR","categories":[],"previousId":4244,"nextId":4250},{"id":4250,"name":"PLN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"signatures":[{"id":4251,"name":"PLN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Polish Zloty money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PLN(\'1.25\');// Money({ currency: Currency({ code: \'PLN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"parameters":[{"id":4252,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PLN","categories":[],"previousId":4247,"nextId":4253},{"id":4253,"name":"PYG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"signatures":[{"id":4254,"name":"PYG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Paraguayan Guarani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PYG(\'1.25\');// Money({ currency: Currency({ code: \'PYG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"parameters":[{"id":4255,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/PYG","categories":[],"previousId":4250,"nextId":4256},{"id":4256,"name":"QAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"signatures":[{"id":4257,"name":"QAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Qatari Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = QAR(\'1.25\');// Money({ currency: Currency({ code: \'QAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"parameters":[{"id":4258,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/QAR","categories":[],"previousId":4253,"nextId":4259},{"id":4259,"name":"RON","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"signatures":[{"id":4260,"name":"RON","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Romanian Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RON(\'1.25\');// Money({ currency: Currency({ code: \'RON\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"parameters":[{"id":4261,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RON","categories":[],"previousId":4256,"nextId":4262},{"id":4262,"name":"RSD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"signatures":[{"id":4263,"name":"RSD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Serbian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RSD(\'1.25\');// Money({ currency: Currency({ code: \'RSD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"parameters":[{"id":4264,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RSD","categories":[],"previousId":4259,"nextId":4265},{"id":4265,"name":"RUB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"signatures":[{"id":4266,"name":"RUB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Russian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RUB(\'1.25\');// Money({ currency: Currency({ code: \'RUB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"parameters":[{"id":4267,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RUB","categories":[],"previousId":4262,"nextId":4268},{"id":4268,"name":"RWF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"signatures":[{"id":4269,"name":"RWF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Rwandan Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RWF(\'1.25\');// Money({ currency: Currency({ code: \'RWF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"parameters":[{"id":4270,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/RWF","categories":[],"previousId":4265,"nextId":4271},{"id":4271,"name":"SAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"signatures":[{"id":4272,"name":"SAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Saudi Riyal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SAR(\'1.25\');// Money({ currency: Currency({ code: \'SAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"parameters":[{"id":4273,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SAR","categories":[],"previousId":4268,"nextId":4274},{"id":4274,"name":"SDG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"signatures":[{"id":4275,"name":"SDG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sudanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SDG(\'1.25\');// Money({ currency: Currency({ code: \'SDG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"parameters":[{"id":4276,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SDG","categories":[],"previousId":4271,"nextId":4277},{"id":4277,"name":"SEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"signatures":[{"id":4278,"name":"SEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swedish Krona money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SEK(\'1.25\');// Money({ currency: Currency({ code: \'SEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"parameters":[{"id":4279,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SEK","categories":[],"previousId":4274,"nextId":4280},{"id":4280,"name":"SGD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"signatures":[{"id":4281,"name":"SGD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Singapore Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SGD(\'1.25\');// Money({ currency: Currency({ code: \'SGD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"parameters":[{"id":4282,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SGD","categories":[],"previousId":4277,"nextId":4283},{"id":4283,"name":"SOS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"signatures":[{"id":4284,"name":"SOS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Somali Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SOS(\'1.25\');// Money({ currency: Currency({ code: \'SOS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"parameters":[{"id":4285,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SOS","categories":[],"previousId":4280,"nextId":4286},{"id":4286,"name":"SYP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"signatures":[{"id":4287,"name":"SYP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Syrian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SYP(\'1.25\');// Money({ currency: Currency({ code: \'SYP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"parameters":[{"id":4288,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/SYP","categories":[],"previousId":4283,"nextId":4289},{"id":4289,"name":"THB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"signatures":[{"id":4290,"name":"THB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Thai Baht money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = THB(\'1.25\');// Money({ currency: Currency({ code: \'THB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"parameters":[{"id":4291,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/THB","categories":[],"previousId":4286,"nextId":4292},{"id":4292,"name":"TND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"signatures":[{"id":4293,"name":"TND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tunisian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TND(\'1.25\');// Money({ currency: Currency({ code: \'TND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"parameters":[{"id":4294,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TND","categories":[],"previousId":4289,"nextId":4295},{"id":4295,"name":"TOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"signatures":[{"id":4296,"name":"TOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tongan Pa\u02bbanga money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TOP(\'1.25\');// Money({ currency: Currency({ code: \'TOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"parameters":[{"id":4297,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TOP","categories":[],"previousId":4292,"nextId":4298},{"id":4298,"name":"TRY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"signatures":[{"id":4299,"name":"TRY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Turkish Lira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TRY(\'1.25\');// Money({ currency: Currency({ code: \'TRY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"parameters":[{"id":4300,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TRY","categories":[],"previousId":4295,"nextId":4301},{"id":4301,"name":"TTD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"signatures":[{"id":4302,"name":"TTD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Trinidad and Tobago Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TTD(\'1.25\');// Money({ currency: Currency({ code: \'TTD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"parameters":[{"id":4303,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TTD","categories":[],"previousId":4298,"nextId":4304},{"id":4304,"name":"TWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"signatures":[{"id":4305,"name":"TWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Taiwan Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TWD(\'1.25\');// Money({ currency: Currency({ code: \'TWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"parameters":[{"id":4306,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TWD","categories":[],"previousId":4301,"nextId":4307},{"id":4307,"name":"TZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"signatures":[{"id":4308,"name":"TZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tanzanian Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TZS(\'1.25\');// Money({ currency: Currency({ code: \'TZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"parameters":[{"id":4309,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/TZS","categories":[],"previousId":4304,"nextId":4310},{"id":4310,"name":"UAH","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"signatures":[{"id":4311,"name":"UAH","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ukrainian Hryvnia money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UAH(\'1.25\');// Money({ currency: Currency({ code: \'UAH\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"parameters":[{"id":4312,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UAH","categories":[],"previousId":4307,"nextId":4313},{"id":4313,"name":"UGX","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"signatures":[{"id":4314,"name":"UGX","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ugandan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UGX(\'1.25\');// Money({ currency: Currency({ code: \'UGX\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"parameters":[{"id":4315,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UGX","categories":[],"previousId":4310,"nextId":3989},{"id":3989,"name":"USD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"signatures":[{"id":3990,"name":"USD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"US Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = USD(\'1.25\');// Money({ currency: Currency({ code: \'USD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"parameters":[{"id":3991,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/USD","categories":[],"previousId":4313,"nextId":4316},{"id":4316,"name":"UYU","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"signatures":[{"id":4317,"name":"UYU","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uruguayan Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UYU(\'1.25\');// Money({ currency: Currency({ code: \'UYU\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"parameters":[{"id":4318,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UYU","categories":[],"previousId":3989,"nextId":4319},{"id":4319,"name":"UZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"signatures":[{"id":4320,"name":"UZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uzbekistan Som money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UZS(\'1.25\');// Money({ currency: Currency({ code: \'UZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"parameters":[{"id":4321,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/UZS","categories":[],"previousId":4316,"nextId":4322},{"id":4322,"name":"VEF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"signatures":[{"id":4323,"name":"VEF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Venezuelan Bol\xedvar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VEF(\'1.25\');// Money({ currency: Currency({ code: \'VEF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"parameters":[{"id":4324,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/VEF","categories":[],"previousId":4319,"nextId":4325},{"id":4325,"name":"VND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"signatures":[{"id":4326,"name":"VND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Vietnamese Dong money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VND(\'1.25\');// Money({ currency: Currency({ code: \'VND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"parameters":[{"id":4327,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/VND","categories":[],"previousId":4322,"nextId":4328},{"id":4328,"name":"XAF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"signatures":[{"id":4329,"name":"XAF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BEAC money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XAF(\'1.25\');// Money({ currency: Currency({ code: \'XAF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"parameters":[{"id":4330,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/XAF","categories":[],"previousId":4325,"nextId":4331},{"id":4331,"name":"XOF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"signatures":[{"id":4332,"name":"XOF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BCEAO money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XOF(\'1.25\');// Money({ currency: Currency({ code: \'XOF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"parameters":[{"id":4333,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/XOF","categories":[],"previousId":4328,"nextId":4334},{"id":4334,"name":"YER","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"signatures":[{"id":4335,"name":"YER","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Yemeni Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = YER(\'1.25\');// Money({ currency: Currency({ code: \'YER\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"parameters":[{"id":4336,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/YER","categories":[],"previousId":4331,"nextId":4337},{"id":4337,"name":"ZAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"signatures":[{"id":4338,"name":"ZAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South African Rand money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZAR(\'1.25\');// Money({ currency: Currency({ code: \'ZAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"parameters":[{"id":4339,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZAR","categories":[],"previousId":4334,"nextId":4340},{"id":4340,"name":"ZMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"signatures":[{"id":4341,"name":"ZMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zambian Kwacha money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZMK(\'1.25\');// Money({ currency: Currency({ code: \'ZMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"parameters":[{"id":4342,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZMK","categories":[],"previousId":4337,"nextId":4343},{"id":4343,"name":"ZWL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"signatures":[{"id":4344,"name":"ZWL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zimbabwean Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZWL(\'1.25\');// Money({ currency: Currency({ code: \'ZWL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"parameters":[{"id":4345,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/api/money/function/ZWL","categories":[],"previousId":4340,"nextId":3759}],"groups":[{"title":"Functions","children":[3998,4001,4004,4007,4010,4013,4016,4019,4022,4025,4028,4031,4034,4037,4040,4043,4046,4049,3992,4052,4055,4058,4061,4064,4067,4070,4073,4076,4079,4082,4085,4088,4091,4094,4097,3995,4100,4103,4106,4109,4112,4115,4118,4121,4124,4127,4130,4133,4136,4139,4142,4145,4148,4151,4154,4157,4160,4163,4166,4169,4172,4175,4178,4181,4184,4187,4190,4193,4196,4199,4202,4205,4208,4211,4214,4217,4220,4223,4226,4229,4232,4235,4238,4241,4244,4247,4250,4253,4256,4259,4262,4265,4268,4271,4274,4277,4280,4283,4286,4289,4292,4295,4298,4301,4304,4307,4310,4313,3989,4316,4319,4322,4325,4328,4331,4334,4337,4340,4343]},{"title":"Namespaces","children":[3759,3856]},{"title":"Type Aliases","children":[3855,3988]}],"sources":[{"fileName":"packages/money/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/money/src/index.ts#L1"}],"permalink":"/std/api/money"},"urlSlug":"money"}],"packageName":"@w5s/money","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":13,"name":"@w5s/num","variant":"declaration","kind":2,"flags":{},"children":[{"id":4346,"name":"BigInt","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`bigint`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { BigInt } from \'@w5s/core\';\\n\\nconst total = [1n, 2n, 3n].reduce(BigInt[\'+\'], 0n);// 6n\\nBigInt[\'==\'](total, 6n);// true\\n```"}]}]},"children":[{"id":4367,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/num/namespace/BigInt#typeName"},{"id":4374,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4375,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":4376,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":4377,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4378,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4379,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4380,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/num/namespace/BigInt#__inspect__"},{"id":4432,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"bigint"},"permalink":"/std/api/num/namespace/BigInt#indexType"},{"id":4493,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4494,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4495,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4496,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4497,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#!="},{"id":4417,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":4418,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":4419,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4420,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#*"},{"id":4421,"name":"**","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"signatures":[{"id":4422,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"parameters":[{"id":4423,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4424,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#**"},{"id":4413,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":4414,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":4415,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4416,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#+"},{"id":4425,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":4426,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":4427,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4428,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#-"},{"id":4457,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4458,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4459,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4460,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4461,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#<"},{"id":4452,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4453,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4454,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4455,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4456,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#<="},{"id":4498,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4499,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4500,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4501,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4502,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#=="},{"id":4467,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4468,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4469,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4470,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4471,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#>"},{"id":4462,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4463,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4464,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4465,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4466,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#>="},{"id":4381,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4382,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4383,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4384,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4385,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"bigint"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#__decode__"},{"id":4386,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4387,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4388,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4389,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/num/namespace/BigInt#__encode__"},{"id":4390,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4391,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4392,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#__schema__"},{"id":4397,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":4398,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":4399,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4400,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#abs"},{"id":4371,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":4372,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":4373,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#asInstance"},{"id":4393,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4394,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4395,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4396,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/BigInt#asString"},{"id":4433,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":4434,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":4435,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#at"},{"id":4482,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4483,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4484,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4485,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4486,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4487,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#clamp"},{"id":4447,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4448,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4449,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4450,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4451,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#compare"},{"id":4488,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4489,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4490,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4491,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4492,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#equals"},{"id":4350,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L34"}],"signatures":[{"id":4351,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of bigint using "},{"kind":"code","text":"`radix`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.format(1024n, 10);// \'1024\'\\nBigInt.format(1024n, 16);// \'400\'\\n```"}]}]},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L34"}],"parameters":[{"id":4352,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4353,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/BigInt#format"},{"id":4354,"name":"fromInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L35"}],"signatures":[{"id":4355,"name":"fromInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an integer to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromInt(Int(1));// 1n\\nBigInt.fromInt(Int(-1));// -1n\\n```"}]}]},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L35"}],"parameters":[{"id":4356,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#fromInt"},{"id":4357,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L36"}],"signatures":[{"id":4358,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a number to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromNumber(1);// Option.Some(1n)\\nBigInt.fromNumber(-1);// Option.Some(-1n)\\nBigInt.fromNumber(1.1);// Option.None\\nBigInt.fromNumber(Number.MAX_SAFE_INTEGER + 1);// Option.None\\nBigInt.fromNumber(Number.MIN_SAFE_INTEGER - 1);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L36"}],"parameters":[{"id":4359,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#fromNumber"},{"id":4368,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":4369,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":4370,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"bigint"}}}],"permalink":"/std/api/num/namespace/BigInt#hasInstance"},{"id":4436,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":4437,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":4438,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#indexOf"},{"id":4405,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"signatures":[{"id":4406,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"parameters":[{"id":4407,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4408,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#isNegative"},{"id":4401,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"signatures":[{"id":4402,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"parameters":[{"id":4403,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4404,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#isPositive"},{"id":4363,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":4364,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":4365,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4366,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/BigInt#isZero"},{"id":4477,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4478,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4479,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4480,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4481,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#max"},{"id":4472,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4473,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4474,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4475,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":4476,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#min"},{"id":4429,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":4430,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":4431,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#negate"},{"id":4347,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L33"}],"signatures":[{"id":4348,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse the expression and returns a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.parse(\'0b10101\');// Option.Some(21n)\\nBigInt.parse(\'1024\');// Option.Some(1024n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/num/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L33"}],"parameters":[{"id":4349,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the expression to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#parse"},{"id":4443,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":4444,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":4445,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4446,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/BigInt#range"},{"id":4439,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":4440,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":4441,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":4442,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#rangeSize"},{"id":4409,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"signatures":[{"id":4410,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"parameters":[{"id":4411,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4412,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#sign"},{"id":4360,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":4361,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":4362,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/num/namespace/BigInt#zero"}],"groups":[{"title":"References","children":[4367]},{"title":"Variables","children":[4374,4432]},{"title":"Functions","children":[4493,4417,4421,4413,4425,4457,4452,4498,4467,4462,4381,4386,4390,4397,4371,4393,4433,4482,4447,4488,4350,4354,4357,4368,4436,4405,4401,4363,4477,4472,4429,4347,4443,4439,4409,4360]}],"categories":[{"title":"Codec","children":[4381,4386,4390]},{"title":"Comparator","children":[4493,4457,4452,4498,4467,4462,4482,4447,4488,4477,4472]},{"title":"Formatting","children":[4393]},{"title":"Indexable","children":[4432,4433,4436,4443,4439]},{"title":"Numeric","children":[4417,4421,4413,4425,4397,4405,4401,4363,4429,4409,4360]},{"title":"Type","children":[4374,4371,4368]},{"title":"__CATEGORY__","children":[4367,4350,4354,4357,4347]}],"sources":[{"fileName":"packages/num/src/BigInt.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/BigInt.ts#L25"}],"permalink":"/std/api/num/namespace/BigInt","nextId":4503},{"id":4503,"name":"Int","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate integer values"}]},"children":[{"id":4636,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/num/namespace/Int#typeName"},{"id":4643,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4644,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":4645,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":4646,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4647,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4648,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4649,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/num/namespace/Int#__inspect__"},{"id":4559,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"number"},"permalink":"/std/api/num/namespace/Int#indexType"},{"id":4558,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"permalink":"/std/api/num/namespace/Int#maxValue"},{"id":4557,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},"permalink":"/std/api/num/namespace/Int#minValue"},{"id":4620,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4621,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4622,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4623,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4624,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#!="},{"id":4546,"name":"**?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedPower.d.ts","line":16,"character":4}],"signatures":[{"id":4547,"name":"**?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedPower<T> = ...;\\nconst result = TNumeric[\'**?\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedPower.d.ts","line":16,"character":4}],"parameters":[{"id":4548,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4549,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#**?"},{"id":4542,"name":"*?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedMultiply.d.ts","line":16,"character":4}],"signatures":[{"id":4543,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedMultiply.d.ts","line":16,"character":4}],"parameters":[{"id":4544,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4545,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#*?"},{"id":4538,"name":"+?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedAdd.d.ts","line":16,"character":4}],"signatures":[{"id":4539,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedAdd.d.ts","line":16,"character":4}],"parameters":[{"id":4540,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4541,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#+?"},{"id":4550,"name":"-?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedSubtract.d.ts","line":16,"character":4}],"signatures":[{"id":4551,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedSubtract.d.ts","line":16,"character":4}],"parameters":[{"id":4552,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4553,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#-?"},{"id":4584,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4585,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4586,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4587,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4588,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#<"},{"id":4579,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4580,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4581,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4582,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4583,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#<="},{"id":4625,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4626,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4627,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4628,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4629,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#=="},{"id":4594,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4595,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4596,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4597,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4598,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#>"},{"id":4589,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4590,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4591,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4592,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4593,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#>="},{"id":4666,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":4667,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":4668,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#__call__"},{"id":4650,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4651,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4652,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4653,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4654,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#__decode__"},{"id":4655,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4656,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4657,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4658,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/num/namespace/Int#__encode__"},{"id":4659,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4660,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4661,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#__schema__"},{"id":4522,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":4523,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":4524,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4525,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#abs"},{"id":4640,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":4641,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":4642,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#asInstance"},{"id":4662,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4663,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4664,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4665,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/Int#asString"},{"id":4560,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":4561,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":4562,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#at"},{"id":4609,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4610,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4611,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4612,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4613,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4614,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#clamp"},{"id":4574,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4575,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4576,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4577,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4578,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#compare"},{"id":4615,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4616,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4617,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4618,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4619,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#equals"},{"id":4504,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L35"}],"signatures":[{"id":4505,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of integer"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.format(Int(1), 10);// \'1\'\\nInt.format(Int(10), 16);// \'A\'\\n```"}]}]},"sources":[{"fileName":"packages/num/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L35"}],"parameters":[{"id":4506,"name":"intValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4507,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/Int#format"},{"id":4512,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L37"}],"signatures":[{"id":4513,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new integer from "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst intValue = Int.fromNumber(0.5);// 0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L37"}],"parameters":[{"id":4514,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an initial numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":4669,"name":"Int","package":"@w5s/num"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#fromNumber"},{"id":4637,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":4638,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":4639,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}}],"permalink":"/std/api/num/namespace/Int#hasInstance"},{"id":4563,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":4564,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":4565,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#indexOf"},{"id":4530,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"signatures":[{"id":4531,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"parameters":[{"id":4532,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4533,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#isNegative"},{"id":4526,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"signatures":[{"id":4527,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"parameters":[{"id":4528,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4529,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#isPositive"},{"id":4518,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":4519,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":4520,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4521,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Int#isZero"},{"id":4604,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4605,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4606,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4607,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4608,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#max"},{"id":4599,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4600,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4601,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4602,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4603,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#min"},{"id":4554,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":4555,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":4556,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#negate"},{"id":4508,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L36"}],"signatures":[{"id":4509,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.parse(\'1\');// Option.Some(1)\\nInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/num/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L36"}],"parameters":[{"id":4510,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer expression"}]},"type":{"type":"intrinsic","name":"string"}},{"id":4511,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":4669,"name":"Int","package":"@w5s/num"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#parse"},{"id":4570,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":4571,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":4572,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4573,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Int#range"},{"id":4566,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":4567,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":4568,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4569,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#rangeSize"},{"id":4534,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"signatures":[{"id":4535,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"parameters":[{"id":4536,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4537,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#sign"},{"id":4633,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"signatures":[{"id":4634,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"parameters":[{"id":4635,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Int#unwrap"},{"id":4630,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"signatures":[{"id":4631,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"parameters":[{"id":4632,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#wrap"},{"id":4515,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":4516,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":4517,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}}],"permalink":"/std/api/num/namespace/Int#zero"}],"groups":[{"title":"References","children":[4636]},{"title":"Variables","children":[4643,4559,4558,4557]},{"title":"Functions","children":[4620,4546,4542,4538,4550,4584,4579,4625,4594,4589,4666,4650,4655,4659,4522,4640,4662,4560,4609,4574,4615,4504,4512,4637,4563,4530,4526,4518,4604,4599,4554,4508,4570,4566,4534,4633,4630,4515]}],"categories":[{"title":"Bound","children":[4558,4557]},{"title":"Codec","children":[4650,4655,4659]},{"title":"Comparator","children":[4620,4584,4579,4625,4594,4589,4609,4574,4615,4604,4599]},{"title":"Constructor","children":[4512]},{"title":"Formatting","children":[4662]},{"title":"Indexable","children":[4559,4560,4563,4570,4566]},{"title":"Numeric","children":[4546,4542,4538,4550,4522,4530,4526,4518,4554,4534,4515]},{"title":"Type","children":[4643,4640,4637,4633,4630]},{"title":"__CATEGORY__","children":[4636,4666,4504,4508]}],"sources":[{"fileName":"packages/num/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L19"},{"fileName":"packages/num/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L26"}],"permalink":"/std/api/num/namespace/Int","previousId":4346,"nextId":4670},{"id":4670,"name":"Number","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`number`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Number } from \'@w5s/core\';\\n\\nconst total = [1, 1.5, 2].reduce(Number[\'+\'], 0);// 4.5\\nNumber[\'==\'](total, 4.5);// true\\n```"}]}]},"children":[{"id":4786,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/num/namespace/Number#typeName"},{"id":4793,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4794,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":4795,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":4796,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4797,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4798,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4799,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/num/namespace/Number#__inspect__"},{"id":4689,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/num/namespace/Number#maxValue"},{"id":4688,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/api/num/namespace/Number#minValue"},{"id":4776,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4777,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4778,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4779,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4780,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#!="},{"id":4714,"name":"%","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Remainder.d.ts","line":15,"character":4}],"signatures":[{"id":4715,"name":"%","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Remainder<T> = ...;\\nconst result = Numeric[\'%\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Remainder.d.ts","line":15,"character":4}],"parameters":[{"id":4716,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4717,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#%"},{"id":4710,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":4711,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":4712,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4713,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#*"},{"id":4722,"name":"**","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"signatures":[{"id":4723,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"parameters":[{"id":4724,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4725,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#**"},{"id":4706,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":4707,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":4708,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4709,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#+"},{"id":4718,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":4719,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":4720,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4721,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#-"},{"id":4726,"name":"/?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedDivide.d.ts","line":16,"character":4}],"signatures":[{"id":4727,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/CheckedDivide.d.ts","line":16,"character":4}],"parameters":[{"id":4728,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4729,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#?"},{"id":4740,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4741,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4742,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4743,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4744,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#<"},{"id":4735,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4736,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4737,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4738,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4739,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#<="},{"id":4781,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4782,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4783,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4784,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4785,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#=="},{"id":4750,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4751,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4752,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4753,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4754,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#>"},{"id":4745,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4746,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4747,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4748,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4749,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#>="},{"id":4800,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4801,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4802,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4803,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4804,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#__decode__"},{"id":4805,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4806,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4807,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4808,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/num/namespace/Number#__encode__"},{"id":4809,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4810,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4811,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#__schema__"},{"id":4690,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":4691,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":4692,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4693,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#abs"},{"id":4790,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":4791,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":4792,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#asInstance"},{"id":4812,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4813,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4814,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4815,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/Number#asString"},{"id":4765,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4766,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4767,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4768,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4769,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4770,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#clamp"},{"id":4730,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4731,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4732,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4733,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4734,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#compare"},{"id":4771,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4772,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4773,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4774,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4775,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#equals"},{"id":4674,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Number.ts#L32"}],"signatures":[{"id":4675,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.format(1.1);// \'1.1\'\\n```"}]}]},"sources":[{"fileName":"packages/num/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Number.ts#L32"}],"parameters":[{"id":4676,"name":"numberValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4677,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/num/namespace/Number#format"},{"id":4787,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":4788,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":4789,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/std/api/num/namespace/Number#hasInstance"},{"id":4698,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"signatures":[{"id":4699,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"parameters":[{"id":4700,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4701,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#isNegative"},{"id":4694,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"signatures":[{"id":4695,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"parameters":[{"id":4696,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4697,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#isPositive"},{"id":4681,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":4682,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":4683,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4684,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/num/namespace/Number#isZero"},{"id":4760,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4761,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4762,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4763,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4764,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#max"},{"id":4755,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4756,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4757,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4758,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4759,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#min"},{"id":4685,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":4686,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":4687,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#negate"},{"id":4671,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/num/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Number.ts#L31"}],"signatures":[{"id":4672,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an number\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.parse(\'1\');// Option.Some(1)\\nNumber.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/num/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Number.ts#L31"}],"parameters":[{"id":4673,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/num/namespace/Number#parse"},{"id":4702,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"signatures":[{"id":4703,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"parameters":[{"id":4704,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4705,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#sign"},{"id":4678,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":4679,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":4680,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/num/namespace/Number#zero"}],"groups":[{"title":"References","children":[4786]},{"title":"Variables","children":[4793,4689,4688]},{"title":"Functions","children":[4776,4714,4710,4722,4706,4718,4726,4740,4735,4781,4750,4745,4800,4805,4809,4690,4790,4812,4765,4730,4771,4674,4787,4698,4694,4681,4760,4755,4685,4671,4702,4678]}],"categories":[{"title":"Bound","children":[4689,4688]},{"title":"Codec","children":[4800,4805,4809]},{"title":"Comparator","children":[4776,4740,4735,4781,4750,4745,4765,4730,4771,4760,4755]},{"title":"Formatting","children":[4812]},{"title":"Numeric","children":[4714,4710,4722,4706,4718,4726,4690,4698,4694,4681,4685,4702,4678]},{"title":"Type","children":[4793,4790,4787]},{"title":"__CATEGORY__","children":[4786,4674,4671]}],"sources":[{"fileName":"packages/num/src/Number.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Number.ts#L23"}],"permalink":"/std/api/num/namespace/Number","previousId":4503,"nextId":4669},{"id":4669,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/num/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L19"},{"fileName":"packages/num/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/Int.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"IntType","package":"@w5s/core","qualifiedName":"Int"},"permalink":"/std/api/num#Int","categories":[],"previousId":4670,"nextId":4826},{"id":4826,"name":"RoundingMode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L3"},{"fileName":"packages/num/src/RoundingMode.ts","line":104,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L104"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":4816,"name":"RoundingMode","package":"@w5s/num"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/api/num#RoundingMode","categories":[],"previousId":4669,"nextId":4816},{"id":4816,"name":"RoundingMode","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L3"},{"fileName":"packages/num/src/RoundingMode.ts","line":104,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L104"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":4817,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":4821,"name":"Ceil","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Towards +\u221e"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 6.0\\n2.5 \u2192 3.0\\n1.6 \u2192 2.0\\n1.1 \u2192 2.0\\n-1.1 \u2192 -1.0\\n-1.6 \u2192 -1.0\\n-2.5 \u2192 -2.0\\n-5.5 \u2192 -5.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L46"}],"type":{"type":"literal","value":"ceil"},"defaultValue":"\'ceil\'"},{"id":4820,"name":"Down","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Always round towards zero"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 5.0\\n2.5 \u2192 2.0\\n1.6 \u2192 1.0\\n1.1 \u2192 1.0\\n-1.1 \u2192 -1.0\\n-1.6 \u2192 -1.0\\n-2.5 \u2192 -2.0\\n-5.5 \u2192 -5.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L32"}],"type":{"type":"literal","value":"down"},"defaultValue":"\'down\'"},{"id":4822,"name":"Floor","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Towards -\u221e"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 5.0\\n2.5 \u2192 2.0\\n1.6 \u2192 1.0\\n1.1 \u2192 1.0\\n-1.1 \u2192 -2.0\\n-1.6 \u2192 -2.0\\n-2.5 \u2192 -3.0\\n-5.5 \u2192 -6.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L60"}],"type":{"type":"literal","value":"floor"},"defaultValue":"\'floor\'"},{"id":4824,"name":"HalfDown","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Round to \u2018nearest neighbor\u2019, or down if ending decimal is 5"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 5.0\\n2.5 \u2192 2.0\\n1.6 \u2192 2.0\\n1.1 \u2192 1.0\\n-1.1 \u2192 -1.0\\n-1.6 \u2192 -2.0\\n-2.5 \u2192 -2.0\\n-5.5 \u2192 -5.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L88"}],"type":{"type":"literal","value":"half-down"},"defaultValue":"\'half-down\'"},{"id":4825,"name":"HalfEven","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Round to \u2018nearest neighbor\u2019, if equidistant, round towards nearest even digit"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 6.0\\n2.5 \u2192 2.0\\n1.6 \u2192 2.0\\n1.1 \u2192 1.0\\n-1.1 \u2192 -1.0\\n-1.6 \u2192 -2.0\\n-2.5 \u2192 -2.0\\n-5.5 \u2192 -6.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L102"}],"type":{"type":"literal","value":"half-even"},"defaultValue":"\'half-even\'"},{"id":4823,"name":"HalfUp","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Round to \u2018nearest neighbor\u2019, or up if ending decimal is 5"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 6.0\\n2.5 \u2192 3.0\\n1.6 \u2192 2.0\\n1.1 \u2192 1.0\\n-1.1 \u2192 -1.0\\n-1.6 \u2192 -2.0\\n-2.5 \u2192 -3.0\\n-5.5 \u2192 -6.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L74"}],"type":{"type":"literal","value":"half-up"},"defaultValue":"\'half-up\'"},{"id":4819,"name":"Up","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Always round away from zero"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n5.5 \u2192 6.0\\n2.5 \u2192 3.0\\n1.6 \u2192 2.0\\n1.1 \u2192 2.0\\n-1.1 \u2192 -2.0\\n-1.6 \u2192 -2.0\\n-2.5 \u2192 -3.0\\n-5.5 \u2192 -6.0\\n```"}]}]},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L18"}],"type":{"type":"literal","value":"up"},"defaultValue":"\'up\'"},{"id":4818,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":4,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L4"}],"type":{"type":"literal","value":"RoundingMode"},"defaultValue":"\'RoundingMode\'"}],"groups":[{"title":"Properties","children":[4821,4820,4822,4824,4825,4823,4819,4818]}],"sources":[{"fileName":"packages/num/src/RoundingMode.ts","line":3,"character":40,"url":"https://github.com/w5s/std/blob/master/packages/num/src/RoundingMode.ts#L3"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/api/num#RoundingMode","categories":[],"previousId":4826}],"groups":[{"title":"Namespaces","children":[4346,4503,4670]},{"title":"Type Aliases","children":[4669,4826]},{"title":"Variables","children":[4816]}],"sources":[{"fileName":"packages/num/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/num/src/index.ts#L1"}],"permalink":"/std/api/num"},"urlSlug":"num"}],"packageName":"@w5s/num","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":14,"name":"@w5s/object-id","variant":"declaration","kind":2,"flags":{},"children":[{"id":4831,"name":"ObjectId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type representing a unique object id"}]},"sources":[{"fileName":"packages/object-id/src/objectId.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/object-id/src/objectId.ts#L14"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ObjectId"}],"name":"Tag","package":"@w5s/core-type"}]},"permalink":"/std/api/object-id#ObjectId","categories":[],"previousId":4827,"nextId":4830},{"id":4830,"name":"ObjectIdParameter","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type representing values that can have an "},{"kind":"inline-tag","tag":"@link","text":"ObjectId","target":4831,"tsLinkText":""},{"kind":"text","text":"\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"ObjectLike","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"ObjectLike"},"tsLinkText":""}]},"sources":[{"fileName":"packages/object-id/src/objectId.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/object-id/src/objectId.ts#L9"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"ObjectLike"},"name":"ObjectLike","package":"@w5s/core-type"},"permalink":"/std/api/object-id#ObjectIdParameter","categories":[],"previousId":4831},{"id":4827,"name":"objectId","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/object-id/src/objectId.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/object-id/src/objectId.ts#L28"}],"signatures":[{"id":4828,"name":"objectId","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a unique identifier for an object or function"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst object = {};\\nobjectId(object);// an integer\\n```"}]}]},"sources":[{"fileName":"packages/object-id/src/objectId.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/object-id/src/objectId.ts#L28"}],"parameters":[{"id":4829,"name":"objectLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a non literal object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"ObjectLike"},"name":"ObjectLike","package":"@w5s/core-type"}}],"type":{"type":"reference","target":4831,"name":"ObjectId","package":"@w5s/object-id"}}],"permalink":"/std/api/object-id/function/objectId","categories":[],"nextId":4831}],"groups":[{"title":"Functions","children":[4827]},{"title":"Type Aliases","children":[4831,4830]}],"sources":[{"fileName":"packages/object-id/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/object-id/src/index.ts#L1"}],"permalink":"/std/api/object-id"},"urlSlug":"object-id"}],"packageName":"@w5s/object-id","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":15,"name":"@w5s/random","variant":"declaration","kind":2,"flags":{},"children":[{"id":4832,"name":"RandomConfiguration","variant":"declaration","kind":256,"flags":{},"children":[{"id":4833,"name":"randomNumberGenerator","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":9,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L9"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/random/src/RandomConfiguration.ts","qualifiedName":"RandomNumberFunction"},"name":"RandomNumberFunction","package":"@w5s/random"}}],"groups":[{"title":"Properties","children":[4833]}],"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L8"}],"permalink":"/std/api/random/interface/RandomConfiguration","categories":[],"previousId":4849,"nextId":4834},{"id":4834,"name":"RandomGenerator","variant":"declaration","kind":256,"flags":{},"children":[{"id":4838,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":66,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskFunction"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.[run]"}},{"id":4835,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"signatures":[{"id":4836,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"parameters":[{"id":4837,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskCanceler"},"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"groups":[{"title":"Properties","children":[4838]},{"title":"Methods","children":[4835]}],"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L5"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}],"permalink":"/std/api/random/interface/RandomGenerator","categories":[],"previousId":4832,"nextId":4839},{"id":4839,"name":"randomGenerator","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L7"}],"type":{"type":"reference","target":4834,"name":"RandomGenerator","package":"@w5s/random"},"defaultValue":"...","permalink":"/std/api/random#randomGenerator","categories":[],"previousId":4834},{"id":4840,"name":"randomBoolean","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"signatures":[{"id":4841,"name":"randomBoolean","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate booleans."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomBoolean(0.7);\\nTask.run(next);// Result.Ok(true|false);\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"parameters":[{"id":4842,"name":"trueWeight","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the probability to obtain true"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0.5"},{"id":4843,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4834,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomBoolean","categories":[],"nextId":4844},{"id":4844,"name":"randomInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"signatures":[{"id":4845,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate integers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomInt(-10, 10);\\nTask.run(next);// Result.Ok(N); where N is an integer between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"parameters":[{"id":4846,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4847,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core-type"}},{"id":4848,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4834,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomInt","categories":[],"previousId":4840,"nextId":4849},{"id":4849,"name":"randomNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"signatures":[{"id":4850,"name":"randomNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate floating numbers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomNumber(-10, 10);\\nTask.run(next);// Result.Ok(F); where F is a floating number between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"parameters":[{"id":4851,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4852,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4853,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4834,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/random/function/randomNumber","categories":[],"previousId":4844,"nextId":4832}],"groups":[{"title":"Functions","children":[4840,4844,4849]},{"title":"Interfaces","children":[4832,4834]},{"title":"Variables","children":[4839]}],"sources":[{"fileName":"packages/random/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/random/src/index.ts#L1"}],"permalink":"/std/api/random"},"urlSlug":"random"}],"packageName":"@w5s/random","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":16,"name":"@w5s/task","variant":"declaration","kind":2,"flags":{},"children":[{"id":4908,"name":"Task","variant":"declaration","kind":4,"flags":{},"children":[{"id":5074,"name":"ErrorOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts error type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":122,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L122"}],"typeParameters":[{"id":5075,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":5075,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":5065,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"inferred","name":"Error"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Error"},"name":"Error","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/task/namespace/Task#ErrorOf"},{"id":5072,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts value type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":118,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L118"}],"typeParameters":[{"id":5073,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":5073,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":5065,"typeArguments":[{"type":"inferred","name":"V"},{"type":"intrinsic","name":"any"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"V"},"name":"V","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/api/task/namespace/Task#ValueOf"},{"id":4909,"name":"all","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"signatures":[{"id":4910,"name":"all","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the array of all task values, or reject with the first error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.all([\\n  Task.resolve(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok([1, 2])\\n\\nconst failure = Task.all([\\n  Task.resolve(1),\\n  Task.reject(\'error\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(\'error\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4911,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":4904,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}}],"parameters":[{"id":4912,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4911,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4911,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":5072,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/all.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4911,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"}},{"type":"reference","target":5074,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4911,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4911,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Task","package":"@w5s/task"}},{"id":4913,"name":"all","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4914,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4915,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4916,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4914,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4915,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":4914,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},{"type":"reference","target":4915,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#all"},{"id":4917,"name":"allSettled","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"signatures":[{"id":4918,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves an array of all task results"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.allSettled([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst taskResults = Task.run(task);// [Result.Error(1), Result.Ok(2)]\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4919,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4904,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4920,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4919,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4919,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5072,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4919,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":5074,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4919,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Result","package":"@w5s/core"}},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}},{"id":4921,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4922,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4923,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4924,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4922,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4923,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4922,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4923,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#allSettled"},{"id":4925,"name":"andRun","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"signatures":[{"id":4926,"name":"andRun","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Similar to "},{"kind":"inline-tag","tag":"@link","text":"andThen","target":4935,"tsLinkText":""},{"kind":"text","text":" but the task keep "},{"kind":"code","text":"`task`"},{"kind":"text","text":" resolved value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andRun(success, (value) => Console.log(\'result=\', value));// console.log(\'result=foo\'); then resolves \'foo\'\\nTask.andRun(success, (value) => Task.reject(`SomeError`));// Task.reject(\'SomeError\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andRun(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"typeParameter":[{"id":4927,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4928,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4929,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4930,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4927,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4928,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4931,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4932,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"signatures":[{"id":4933,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"parameters":[{"id":4934,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4927,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4904,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":4929,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4927,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4928,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4929,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#andRun"},{"id":4935,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"signatures":[{"id":4936,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is successful, otherwise returns the failed task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andThen(success, (value) => Task.resolve(`${value}_then`));// Task.resolve(\'foo_then\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andThen(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"typeParameter":[{"id":4937,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4938,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4939,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4940,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4941,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4937,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4938,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4942,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4943,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"signatures":[{"id":4944,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"parameters":[{"id":4945,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4937,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4939,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4940,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4939,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4938,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4940,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#andThen"},{"id":4946,"name":"any","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"signatures":[{"id":4947,"name":"any","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the first value, or reject with an aggregated error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.any([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok(2)\\n\\nconst failure = Task.any([\\n  Task.reject(\'error1\'),\\n  Task.reject(\'error2\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(AggregateError({ errors: [\'error1\', \'error2\']}))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4948,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4904,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4949,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4948,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5072,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4948,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4948,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4948,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":5074,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/any.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4948,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}},{"id":4950,"name":"any","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4951,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4952,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4953,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4951,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4952,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4951,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4952,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#any"},{"id":4954,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"signatures":[{"id":4955,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Task constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getTime = Task(() => Task.ok(Date.now()));\\nconst fetchTask = (url: string) => Task(() => fetch(url).then(Task.ok, Task.error));\\nconst delay = (ms: number) => Task(() => new Promise(resolve => { setTimeout(() => resolve(Task.ok()); }), ms));\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"typeParameter":[{"id":4956,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4957,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4958,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the effect function"}]},"type":{"type":"reflection","declaration":{"id":4959,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"signatures":[{"id":4960,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"parameters":[{"id":4961,"name":"resolver","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":4962,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":4963,"name":"canceler","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canceler"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L25"}],"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4964,"name":"run","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task runner that can be used to run subtasks"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"type":{"type":"reflection","declaration":{"id":4965,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"signatures":[{"id":4966,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"typeParameter":[{"id":4967,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4968,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4969,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4967,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4968,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4967,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4968,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4963,4964]}],"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}]}}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4956,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4957,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4956,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4957,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#create"},{"id":4970,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"signatures":[{"id":4971,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":4972,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"typeParameter":[{"id":4973,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4974,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":4973,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":4973,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/task/namespace/Task#error"},{"id":4975,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"signatures":[{"id":4976,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a Task from a "},{"kind":"code","text":"`Symbol.run`"},{"kind":"text","text":" function or a TaskLike"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.from(({ resolve }) => resolve(\'hello\'));// from a callback\\nconst task = Task.from({ [Symbol.run]: ({ resolve }) => resolve(\'hello\') });// from a TaskLike\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"typeParameter":[{"id":4977,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4978,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4979,"name":"taskLike","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4977,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4978,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"reference","target":4898,"typeArguments":[{"type":"reference","target":4977,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4978,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":4977,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4978,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#from"},{"id":4980,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"signatures":[{"id":4981,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if anyValue is a valid "},{"kind":"code","text":"`Task`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.hasInstance(Task.resolve(...)); // true\\nTask.hasInstance({}); // false\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"parameters":[{"id":4982,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":4904,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"TaskLike","package":"@w5s/task"}}}],"permalink":"/std/api/task/namespace/Task#hasInstance"},{"id":4983,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"signatures":[{"id":4984,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ignores value of task"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.ignore(task);// Task.resolve()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"typeParameter":[{"id":4985,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4986,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the Task object"}]},"type":{"type":"reference","target":5065,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":4985,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":4985,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#ignore"},{"id":4987,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"signatures":[{"id":4988,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<NewValue, Error>`"},{"kind":"text","text":" by applying a function to a success value, leaving a failure untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.map(task, (value) => `${value}_bar`));// Task.resolve(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"typeParameter":[{"id":4989,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4990,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4991,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4992,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4989,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4990,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4993,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":4994,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"signatures":[{"id":4995,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"parameters":[{"id":4996,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4989,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4991,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4991,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4990,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#map"},{"id":4997,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"signatures":[{"id":4998,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained failure error, leaving a success value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nTask.mapError(task, (value) => `${value}_bar`));// Task.reject(\'error_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"typeParameter":[{"id":4999,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5000,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5001,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5002,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4999,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5000,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":5003,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":5004,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"signatures":[{"id":5005,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"parameters":[{"id":5006,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":5000,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":5001,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":4999,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5001,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#mapError"},{"id":5007,"name":"mapResult","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"signatures":[{"id":5008,"name":"mapResult","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<ValueFrom, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<ValueTo, ErrorTo>`"},{"kind":"text","text":" by applying a function to the result of the task."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nconst handledTask = Task.mapResult(task, (result) =>\\n   Result.isOk(result) ? result : Result.Ok(\'handled_value\') )\\n); // Task.resolve(\'handled_value\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"typeParameter":[{"id":5009,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5010,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5011,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":5012,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5013,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":5009,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5010,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":5014,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A result mapper function"}]},"type":{"type":"reflection","declaration":{"id":5015,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"signatures":[{"id":5016,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"parameters":[{"id":5017,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5009,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5010,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5011,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5012,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5011,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5012,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#mapResult"},{"id":5018,"name":"ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"signatures":[{"id":5019,"name":"ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":5020,"name":"ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"typeParameter":[{"id":5021,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5022,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":5021,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5021,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/task/namespace/Task#ok"},{"id":5023,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"signatures":[{"id":5024,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is failed, otherwise returns the successful task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.orElse(success, (value) => Task.resolve(`never_used`));// Task.resolve(\'foo\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.orElse(failure, (error) => Task.reject(`${value}_caught`));// Task.reject(\'PreviousError_caught\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"typeParameter":[{"id":5025,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5026,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":5027,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":5028,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5029,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":5025,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5026,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":5030,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":5031,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"signatures":[{"id":5032,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"parameters":[{"id":5033,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":5026,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":5027,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5028,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"union","types":[{"type":"reference","target":5025,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5027,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}]},{"type":"reference","target":5028,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#orElse"},{"id":5034,"name":"reject","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"signatures":[{"id":5035,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`void`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject();\\nconst result = Task.run(task);// Result.Error()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":5036,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5036,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"void"}],"name":"Task","package":"@w5s/task"}},{"id":5037,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`errorValue`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task(({ error }) => error(errorValue))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(new Error(\'Something went wrong\');\\nconst result = Task.run(task);// Result.Error(new Error(\'Something went wrong\'))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":5038,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}},{"id":5039,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":5040,"name":"errorValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error value"}]},"type":{"type":"reference","target":5039,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5038,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5039,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#reject"},{"id":5041,"name":"resolve","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"signatures":[{"id":5042,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a successful "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`void`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve();\\nconst result = Task.run(task);// Result.Ok()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":5043,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":5043,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}},{"id":5044,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a successful task that always resolves "},{"kind":"code","text":"`value`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task.from(({ resolve }) => resolve(value))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(1);\\nconst result = Task.run(task);// Result.Ok(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":5045,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":5046,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":5047,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the success value"}]},"type":{"type":"reference","target":5045,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5045,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5046,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#resolve"},{"id":5059,"name":"run","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"signatures":[{"id":5060,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Run "},{"kind":"code","text":"`task`"},{"kind":"text","text":" and return the result or a promise of the result\\n\\n**\u26a0 Impure function that may throw an error, it should be used on the edge of the program.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getMessage = Task.resolve(\'Hello World!\');\\nconst messageResult = Task.run(getMessage);// Result.Ok(\'Hello World!\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"typeParameter":[{"id":5061,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":5062,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5063,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the task to be run"}]},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":5061,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5062,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":5064,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"},"defaultValue":"..."}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5061,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5062,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/api/task/namespace/Task#run"},{"id":5048,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"signatures":[{"id":5049,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`sideEffect()`"},{"kind":"text","text":".\\nWhen an exception is thrown then it rejects "},{"kind":"code","text":"`onError([thrown error])`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class ResponseError extends Error {}\\nconst fetch = Task.tryCall(\\n () => fetch(\'my/url\'), // Task will resolve Ok(fetch(\'my/url\'))\\n (error) => new ResponseError(), // Task will reject Error(new ResponseError())\\n);// Task<Response, ResponseError>\\n\\nconst randomNumber = Task.tryCall(async () => Math.random());// Task<number, never>\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"typeParameter":[{"id":5050,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":5051,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":5052,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":5053,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"signatures":[{"id":5054,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":5050,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":5055,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":5056,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"signatures":[{"id":5057,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"parameters":[{"id":5058,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":5051,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":5065,"typeArguments":[{"type":"reference","target":5050,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":5051,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task/namespace/Task#tryCall"}],"groups":[{"title":"Type Aliases","children":[5074,5072]},{"title":"Functions","children":[4909,4917,4925,4935,4946,4954,4970,4975,4980,4983,4987,4997,5007,5018,5023,5034,5041,5059,5048]}],"categories":[{"title":"Constructor","children":[4954,4970,5018,5034,5041]},{"title":"Type","children":[4980]},{"title":"__CATEGORY__","children":[5074,5072,4909,4917,4925,4935,4946,4975,4983,4987,4997,5007,5023,5059,5048]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"permalink":"/std/api/task/namespace/Task","previousId":4867,"nextId":4898},{"id":5065,"name":"Task","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An implementation of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!TaskLike"}]},"children":[{"id":5069,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4898,"typeArguments":[{"type":"reference","target":5070,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":5071,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":4905,"name":"TaskLike.[run]"}},{"id":5066,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"signatures":[{"id":5067,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"parameters":[{"id":5068,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":5070,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":5071,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}],"groups":[{"title":"Properties","children":[5069]},{"title":"Methods","children":[5066]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"typeParameters":[{"id":5070,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":5071,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":5070,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":5071,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"permalink":"/std/api/task/interface/Task","categories":[],"nextId":4854},{"id":4854,"name":"TaskCanceler","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Interface used to cancel running task"}]},"children":[{"id":4857,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/dist/Ref.d.ts","line":5,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4858,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4859,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ref.current"}}],"groups":[{"title":"Properties","children":[4857]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4855,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4856,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"}],"name":"Ref","package":"@w5s/core"}],"permalink":"/std/api/task/interface/TaskCanceler","categories":[],"previousId":5065,"nextId":4904},{"id":4904,"name":"TaskLike","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Task interface that represents a lazy computation that will be evaluated later.\\nThe result of the computation is a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"},{"kind":"text","text":"\\nA task is also cancelable and can run other subtasks"}]},"children":[{"id":4905,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4898,"typeArguments":[{"type":"reference","target":4906,"name":"Value","package":"@w5s/task","qualifiedName":"TaskLike.Value","refersToTypeParameter":true},{"type":"reference","target":4907,"name":"Error","package":"@w5s/task","qualifiedName":"TaskLike.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}}],"groups":[{"title":"Properties","children":[4905]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":70,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L70"}],"typeParameters":[{"id":4906,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4907,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":5065,"name":"Task"}],"permalink":"/std/api/task/interface/TaskLike","categories":[],"previousId":4854,"nextId":4879},{"id":4879,"name":"TaskParameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"All context passed to task in order to execute"}]},"children":[{"id":4888,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4889,"name":"execute","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The execute function to run task or subtask injecting parameters"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"type":{"type":"reflection","declaration":{"id":4890,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"signatures":[{"id":4891,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"typeParameter":[{"id":4892,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4893,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4894,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4892,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4893,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4895,"name":"overrides","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4867,"typeArguments":[{"type":"reference","target":4892,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4893,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParametersOverrides","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4884,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4885,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4886,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4887,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4897,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParameters.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4880,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4881,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4882,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4883,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4896,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParameters.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4888,4889,4884,4880]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L44"}],"typeParameters":[{"id":4896,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4897,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/api/task/interface/TaskParameters","categories":[],"previousId":4904,"nextId":4867},{"id":4867,"name":"TaskParametersOverrides","variant":"declaration","kind":256,"flags":{},"children":[{"id":4876,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.canceler"}},{"id":4872,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4873,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4874,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4875,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4878,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.reject"}},{"id":4868,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4869,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4870,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4871,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4877,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.resolve"}}],"groups":[{"title":"Properties","children":[4876,4872,4868]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":38,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L38"}],"typeParameters":[{"id":4877,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4878,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":4879,"typeArguments":[{"type":"reference","target":4877,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true},{"type":"reference","target":4878,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"},{"type":"union","types":[{"type":"literal","value":"resolve"},{"type":"literal","value":"reject"},{"type":"literal","value":"canceler"}]}],"name":"Pick","package":"typescript"},{"type":"literal","value":"canceler"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/api/task/interface/TaskParametersOverrides","categories":[],"previousId":4879,"nextId":4908},{"id":4898,"name":"TaskFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"typeParameters":[{"id":4902,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4903,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":4899,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"signatures":[{"id":4900,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":4901,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4879,"typeArguments":[{"type":"reference","target":4902,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4903,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/api/task#TaskFunction","categories":[],"previousId":4908,"nextId":4860},{"id":4860,"name":"TaskRunner","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that runs the task and returns a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"type":{"type":"reflection","declaration":{"id":4861,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"signatures":[{"id":4862,"name":"__type","variant":"signature","kind":4096,"flags":{},"typeParameter":[{"id":4865,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4866,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4863,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4904,"typeArguments":[{"type":"reference","target":4865,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4866,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4864,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4854,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":55,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4865,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4866,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/api/task#TaskRunner","categories":[],"previousId":4898}],"groups":[{"title":"Interfaces","children":[5065,4854,4904,4879,4867]},{"title":"Namespaces","children":[4908]},{"title":"Type Aliases","children":[4898,4860]}],"sources":[{"fileName":"packages/task/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task/src/index.ts#L1"}],"permalink":"/std/api/task"},"urlSlug":"task"}],"packageName":"@w5s/task","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":17,"name":"@w5s/task-timeout","variant":"declaration","kind":2,"flags":{},"children":[{"id":5076,"name":"timeout","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L24"}],"signatures":[{"id":5077,"name":"timeout","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a task that will reject a "},{"kind":"inline-tag","tag":"@link","text":"TimeoutError","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"code","text":"`task`"},{"kind":"text","text":" is not resolved or rejected within "},{"kind":"code","text":"`delay`"},{"kind":"text","text":"\\nIf timeout is omitted, the task is returned unchanged"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst longTask = Time.delay(TimeDuration({ hours: 1 }));\\nconst timeoutTask = timeout(longTask, TimeDuration(4));\\nTask.run(timeoutTask); // Result.Error(TimeoutError({ message: \'Task timed out after 4ms\', delay: 4 }))\\n// Note that `longTask` will be canceled and will never resolve nor reject\\n```"}]}]},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L24"}],"typeParameter":[{"id":5078,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":5079,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":5080,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"task to cancel after delay"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":5078,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"reference","target":5079,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":5081,"name":"delay","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":5078,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"},{"type":"reference","target":5079,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/task-timeout/function/timeout","categories":[]}],"groups":[{"title":"Functions","children":[5076]}],"sources":[{"fileName":"packages/task-timeout/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/index.ts#L1"}],"permalink":"/std/api/task-timeout"},"urlSlug":"task-timeout"}],"packageName":"@w5s/task-timeout","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":18,"name":"@w5s/time","variant":"declaration","kind":2,"flags":{},"children":[{"id":5090,"name":"Time","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time (i.e timestamp)"}]},"children":[{"id":5187,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/time/namespace/Time#typeName"},{"id":5194,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":5195,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":5196,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":5197,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5198,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":5199,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":5200,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/time/namespace/Time#__inspect__"},{"id":5124,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/api/time/namespace/Time#maxValue"},{"id":5123,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/api/time/namespace/Time#minValue"},{"id":5171,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":5172,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":5173,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5174,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5175,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#!="},{"id":5115,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":5116,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":5117,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5118,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#+"},{"id":5119,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":5120,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":5121,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5122,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#-"},{"id":5135,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":5136,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":5137,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5138,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5139,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#<"},{"id":5130,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":5131,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":5132,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5133,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5134,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#<="},{"id":5176,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":5177,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":5178,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5179,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5180,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#=="},{"id":5145,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":5146,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":5147,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5148,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5149,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#>"},{"id":5140,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":5141,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":5142,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5143,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5144,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#>="},{"id":5112,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L53"}],"signatures":[{"id":5113,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L53"}],"parameters":[{"id":5114,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":5082,"name":"TimeParameters","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#__call__"},{"id":5201,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":5202,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5203,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5204,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5205,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#__decode__"},{"id":5206,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5207,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5208,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5209,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/time/namespace/Time#__encode__"},{"id":5210,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5211,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5212,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#__schema__"},{"id":5191,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":5192,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":5193,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#asInstance"},{"id":5213,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":5214,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":5215,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5216,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/Time#asString"},{"id":5160,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":5161,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":5162,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5163,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5164,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5165,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#clamp"},{"id":5125,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":5126,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":5127,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5128,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5129,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#compare"},{"id":5096,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"signatures":[{"id":5097,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves the current time in milliseconds after waiting "},{"kind":"code","text":"`duration`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst wait2s = Time.delay(TimeDuration({ seconds: 2 }));\\nconst logTime = Task.andThen(wait2s, (time) => Console.debug(time));\\nTask.run(logTime);// wait 2 seconds then console.debug(Date.now())\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"parameters":[{"id":5098,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds to wait"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/time/namespace/Time#delay"},{"id":5108,"name":"diff","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L50"}],"signatures":[{"id":5109,"name":"diff","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the difference between 2 time values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst begin = Time.of(0);\\nconst end = Time.of(10);\\nTime.diff(end, begin);// TimeDuration.of(10)\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L50"}],"parameters":[{"id":5110,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5111,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#diff"},{"id":5166,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":5167,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":5168,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5169,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5170,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/Time#equals"},{"id":5102,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L35"}],"signatures":[{"id":5103,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an ISO 8601 string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\nTime.format(time);// \'1970-01-01T00:00:00.000Z\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L35"}],"parameters":[{"id":5104,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/Time#format"},{"id":5105,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L36"}],"signatures":[{"id":5106,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L36"}],"parameters":[{"id":5107,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":5082,"name":"TimeParameters","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#from"},{"id":5188,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":5189,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":5190,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}}],"permalink":"/std/api/time/namespace/Time#hasInstance"},{"id":5155,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":5156,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":5157,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5158,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5159,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#max"},{"id":5150,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":5151,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":5152,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5153,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":5154,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#min"},{"id":5094,"name":"now","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"signatures":[{"id":5095,"name":"now","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that resolves the current time in milliseconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst program = () => Task.andThen(Time.now(), (currentTime) => {\\n  // use currentTime\\n});\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/time/namespace/Time#now"},{"id":5091,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"signatures":[{"id":5092,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Time value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"parameters":[{"id":5093,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#of"},{"id":5099,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"signatures":[{"id":5100,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse an ISO 8601 string. If invalid, returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.parse(\'1970-01-01T00:00:00.000Z\');// 0\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"parameters":[{"id":5101,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/Time#parse"},{"id":5184,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"signatures":[{"id":5185,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"parameters":[{"id":5186,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/Time#unwrap"},{"id":5181,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"signatures":[{"id":5182,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"parameters":[{"id":5183,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/Time#wrap"}],"groups":[{"title":"References","children":[5187]},{"title":"Variables","children":[5194,5124,5123]},{"title":"Functions","children":[5171,5115,5119,5135,5130,5176,5145,5140,5112,5201,5206,5210,5191,5213,5160,5125,5096,5108,5166,5102,5105,5188,5155,5150,5094,5091,5099,5184,5181]}],"categories":[{"title":"Bound","children":[5124,5123]},{"title":"Codec","children":[5201,5206,5210]},{"title":"Comparator","children":[5171,5135,5130,5176,5145,5140,5160,5125,5166,5155,5150]},{"title":"Constructor","children":[5112,5105,5091]},{"title":"Formatting","children":[5213]},{"title":"Numeric","children":[5115,5119]},{"title":"Type","children":[5194,5191,5188,5184,5181]},{"title":"__CATEGORY__","children":[5187,5096,5108,5102,5094,5099]}],"sources":[{"fileName":"packages/time/src/Time.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L19"},{"fileName":"packages/time/src/Time.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L26"}],"permalink":"/std/api/time/namespace/Time","previousId":5082,"nextId":5225},{"id":5225,"name":"TimeDuration","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time duration (i.e amount of milliseconds)"}]},"children":[{"id":5363,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/time/namespace/TimeDuration#typeName"},{"id":5370,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":5371,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":5372,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":5373,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5374,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":5375,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":5376,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/time/namespace/TimeDuration#__inspect__"},{"id":5347,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":5348,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":5349,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5350,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5351,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#!="},{"id":5293,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":5294,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":5295,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5296,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#*"},{"id":5297,"name":"**","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"signatures":[{"id":5298,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"parameters":[{"id":5299,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5300,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#**"},{"id":5285,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":5286,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":5287,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5288,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#+"},{"id":5289,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":5290,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":5291,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5292,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#-"},{"id":5311,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":5312,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":5313,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5314,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5315,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#<"},{"id":5306,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":5307,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":5308,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5309,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5310,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#<="},{"id":5352,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":5353,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":5354,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5355,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5356,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#=="},{"id":5321,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":5322,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":5323,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5324,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5325,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#>"},{"id":5316,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":5317,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":5318,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5319,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5320,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#>="},{"id":5252,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"signatures":[{"id":5253,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"parameters":[{"id":5254,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":5218,"name":"TimeDurationParameters","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#__call__"},{"id":5377,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":5378,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5379,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5380,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5381,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#__decode__"},{"id":5382,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5383,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5384,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5385,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/time/namespace/TimeDuration#__encode__"},{"id":5386,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5387,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5388,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#__schema__"},{"id":5269,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":5270,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":5271,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5272,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#abs"},{"id":5367,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":5368,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":5369,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#asInstance"},{"id":5262,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":5263,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":5264,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5265,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/time/namespace/TimeDuration#asString"},{"id":5336,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":5337,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":5338,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5339,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5340,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5341,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#clamp"},{"id":5301,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":5302,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":5303,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5304,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5305,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/api/time/namespace/TimeDuration#compare"},{"id":5342,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":5343,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":5344,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5345,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5346,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#equals"},{"id":5249,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"signatures":[{"id":5250,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"parameters":[{"id":5251,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":5218,"name":"TimeDurationParameters","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#from"},{"id":5364,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":5365,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":5366,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}}],"permalink":"/std/api/time/namespace/TimeDuration#hasInstance"},{"id":5277,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"signatures":[{"id":5278,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// true\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":40,"character":4}],"parameters":[{"id":5279,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5280,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#isNegative"},{"id":5273,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"signatures":[{"id":5274,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isPositive(-1);// false\\nNumber.isPositive(0);// false\\nNumber.isPositive(1);// true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":27,"character":4}],"parameters":[{"id":5275,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5276,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#isPositive"},{"id":5258,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":5259,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":5260,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5261,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/api/time/namespace/TimeDuration#isZero"},{"id":5331,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":5332,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":5333,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5334,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5335,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#max"},{"id":5326,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":5327,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":5328,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5329,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5330,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#min"},{"id":5266,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":5267,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":5268,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#negate"},{"id":5246,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"signatures":[{"id":5247,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration from a number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.of(0);// typeof duration === \'number\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"parameters":[{"id":5248,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#of"},{"id":5281,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"signatures":[{"id":5282,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.sign(-2.5);// -1\\nNumber.sign(0);// 0\\nNumber.sign(2.5);// 1\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":53,"character":4}],"parameters":[{"id":5283,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5284,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#sign"},{"id":5238,"name":"toDays","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L40"}],"signatures":[{"id":5239,"name":"toDays","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to days."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toDays(TimeDuration.from({ days: 1 })); // == 1\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 })); // == 1.5\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in days."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L40"}],"parameters":[{"id":5240,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5241,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toDays"},{"id":5234,"name":"toHours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L39"}],"signatures":[{"id":5235,"name":"toHours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to hours."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toHours(TimeDuration(3600000));// == 1\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5));// == 1.5\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5, true));// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in hours."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L39"}],"parameters":[{"id":5236,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5237,"name":"truncate","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toHours"},{"id":5230,"name":"toMinutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L38"}],"signatures":[{"id":5231,"name":"toMinutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to minutes."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toMinutes(TimeDuration(60000)); // == 1.0\\nTimeDuration.toMinutes(TimeDuration(150000), true); // == 2.5\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in minutes."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L38"}],"parameters":[{"id":5232,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5233,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toMinutes"},{"id":5226,"name":"toSeconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L37"}],"signatures":[{"id":5227,"name":"toSeconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to seconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toSeconds(TimeDuration(1500));// == 1.5\\nTimeDuration.toSeconds(TimeDuration(1500), true);// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in seconds."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L37"}],"parameters":[{"id":5228,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5229,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toSeconds"},{"id":5242,"name":"toWeeks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"signatures":[{"id":5243,"name":"toWeeks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to weeks."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1 })); // == 1\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 })); // == 1.5\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in weeks."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"parameters":[{"id":5244,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":5245,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#toWeeks"},{"id":5360,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"signatures":[{"id":5361,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"parameters":[{"id":5362,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/api/time/namespace/TimeDuration#unwrap"},{"id":5357,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"signatures":[{"id":5358,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"parameters":[{"id":5359,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#wrap"},{"id":5255,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":5256,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":5257,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/api/time/namespace/TimeDuration#zero"}],"groups":[{"title":"References","children":[5363]},{"title":"Variables","children":[5370]},{"title":"Functions","children":[5347,5293,5297,5285,5289,5311,5306,5352,5321,5316,5252,5377,5382,5386,5269,5367,5262,5336,5301,5342,5249,5364,5277,5273,5258,5331,5326,5266,5246,5281,5238,5234,5230,5226,5242,5360,5357,5255]}],"categories":[{"title":"Codec","children":[5377,5382,5386]},{"title":"Comparator","children":[5347,5311,5306,5352,5321,5316,5336,5301,5342,5331,5326]},{"title":"Constructor","children":[5252,5249,5246]},{"title":"Formatting","children":[5262]},{"title":"Numeric","children":[5293,5297,5285,5289,5269,5277,5273,5258,5266,5281,5255]},{"title":"Type","children":[5370,5367,5364,5360,5357]},{"title":"__CATEGORY__","children":[5363,5238,5234,5230,5226,5242]}],"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":22,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L22"},{"fileName":"packages/time/src/TimeDuration.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L29"}],"permalink":"/std/api/time/namespace/TimeDuration","previousId":5090,"nextId":5217},{"id":5218,"name":"TimeDurationParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":5220,"name":"days","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L13"}],"type":{"type":"intrinsic","name":"number"}},{"id":5221,"name":"hours","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L17"}],"type":{"type":"intrinsic","name":"number"}},{"id":5224,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L29"}],"type":{"type":"intrinsic","name":"number"}},{"id":5222,"name":"minutes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L21"}],"type":{"type":"intrinsic","name":"number"}},{"id":5223,"name":"seconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L25"}],"type":{"type":"intrinsic","name":"number"}},{"id":5219,"name":"weeks","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of weeks"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5220,5221,5224,5222,5223,5219]}],"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L5"}],"permalink":"/std/api/time/interface/TimeDurationParameters","categories":[],"nextId":5082},{"id":5082,"name":"TimeParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":5085,"name":"day","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Day of month (1-31)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Day"},"name":"Day","package":"@w5s/core-type"}},{"id":5086,"name":"hour","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Hour of the day"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Hour"},"name":"Hour","package":"@w5s/core-type"}},{"id":5089,"name":"millisecond","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L33"}],"type":{"type":"intrinsic","name":"number"}},{"id":5087,"name":"minute","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Minute of the hour"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":5084,"name":"month","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Month number (1-12)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Month"},"name":"Month","package":"@w5s/core-type"}},{"id":5088,"name":"second","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Second of the minute"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":5083,"name":"year","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5085,5086,5089,5087,5084,5088,5083]}],"sources":[{"fileName":"packages/time/src/Time/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L5"}],"permalink":"/std/api/time/interface/TimeParameters","categories":[],"previousId":5218,"nextId":5090},{"id":5217,"name":"Time","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a time typically returned by "},{"kind":"code","text":"`Date.now()`"}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L19"},{"fileName":"packages/time/src/Time.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"TimeType","package":"@w5s/time","qualifiedName":"Time"},"permalink":"/std/api/time#Time","categories":[],"previousId":5225,"nextId":5389},{"id":5389,"name":"TimeDuration","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a duration in milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":22,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L22"},{"fileName":"packages/time/src/TimeDuration.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDurationType","package":"@w5s/time","qualifiedName":"TimeDuration"},"permalink":"/std/api/time#TimeDuration","categories":[],"previousId":5217}],"groups":[{"title":"Interfaces","children":[5218,5082]},{"title":"Namespaces","children":[5090,5225]},{"title":"Type Aliases","children":[5217,5389]}],"sources":[{"fileName":"packages/time/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/time/src/index.ts#L1"}],"permalink":"/std/api/time"},"urlSlug":"time"}],"packageName":"@w5s/time","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":19,"name":"@w5s/uuid","variant":"declaration","kind":2,"flags":{},"children":[{"id":5393,"name":"UUID","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID namespace"}]},"children":[{"id":5421,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":35,"character":4}],"target":3415,"permalink":"/std/api/uuid/namespace/UUID#typeName"},{"id":5428,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":5429,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"signatures":[{"id":5430,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":84,"character":29}],"parameters":[{"id":5431,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":5432,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":5433,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":5434,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/api/uuid/namespace/UUID#__inspect__"},{"id":5413,"name":"id","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":20,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationId"},"name":"ApplicationId","package":"@w5s/application"},"permalink":"/std/api/uuid/namespace/UUID#id"},{"id":5405,"name":"initialConfiguration","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":33,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"},"permalink":"/std/api/uuid/namespace/UUID#initialConfiguration"},{"id":5414,"name":"state","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":24,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationState"},"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"permalink":"/std/api/uuid/namespace/UUID#state"},{"id":5451,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":5452,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":5453,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__call__"},{"id":5435,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":5436,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5437,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5438,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5439,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__decode__"},{"id":5440,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5441,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5442,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5443,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/api/uuid/namespace/UUID#__encode__"},{"id":5444,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5445,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5446,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#__schema__"},{"id":5425,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"signatures":[{"id":5426,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":62,"character":4}],"parameters":[{"id":5427,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#asInstance"},{"id":5447,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":5448,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":5449,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5450,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/api/uuid/namespace/UUID#asString"},{"id":5406,"name":"configure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"signatures":[{"id":5407,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"parameters":[{"id":5408,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/api/uuid/namespace/UUID#configure"},{"id":5394,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"signatures":[{"id":5395,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an "},{"kind":"code","text":"`UUID`"},{"kind":"text","text":" with only "},{"kind":"code","text":"`0`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst emptyUUID = UUID.empty();// \'00000000-0000-0000-0000-000000000000\'\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"type":{"type":"reference","target":5454,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/api/uuid/namespace/UUID#empty"},{"id":5409,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"signatures":[{"id":5410,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"typeParameter":[{"id":5411,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"literal","value":"randomUUIDGenerator"}}],"parameters":[{"id":5412,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":5411,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":5411,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}}}],"permalink":"/std/api/uuid/namespace/UUID#get"},{"id":5422,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"signatures":[{"id":5423,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":49,"character":4}],"parameters":[{"id":5424,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}],"permalink":"/std/api/uuid/namespace/UUID#hasInstance"},{"id":5396,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"signatures":[{"id":5397,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID.of(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"parameters":[{"id":5398,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string representation"}]},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":5454,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/api/uuid/namespace/UUID#of"},{"id":5402,"name":"toBigInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"signatures":[{"id":5403,"name":"toBigInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a bigint from UUID"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\nconst bigint = UUID.toBigInt(uuid);// BigInt(\'Ox1c19548b7cac4222b722dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"parameters":[{"id":5404,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/api/uuid/namespace/UUID#toBigInt"},{"id":5399,"name":"toUint32Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"signatures":[{"id":5400,"name":"toUint32Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a UUID to an array of uint32 values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid: UUID;\\nconst parts = UUID.toUint32Array(uuid);\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"parameters":[{"id":5401,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the UUID to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Uint32Array"},"name":"Uint32Array","package":"typescript"}}],"permalink":"/std/api/uuid/namespace/UUID#toUint32Array"},{"id":5418,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"signatures":[{"id":5419,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":40,"character":8}],"parameters":[{"id":5420,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"permalink":"/std/api/uuid/namespace/UUID#unwrap"},{"id":5415,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"signatures":[{"id":5416,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":33,"character":8}],"parameters":[{"id":5417,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/api/uuid/namespace/UUID#wrap"}],"groups":[{"title":"References","children":[5421]},{"title":"Variables","children":[5428,5413,5405,5414]},{"title":"Functions","children":[5451,5435,5440,5444,5425,5447,5406,5394,5409,5422,5396,5402,5399,5418,5415]}],"categories":[{"title":"Codec","children":[5435,5440,5444]},{"title":"Constructor","children":[5394,5396]},{"title":"Formatting","children":[5447]},{"title":"Type","children":[5428,5425,5422,5418,5415]},{"title":"__CATEGORY__","children":[5421,5413,5405,5414,5451,5406,5409,5402,5399]}],"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"permalink":"/std/api/uuid/namespace/UUID","previousId":5390,"nextId":5454},{"id":5454,"name":"UUID","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID string type"}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUIDType","package":"@w5s/core","qualifiedName":"UUID"},"permalink":"/std/api/uuid#UUID","categories":[],"previousId":5393,"nextId":5392},{"id":5392,"name":"UUIDString","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/dist/Type/UUID.d.ts","line":2,"character":12}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]},"permalink":"/std/api/uuid#UUIDString","categories":[],"previousId":5454},{"id":5390,"name":"randomUUID","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"signatures":[{"id":5391,"name":"randomUUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that returns a new "},{"kind":"code","text":"`UUID`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst createUser = (name: string) => Task.map(randomUUID(), (uuid) => ({\\n  id: uuid,\\n  name,\\n}));\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":5454,"name":"UUID","package":"@w5s/uuid"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/api/uuid/function/randomUUID","categories":[],"nextId":5393}],"groups":[{"title":"Functions","children":[5390]},{"title":"Namespaces","children":[5393]},{"title":"Type Aliases","children":[5454,5392]}],"sources":[{"fileName":"packages/uuid/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/index.ts#L1"}],"permalink":"/std/api/uuid"},"urlSlug":"uuid"}],"packageName":"@w5s/uuid","packageVersion":"1.0.0-alpha.0"}]')}}]);