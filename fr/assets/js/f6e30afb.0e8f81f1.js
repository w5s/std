"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[6370],{8417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"reflection":{"id":1,"name":"@w5s/application","variant":"declaration","kind":2,"flags":{},"children":[{"id":24,"name":"Application","variant":"declaration","kind":4,"flags":{},"children":[{"id":36,"name":"Options","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L83"}],"typeParameters":[{"id":41,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reflection","declaration":{"id":37,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":39,"name":"configuration","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":92,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L92"}],"type":{"type":"reference","target":41,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}},{"id":38,"name":"id","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":87,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L87"}],"type":{"type":"intrinsic","name":"string"}},{"id":40,"name":"store","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Target store where application will be registered"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":97,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L97"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":43,"name":"ApplicationState","package":"@w5s/application"}],"name":"Record","package":"@w5s/core"}],"name":"Ref","package":"@w5s/core"}}],"groups":[{"title":"Properties","children":[39,38,40]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":83,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L83"}]}},"permalink":"/std/fr/api/application/namespace/Application#Options"},{"id":31,"name":"configure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":140,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L140"}],"signatures":[{"id":32,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst app = Application({\\n  id: \'my-app\',\\n  myVar: 1\\n});\\nApplication.configure(app, {\\n  myVar: 2\\n});\\nApplication.get(app, \'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":140,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L140"}],"typeParameter":[{"id":33,"name":"C","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":34,"name":"app","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The application"}]},"type":{"type":"reference","target":18,"typeArguments":[{"type":"reference","target":33,"name":"C","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}},{"id":35,"name":"patch","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":33,"name":"C","package":"@w5s/application","refersToTypeParameter":true}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/application/namespace/Application#configure"},{"id":25,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":114,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L114"}],"signatures":[{"id":26,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst app = Application({\\n  id: \'my-app\',\\n  myVar: 1\\n});\\nApplication.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":114,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L114"}],"typeParameter":[{"id":27,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{}},{"id":28,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":29,"name":"app","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The application"}]},"type":{"type":"reference","target":18,"typeArguments":[{"type":"reference","target":27,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}},{"id":30,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":28,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":28,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":27,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}}}],"permalink":"/std/fr/api/application/namespace/Application#get"}],"groups":[{"title":"Type Aliases","children":[36]},{"title":"Functions","children":[31,25]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":62,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L62"},{"fileName":"packages/application/src/Application.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L26"},{"fileName":"packages/application/src/Application.ts","line":82,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L82"}],"permalink":"/std/fr/api/application/namespace/Application","previousId":49,"nextId":42},{"id":18,"name":"Application","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application instance type"}]},"children":[{"id":19,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":21,"name":"configuration","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":35,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"type":{"type":"reference","target":23,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}},{"id":20,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":30,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L30"}],"type":{"type":"reference","target":42,"name":"ApplicationId","package":"@w5s/application"}},{"id":22,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to current application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":40,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L40"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":43,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"}}],"groups":[{"title":"Constructors","children":[19]},{"title":"Properties","children":[21,20,22]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":62,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L62"},{"fileName":"packages/application/src/Application.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L26"},{"fileName":"packages/application/src/Application.ts","line":82,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L82"}],"typeParameters":[{"id":23,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"EmptyObject"},"name":"EmptyObject","package":"@w5s/application"}}],"permalink":"/std/fr/api/application/interface/Application","previousId":45,"nextId":43},{"id":43,"name":"ApplicationState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application state generic type"}]},"children":[{"id":44,"name":"configuration","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Current application configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":20,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L20"}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Properties","children":[44]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L16"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"AnyObject"},"name":"AnyObject","package":"@w5s/application"}],"permalink":"/std/fr/api/application/interface/ApplicationState","previousId":18,"nextId":49},{"id":49,"name":"Storage","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for the global Map that holds all application states"}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.collection.d.ts","qualifiedName":"Map"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Map","package":"typescript"}],"permalink":"/std/fr/api/application/interface/Storage","previousId":43,"nextId":24},{"id":42,"name":"ApplicationId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application id type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L11"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ApplicationId"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/fr/api/application#ApplicationId","previousId":24,"nextId":48},{"id":48,"name":"$storage","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L3"}],"type":{"type":"query","queryType":{"type":"reference","target":48,"name":"$storage","package":"@w5s/application"}},"defaultValue":"...","permalink":"/std/fr/api/application#$storage","previousId":42},{"id":14,"name":"Application","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":62,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L62"},{"fileName":"packages/application/src/Application.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L26"},{"fileName":"packages/application/src/Application.ts","line":82,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L82"}],"signatures":[{"id":15,"name":"Application","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an app instance with a state ref that will be stored in "},{"kind":"code","text":"`applicationStore.current[id]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst app = Application({\\n  id: \'my-app\'\\n  configuration: {\\n    foo: 1,\\n  }\\n});\\napp.current = {\\n  ...app.current,\\n  myProperty: \'hello world !\',\\n};\\n\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":62,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L62"}],"typeParameter":[{"id":16,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"EmptyObject"},"name":"EmptyObject","package":"@w5s/application"}}],"parameters":[{"id":17,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":36,"typeArguments":[{"type":"reference","target":16,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Options","package":"@w5s/application","qualifiedName":"Application.Options"}}],"type":{"type":"reference","target":18,"typeArguments":[{"type":"reference","target":16,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}}],"permalink":"/std/fr/api/application/function/Application","nextId":50},{"id":50,"name":"useRef","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"signatures":[{"id":51,"name":"useRef","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" stored at "},{"kind":"code","text":"`storage.get(key)`"},{"kind":"text","text":" or "},{"kind":"code","text":"`ref.value[key]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst globalStorage = useStorage(globalThis);\\nconst counterRef = useRef<number>(globalStorage, \'counter\', 1);\\n// globalStorage == Map { counter => 1 }\\n\\nconst state = Ref({});\\nconst counterRef = useRef<number>(state, \'counter\', 2);\\n// state == { counter: 2 }\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"typeParameter":[{"id":52,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":53,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ref or storage containing the value"}]},"type":{"type":"union","types":[{"type":"reference","target":49,"name":"Storage","package":"@w5s/application"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}],"name":"Ref","package":"@w5s/core"}]}},{"id":54,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the key where data is stored"}]},"type":{"type":"intrinsic","name":"string"}},{"id":55,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value"}]},"type":{"type":"reference","target":52,"name":"V","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":52,"name":"V","package":"@w5s/application","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/fr/api/application/function/useRef","previousId":14,"nextId":45},{"id":45,"name":"useStorage","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"signatures":[{"id":46,"name":"useStorage","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Get or create a map object storage for "},{"kind":"code","text":"`hostObject`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst objectStorage = useStorage(someObject);\\nconst globalStorage = useStorage(globalThis);\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"parameters":[{"id":47,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object hosting the storage"}]},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":49,"name":"Storage","package":"@w5s/application"}}],"permalink":"/std/fr/api/application/function/useStorage","previousId":50,"nextId":18}],"groups":[{"title":"Functions","children":[14,50,45]},{"title":"Interfaces","children":[18,43,49]},{"title":"Namespaces","children":[24]},{"title":"Type Aliases","children":[42]},{"title":"Variables","children":[48]}],"sources":[{"fileName":"packages/application/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/application/src/index.ts#L1"}],"permalink":"/std/fr/api/application"},"urlSlug":"application"}],"packageName":"@w5s/application","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":2,"name":"@w5s/async","variant":"declaration","kind":2,"flags":{},"children":[{"id":58,"name":"Deferred","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Deferred object is useful when a promise is resolved or rejected outside the scope of the constructor "},{"kind":"code","text":"`Promise((resolve) => {  })`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n// module1.ts\\nconst deferred = new Deferred();\\n\\nexport function resolveWithValue() {\\n  setTimeout(() => deferred.resolve(\'any value\'), 1);\\n}\\nexport const promise = deferred.promise;\\n```"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\n// main.ts\\nimport { resolveWithValue, promise } from \'./module1.ts\';\\n\\nfunction main() {\\n  resolveWithValue();\\n  return promise;\\n}\\n```"}]}]},"children":[{"id":59,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":60,"name":"new Deferred","variant":"signature","kind":16384,"flags":{},"typeParameter":[{"id":61,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":58,"typeArguments":[{"type":"reference","target":61,"name":"Value","package":"@w5s/async","qualifiedName":"Deferred.Value","refersToTypeParameter":true}],"name":"Deferred","package":"@w5s/async"}}]},{"id":79,"name":"promise","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"A reference to the manipulated promise"}]},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L85"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":61,"name":"Value","package":"@w5s/async","qualifiedName":"Deferred.Value","refersToTypeParameter":true}],"name":"Promise","package":"typescript"},"defaultValue":"..."},{"id":71,"name":"isFulfilled","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L44"}],"signatures":[{"id":72,"name":"isFulfilled","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true only if resolve or reject was already called."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst deferred = new Deferred();\\ndeferred.isFulfilled(); // false\\ndeferred.resolve(\'value\');\\ndeferred.isFulfilled(); // true\\n```"}]}]},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L44"}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":76,"name":"reject","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L77"}],"signatures":[{"id":77,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reject callback. Internally, it is a reference to "},{"kind":"code","text":"`new Promise((_, reject) => { ... })`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst deferred = new Deferred();\\ndeferred.reject(new Error(\'DeferredError\'));\\n\\nawait deferred.promise;// throws new Error(\'DeferredError\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L77"}],"parameters":[{"id":78,"name":"error","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error rejected to the promise"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":73,"name":"resolve","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L61"}],"signatures":[{"id":74,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolve callback. Internally, it is a reference to "},{"kind":"code","text":"`new Promise((resolve) => { ... })`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst deferred = new Deferred();\\ndeferred.resolve(\'hello_world\');\\n\\nawait deferred.promise;// \'hello_world\'\\n```"}]}]},"sources":[{"fileName":"packages/async/src/Deferred.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L61"}],"parameters":[{"id":75,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value resolved to the promise"}]},"type":{"type":"reference","target":61,"name":"Value","package":"@w5s/async","qualifiedName":"Deferred.Value","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[59]},{"title":"Properties","children":[79]},{"title":"Methods","children":[71,76,73]}],"sources":[{"fileName":"packages/async/src/Deferred.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/async/src/Deferred.ts#L26"}],"typeParameters":[{"id":80,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/async/class/Deferred","nextId":81},{"id":56,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/dist/index.d.ts","line":43,"character":5}],"typeParameters":[{"id":57,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":57,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":57,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/fr/api/async#Awaitable","previousId":91},{"id":81,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"signatures":[{"id":82,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a promise after waiting "},{"kind":"code","text":"`milliseconds`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nawait delay(5);\\n```"}]}]},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"parameters":[{"id":83,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the delay to wait in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/fr/api/async/function/delay","previousId":58,"nextId":88},{"id":88,"name":"isPromise","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":3,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L3"}],"signatures":[{"id":89,"name":"isPromise","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":3,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L3"}],"parameters":[{"id":90,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}}}],"permalink":"/std/fr/api/async/function/isPromise","previousId":81,"nextId":84},{"id":84,"name":"isPromiseLike","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":12,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L12"}],"signatures":[{"id":85,"name":"isPromiseLike","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"PromiseLike","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisPromiseLike(Promise.resolve());// true\\nisPromiseLike(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":12,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L12"}],"typeParameter":[{"id":86,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":87,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":86,"name":"V","package":"@w5s/async","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}}}],"permalink":"/std/fr/api/async/function/isPromiseLike","previousId":88,"nextId":91},{"id":91,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"signatures":[{"id":92,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`block().then(onSuccess, onError)`"},{"kind":"text","text":" when a asynchronous.\\nElse returns "},{"kind":"code","text":"`try { return onSuccess(block()) } catch (error) { onError(error) }`"},{"kind":"text","text":" when synchronous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst syncBlock = () => \'sync\'\\ntryCall(syncBlock, (_) => `${_}_foo`);// \'async_foo\'\\nconst asyncBlock = () => Promise.resolve(\'async\')\\ntryCall(asyncBlock, (_) => `${_}_foo`);// Promise.resolve(\'async_foo\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"typeParameter":[{"id":93,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":94,"name":"TResult1","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":93,"name":"T","package":"@w5s/async","refersToTypeParameter":true}},{"id":95,"name":"TResult2","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":96,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the callback returning an awaitable value"}]},"type":{"type":"reflection","declaration":{"id":97,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"signatures":[{"id":98,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":93,"name":"T","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":99,"name":"onSuccess","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":100,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"signatures":[{"id":101,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"parameters":[{"id":102,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":93,"name":"T","package":"@w5s/async","refersToTypeParameter":true}}],"type":{"type":"reference","target":94,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true}}]}}]}},{"id":103,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":104,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"signatures":[{"id":105,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"parameters":[{"id":106,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":95,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"union","types":[{"type":"reference","target":94,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true},{"type":"reference","target":95,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}]}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/async/function/tryCall","previousId":84,"nextId":56}],"groups":[{"title":"Classes","children":[58]},{"title":"Functions","children":[81,88,84,91]},{"title":"Type Aliases","children":[56]}],"categories":[{"title":"Type","children":[84]},{"title":"__CATEGORY__","children":[58,56,81,88,91]}],"sources":[{"fileName":"packages/async/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/async/src/index.ts#L1"}],"permalink":"/std/fr/api/async"},"urlSlug":"async"}],"packageName":"@w5s/async","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":3,"name":"@w5s/bigdecimal","variant":"declaration","kind":2,"flags":{},"children":[{"id":108,"name":"BigDecimal","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`BigDecimal`"}]},"children":[{"id":120,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":121,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":122,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":123,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":124,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":125,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":126,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#inspect"},{"id":113,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":47,"character":17}],"type":{"type":"literal","value":"BigDecimal"},"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#typeName"},{"id":214,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":215,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":216,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":217,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":218,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#!="},{"id":170,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":119,"character":8}],"signatures":[{"id":171,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":119,"character":8}],"parameters":[{"id":172,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":173,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#*"},{"id":162,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":87,"character":8}],"signatures":[{"id":163,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":87,"character":8}],"parameters":[{"id":164,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":165,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#+"},{"id":166,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":103,"character":8}],"signatures":[{"id":167,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":103,"character":8}],"parameters":[{"id":168,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":169,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#-"},{"id":184,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"signatures":[{"id":185,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"parameters":[{"id":186,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":187,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":188,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#<"},{"id":179,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"signatures":[{"id":180,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"parameters":[{"id":181,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":182,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":183,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#<="},{"id":219,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":220,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":221,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":222,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":223,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#=="},{"id":194,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"signatures":[{"id":195,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"parameters":[{"id":196,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":197,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":198,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#>"},{"id":189,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"signatures":[{"id":190,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"parameters":[{"id":191,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":192,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":193,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#>="},{"id":156,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":16,"character":8}],"signatures":[{"id":157,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":16,"character":8}],"parameters":[{"id":158,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#abs"},{"id":127,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"signatures":[{"id":128,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"parameters":[{"id":129,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":130,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":131,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/DecodeError.ts","qualifiedName":"DecodeError"},"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#codecDecode"},{"id":132,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"signatures":[{"id":133,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"parameters":[{"id":134,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":135,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#codecEncode"},{"id":136,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"signatures":[{"id":137,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"parameters":[{"id":138,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#codecSchema"},{"id":174,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"signatures":[{"id":175,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"parameters":[{"id":176,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":177,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":178,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#compare"},{"id":109,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"signatures":[{"id":110,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"parameters":[{"id":111,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":112,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#create"},{"id":209,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":210,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":211,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":212,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":213,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#equals"},{"id":153,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L31"}],"signatures":[{"id":154,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of a BigDecimal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigDecimal.format(BigDecimal(\'1.020\')); // \'1.020\'\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L31"}],"parameters":[{"id":155,"name":"bigDecimal","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#format"},{"id":117,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":118,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":119,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#from"},{"id":114,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":115,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":116,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#hasInstance"},{"id":204,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"signatures":[{"id":205,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"parameters":[{"id":206,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":207,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":208,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#max"},{"id":199,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"signatures":[{"id":200,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"parameters":[{"id":201,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":202,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":203,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#min"},{"id":139,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"signatures":[{"id":140,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a normalized "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigDecimal.normalize(BigDecimal(\'1.020\')); //  BigDecimal(\'1.02\')\\nBigDecimal.normalize(BigDecimal(\'1.0200\')); //  BigDecimal(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"parameters":[{"id":141,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#normalize"},{"id":142,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L28"}],"signatures":[{"id":143,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" from "},{"kind":"code","text":"`value`"},{"kind":"text","text":" and "},{"kind":"code","text":"`scale`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigDecimal.of(1n, 1); // BigDecimal(\'0.1\')\\nBigDecimal.of(-234n, 2); // BigDecimal(\'2.34\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L28"}],"parameters":[{"id":144,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The base integer value."}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":145,"name":"scale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The scale."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#of"},{"id":150,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L30"}],"signatures":[{"id":151,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new BigDecimal from a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigDecimal.parse(\'1.020\'); // Option.Some(BigDecimal(\'1.020\'))\\nBigDecimal.parse(\'A\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L30"}],"parameters":[{"id":152,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#parse"},{"id":146,"name":"scale","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L29"}],"signatures":[{"id":147,"name":"scale","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Scales a given "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" to the specified scale."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst value = BigDecimal(\'1.02\');\\nBigDecimal.scale(value, 1); //  BigDecimal(\'1.0\')\\nBigDecimal.scale(value, 3); //  BigDecimal(\'1.020\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L29"}],"parameters":[{"id":148,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" to scale."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":149,"name":"newScale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The new scale"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#scale"},{"id":159,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":23,"character":8}],"signatures":[{"id":160,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":23,"character":8}],"parameters":[{"id":161,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#sign"}],"groups":[{"title":"Variables","children":[120,113]},{"title":"Functions","children":[214,170,162,166,184,179,219,194,189,156,127,132,136,174,109,209,153,117,114,204,199,139,142,150,146,159]}],"categories":[{"title":"Codec","children":[127,132,136]},{"title":"Comparator","children":[214,184,179,219,194,189,174,209,204,199]},{"title":"Constructor","children":[109,117,142]},{"title":"Numeric","children":[170,162,166,156,159]},{"title":"Type","children":[120,113,114]},{"title":"__CATEGORY__","children":[153,139,150,146]}],"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L16"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L23"}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal","nextId":224},{"id":224,"name":"BigDecimal","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L16"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L23"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimalType","package":"@w5s/bigdecimal","qualifiedName":"BigDecimal"},"permalink":"/std/fr/api/bigdecimal#BigDecimal","previousId":108,"nextId":107},{"id":107,"name":"BigDecimalString","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Valid BigDecimal string representation"}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L14"}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},"permalink":"/std/fr/api/bigdecimal#BigDecimalString","previousId":224}],"groups":[{"title":"Namespaces","children":[108]},{"title":"Type Aliases","children":[224,107]}],"sources":[{"fileName":"packages/bigdecimal/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/index.ts#L1"}],"permalink":"/std/fr/api/bigdecimal"},"urlSlug":"bigdecimal"}],"packageName":"@w5s/bigdecimal","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":4,"name":"@w5s/core","variant":"declaration","kind":2,"flags":{},"children":[{"id":225,"name":"Array","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate readonly arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Array } from \'@w5s/core\';\\n\\nconst array = Array.of(2, 1, 3);\\nconst reversed = Array.reversed(array);// [3, 1, 2]\\nconst sorted = Array.sort(array, (left, right) => left === right ? 0 : left < right ? -1 : 1);// [1, 2, 3]\\n```"}]}]},"children":[{"id":226,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L44"}],"signatures":[{"id":227,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an item at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nArray.at(array, 1) // Option.Some(\'bar\')\\nArray.at(array, -1) //  Option.Some(\'baz\') i.e. the last\\nArray.at(array, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L44"}],"typeParameter":[{"id":228,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":229,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"reference","target":228,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayLike","package":"typescript"}},{"id":230,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":228,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#at"},{"id":231,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L45"}],"signatures":[{"id":232,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenate all elements of arrays\\nEquivalent to "},{"kind":"code","text":"`[...array, ...extension[0], ...extension[1], ...]`"},{"kind":"text","text":","}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.concat([1, 2], [3, 4], [5, 6]);// [1, 2, 3, 4, 5, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L45"}],"typeParameter":[{"id":233,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":234,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":233,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":235,"name":"extensions","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The other arrays to append"}]},"type":{"type":"array","elementType":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":233,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":233,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#concat"},{"id":236,"name":"deleteAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L46"}],"signatures":[{"id":237,"name":"deleteAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an array excluding the item at the "},{"kind":"code","text":"`index`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.deletedAt([1, 2, 3, 4], 1);// [1, 3, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L46"}],"typeParameter":[{"id":238,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":239,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":238,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":240,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the deleted item in the array"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":238,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#deleteAt"},{"id":241,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"signatures":[{"id":242,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always returns an empty array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.empty() // []\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"typeParameter":[{"id":243,"name":"Item","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":243,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#empty"},{"id":244,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"signatures":[{"id":245,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether all the members of an array satisfy the specified test."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.every([1, 2, 3], isEven); // false\\nArray.every([2, 4], isEven); // true\\nArray.every([], (value) => false); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"typeParameter":[{"id":246,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":247,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":248,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":246,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":249,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":250,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"signatures":[{"id":251,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"parameters":[{"id":252,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":246,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":253,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":254,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":246,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":247,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"predicate","name":"array","asserts":false,"targetType":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":247,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}},{"id":255,"name":"every","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"typeParameter":[{"id":256,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":257,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":256,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":258,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":259,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"signatures":[{"id":260,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"parameters":[{"id":261,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":256,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":262,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":263,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":256,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#every"},{"id":264,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"signatures":[{"id":265,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the items of an array that meet the condition specified in a callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3, 4];\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.filter(array, isEven); // [2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"typeParameter":[{"id":266,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":267,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":268,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":266,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":269,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The filter method calls the predicate function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":270,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"signatures":[{"id":271,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"parameters":[{"id":272,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":266,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":267,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":267,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":273,"name":"filter","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"typeParameter":[{"id":274,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":275,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":274,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":276,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":277,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"signatures":[{"id":278,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"parameters":[{"id":279,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":274,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":280,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":281,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":274,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":274,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#filter"},{"id":282,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"signatures":[{"id":283,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.find([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'ab\')\\nArray.find([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"typeParameter":[{"id":284,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":285,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":286,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":284,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":287,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":288,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"signatures":[{"id":289,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"parameters":[{"id":290,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":284,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":291,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":292,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":284,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":285,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":285,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":293,"name":"find","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"typeParameter":[{"id":294,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":295,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":294,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":296,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":297,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"signatures":[{"id":298,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"parameters":[{"id":299,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":294,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":300,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":301,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":294,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":294,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#find"},{"id":302,"name":"findIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"signatures":[{"id":303,"name":"findIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(0)\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"typeParameter":[{"id":304,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":305,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":304,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":306,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":307,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"signatures":[{"id":308,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"parameters":[{"id":309,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":304,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":310,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":311,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":304,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#findIndex"},{"id":312,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"signatures":[{"id":313,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array. Each calls should return an array.\\nThe final result is the concatenation of each arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\'];\\nconst concat = (_: string) => [_ + \'_1\', _ + \'_2\'];\\nArray.flatMap(array, concat); // [\'a_1\', \'a_2\', \'b_1\', \'b_2\', \'c_1\', \'c_2\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"typeParameter":[{"id":314,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":315,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":316,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":314,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":317,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array and returns an array that will be concatenated."}]},"type":{"type":"reflection","declaration":{"id":318,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":20,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L20"}],"signatures":[{"id":319,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":20,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L20"}],"parameters":[{"id":320,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":314,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":321,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":322,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":314,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":315,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":315,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#flatMap"},{"id":323,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"signatures":[{"id":324,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an array of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.generate(3, () => \'a\');// == [\'a\', \'a\', \'a\']\\nArray.generate(3, (index) => index * 2);// == [0, 2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"typeParameter":[{"id":325,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":326,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":327,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":328,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"signatures":[{"id":329,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"parameters":[{"id":330,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":325,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":325,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#generate"},{"id":331,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"signatures":[{"id":332,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"code","text":"`Array.isArray()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.hasInstance(Array.empty()) // true\\nArray.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"parameters":[{"id":333,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":440,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Array","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Array#hasInstance"},{"id":334,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"signatures":[{"id":335,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether an array includes a certain item, returning true or false as appropriate."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.includes([\'a\', \'\', \'a\'], \'a\'); // true\\nArray.includes([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // true\\nArray.includes([\'a\', \'b\'], \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"typeParameter":[{"id":336,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":337,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":336,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":338,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to search for."}]},"type":{"type":"reference","target":336,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":339,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The position in this array at which to begin searching for searchItem."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#includes"},{"id":340,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"signatures":[{"id":341,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.indexOf([\'a\', \'\', \'a\'], \'a\'); // Option.Some(0)\\nArray.indexOf([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // Option.Some(2)\\nArray.indexOf([\'a\', \'b\'], \'absent\'); // Option.Some(\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"typeParameter":[{"id":342,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":343,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":342,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":344,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":342,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":345,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#indexOf"},{"id":346,"name":"insertAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"signatures":[{"id":347,"name":"insertAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.insertAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'b\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"typeParameter":[{"id":348,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":349,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":348,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":350,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":351,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":348,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":348,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#insertAt"},{"id":352,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"signatures":[{"id":353,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.isEmpty([]);// true\\nArray.isEmpty([\'a\', \'b\', \'c\']);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"parameters":[{"id":354,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#isEmpty"},{"id":355,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"signatures":[{"id":356,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of a specified "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.lastIndexOf([\'a\', \'b\', \'a\'], \'a\') // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\', \'a\', \'b\', \'a\'], \'a\', 4); // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\'], \'absent\') // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"typeParameter":[{"id":357,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":358,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":357,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":359,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":357,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":360,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index of the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#lastIndexOf"},{"id":361,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"signatures":[{"id":362,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array, and returns an array that contains the results."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3];\\nconst double = (_: number) => _ * 2;\\nArray.map(array, double); // [2, 4, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"typeParameter":[{"id":363,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":364,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":365,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":363,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":366,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":367,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"signatures":[{"id":368,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"parameters":[{"id":369,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":363,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":370,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":371,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":363,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":364,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":364,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#map"},{"id":372,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"signatures":[{"id":373,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new array from a set of items."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.of(1, 2, 3);// [1, 2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"typeParameter":[{"id":374,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":375,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A set of items to include in the new array object."}]},"type":{"type":"array","elementType":{"type":"reference","target":374,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":374,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#of"},{"id":376,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"signatures":[{"id":377,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduce(array, concat, \'$\') // \'$foo:bar:baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"typeParameter":[{"id":378,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":379,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":380,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":378,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":381,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":382,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"signatures":[{"id":383,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"parameters":[{"id":384,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":379,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":385,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":378,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":386,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":387,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":378,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":379,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":388,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":379,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":379,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Array#reduce"},{"id":389,"name":"reduceRight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"signatures":[{"id":390,"name":"reduceRight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduceRight(array, concat, \'$\') // \'$baz:bar:foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"typeParameter":[{"id":391,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":392,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":393,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":391,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":394,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":395,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"signatures":[{"id":396,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"parameters":[{"id":397,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":392,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":398,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":391,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":399,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":400,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":391,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":392,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":401,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":392,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":392,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Array#reduceRight"},{"id":402,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"signatures":[{"id":403,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a reversed array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.reverse([1, 2, 3]);// [3, 2, 1]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"typeParameter":[{"id":404,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":405,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":404,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":404,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#reverse"},{"id":406,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"signatures":[{"id":407,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.size([]) // 0\\nArray.size([\'foo\', \'bar\']) // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"parameters":[{"id":408,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#size"},{"id":409,"name":"slice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"signatures":[{"id":410,"name":"slice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a section of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([1, 2, 3, 4], 1, 3);// [2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"typeParameter":[{"id":411,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":412,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":411,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":413,"name":"start","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The beginning of the specified portion of the array."}]},"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}},{"id":414,"name":"end","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The end of the specified portion of the array. This is exclusive of the item at the index "},{"kind":"code","text":"`end`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":411,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#slice"},{"id":415,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"signatures":[{"id":416,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether the specified callback function returns true for any item of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.some([1, 2, 3], isEven); // true\\nArray.some([1, 3], isEven); // false\\nArray.some([], (value) => true); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"typeParameter":[{"id":417,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":418,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":417,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":419,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":420,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"signatures":[{"id":421,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"parameters":[{"id":422,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":417,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":423,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":424,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":417,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#some"},{"id":425,"name":"sort","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"signatures":[{"id":426,"name":"sort","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a sorted array using "},{"kind":"code","text":"`compareFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([11, 2, 22, 1], (a, b) => a - b);// [1, 2, 11, 22]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"typeParameter":[{"id":427,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":428,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":427,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":429,"name":"compareFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Function used to determine the order of the items. It is expected to return\\na negative value if first argument is less than second argument, zero if they\'re equal and a positive\\nvalue otherwise."}]},"type":{"type":"reflection","declaration":{"id":430,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":15,"character":58,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L15"}],"signatures":[{"id":431,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":15,"character":58,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L15"}],"parameters":[{"id":432,"name":"a","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":427,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":433,"name":"b","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":427,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"}}]}}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":427,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#sort"},{"id":434,"name":"updateAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"signatures":[{"id":435,"name":"updateAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Replace "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.updateAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"typeParameter":[{"id":436,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":437,"name":"array","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":436,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":438,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the updated item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":439,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":436,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":436,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#updateAt"}],"groups":[{"title":"Functions","children":[226,231,236,241,244,264,282,302,312,323,331,334,340,346,352,355,361,372,376,389,402,406,409,415,425,434]}],"categories":[{"title":"Accessor","children":[226,406]},{"title":"Constructor","children":[241,323,372]},{"title":"Predicate","children":[244,334,352,415]},{"title":"Type","children":[331]},{"title":"__CATEGORY__","children":[231,236,264,282,302,312,340,346,355,361,376,389,402,409,425,434]}],"sources":[{"fileName":"packages/core/src/Array.ts","line":28,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L28"},{"fileName":"packages/core/src/Array.ts","line":43,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L43"}],"permalink":"/std/fr/api/core/namespace/Array","previousId":703,"nextId":442},{"id":442,"name":"BigInt","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`bigint`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { BigInt } from \'@w5s/core\';\\n\\nconst total = [1n, 2n, 3n].reduce(BigInt[\'+\'], 0n);// 6n\\nBigInt[\'==\'](total, 6n);// true\\n```"}]}]},"children":[{"id":463,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":464,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":465,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":466,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":467,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":468,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":469,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/core/namespace/BigInt#inspect"},{"id":456,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/core/namespace/BigInt#typeName"},{"id":540,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":541,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":542,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":543,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":544,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#!="},{"id":492,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"signatures":[{"id":493,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"parameters":[{"id":494,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":495,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#*"},{"id":488,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"signatures":[{"id":489,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"parameters":[{"id":490,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":491,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#+"},{"id":496,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"signatures":[{"id":497,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"parameters":[{"id":498,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":499,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#-"},{"id":510,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":511,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":512,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":513,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":514,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#<"},{"id":505,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":506,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":507,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":508,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":509,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#<="},{"id":545,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":546,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":547,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":548,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":549,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#=="},{"id":520,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":521,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":522,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":523,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":524,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#>"},{"id":515,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":516,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":517,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":518,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":519,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#>="},{"id":482,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"signatures":[{"id":483,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"parameters":[{"id":484,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#abs"},{"id":470,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":471,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":472,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":473,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":474,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"bigint"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/BigInt#codecDecode"},{"id":475,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":476,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":477,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":478,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/BigInt#codecEncode"},{"id":479,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":480,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":481,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/BigInt#codecSchema"},{"id":500,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":501,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":502,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":503,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":504,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/BigInt#compare"},{"id":535,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":536,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":537,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":538,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":539,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/BigInt#equals"},{"id":446,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L28"}],"signatures":[{"id":447,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of bigint using "},{"kind":"code","text":"`radix`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.format(1024n, 10);// \'1024\'\\nBigInt.format(1024n, 16);// \'400\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L28"}],"parameters":[{"id":448,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":449,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/BigInt#format"},{"id":460,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":461,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":462,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/BigInt#from"},{"id":450,"name":"fromInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L29"}],"signatures":[{"id":451,"name":"fromInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an integer to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigInt.fromNumber(Int(1));// 1n\\nBigInt.fromNumber(Int(-1));// -1n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L29"}],"parameters":[{"id":452,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#fromInt"},{"id":453,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L30"}],"signatures":[{"id":454,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a number to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigInt.fromNumber(1);// Option.Some(1n)\\nBigInt.fromNumber(-1);// Option.Some(-1n)\\nBigInt.fromNumber(1.1);// Option.None\\nBigInt.fromNumber(Number.MAX_SAFE_INTEGER + 1);// Option.None\\nBigInt.fromNumber(Number.MIN_SAFE_INTEGER - 1);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L30"}],"parameters":[{"id":455,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"bigint"}]}}],"permalink":"/std/fr/api/core/namespace/BigInt#fromNumber"},{"id":457,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":458,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":459,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"bigint"}}}],"permalink":"/std/fr/api/core/namespace/BigInt#hasInstance"},{"id":530,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":531,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":532,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":533,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":534,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#max"},{"id":525,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":526,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":527,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":528,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":529,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#min"},{"id":443,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L27"}],"signatures":[{"id":444,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse the expression and returns a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nBigInt.parse(\'0b10101\');// Option.Some(21n)\\nBigInt.parse(\'1024\');// Option.Some(1024n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/BigInt.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L27"}],"parameters":[{"id":445,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the expression to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/BigInt#parse"},{"id":485,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"signatures":[{"id":486,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"parameters":[{"id":487,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/core/namespace/BigInt#sign"}],"groups":[{"title":"Variables","children":[463,456]},{"title":"Functions","children":[540,492,488,496,510,505,545,520,515,482,470,475,479,500,535,446,460,450,453,457,530,525,443,485]}],"categories":[{"title":"Codec","children":[470,475,479]},{"title":"Comparator","children":[540,510,505,545,520,515,500,535,530,525]},{"title":"Constructor","children":[460]},{"title":"Numeric","children":[492,488,496,482,485]},{"title":"Type","children":[463,456,457]},{"title":"__CATEGORY__","children":[446,450,453,443]}],"sources":[{"fileName":"packages/core/src/BigInt.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/BigInt.ts#L22"}],"permalink":"/std/fr/api/core/namespace/BigInt","previousId":225,"nextId":550},{"id":550,"name":"Boolean","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`boolean`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Boolean } from \'@w5s/core\';\\n\\nif (Boolean.hasInstance(unknownValue)) {\\n  // typeof unknownValue === \'boolean\'\\n}\\n```"}]}]},"children":[{"id":608,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":609,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":610,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":611,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":612,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":613,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":614,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/core/namespace/Boolean#inspect"},{"id":601,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/core/namespace/Boolean#typeName"},{"id":591,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":592,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":593,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":594,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":595,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#!="},{"id":561,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":562,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":563,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":564,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":565,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#<"},{"id":556,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":557,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":558,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":559,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":560,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#<="},{"id":596,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":597,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":598,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":599,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":600,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#=="},{"id":571,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":572,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":573,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":574,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":575,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#>"},{"id":566,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":567,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":568,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":569,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":570,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#>="},{"id":615,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":616,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":617,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":618,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":619,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#codecDecode"},{"id":620,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":621,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":622,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":623,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Boolean#codecEncode"},{"id":624,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":625,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":626,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#codecSchema"},{"id":551,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":552,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":553,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":554,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":555,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Boolean#compare"},{"id":586,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":587,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":588,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":589,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":590,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#equals"},{"id":605,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":606,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":607,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#from"},{"id":602,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":603,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":604,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/std/fr/api/core/namespace/Boolean#hasInstance"},{"id":581,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":582,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":583,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":584,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":585,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#max"},{"id":576,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":577,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":578,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":579,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":580,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#min"}],"groups":[{"title":"Variables","children":[608,601]},{"title":"Functions","children":[591,561,556,596,571,566,615,620,624,551,586,605,602,581,576]}],"categories":[{"title":"Codec","children":[615,620,624]},{"title":"Comparator","children":[591,561,556,596,571,566,551,586,581,576]},{"title":"Constructor","children":[605]},{"title":"Type","children":[608,601,602]}],"sources":[{"fileName":"packages/core/src/Boolean.ts","line":17,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Boolean.ts#L17"}],"permalink":"/std/fr/api/core/namespace/Boolean","previousId":442,"nextId":787},{"id":787,"name":"Callable","variant":"declaration","kind":4,"flags":{},"children":[{"id":788,"name":"symbol","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Symbol.call"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":36,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L36"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"call"},"objectType":{"type":"query","queryType":{"type":"reference","target":1805,"name":"Symbol","package":"@w5s/core"}}},"defaultValue":"Symbol.call","permalink":"/std/fr/api/core/namespace/Callable#symbol"}],"groups":[{"title":"Variables","children":[788]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L28"},{"fileName":"packages/core/src/Callable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"},{"fileName":"packages/core/src/Callable.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L32"}],"permalink":"/std/fr/api/core/namespace/Callable","previousId":550,"nextId":789},{"id":789,"name":"Codec","variant":"declaration","kind":4,"flags":{},"children":[{"id":826,"name":"Context","variant":"declaration","kind":256,"flags":{},"children":[{"id":831,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Error result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":79,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L79"}],"type":{"type":"reflection","declaration":{"id":832,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":79,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L79"}],"signatures":[{"id":833,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":79,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L79"}],"parameters":[{"id":834,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":835,"name":"asType","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":836,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}},{"id":827,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Ok result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":73,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L73"}],"type":{"type":"reflection","declaration":{"id":828,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":73,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L73"}],"signatures":[{"id":829,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":73,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L73"}],"parameters":[{"id":830,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":836,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":836,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[831,827]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":67,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L67"}],"typeParameters":[{"id":836,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Codec#Context"},{"id":824,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"typeParameters":[{"id":825,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":825,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":810,"typeArguments":[{"type":"inferred","name":"Type"}],"name":"Codec","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Type"},"name":"Type","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/core/namespace/Codec#TypeOf"},{"id":790,"name":"decode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"}],"signatures":[{"id":791,"name":"decode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" containing the decoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = \'2022-07-31T14:04:48.449Z\';\\nconst decoded = Codec.decode(codec, input);// Result.Ok(\'2022-07-31T14:04:48.449Z\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"}],"typeParameter":[{"id":792,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":793,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":792,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"codecDecode"}],"name":"Pick","package":"typescript"}},{"id":794,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":792,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#decode"},{"id":795,"name":"encode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"signatures":[{"id":796,"name":"encode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = new Date(\'2022-07-31T14:04:48.449Z\');\\nconst encoded = Codec.encode(codec, input);// \'2022-07-31T14:04:48.449Z\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"typeParameter":[{"id":797,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":798,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the encoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":797,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"codecEncode"}],"name":"Pick","package":"typescript"}},{"id":799,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"reference","target":797,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Codec#encode"},{"id":800,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"signatures":[{"id":801,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a lazy evaluated codec. Useful for recursive structures."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Node {\\n  value: unknown,\\n  children: Node[]\\n}\\nconst Node = object<Node>({\\n  content: string,\\n  responses: Codec.lazy(() => array(Node))\\n})\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"typeParameter":[{"id":802,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":803,"name":"getCodec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the accessor to the codec"}]},"type":{"type":"reflection","declaration":{"id":804,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":23,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L23"}],"signatures":[{"id":805,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":23,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L23"}],"type":{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":802,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":802,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#lazy"},{"id":806,"name":"schema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"signatures":[{"id":807,"name":"schema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCodec.schema(string);// { type: \'string\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"typeParameter":[{"id":808,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":809,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":808,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"codecSchema"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#schema"}],"groups":[{"title":"Interfaces","children":[826]},{"title":"Type Aliases","children":[824]},{"title":"Functions","children":[790,795,800,806]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":9,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L9"},{"fileName":"packages/core/src/Codec.ts","line":58,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L58"},{"fileName":"packages/core/src/Codec.ts","line":64,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L64"}],"permalink":"/std/fr/api/core/namespace/Codec","previousId":787,"nextId":921},{"id":921,"name":"Enum","variant":"declaration","kind":4,"flags":{},"children":[{"id":938,"name":"KeyOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum keys of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":30,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L30"}],"typeParameters":[{"id":939,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":936,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"ArrayValue"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":1806,"name":"Symbol.enumKeys","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumKeys"}},"objectType":{"type":"reference","target":939,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"name":"ArrayValue","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Enum#KeyOf"},{"id":940,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum values of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":34,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L34"}],"typeParameters":[{"id":941,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":936,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"ArrayValue"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":1807,"name":"Symbol.enumValues","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumValues"}},"objectType":{"type":"reference","target":941,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"name":"ArrayValue","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Enum#ValueOf"},{"id":922,"name":"enumKeys","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Symbol for the property holding enum keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L15"}],"type":{"type":"intrinsic","name":"symbol"},"defaultValue":"Symbol.enumKeys","permalink":"/std/fr/api/core/namespace/Enum#enumKeys"},{"id":923,"name":"enumValues","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Symbol for the property holding enum values"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L19"}],"type":{"type":"intrinsic","name":"symbol"},"defaultValue":"Symbol.enumValues","permalink":"/std/fr/api/core/namespace/Enum#enumValues"},{"id":924,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"}],"signatures":[{"id":925,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Enum Object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst MyEnum = Enum.define({\\n  Foo: \'foo\',\\n  Bar: \'bar\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"}],"typeParameter":[{"id":926,"name":"T","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","package":"typescript"}}],"parameters":[{"id":927,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":926,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":936,"typeArguments":[{"type":"reference","target":926,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Enum#define"},{"id":928,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L21"}],"signatures":[{"id":929,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.keys(MyEnum) // [\'Foo\', \'Bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L21"}],"typeParameter":[{"id":930,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":936,"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":931,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":930,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":938,"typeArguments":[{"type":"reference","target":930,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.KeyOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Enum#keys"},{"id":932,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L22"}],"signatures":[{"id":933,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.values(MyEnum) // [\'foo\', \'bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L22"}],"typeParameter":[{"id":934,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":936,"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":935,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":934,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":940,"typeArguments":[{"type":"reference","target":934,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.ValueOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Enum#values"}],"groups":[{"title":"Type Aliases","children":[938,940]},{"title":"Variables","children":[922,923]},{"title":"Functions","children":[924,928,932]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":24,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L24"},{"fileName":"packages/core/src/Enum.ts","line":50,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L50"}],"permalink":"/std/fr/api/core/namespace/Enum","previousId":789,"nextId":1046},{"id":1046,"name":"Int","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate integer values"}]},"children":[{"id":1053,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"target":601,"permalink":"/std/fr/api/core/namespace/Int#typeName"},{"id":1060,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":1061,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":1062,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1063,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1064,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1065,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1066,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/core/namespace/Int#inspect"},{"id":1109,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Int#maxValue"},{"id":1108,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Int#minValue"},{"id":1150,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1151,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1152,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1153,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1154,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#!="},{"id":1100,"name":"*?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L74"}],"signatures":[{"id":1101,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L74"}],"parameters":[{"id":1102,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1103,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#*?"},{"id":1096,"name":"+?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":41,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L41"}],"signatures":[{"id":1097,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":41,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L41"}],"parameters":[{"id":1098,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1099,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#+?"},{"id":1104,"name":"-?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":57,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L57"}],"signatures":[{"id":1105,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":57,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L57"}],"parameters":[{"id":1106,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1107,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#-?"},{"id":1120,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":1121,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":1122,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1123,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1124,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#<"},{"id":1115,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":1116,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":1117,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1118,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1119,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#<="},{"id":1155,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1156,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1157,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1158,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1159,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#=="},{"id":1130,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":1131,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":1132,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1133,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1134,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#>"},{"id":1125,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":1126,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":1127,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1128,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1129,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#>="},{"id":1090,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"signatures":[{"id":1091,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"parameters":[{"id":1092,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#abs"},{"id":1067,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":1068,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":1069,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1070,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1071,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#codecDecode"},{"id":1072,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":1073,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":1074,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1075,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Int#codecEncode"},{"id":1076,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":1077,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":1078,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#codecSchema"},{"id":1110,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":1111,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":1112,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1113,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1114,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Int#compare"},{"id":1145,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1146,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1147,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1148,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1149,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#equals"},{"id":1079,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L27"}],"signatures":[{"id":1080,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of integer"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.format(Int(1), 10);// \'1\'\\nInt.format(Int(10), 16);// \'A\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L27"}],"parameters":[{"id":1081,"name":"intValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1082,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Int#format"},{"id":1057,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":1058,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":1059,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#from"},{"id":1087,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L29"}],"signatures":[{"id":1088,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new integer from "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst intValue = Int.fromNumber(0.5);// 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L29"}],"parameters":[{"id":1089,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an initial numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#fromNumber"},{"id":1054,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":1055,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":1056,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Int#hasInstance"},{"id":1140,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":1141,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":1142,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1143,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1144,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#max"},{"id":1135,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":1136,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":1137,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1138,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1139,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#min"},{"id":1083,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L28"}],"signatures":[{"id":1084,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.parse(\'1\');// Option.Some(1)\\nInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L28"}],"parameters":[{"id":1085,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer expression"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1086,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#parse"},{"id":1093,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"signatures":[{"id":1094,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"parameters":[{"id":1095,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#sign"},{"id":1050,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"signatures":[{"id":1051,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"parameters":[{"id":1052,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Int#unwrap"},{"id":1047,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"signatures":[{"id":1048,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"parameters":[{"id":1049,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#wrap"}],"groups":[{"title":"References","children":[1053]},{"title":"Variables","children":[1060,1109,1108]},{"title":"Functions","children":[1150,1100,1096,1104,1120,1115,1155,1130,1125,1090,1067,1072,1076,1110,1145,1079,1057,1087,1054,1140,1135,1083,1093,1050,1047]}],"categories":[{"title":"Bound","children":[1109,1108]},{"title":"Codec","children":[1067,1072,1076]},{"title":"Comparator","children":[1150,1120,1115,1155,1130,1125,1110,1145,1140,1135]},{"title":"Constructor","children":[1057,1087]},{"title":"Numeric","children":[1100,1096,1104,1090,1093]},{"title":"Type","children":[1060,1054]},{"title":"__CATEGORY__","children":[1053,1079,1083,1050,1047]}],"sources":[{"fileName":"packages/core/src/Int.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L15"},{"fileName":"packages/core/src/Int.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L22"}],"permalink":"/std/fr/api/core/namespace/Int","previousId":921,"nextId":1173},{"id":1173,"name":"JSON","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to encode/decode JSON. Instead of throwing errors like "},{"kind":"code","text":"`globalThis.JSON`"},{"kind":"text","text":", functions returns "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { JSON } from \'@w5s/core\';\\n\\nconst object = { a: true };\\nconst encoded = JSON.stringify(object); // Result.Ok(\'{\\"a\\":true}\')\\nif (Result.isOk(encoded)) {\\n  const decoded = JSON.parse(encoded); // Result.Ok({ a: true })\\n}\\n```"}]}]},"children":[{"id":1174,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"signatures":[{"id":1175,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse using "},{"kind":"code","text":"`JSON.parse()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = \'{ \\"a\\": true }\';\\nJSON.parse(valid); // Result.Ok({ a: true })\\n\\nconst invalid = \'{ \\"a\\": }\';\\nJSON.parse(invalid); // Result.Error(new SyntaxError(\'Unexpected token } in JSON at position 7\'))\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"parameters":[{"id":1176,"name":"anyString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"SyntaxError"},"name":"SyntaxError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/JSON#parse"},{"id":1177,"name":"stringify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"signatures":[{"id":1178,"name":"stringify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert to string using "},{"kind":"code","text":"`JSON.stringify()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = { a: true };\\nJSON.stringify(valid); // Result.Ok(\'{\\"a\\":true}\')\\n\\nconst circular = {\\n  get ref() {\\n    return this;\\n  },\\n};\\nJSON.stringify(circular);// Result.Error(new TypeError(...));\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"parameters":[{"id":1179,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to convert"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"TypeError"},"name":"TypeError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/JSON#stringify"}],"groups":[{"title":"Functions","children":[1174,1177]}],"sources":[{"fileName":"packages/core/src/JSON.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L37"}],"permalink":"/std/fr/api/core/namespace/JSON","previousId":1046,"nextId":1180},{"id":1180,"name":"Number","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`number`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Number } from \'@w5s/core\';\\n\\nconst total = [1, 1.5, 2].reduce(Number[\'+\'], 0);// 4.5\\nNumber[\'==\'](total, 4.5);// true\\n```"}]}]},"children":[{"id":1258,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"target":601,"permalink":"/std/fr/api/core/namespace/Number#typeName"},{"id":1265,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":1266,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":1267,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1268,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1269,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1270,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1271,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/core/namespace/Number#inspect"},{"id":1189,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/fr/api/core/namespace/Number#maxValue"},{"id":1188,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/fr/api/core/namespace/Number#minValue"},{"id":1248,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1249,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1250,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1251,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1252,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#!="},{"id":1200,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"signatures":[{"id":1201,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"parameters":[{"id":1202,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1203,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#*"},{"id":1196,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"signatures":[{"id":1197,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"parameters":[{"id":1198,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1199,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#+"},{"id":1204,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"signatures":[{"id":1205,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"parameters":[{"id":1206,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1207,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#-"},{"id":1218,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":1219,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":1220,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1221,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1222,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#<"},{"id":1213,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":1214,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":1215,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1216,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1217,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#<="},{"id":1253,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1254,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1255,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1256,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1257,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#=="},{"id":1228,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":1229,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":1230,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1231,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1232,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#>"},{"id":1223,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":1224,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":1225,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1226,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1227,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#>="},{"id":1190,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"signatures":[{"id":1191,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"parameters":[{"id":1192,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#abs"},{"id":1272,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":1273,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":1274,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1275,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1276,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#codecDecode"},{"id":1277,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":1278,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":1279,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1280,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Number#codecEncode"},{"id":1281,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":1282,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":1283,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#codecSchema"},{"id":1208,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":1209,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":1210,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1211,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1212,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#compare"},{"id":1243,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1244,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1245,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1246,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1247,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#equals"},{"id":1184,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L28"}],"signatures":[{"id":1185,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.format(1.1);// \'1.1\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L28"}],"parameters":[{"id":1186,"name":"numberValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1187,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Number#format"},{"id":1262,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":1263,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":1264,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#from"},{"id":1259,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":1260,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":1261,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/std/fr/api/core/namespace/Number#hasInstance"},{"id":1238,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":1239,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":1240,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1241,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1242,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#max"},{"id":1233,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":1234,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":1235,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1236,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1237,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#min"},{"id":1181,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L27"}],"signatures":[{"id":1182,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an number\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.parse(\'1\');// Option.Some(1)\\nNumber.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L27"}],"parameters":[{"id":1183,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#parse"},{"id":1193,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"signatures":[{"id":1194,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"parameters":[{"id":1195,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#sign"}],"groups":[{"title":"References","children":[1258]},{"title":"Variables","children":[1265,1189,1188]},{"title":"Functions","children":[1248,1200,1196,1204,1218,1213,1253,1228,1223,1190,1272,1277,1281,1208,1243,1184,1262,1259,1238,1233,1181,1193]}],"categories":[{"title":"Bound","children":[1189,1188]},{"title":"Codec","children":[1272,1277,1281]},{"title":"Comparator","children":[1248,1218,1213,1253,1228,1223,1208,1243,1238,1233]},{"title":"Constructor","children":[1262]},{"title":"Numeric","children":[1200,1196,1204,1190,1193]},{"title":"Type","children":[1265,1259]},{"title":"__CATEGORY__","children":[1258,1184,1181]}],"sources":[{"fileName":"packages/core/src/Number.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L21"}],"permalink":"/std/fr/api/core/namespace/Number","previousId":1173,"nextId":1284},{"id":1284,"name":"Numeric","variant":"declaration","kind":4,"flags":{},"children":[{"id":1317,"name":"Add","variant":"declaration","kind":256,"flags":{},"children":[{"id":1318,"name":"+","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"signatures":[{"id":1319,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":91,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L91"}],"parameters":[{"id":1320,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1322,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Add.Left","refersToTypeParameter":true}},{"id":1321,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1323,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.Add.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1324,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.Add.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1318]}],"categories":[{"title":"Numeric","children":[1318]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":77,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L77"}],"typeParameters":[{"id":1322,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1323,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1322,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Add.Left","refersToTypeParameter":true}},{"id":1324,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1322,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Add.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Add"},{"id":1293,"name":"CheckedAdd","variant":"declaration","kind":256,"flags":{},"children":[{"id":1294,"name":"+?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":41,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L41"}],"signatures":[{"id":1295,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":41,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L41"}],"parameters":[{"id":1296,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1298,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedAdd.Left","refersToTypeParameter":true}},{"id":1297,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1299,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.CheckedAdd.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1300,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.CheckedAdd.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1294]}],"categories":[{"title":"Numeric","children":[1294]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":27,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L27"}],"typeParameters":[{"id":1298,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1299,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1298,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedAdd.Left","refersToTypeParameter":true}},{"id":1300,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1298,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedAdd.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedAdd"},{"id":1309,"name":"CheckedMultiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1310,"name":"*?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L74"}],"signatures":[{"id":1311,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L74"}],"parameters":[{"id":1312,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1314,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedMultiply.Left","refersToTypeParameter":true}},{"id":1313,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1315,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.CheckedMultiply.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1316,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.CheckedMultiply.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1310]}],"categories":[{"title":"Numeric","children":[1310]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":60,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L60"}],"typeParameters":[{"id":1314,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1315,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1314,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedMultiply.Left","refersToTypeParameter":true}},{"id":1316,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1314,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedMultiply.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedMultiply"},{"id":1301,"name":"CheckedSubtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1302,"name":"-?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":57,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L57"}],"signatures":[{"id":1303,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":57,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L57"}],"parameters":[{"id":1304,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1306,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1305,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1307,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.CheckedSubtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1308,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.CheckedSubtract.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1302]}],"categories":[{"title":"Numeric","children":[1302]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":43,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L43"}],"typeParameters":[{"id":1306,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1307,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1306,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1308,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1306,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.CheckedSubtract.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedSubtract"},{"id":1333,"name":"Multiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1334,"name":"*","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"signatures":[{"id":1335,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":125,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L125"}],"parameters":[{"id":1336,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1338,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Multiply.Left","refersToTypeParameter":true}},{"id":1337,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1339,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.Multiply.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1340,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.Multiply.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1334]}],"categories":[{"title":"Numeric","children":[1334]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":111,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L111"}],"typeParameters":[{"id":1338,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1339,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1338,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Multiply.Left","refersToTypeParameter":true}},{"id":1340,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1338,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Multiply.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Multiply"},{"id":1285,"name":"Signed","variant":"declaration","kind":256,"flags":{},"children":[{"id":1286,"name":"abs","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"signatures":[{"id":1287,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L17"}],"parameters":[{"id":1288,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1292,"name":"T","package":"@w5s/core","qualifiedName":"Numeric.Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1292,"name":"T","package":"@w5s/core","qualifiedName":"Numeric.Signed.T","refersToTypeParameter":true}}]},{"id":1289,"name":"sign","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"signatures":[{"id":1290,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L24"}],"parameters":[{"id":1291,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1292,"name":"T","package":"@w5s/core","qualifiedName":"Numeric.Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1292,"name":"T","package":"@w5s/core","qualifiedName":"Numeric.Signed.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1286,1289]}],"categories":[{"title":"Numeric","children":[1286,1289]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":4,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L4"}],"typeParameters":[{"id":1292,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Numeric#Signed"},{"id":1325,"name":"Subtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1326,"name":"-","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"signatures":[{"id":1327,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric.ts","line":108,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L108"}],"parameters":[{"id":1328,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1330,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Subtract.Left","refersToTypeParameter":true}},{"id":1329,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1331,"name":"Right","package":"@w5s/core","qualifiedName":"Numeric.Subtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1332,"name":"Return","package":"@w5s/core","qualifiedName":"Numeric.Subtract.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1326]}],"categories":[{"title":"Numeric","children":[1326]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":94,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L94"}],"typeParameters":[{"id":1330,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1331,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1330,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Subtract.Left","refersToTypeParameter":true}},{"id":1332,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1330,"name":"Left","package":"@w5s/core","qualifiedName":"Numeric.Subtract.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Subtract"}],"groups":[{"title":"Interfaces","children":[1317,1293,1309,1301,1333,1285,1325]}],"sources":[{"fileName":"packages/core/src/Numeric.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric.ts#L3"}],"permalink":"/std/fr/api/core/namespace/Numeric","previousId":1180,"nextId":1341},{"id":1341,"name":"Option","variant":"declaration","kind":4,"flags":{},"children":[{"id":1411,"name":"None","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`undefined`"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":69,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L69"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/fr/api/core/namespace/Option#None"},{"id":1412,"name":"Some","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Non "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and non "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" value"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":74,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L74"}],"typeParameters":[{"id":1413,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1413,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","target":1413,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/fr/api/core/namespace/Option#Some"},{"id":1346,"name":"None","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L53"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/fr/api/core/namespace/Option#None"},{"id":1342,"name":"Some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L52"}],"signatures":[{"id":1343,"name":"Some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"An identity function that validates passed value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L52"}],"typeParameter":[{"id":1344,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1345,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the non empty value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1344,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1344,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#Some"},{"id":1347,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"signatures":[{"id":1348,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":" if the option is "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":", otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" with the value and returns the result.\\nSome languages call this operation "},{"kind":"code","text":"`flatMap`"},{"kind":"text","text":" or "},{"kind":"code","text":"`chain`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (x: number): Option<number> => Option.Some(x * x);\\n\\nOption.andThen(Option.Some(2), square); // Option.Some(16)\\nOption.andThen(Option.None, square); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"typeParameter":[{"id":1349,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1350,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1351,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1349,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1352,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1353,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"signatures":[{"id":1354,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"parameters":[{"id":1355,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1349,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1350,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1350,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#andThen"},{"id":1356,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"signatures":[{"id":1357,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to coerce value to "},{"kind":"code","text":"`Option`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.from(null);// undefined\\nOption.from(undefined);// undefined\\nOption.from(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"typeParameter":[{"id":1358,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1359,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the converted value"}]},"type":{"type":"reference","target":1358,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1358,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option/from.ts","qualifiedName":"NullableValues"},"name":"NullableValues","package":"@w5s/core"}],"name":"Exclude","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#from"},{"id":1360,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"signatures":[{"id":1361,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nconst x = None;\\nOption.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"typeParameter":[{"id":1362,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1363,"name":"DefaultValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1364,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1362,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1365,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a default value"}]},"type":{"type":"reflection","declaration":{"id":1366,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"signatures":[{"id":1367,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"type":{"type":"reference","target":1363,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1362,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1363,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/fr/api/core/namespace/Option#getOrElse"},{"id":1368,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"signatures":[{"id":1369,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", throw an error if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Some(\'foo\');\\nOption.getOrThrow(x);// \'foo\'\\n\\nlet x = None;\\nOption.getOrThrow(x);// throw TypeError(\'option must not be a null|undefined\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"typeParameter":[{"id":1370,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1371,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1370,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}],"type":{"type":"reference","target":1370,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Option#getOrThrow"},{"id":1372,"name":"isNone","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"signatures":[{"id":1373,"name":"isNone","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"code","text":"`null`"},{"kind":"text","text":"or "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isNone(None);// true\\nOption.isNone(undefined);// true\\nOption.isNone(null);// true\\n\\nOption.isNone(Some(\'foo\'));// false\\nOption.isNone(\'foo\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"parameters":[{"id":1374,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}}}],"permalink":"/std/fr/api/core/namespace/Option#isNone"},{"id":1375,"name":"isSome","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"signatures":[{"id":1376,"name":"isSome","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is neither "},{"kind":"code","text":"`null`"},{"kind":"text","text":" nor "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isSome(Option.None);// false\\nOption.isSome(undefined);// false\\nOption.isSome(null);// false\\n\\nOption.isSome(Option.Some(\'foo\'));// true\\nOption.isSome(\'foo\');// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"typeParameter":[{"id":1377,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1378,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1377,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1377,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}],"name":"Exclude","package":"typescript"}}}],"permalink":"/std/fr/api/core/namespace/Option#isSome"},{"id":1379,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"signatures":[{"id":1380,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Option<U>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"code","text":"`Some`"},{"kind":"text","text":" value, leaving a "},{"kind":"code","text":"`None`"},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.map(x, (value) => `${value}_bar`));// Some(\'foo_bar\') == \'foo_bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"typeParameter":[{"id":1381,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1382,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1383,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1381,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1384,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1385,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"signatures":[{"id":1386,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"parameters":[{"id":1387,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1381,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1382,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1382,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#map"},{"id":1388,"name":"match","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L61"}],"signatures":[{"id":1389,"name":"match","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`matchers.Some(value)`"},{"kind":"text","text":" if "},{"kind":"code","text":"`option`"},{"kind":"text","text":" is "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", otherwise "},{"kind":"code","text":"`matchers.None()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst stringify = (opt: Option<{foo: string}>) => Option.match(opt, {\\n Some: ({ foo }) => foo + \'_baz\',\\n None: () => \'none\'\\n});\\n\\nconst someString = stringify(Option.Some({ foo: \'bar\' })); // \'bar_baz\'\\nconst noneString = stringify(Option.None); // \'none\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L61"}],"typeParameter":[{"id":1390,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1391,"name":"Return","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1392,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1390,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1393,"name":"matchers","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a matchers object with None and Some case"}]},"type":{"type":"reflection","declaration":{"id":1394,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1399,"name":"None","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback to be called if the option is None"}]},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L25"}],"type":{"type":"reflection","declaration":{"id":1400,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":25,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L25"}],"signatures":[{"id":1401,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":25,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L25"}],"type":{"type":"reference","target":1391,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":1395,"name":"Some","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback to be called if the option is Some"}]},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L24"}],"type":{"type":"reflection","declaration":{"id":1396,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":24,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L24"}],"signatures":[{"id":1397,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/match.ts","line":24,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L24"}],"parameters":[{"id":1398,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1390,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1391,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"groups":[{"title":"Properties","children":[1399,1395]}],"sources":[{"fileName":"packages/core/src/Option/match.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/match.ts#L23"}]}}}],"type":{"type":"reference","target":1391,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Option#match"},{"id":1402,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L62"}],"signatures":[{"id":1403,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the option if it contains a value, otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" and returns the result."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst alt = () => Some(\'bar\')\\n\\nOption.orElse(Option.Some(\'foo\'), alt); // Option.Some(\'foo\')\\nOption.orElse(Option.None, alt); // Option.Some(\'bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L62"}],"typeParameter":[{"id":1404,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1405,"name":"option","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1404,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1406,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1407,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"signatures":[{"id":1408,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1404,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1404,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#orElse"}],"groups":[{"title":"Type Aliases","children":[1411,1412]},{"title":"Variables","children":[1346]},{"title":"Functions","children":[1342,1347,1356,1360,1368,1372,1375,1379,1388,1402]}],"categories":[{"title":"Accessor","children":[1360,1368]},{"title":"Constructor","children":[1342,1356]},{"title":"Type","children":[1372,1375]},{"title":"__CATEGORY__","children":[1411,1412,1346,1347,1379,1388,1402]}],"sources":[{"fileName":"packages/core/src/Option.ts","line":46,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L46"},{"fileName":"packages/core/src/Option.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"},{"fileName":"packages/core/src/Option.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L65"}],"permalink":"/std/fr/api/core/namespace/Option","previousId":1284,"nextId":1415},{"id":1415,"name":"Record","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate Record"}]},"children":[{"id":1416,"name":"delete","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"signatures":[{"id":1417,"name":"delete","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record without the "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.delete(record, \'myProperty\'); // {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"typeParameter":[{"id":1418,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1419,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1420,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1418,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1419,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1421,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1418,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1418,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1419,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#delete"},{"id":1422,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"signatures":[{"id":1423,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an empty "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1415,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst empty = Record.empty(); // frozen {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"typeParameter":[{"id":1424,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1425,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1424,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1425,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#empty"},{"id":1426,"name":"entries","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"signatures":[{"id":1427,"name":"entries","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [[\'first\', 1], [\'second\', 2]]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"typeParameter":[{"id":1428,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1429,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1430,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1428,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1429,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"IterableIterator"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1428,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1429,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"IterableIterator","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#entries"},{"id":1431,"name":"forEach","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"signatures":[{"id":1432,"name":"forEach","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Call "},{"kind":"code","text":"`fn(value, key, record)`"},{"kind":"text","text":" on each entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.forEach(record, (value, key, record) => {\\n // call (1, \'first\', record)\\n // call (2, \'second\', record)\\n}); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"typeParameter":[{"id":1433,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1434,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1435,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1433,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1434,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1436,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1435,"name":"D","package":"@w5s/core","refersToTypeParameter":true}},{"id":1437,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"callback called on each entry"}]},"type":{"type":"reflection","declaration":{"id":1438,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"signatures":[{"id":1439,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"parameters":[{"id":1440,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1434,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":1441,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1433,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1442,"name":"record","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1435,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Record#forEach"},{"id":1443,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"signatures":[{"id":1444,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1415,"tsLinkText":""},{"kind":"text","text":" from an iterable of [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = Record.from([[\'a\', 1], [\'b\', 2]]); // frozen { a: 1, b: 2}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"typeParameter":[{"id":1445,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1446,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1447,"name":"iterable","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1445,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1446,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1445,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1446,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#from"},{"id":1448,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"signatures":[{"id":1449,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an Option of value for the given "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.get(record, \'myProperty\'); // Option.Some(\'myValue\')\\nRecord.get(record, \'nonExistent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"typeParameter":[{"id":1450,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1451,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1452,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1450,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1451,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1453,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1450,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1451,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Record#get"},{"id":1454,"name":"has","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"signatures":[{"id":1455,"name":"has","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if "},{"kind":"code","text":"`record`"},{"kind":"text","text":" contains "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.has(record, \'myProperty\'); // true\\nRecord.has(record, \'nonExistent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"typeParameter":[{"id":1456,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1457,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1456,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}},{"id":1458,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1456,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Record#has"},{"id":1459,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"signatures":[{"id":1460,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.keys(record)); // [\'first\', \'second\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"typeParameter":[{"id":1461,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1462,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1461,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"IterableIterator"},"typeArguments":[{"type":"reference","target":1461,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"IterableIterator","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#keys"},{"id":1463,"name":"set","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"signatures":[{"id":1464,"name":"set","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record including the new "},{"kind":"code","text":"`[key, value]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.set(record, \'myOtherProperty\', \'myOtherValue\'); // { myProperty: \'myValue\', myOtherProperty: \'myOtherValue\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"typeParameter":[{"id":1465,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1466,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1467,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1465,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1466,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1468,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1465,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1469,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry value"}]},"type":{"type":"reference","target":1466,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1465,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1466,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#set"},{"id":1470,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"signatures":[{"id":1471,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the number of entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.size(record); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"typeParameter":[{"id":1472,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1473,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1472,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Record#size"},{"id":1474,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"signatures":[{"id":1475,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [1, 2]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"typeParameter":[{"id":1476,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1477,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1478,"name":"record","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1476,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1477,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"IterableIterator"},"typeArguments":[{"type":"reference","target":1477,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"IterableIterator","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#values"}],"groups":[{"title":"Functions","children":[1416,1422,1426,1431,1443,1448,1454,1459,1463,1470,1474]}],"categories":[{"title":"Accessor","children":[1448,1470]},{"title":"Constructor","children":[1422,1443]},{"title":"__CATEGORY__","children":[1416,1426,1431,1454,1459,1463,1474]}],"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"permalink":"/std/fr/api/core/namespace/Record","previousId":1341,"nextId":1490},{"id":1490,"name":"Ref","variant":"declaration","kind":4,"flags":{},"children":[{"id":1511,"name":"current","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Current value symbol"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":25,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L25"}],"type":{"type":"literal","value":"current"},"defaultValue":"\'current\'","permalink":"/std/fr/api/core/namespace/Ref#current"},{"id":1491,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"signatures":[{"id":1492,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" has a "},{"kind":"code","text":"`current`"},{"kind":"text","text":" property"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nRef.hasInstance(Ref(123)) // true\\nRef.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"parameters":[{"id":1493,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1486,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Ref","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Ref#hasInstance"},{"id":1503,"name":"modify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1504,"name":"modify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value using a mapping function that returns the new value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.modify(ref, (current) => current + \'bar\'); // Ref.read(ref) == \'foobar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"typeParameter":[{"id":1505,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1506,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1486,"typeArguments":[{"type":"reference","target":1505,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1507,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapping function that will be applied"}]},"type":{"type":"reflection","declaration":{"id":1508,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1509,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"parameters":[{"id":1510,"name":"current","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1505,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1505,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Ref#modify"},{"id":1494,"name":"read","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"signatures":[{"id":1495,"name":"read","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current ref value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.read(ref); // \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"typeParameter":[{"id":1496,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1497,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1486,"typeArguments":[{"type":"reference","target":1496,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":1496,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Ref#read"},{"id":1498,"name":"write","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"signatures":[{"id":1499,"name":"write","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.write(ref, \'bar\'); // Ref.read(ref) == \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"typeParameter":[{"id":1500,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1501,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1486,"typeArguments":[{"type":"reference","target":1500,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1502,"name":"newValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the new value to be set"}]},"type":{"type":"reference","target":1500,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Ref#write"}],"groups":[{"title":"Variables","children":[1511]},{"title":"Functions","children":[1491,1503,1494,1498]}],"categories":[{"title":"Accessor","children":[1503,1494,1498]},{"title":"Type","children":[1491]},{"title":"__CATEGORY__","children":[1511]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"permalink":"/std/fr/api/core/namespace/Ref","previousId":1415,"nextId":1512},{"id":1512,"name":"Result","variant":"declaration","kind":4,"flags":{},"children":[{"id":1659,"name":"Error","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"children":[{"id":1666,"name":"_","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Result.ts","line":88,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L88"}],"type":{"type":"literal","value":"Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct._"}},{"id":1665,"name":"error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The error value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":96,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L96"}],"type":{"type":"reference","target":1667,"name":"E","package":"@w5s/core","qualifiedName":"Result.Error.E","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct.error"}},{"id":1664,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`false`"},{"kind":"text","text":" only for Error objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":92,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L92"}],"type":{"type":"literal","value":false},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct.ok"}}],"groups":[{"title":"Properties","children":[1666,1665,1664]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":86,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L86"}],"typeParameters":[{"id":1667,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":972,"typeArguments":[{"type":"reflection","declaration":{"id":1660,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1663,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":88,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L88"}],"type":{"type":"literal","value":"Error"}},{"id":1662,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The error value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":96,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L96"}],"type":{"type":"reference","target":1667,"name":"E","package":"@w5s/core","qualifiedName":"Result.Error.E","refersToTypeParameter":true}},{"id":1661,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"code","text":"`false`"},{"kind":"text","text":" only for Error objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":92,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L92"}],"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[1663,1662,1661]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":87,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L87"}]}}],"name":"Struct","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Result#Error"},{"id":1650,"name":"Ok","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"children":[{"id":1657,"name":"_","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Result.ts","line":75,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L75"}],"type":{"type":"literal","value":"Ok"},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct._"}},{"id":1655,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" only for Ok objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":79,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L79"}],"type":{"type":"literal","value":true},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct.ok"}},{"id":1656,"name":"value","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The success value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":83,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L83"}],"type":{"type":"reference","target":1658,"name":"V","package":"@w5s/core","qualifiedName":"Result.Ok.V","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"Struct.value"}}],"groups":[{"title":"Properties","children":[1657,1655,1656]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":73,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L73"}],"typeParameters":[{"id":1658,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":972,"typeArguments":[{"type":"reflection","declaration":{"id":1651,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1654,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":75,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L75"}],"type":{"type":"literal","value":"Ok"}},{"id":1652,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" only for Ok objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":79,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L79"}],"type":{"type":"literal","value":true}},{"id":1653,"name":"value","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The success value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":83,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L83"}],"type":{"type":"reference","target":1658,"name":"V","package":"@w5s/core","qualifiedName":"Result.Ok.V","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[1654,1652,1653]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":74,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L74"}]}}],"name":"Struct","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Result#Ok"},{"id":1519,"name":"Error","variant":"declaration","kind":64,"flags":{},"children":[{"id":1524,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Result/Error.ts","line":30,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/Error.ts#L30"}],"type":{"type":"literal","value":"Error"}}],"groups":[{"title":"Properties","children":[1524]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"signatures":[{"id":1520,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":1521,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1522,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1523,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":1522,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1522,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#Error"},{"id":1513,"name":"Ok","variant":"declaration","kind":64,"flags":{},"children":[{"id":1518,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Result/Ok.ts","line":23,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/Ok.ts#L23"}],"type":{"type":"literal","value":"Ok"}}],"groups":[{"title":"Properties","children":[1518]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"signatures":[{"id":1514,"name":"Ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":1515,"name":"Ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"typeParameter":[{"id":1516,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1517,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1516,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1516,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#Ok"},{"id":1525,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"signatures":[{"id":1526,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (num: number): Result<number, \'TestError\'> => Result.Ok(num * num);\\nResult.andThen(Result.Ok(4), square); // Result.Ok(16)\\nResult.andThen(Result.Error(\'TestError\'), square); // Result.Error(\'TestError\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1527,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1528,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1529,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1530,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1531,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1527,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1528,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1532,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a value mapping function"}]},"type":{"type":"reflection","declaration":{"id":1533,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"signatures":[{"id":1534,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"parameters":[{"id":1535,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1527,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1529,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1530,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1529,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":1528,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1530,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#andThen"},{"id":1536,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"signatures":[{"id":1537,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1346,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.get(x);// Option.Some(\'foo\')\\n\\nlet x = Error(\'foo\');\\nResult.get(x);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"typeParameter":[{"id":1538,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1539,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1538,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1412,"typeArguments":[{"type":"reference","target":1538,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1540,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"parameters":[{"id":1541,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1411,"name":"Option.None","package":"@w5s/core"}},{"id":1542,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"typeParameter":[{"id":1543,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1544,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1543,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1543,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#get"},{"id":1545,"name":"getError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"signatures":[{"id":1546,"name":"getError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1346,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getError(x);// Option.None\\n\\nlet x = Error(\'foo\');\\nResult.getError(x);// Option.Some(\'foo\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"typeParameter":[{"id":1547,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1548,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1547,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1412,"typeArguments":[{"type":"reference","target":1547,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1549,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"parameters":[{"id":1550,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1411,"name":"Option.None","package":"@w5s/core"}},{"id":1551,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"typeParameter":[{"id":1552,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1553,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":1552,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1552,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#getError"},{"id":1554,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"signatures":[{"id":1555,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"typeParameter":[{"id":1556,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1557,"name":"VDefault","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1558,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1556,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}},{"id":1559,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns default value"}]},"type":{"type":"reflection","declaration":{"id":1560,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":84,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"signatures":[{"id":1561,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":84,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"type":{"type":"reference","target":1557,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1556,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1557,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/fr/api/core/namespace/Result#getOrElse"},{"id":1562,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"signatures":[{"id":1563,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":", throw "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":".\\n\\n **\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrThrow(x);// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrThrow(x);// throw \'error\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"typeParameter":[{"id":1564,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1565,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1564,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1564,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Result#getOrThrow"},{"id":1566,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"signatures":[{"id":1567,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nResult.hasInstance(null); // === false\\nResult.hasInstance(Result.Ok(null)); // === true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"parameters":[{"id":1568,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Result#hasInstance"},{"id":1569,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"signatures":[{"id":1570,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(Result.isError(x));// false\\n\\nlet x = Error(\'foo\');\\nconsole.log(Result.isError(x));// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"typeParameter":[{"id":1571,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1572,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1573,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1571,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1572,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1659,"typeArguments":[{"type":"reference","target":1572,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Error","package":"@w5s/core","qualifiedName":"Result.Error"}}}],"permalink":"/std/fr/api/core/namespace/Result#isError"},{"id":1574,"name":"isOk","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"signatures":[{"id":1575,"name":"isOk","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(isOk(x));// true\\n\\nlet x = Error(\'foo\');\\nconsole.log(isOk(x));// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"typeParameter":[{"id":1576,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1577,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1578,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1576,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1577,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1650,"typeArguments":[{"type":"reference","target":1576,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ok","package":"@w5s/core","qualifiedName":"Result.Ok"}}}],"permalink":"/std/fr/api/core/namespace/Result#isOk"},{"id":1579,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"signatures":[{"id":1580,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<ValueFrom, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<ValueTo, Error>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Ok(\'foo\');\\nResult.map(result, (value) => `${value}_bar`));// Ok(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"typeParameter":[{"id":1581,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1582,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1583,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1584,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1581,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1583,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1585,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1586,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"signatures":[{"id":1587,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"parameters":[{"id":1588,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1581,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1582,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1582,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1583,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#map"},{"id":1589,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"signatures":[{"id":1590,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Error(\'foo\');\\nResult.mapError(result, (value) => `${value}_bar`));// Error(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":1591,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1592,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1593,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1594,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1591,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1592,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1595,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error  mapper function"}]},"type":{"type":"reflection","declaration":{"id":1596,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":70,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"signatures":[{"id":1597,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":70,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"parameters":[{"id":1598,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1592,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1593,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1591,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1593,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#mapError"},{"id":1599,"name":"match","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L67"}],"signatures":[{"id":1600,"name":"match","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`matchers.Ok(value)`"},{"kind":"text","text":" if "},{"kind":"code","text":"`result`"},{"kind":"text","text":" is "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":", otherwise "},{"kind":"code","text":"`matchers.Error(error)`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst stringify = (opt: Result<{foo: string}, { bar: string}>) => Option.match(opt, {\\n Ok: ({ foo }) => foo + \'_ok\',\\n Error: ({ bar }) => bar + \'_error\',\\n});\\n\\nconst okString = stringify(Result.Ok({ foo: \'foo_value\' })); // \'foo_value_ok\'\\nconst errorString = stringify(Result.Error({ bar: \'bar_value\' })); // \'bar_value_error\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L67"}],"typeParameter":[{"id":1601,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1602,"name":"Error","variant":"typeParam","kind":131072,"flags":{}},{"id":1603,"name":"Return","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1604,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1601,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1602,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1605,"name":"matchers","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a matchers object with None and Some case"}]},"type":{"type":"reflection","declaration":{"id":1606,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1611,"name":"Error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback to be called if the result is Error"}]},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":26,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L26"}],"type":{"type":"reflection","declaration":{"id":1612,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L26"}],"signatures":[{"id":1613,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L26"}],"parameters":[{"id":1614,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1602,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1603,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":1607,"name":"Ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback to be called if the result is Ok"}]},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L25"}],"type":{"type":"reflection","declaration":{"id":1608,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":25,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L25"}],"signatures":[{"id":1609,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/match.ts","line":25,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L25"}],"parameters":[{"id":1610,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1601,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1603,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"groups":[{"title":"Properties","children":[1611,1607]}],"sources":[{"fileName":"packages/core/src/Result/match.ts","line":24,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/match.ts#L24"}]}}}],"type":{"type":"reference","target":1603,"name":"Return","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Result#match"},{"id":1615,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L68"}],"signatures":[{"id":1616,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1519,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1513,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on result values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst handleError = (message: string) => Result.Ok(message + \'_handled\');\\nResult.orElse(Result.Error(\'TestError\'), square); // Result.Ok(\'TestError_handled\')\\nResult.orElse(Result.Ok(4), square); // Result.Ok(4)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L68"}],"typeParameter":[{"id":1617,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1618,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1619,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1620,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1621,"name":"result","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1617,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1618,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1622,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a error mapping function"}]},"type":{"type":"reflection","declaration":{"id":1623,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"signatures":[{"id":1624,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"parameters":[{"id":1625,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1618,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1619,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1620,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1617,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1619,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"reference","target":1620,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#orElse"},{"id":1626,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"signatures":[{"id":1627,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Ok(block())`"},{"kind":"text","text":". If an error was thrown then it returns "},{"kind":"code","text":"`Error(onError(<<thrown error>>))`"},{"kind":"text","text":" instead"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class InvalidURLError extends Error {}\\nconst result = Result.tryCall(\\n () => new URL(\'my/url\'),\\n (error) => new InvalidURLError()\\n);\\n\\nconst class FetchError extends Error {}\\nconst result = Result.tryCall(\\n () => fetch(\'my/url\'),\\n () => new FetchError()\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"typeParameter":[{"id":1628,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1629,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1630,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":1631,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1632,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1628,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}},{"id":1633,"name":"onError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":1634,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":1635,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"parameters":[{"id":1636,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1629,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1628,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1629,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":1637,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"typeParameter":[{"id":1638,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1639,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1640,"name":"block","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1641,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1642,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1638,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}},{"id":1643,"name":"onError","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1644,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":1645,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"parameters":[{"id":1646,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1639,"name":"E","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1638,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1639,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#tryCall"}],"groups":[{"title":"Interfaces","children":[1659,1650]},{"title":"Functions","children":[1519,1513,1525,1536,1545,1554,1562,1566,1569,1574,1579,1589,1599,1615,1626]}],"categories":[{"title":"Accessor","children":[1536,1545,1554,1562]},{"title":"Constructor","children":[1519,1513]},{"title":"Type","children":[1566,1569,1574]},{"title":"__CATEGORY__","children":[1659,1650,1525,1579,1589,1599,1615,1626]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":49,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L49"},{"fileName":"packages/core/src/Result.ts","line":54,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"},{"fileName":"packages/core/src/Result.ts","line":72,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L72"}],"permalink":"/std/fr/api/core/namespace/Result","previousId":1490,"nextId":1668},{"id":1668,"name":"String","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`string`"}]},"children":[{"id":1774,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"target":601,"permalink":"/std/fr/api/core/namespace/String#typeName"},{"id":1781,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":1782,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":1783,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1784,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1785,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1786,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1787,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/core/namespace/String#inspect"},{"id":1764,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1765,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1766,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1767,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1768,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#!="},{"id":1734,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":1735,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":1736,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1737,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1738,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#<"},{"id":1729,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":1730,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":1731,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1732,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1733,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#<="},{"id":1769,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1770,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1771,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1772,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1773,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#=="},{"id":1744,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":1745,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":1746,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1747,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1748,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#>"},{"id":1739,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":1740,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":1741,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1742,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1743,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#>="},{"id":1669,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L25"}],"signatures":[{"id":1670,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the character at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst string = \'foo\';\\nString.at(string, 1) // Option.Some(\'bar\')\\nString.at(string, -1) //  Option.Some(\'baz\') i.e. the last\\nString.at(string, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L25"}],"parameters":[{"id":1671,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1672,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#at"},{"id":1788,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":1789,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":1790,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1791,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1792,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#codecDecode"},{"id":1793,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":1794,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":1795,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1796,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/String#codecEncode"},{"id":1797,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":1798,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":1799,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#codecSchema"},{"id":1724,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":1725,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":1726,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1727,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1728,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/String#compare"},{"id":1673,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L26"}],"signatures":[{"id":1674,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.concat([\'a\', \'b\', \'c\']) // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L26"}],"parameters":[{"id":1675,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#concat"},{"id":1676,"name":"endsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"signatures":[{"id":1677,"name":"endsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string ends with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.endsWith(\'abc\', \'bc\'); // true\\nString.endsWith(\'abc\', \'ab\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"parameters":[{"id":1678,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1679,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#endsWith"},{"id":1759,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1760,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1761,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1762,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1763,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#equals"},{"id":1778,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":1779,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":1780,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#from"},{"id":1680,"name":"fromCodePoint","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"signatures":[{"id":1681,"name":"fromCodePoint","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string created by using the specified code point."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.fromCodePoint(65, 9731) == \\"A\u2603\\"\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"parameters":[{"id":1682,"name":"code","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of string codes"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#fromCodePoint"},{"id":1775,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":1776,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":1777,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/fr/api/core/namespace/String#hasInstance"},{"id":1683,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"signatures":[{"id":1684,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.includes(\'abc\', \'ab\'); // true\\nString.includes(\'abc\', \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"parameters":[{"id":1685,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1686,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#includes"},{"id":1687,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"signatures":[{"id":1688,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.indexOf(\'aa\', \'a\'); // Option.Some(0)\\nString.indexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.indexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"parameters":[{"id":1689,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1690,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1691,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#indexOf"},{"id":1692,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"signatures":[{"id":1693,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.isEmpty(\'\');// true\\nString.isEmpty(\'abc\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"parameters":[{"id":1694,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#isEmpty"},{"id":1695,"name":"join","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"signatures":[{"id":1696,"name":"join","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.join(\'|\', [\'a\', \'b\', \'c\']) // \'a|b|c\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"parameters":[{"id":1697,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the separator"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1698,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#join"},{"id":1699,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"signatures":[{"id":1700,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.lastIndexOf(\'aa\', \'a\'); // Option.Some(1)\\nString.lastIndexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.lastIndexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"parameters":[{"id":1701,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1702,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1703,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#lastIndexOf"},{"id":1754,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":1755,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":1756,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1757,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1758,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#max"},{"id":1749,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":1750,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":1751,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1752,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1753,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#min"},{"id":1704,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"signatures":[{"id":1705,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new string from all parts passed as arguments"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.of(\'a\', \'b\', \'c\') // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"parameters":[{"id":1706,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"a list of parts"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#of"},{"id":1707,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"signatures":[{"id":1708,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.size(\'\') // 0\\nString.size(\'foo bar\') // 6\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"parameters":[{"id":1709,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1160,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#size"},{"id":1710,"name":"split","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"signatures":[{"id":1711,"name":"split","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Split a string into substrings using the specified separator and return them as an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.split(\'a|b|c\', \'|\'); // [\'a\', \'b\', \'c\']\\nString.split(\'a|b|c\', \'|\', 2); // [\'a\', \'b\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"parameters":[{"id":1712,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1713,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reflection","declaration":{"id":1714,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1715,"name":"[split]","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"signatures":[{"id":1716,"name":"[split]","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"parameters":[{"id":1717,"name":"string","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1718,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"groups":[{"title":"Methods","children":[1715]}],"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}]}}]}},{"id":1719,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value used to limit the number of elements returned in the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/fr/api/core/namespace/String#split"},{"id":1720,"name":"startsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"signatures":[{"id":1721,"name":"startsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string starts with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.startsWith(\'abc\', \'ab\'); // true\\nString.startsWith(\'abc\', \'bc\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"parameters":[{"id":1722,"name":"string","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1723,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#startsWith"}],"groups":[{"title":"References","children":[1774]},{"title":"Variables","children":[1781]},{"title":"Functions","children":[1764,1734,1729,1769,1744,1739,1669,1788,1793,1797,1724,1673,1676,1759,1778,1680,1775,1683,1687,1692,1695,1699,1754,1749,1704,1707,1710,1720]}],"categories":[{"title":"Accessor","children":[1669,1707]},{"title":"Codec","children":[1788,1793,1797]},{"title":"Combinator","children":[1673,1695]},{"title":"Comparator","children":[1764,1734,1729,1769,1744,1739,1724,1759,1754,1749]},{"title":"Constructor","children":[1778,1680,1704]},{"title":"Predicate","children":[1676,1683,1692,1720]},{"title":"Type","children":[1781,1775]},{"title":"__CATEGORY__","children":[1774,1687,1699,1710]}],"sources":[{"fileName":"packages/core/src/String.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L22"}],"permalink":"/std/fr/api/core/namespace/String","previousId":1512,"nextId":976},{"id":976,"name":"Struct","variant":"declaration","kind":4,"flags":{},"children":[{"id":985,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":997,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":998,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":999,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1000,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},{"id":1001,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1002,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1003,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":711,"name":"Type.inspect"}},{"id":990,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":50,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L50"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":704,"name":"Type.typeName"}},{"id":986,"name":"create","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L44"}],"signatures":[{"id":987,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L44"}],"parameters":[{"id":988,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":989,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":983,"typeArguments":[{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]},{"id":994,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":995,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":996,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":709,"name":"Type.from"}}],"inheritedFrom":{"type":"reference","target":708,"name":"Type.from"}},{"id":991,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":992,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":993,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":706,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":705,"name":"Type.hasInstance"}}],"groups":[{"title":"Properties","children":[997,990]},{"title":"Methods","children":[986,994,991]}],"categories":[{"title":"Constructor","children":[986,994]},{"title":"Type","children":[997,990,991]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":30,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L30"}],"typeParameters":[{"id":1004,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":972,"typeArguments":[{"type":"reflection","declaration":{"id":1005,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1006,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":30,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L30"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1006]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":30,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L30"}]}}],"name":"Struct","package":"@w5s/core"}}],"signatures":[{"id":1007,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":37,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L37"}],"parameters":[{"id":1008,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":983,"typeArguments":[{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":703,"typeArguments":[{"type":"reference","target":1004,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Struct#Module"},{"id":983,"name":"Parameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new Struct"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":28,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L28"}],"typeParameters":[{"id":984,"name":"Model","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":984,"name":"Model","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1010,"name":"Struct.type","package":"@w5s/core"}],"name":"Omit","package":"typescript"},"permalink":"/std/fr/api/core/namespace/Struct#Parameters"},{"id":1010,"name":"type","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":55,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L55"},{"fileName":"packages/core/src/Struct.ts","line":57,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L57"}],"type":{"type":"query","queryType":{"type":"reference","target":1009,"name":"type","package":"@w5s/core","qualifiedName":"Struct.type"}},"permalink":"/std/fr/api/core/namespace/Struct#type"},{"id":1009,"name":"type","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"The type property discriminator"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":55,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L55"},{"fileName":"packages/core/src/Struct.ts","line":57,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L57"}],"type":{"type":"literal","value":"_"},"defaultValue":"\'_\'","permalink":"/std/fr/api/core/namespace/Struct#type"},{"id":977,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L74"}],"signatures":[{"id":978,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Struct`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"Module","target":985,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Model = Struct<{ [Struct.type]: \'Model\', foo: boolean }>\\nconst Model = Struct.define<Model>(\'Model\');\\n\\nconst instance = Model({ foo: true }); // { _: \'Model\', foo: true }\\nModel.typeName === \'Model\' // true\\nModel.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L74"}],"typeParameter":[{"id":979,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":980,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":981,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":74,"character":48,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L74"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[981]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":74,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L74"}]}}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":982,"name":"typeName","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type unique name"}]},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":979,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":985,"typeArguments":[{"type":"reference","target":979,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Struct.Module"}}],"permalink":"/std/fr/api/core/namespace/Struct#define"}],"groups":[{"title":"Interfaces","children":[985]},{"title":"Type Aliases","children":[983,1010]},{"title":"Variables","children":[1009]},{"title":"Functions","children":[977]}],"categories":[{"title":"Constructor","children":[985]},{"title":"__CATEGORY__","children":[983,1010,1009,977]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L15"},{"fileName":"packages/core/src/Struct.ts","line":24,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L24"}],"permalink":"/std/fr/api/core/namespace/Struct","previousId":1668,"nextId":1805},{"id":1805,"name":"Symbol","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of well known symbols"}]},"children":[{"id":1808,"name":"call","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Callable callback"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":21,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L21"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.call"},"name":"call","package":"@w5s/core","qualifiedName":"SymbolConstructor.call","preferValues":true}},"permalink":"/std/fr/api/core/namespace/Symbol#call"},{"id":1806,"name":"enumKeys","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Enum keys"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":11,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L11"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.enumKeys"},"name":"enumKeys","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumKeys","preferValues":true}},"permalink":"/std/fr/api/core/namespace/Symbol#enumKeys"},{"id":1807,"name":"enumValues","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Enum values"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.enumValues"},"name":"enumValues","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumValues","preferValues":true}},"permalink":"/std/fr/api/core/namespace/Symbol#enumValues"},{"id":1809,"name":"nodeInspect","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"NodeJS inspect symbol"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L26"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.nodeInspect"},"name":"nodeInspect","package":"@w5s/core","qualifiedName":"SymbolConstructor.nodeInspect","preferValues":true}},"permalink":"/std/fr/api/core/namespace/Symbol#nodeInspect"}],"groups":[{"title":"Variables","children":[1808,1806,1807,1809]}],"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"}],"permalink":"/std/fr/api/core/namespace/Symbol","previousId":976,"nextId":1810},{"id":1810,"name":"Tag","variant":"declaration","kind":4,"flags":{},"children":[{"id":1849,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":1856,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"inheritedFrom":{"type":"reference","target":704,"name":"Type.typeName"},"target":601},{"id":1863,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":1864,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":1865,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1866,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},{"id":1867,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1868,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1869,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":711,"name":"Type.inspect"}},{"id":1870,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":1871,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":1872,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1873,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1874,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":812,"name":"Codec.codecDecode"}}],"inheritedFrom":{"type":"reference","target":811,"name":"Codec.codecDecode"}},{"id":1875,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":1876,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":1877,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1878,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":817,"name":"Codec.codecEncode"}}],"inheritedFrom":{"type":"reference","target":816,"name":"Codec.codecEncode"}},{"id":1879,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":1880,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":1881,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":821,"name":"Codec.codecSchema"}}],"inheritedFrom":{"type":"reference","target":820,"name":"Codec.codecSchema"}},{"id":1860,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":1861,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":1862,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":709,"name":"Type.from"}}],"inheritedFrom":{"type":"reference","target":708,"name":"Type.from"}},{"id":1857,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":1858,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":1859,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":706,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":705,"name":"Type.hasInstance"}},{"id":1853,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"signatures":[{"id":1854,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"parameters":[{"id":1855,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"reference","target":1882,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}]},{"id":1850,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"signatures":[{"id":1851,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"parameters":[{"id":1852,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1882,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}],"groups":[{"title":"References","children":[1856]},{"title":"Properties","children":[1863]},{"title":"Methods","children":[1870,1875,1879,1860,1857,1853,1850]}],"categories":[{"title":"Codec","children":[1870,1875,1879]},{"title":"Constructor","children":[1860]},{"title":"Type","children":[1863,1857]},{"title":"__CATEGORY__","children":[1856,1853,1850]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":35,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L35"}],"typeParameters":[{"id":1882,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":1883,"name":"To","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1882,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"signatures":[{"id":1884,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":42,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L42"}],"parameters":[{"id":1885,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1882,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":703,"typeArguments":[{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":1883,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Tag#Module"},{"id":1819,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":1825,"name":"from","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"type":{"type":"reflection","declaration":{"id":1826,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":1827,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":1828,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}},"inheritedFrom":{"type":"reference","target":727,"name":"Parameters.from"}},{"id":1821,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"type":{"type":"reflection","declaration":{"id":1822,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"signatures":[{"id":1823,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"parameters":[{"id":1824,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":723,"name":"Parameters.hasInstance"}},{"id":1829,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"type":{"type":"reflection","declaration":{"id":1830,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":1831,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":1832,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}},{"id":1833,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1834,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":1835,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":731,"name":"Parameters.inspect"}},{"id":1820,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":101,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":722,"name":"Parameters.typeName"}},{"id":1836,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":1837,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":1838,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1839,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1840,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":739,"name":"Parameters.codecDecode"}}],"inheritedFrom":{"type":"reference","target":738,"name":"Parameters.codecDecode"}},{"id":1841,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":1842,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":1843,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1844,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":744,"name":"Parameters.codecEncode"}}],"inheritedFrom":{"type":"reference","target":743,"name":"Parameters.codecEncode"}},{"id":1845,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":1846,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":1847,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":748,"name":"Parameters.codecSchema"}}],"inheritedFrom":{"type":"reference","target":747,"name":"Parameters.codecSchema"}}],"groups":[{"title":"Properties","children":[1825,1821,1829,1820]},{"title":"Methods","children":[1836,1841,1845]}],"categories":[{"title":"Codec","children":[1836,1841,1845]},{"title":"Constructor","children":[1825]},{"title":"__CATEGORY__","children":[1821,1829,1820]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":33,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L33"}],"typeParameters":[{"id":1848,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":721,"typeArguments":[{"type":"reference","target":1848,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}],"permalink":"/std/fr/api/core/namespace/Tag#Parameters"},{"id":1811,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L30"}],"signatures":[{"id":1812,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Tag module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype Foo = string & Tag<\'Foo\'>;\\nconst Foo = Tag.define<string, Foo>({\\n  typeName: \'Foo\',\\n  hasInstance: (anyValue) => typeof anyValue === \'string\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L30"}],"typeParameter":[{"id":1813,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":1814,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1815,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1819,"typeArguments":[{"type":"reference","target":1814,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Tag.Parameters"}}],"type":{"type":"reference","target":1849,"typeArguments":[{"type":"reference","target":1813,"name":"From","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1814,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Tag.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Tag#define"}],"groups":[{"title":"Interfaces","children":[1849,1819]},{"title":"Functions","children":[1811]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L20"},{"fileName":"packages/core/src/Tag.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L29"},{"fileName":"packages/core/src/Tag.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L32"}],"permalink":"/std/fr/api/core/namespace/Tag","previousId":1805,"nextId":637},{"id":637,"name":"Type","variant":"declaration","kind":4,"flags":{},"children":[{"id":751,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":752,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"inheritedFrom":{"type":"reference","target":704,"name":"Type.typeName"},"target":601},{"id":759,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":760,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":761,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":762,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},{"id":763,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":764,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":765,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":711,"name":"Type.inspect"}},{"id":766,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":767,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":768,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":769,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":770,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":812,"name":"Codec.codecDecode"}}],"inheritedFrom":{"type":"reference","target":811,"name":"Codec.codecDecode"}},{"id":771,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":772,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":773,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":774,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":817,"name":"Codec.codecEncode"}}],"inheritedFrom":{"type":"reference","target":816,"name":"Codec.codecEncode"}},{"id":775,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":776,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":777,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":821,"name":"Codec.codecSchema"}}],"inheritedFrom":{"type":"reference","target":820,"name":"Codec.codecSchema"}},{"id":756,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":757,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":758,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":709,"name":"Type.from"}}],"inheritedFrom":{"type":"reference","target":708,"name":"Type.from"}},{"id":753,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":754,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":755,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":706,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":705,"name":"Type.hasInstance"}}],"groups":[{"title":"References","children":[752]},{"title":"Properties","children":[759]},{"title":"Methods","children":[766,771,775,756,753]}],"categories":[{"title":"Codec","children":[766,771,775]},{"title":"Constructor","children":[756]},{"title":"Type","children":[759,753]},{"title":"__CATEGORY__","children":[752]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"typeParameters":[{"id":778,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":703,"typeArguments":[{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":778,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Type#Module"},{"id":721,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":727,"name":"from","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"type":{"type":"reflection","declaration":{"id":728,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":729,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":730,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}}},{"id":723,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"type":{"type":"reflection","declaration":{"id":724,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"signatures":[{"id":725,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"parameters":[{"id":726,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":731,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"type":{"type":"reflection","declaration":{"id":732,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":733,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":734,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}},{"id":735,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":736,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":737,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}},{"id":722,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":101,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"}],"type":{"type":"intrinsic","name":"string"}},{"id":738,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":739,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":740,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":741,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":742,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecDecode"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecDecode"}},{"id":743,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":744,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":745,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":746,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecEncode"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecEncode"}},{"id":747,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":748,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":749,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecSchema"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.codecSchema"}}],"groups":[{"title":"Properties","children":[727,723,731,722]},{"title":"Methods","children":[738,743,747]}],"categories":[{"title":"Codec","children":[738,743,747]},{"title":"Constructor","children":[727]},{"title":"__CATEGORY__","children":[723,731,722]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":100,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L100"}],"typeParameters":[{"id":750,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":810,"typeArguments":[{"type":"reference","target":750,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"name":"Partial","package":"typescript"}],"extendedBy":[{"type":"reference","target":1819,"name":"Parameters"}],"permalink":"/std/fr/api/core/namespace/Type#Parameters"},{"id":719,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract the type of object from its module"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"typeParameters":[{"id":720,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":720,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":703,"typeArguments":[{"type":"inferred","name":"T"}],"name":"Type","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"T"},"name":"T","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/core/namespace/Type#TypeOf"},{"id":655,"name":"BigInt","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":83,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L83"}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#BigInt"},{"id":656,"name":"Boolean","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":84,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L84"}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#Boolean"},{"id":692,"name":"Number","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L86"}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#Number"},{"id":702,"name":"String","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":89,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L89"}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#String"},{"id":651,"name":"Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L82"}],"signatures":[{"id":652,"name":"Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a codec for "},{"kind":"code","text":"`Array<V>`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec = Type.Array(dateISO);\\nconst encoded = Codec.encode(codec, [new Date(\'1970-01-01T00:00:00.000Z\')]);// [\'1970-01-01T00:00:00.000Z\']\\nconst decoded = Codec.decode(codec, [\'1970-01-01T00:00:00.000Z\']);// Result.Ok([Date(\'1970-01-01T00:00:00.000Z\')])\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L82"}],"typeParameter":[{"id":653,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":654,"name":"Item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module for array item"}]},"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":653,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":440,"typeArguments":[{"type":"reference","target":653,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayType","package":"@w5s/core","qualifiedName":"Array"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Array"},{"id":657,"name":"Int","variant":"declaration","kind":64,"flags":{},"children":[{"id":666,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"target":601},{"id":673,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":674,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":675,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":676,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":677,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":678,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":679,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}},{"id":680,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":681,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":682,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":683,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":684,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":685,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":686,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":687,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":688,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":689,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":690,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":691,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}]},{"id":670,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":671,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":672,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":667,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":668,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":669,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}}]},{"id":663,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"signatures":[{"id":664,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":54,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L54"}],"parameters":[{"id":665,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":660,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"signatures":[{"id":661,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":48,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L48"}],"parameters":[{"id":662,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[666]},{"title":"Properties","children":[673]},{"title":"Methods","children":[680,685,689,670,667,663,660]}],"categories":[{"title":"Codec","children":[680,685,689]},{"title":"Constructor","children":[670]},{"title":"Type","children":[673,667]},{"title":"__CATEGORY__","children":[666,663,660]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L85"}],"signatures":[{"id":658,"name":"Int","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L85"}],"parameters":[{"id":659,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Int"},{"id":693,"name":"Object","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":87,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L87"}],"signatures":[{"id":694,"name":"Object","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Type for "},{"kind":"code","text":"`P`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.Object({ created: dateISO }, \'SomeType\');\\nconst encoded = Codec.encode(SomeType, { created: new Date(\'1970-01-01T00:00:00.000Z\') });// { created: \'1970-01-01T00:00:00.000Z\' }\\nconst decoded = Codec.decode(SomeType, { created: \'1970-01-01T00:00:00.000Z\' });// Result.Ok({ created: Date(\'1970-01-01T00:00:00.000Z\') })\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":87,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L87"}],"typeParameter":[{"id":695,"name":"P","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":696,"name":"Properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec for each array item"}]},"type":{"type":"mapped","parameter":"K","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":751,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Object.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":695,"name":"P","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"readonlyModifier":"+"}},{"id":697,"name":"typeName","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":695,"name":"P","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Object"},{"id":698,"name":"Option","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L88"}],"signatures":[{"id":699,"name":"Option","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new optional type from "},{"kind":"code","text":"`Value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst OptionString = Type.Option(Type.String);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L88"}],"typeParameter":[{"id":700,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":701,"name":"Value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value type"}]},"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":700,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":700,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionType","package":"@w5s/core","qualifiedName":"Option"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Option"},{"id":638,"name":"anyOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":79,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L79"}],"signatures":[{"id":639,"name":"anyOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a union of all types"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst ABType = Type.anyOf(AType, BType);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":79,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L79"}],"typeParameter":[{"id":640,"name":"Types","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":751,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":641,"name":"types","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":640,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":719,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","target":640,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#anyOf"},{"id":642,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":80,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L80"}],"signatures":[{"id":643,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Type module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ninterface NewType {\\n  foo: boolean;\\n}\\nconst NewType = Type.define<NewType>({\\n  typeName: \'NewType\',\\n  hasInstance(value) {\\n    return typeof value.foo === \'boolean\';\\n  },\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":80,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L80"}],"typeParameter":[{"id":644,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":645,"name":"parameters","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type parameters"}]},"type":{"type":"reference","target":721,"typeArguments":[{"type":"reference","target":644,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}}],"type":{"type":"reference","target":751,"typeArguments":[{"type":"reference","target":644,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#define"},{"id":646,"name":"ensure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":81,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L81"}],"signatures":[{"id":647,"name":"ensure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ensure that "},{"kind":"code","text":"`value`"},{"kind":"text","text":" is a valid "},{"kind":"code","text":"`T`"},{"kind":"text","text":". Throw an error otherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nType.ensure(Type.String, \'foo\'); // void\\nType.ensure(Type.String, 42); // throw new Error(\'42 is not a valid String\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":81,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L81"}],"typeParameter":[{"id":648,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":649,"name":"Type","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module"}]},"type":{"type":"reference","target":703,"typeArguments":[{"type":"reference","target":648,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"}},{"id":650,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to ensure"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":true,"targetType":{"type":"reference","target":648,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}}],"permalink":"/std/fr/api/core/namespace/Type#ensure"}],"groups":[{"title":"Interfaces","children":[751,721]},{"title":"Type Aliases","children":[719]},{"title":"Variables","children":[655,656,692,702]},{"title":"Functions","children":[651,657,693,698,638,642,646]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":22,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L22"},{"fileName":"packages/core/src/Type.ts","line":78,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L78"},{"fileName":"packages/core/src/Type.ts","line":91,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L91"}],"permalink":"/std/fr/api/core/namespace/Type","previousId":1810,"nextId":440},{"id":627,"name":"Bounded","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generic bound module of value "},{"kind":"code","text":"`T`"}]},"children":[{"id":629,"name":"maxValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":630,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}},{"id":628,"name":"minValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":630,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[629,628]}],"categories":[{"title":"Bound","children":[629,628]}],"sources":[{"fileName":"packages/core/src/Bounded.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L4"}],"typeParameters":[{"id":630,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/interface/Bounded","previousId":1161,"nextId":783},{"id":783,"name":"Callable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable interface"}]},"children":[{"id":784,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":785,"name":"[call]","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L11"}],"type":{"type":"reference","target":786,"name":"F","package":"@w5s/core","qualifiedName":"Callable.F","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[784]},{"title":"Properties","children":[785]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L28"},{"fileName":"packages/core/src/Callable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"},{"fileName":"packages/core/src/Callable.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L32"}],"typeParameters":[{"id":786,"name":"F","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/core/interface/Callable","previousId":627,"nextId":810},{"id":810,"name":"Codec","variant":"declaration","kind":256,"flags":{},"children":[{"id":811,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":812,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":813,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":814,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":815,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":823,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"reference","target":823,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":816,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":817,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":818,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":819,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":823,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":820,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":821,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":822,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[811,816,820]}],"categories":[{"title":"Codec","children":[811,816,820]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":9,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L9"},{"fileName":"packages/core/src/Codec.ts","line":58,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L58"},{"fileName":"packages/core/src/Codec.ts","line":64,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L64"}],"typeParameters":[{"id":823,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":751,"name":"Module"},{"type":"reference","target":942,"name":"Enumerable"},{"type":"reference","target":1849,"name":"Module"}],"permalink":"/std/fr/api/core/interface/Codec","previousId":783,"nextId":847},{"id":847,"name":"Comparable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have total order"}]},"children":[{"id":848,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":1022,"name":"Equal.constructor"}},{"id":889,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":890,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":891,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":892,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":893,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1029,"name":"Equal.!="}}],"inheritedFrom":{"type":"reference","target":1028,"name":"Equal.!="}},{"id":859,"name":"<","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"signatures":[{"id":860,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L50"}],"parameters":[{"id":861,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":862,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":863,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":854,"name":"<=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"signatures":[{"id":855,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L34"}],"parameters":[{"id":856,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":857,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":858,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":894,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":895,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":896,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":897,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":898,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1034,"name":"Equal.=="}}],"inheritedFrom":{"type":"reference","target":1033,"name":"Equal.=="}},{"id":869,"name":">","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"signatures":[{"id":870,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L82"}],"parameters":[{"id":871,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":872,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":873,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":864,"name":">=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"signatures":[{"id":865,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L66"}],"parameters":[{"id":866,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":867,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":868,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":849,"name":"compare","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"signatures":[{"id":850,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L18"}],"parameters":[{"id":851,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":852,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":853,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":884,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":885,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":886,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":887,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":888,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1024,"name":"Equal.equals"}}],"inheritedFrom":{"type":"reference","target":1023,"name":"Equal.equals"}},{"id":879,"name":"max","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"signatures":[{"id":880,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L110"}],"parameters":[{"id":881,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":882,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":883,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":874,"name":"min","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"signatures":[{"id":875,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L96"}],"parameters":[{"id":876,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":877,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":878,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[848]},{"title":"Methods","children":[889,859,854,894,869,864,849,884,879,874]}],"categories":[{"title":"Comparator","children":[889,859,854,894,869,864,849,884,879,874]},{"title":"__CATEGORY__","children":[848]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"},{"fileName":"packages/core/src/Comparable.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L6"}],"typeParameters":[{"id":899,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":1021,"typeArguments":[{"type":"reference","target":899,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}],"permalink":"/std/fr/api/core/interface/Comparable","previousId":810,"nextId":912},{"id":912,"name":"DecodeError","variant":"declaration","kind":256,"flags":{},"children":[{"id":918,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":920,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":6,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L6"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.input"}},{"id":916,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":919,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":5,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L5"}],"type":{"type":"literal","value":"DecodeError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":917,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":50,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[918,920,916,919,917]}],"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L3"},{"fileName":"packages/core/src/DecodeError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L13"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError"},"typeArguments":[{"type":"reflection","declaration":{"id":913,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":915,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":6,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L6"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":914,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":5,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L5"}],"type":{"type":"literal","value":"DecodeError"}}],"groups":[{"title":"Properties","children":[915,914]}],"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":4,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L4"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/core/interface/DecodeError","previousId":847,"nextId":942},{"id":942,"name":"Enumerable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":945,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"inheritedFrom":{"type":"reference","target":704,"name":"Type.typeName"},"target":601},{"id":943,"name":"[enumKeys]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":43,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L43"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}}},{"id":944,"name":"[enumValues]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all values"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":47,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L47"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}}},{"id":952,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":953,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":954,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":955,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":956,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":957,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":958,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":711,"name":"Type.inspect"}},{"id":959,"name":"codecDecode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"signatures":[{"id":960,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L25"}],"parameters":[{"id":961,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":962,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":963,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":826,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":1647,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":812,"name":"Codec.codecDecode"}}],"inheritedFrom":{"type":"reference","target":811,"name":"Codec.codecDecode"}},{"id":964,"name":"codecEncode","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"signatures":[{"id":965,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L41"}],"parameters":[{"id":966,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":967,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":817,"name":"Codec.codecEncode"}}],"inheritedFrom":{"type":"reference","target":816,"name":"Codec.codecEncode"}},{"id":968,"name":"codecSchema","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"signatures":[{"id":969,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L52"}],"parameters":[{"id":970,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":821,"name":"Codec.codecSchema"}}],"inheritedFrom":{"type":"reference","target":820,"name":"Codec.codecSchema"}},{"id":949,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":950,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":951,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":709,"name":"Type.from"}}],"inheritedFrom":{"type":"reference","target":708,"name":"Type.from"}},{"id":946,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":947,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":948,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},"inheritedFrom":{"type":"reference","target":706,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":705,"name":"Type.hasInstance"}}],"groups":[{"title":"References","children":[945]},{"title":"Properties","children":[943,944,952]},{"title":"Methods","children":[959,964,968,949,946]}],"categories":[{"title":"Codec","children":[959,964,968]},{"title":"Constructor","children":[949]},{"title":"Type","children":[952,946]},{"title":"__CATEGORY__","children":[945,943,944]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":37,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L37"}],"typeParameters":[{"id":971,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","target":703,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":810,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":971,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Codec","package":"@w5s/core"}],"permalink":"/std/fr/api/core/interface/Enumerable","previousId":912,"nextId":1021},{"id":1021,"name":"Equal","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have equivalence relation"}]},"children":[{"id":1022,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1028,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1029,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1031,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1032,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1033,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1034,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1035,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1036,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1037,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1023,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1024,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1025,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1026,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1027,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1038,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","children":[1022]},{"title":"Methods","children":[1028,1033,1023]}],"categories":[{"title":"Comparator","children":[1028,1033,1023]},{"title":"__CATEGORY__","children":[1022]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"typeParameters":[{"id":1038,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":847,"name":"Comparable"}],"permalink":"/std/fr/api/core/interface/Equal","previousId":942,"nextId":1486},{"id":1486,"name":"Ref","variant":"declaration","kind":256,"flags":{},"children":[{"id":1487,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1488,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L5"}],"type":{"type":"reference","target":1489,"name":"Value","package":"@w5s/core","qualifiedName":"Ref.Value","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[1487]},{"title":"Properties","children":[1488]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"typeParameters":[{"id":1489,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/interface/Ref","previousId":1021,"nextId":1800},{"id":1800,"name":"SymbolConstructor","variant":"declaration","kind":256,"flags":{},"children":[{"id":1803,"name":"call","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Callable callback"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":21,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L21"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.call"},"name":"call","package":"@w5s/core","qualifiedName":"SymbolConstructor.call","preferValues":true}}},{"id":1801,"name":"enumKeys","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Enum keys"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":11,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L11"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.enumKeys"},"name":"enumKeys","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumKeys","preferValues":true}}},{"id":1802,"name":"enumValues","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Enum values"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.enumValues"},"name":"enumValues","package":"@w5s/core","qualifiedName":"SymbolConstructor.enumValues","preferValues":true}}},{"id":1804,"name":"nodeInspect","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"NodeJS inspect symbol"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L26"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Symbol.ts","qualifiedName":"SymbolConstructor.nodeInspect"},"name":"nodeInspect","package":"@w5s/core","qualifiedName":"SymbolConstructor.nodeInspect","preferValues":true}}}],"groups":[{"title":"Properties","children":[1803,1801,1802,1804]}],"sources":[{"fileName":"packages/core/src/Symbol.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"SymbolConstructor"},"name":"globalThis.SymbolConstructor","package":"typescript","qualifiedName":"SymbolConstructor"},{"type":"union","types":[{"type":"literal","value":"keyFor"},{"type":"literal","value":"for"},{"type":"literal","value":"prototype"},{"type":"literal","value":"metadata"}]}],"name":"Omit","package":"typescript"}],"permalink":"/std/fr/api/core/interface/SymbolConstructor","previousId":1486,"nextId":1816},{"id":1816,"name":"Tag","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enhance "},{"kind":"code","text":"`Base`"},{"kind":"text","text":" by adding tags. Every tag is prefixed by "},{"kind":"code","text":"`@@`"},{"kind":"text","text":" as a convention to never be used by runtime code"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype PositiveNumber = number & Tag<{ positive: true }>;\\nconst isPositive = (n: number): n is PositiveNumber => n >= 0;\\nconst squareRoot = (n: PositiveNumber): PositiveNumber => Math.sqrt(n) as PositiveNumber;\\nconst value = 0;\\nsquareRoot(value); // tsc: Error\\nif (isPositive(value)) {\\n  squareRoot(value); // tsc: Passed\\n}\\n```"}]}]},"children":[{"id":1817,"name":"@@tag","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"type":{"type":"mapped","parameter":"K","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"readonlyModifier":"+"}}],"groups":[{"title":"Properties","children":[1817]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L20"},{"fileName":"packages/core/src/Tag.ts","line":29,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L29"},{"fileName":"packages/core/src/Tag.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L32"}],"typeParameters":[{"id":1818,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"permalink":"/std/fr/api/core/interface/Tag","previousId":1800,"nextId":703},{"id":703,"name":"Type","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":704,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"}],"target":601},{"id":711,"name":"inspect","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"type":{"type":"reflection","declaration":{"id":712,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"signatures":[{"id":713,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":72,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L72"}],"parameters":[{"id":714,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":718,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}},{"id":715,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":716,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}},{"id":717,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":631,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}},{"id":708,"name":"from","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"signatures":[{"id":709,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L61"}],"parameters":[{"id":710,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1409,"typeArguments":[{"type":"reference","target":718,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":705,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"signatures":[{"id":706,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L48"}],"parameters":[{"id":707,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":718,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}}}]}],"groups":[{"title":"References","children":[704]},{"title":"Properties","children":[711]},{"title":"Methods","children":[708,705]}],"categories":[{"title":"Constructor","children":[708]},{"title":"Type","children":[711,705]},{"title":"__CATEGORY__","children":[704]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":22,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L22"},{"fileName":"packages/core/src/Type.ts","line":78,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L78"},{"fileName":"packages/core/src/Type.ts","line":91,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L91"}],"typeParameters":[{"id":718,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":751,"name":"Module"},{"type":"reference","target":942,"name":"Enumerable"},{"type":"reference","target":985,"name":"Module"},{"type":"reference","target":1849,"name":"Module"}],"permalink":"/std/fr/api/core/interface/Type","previousId":1816,"nextId":225},{"id":440,"name":"Array","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":28,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L28"},{"fileName":"packages/core/src/Array.ts","line":43,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L43"}],"typeParameters":[{"id":441,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":441,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},"permalink":"/std/fr/api/core#Array","previousId":637,"nextId":936},{"id":936,"name":"Enum","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":24,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L24"},{"fileName":"packages/core/src/Enum.ts","line":50,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L50"}],"typeParameters":[{"id":937,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"type":{"type":"intersection","types":[{"type":"reference","target":937,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":942,"typeArguments":[{"type":"reference","target":937,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enumerable","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Enum","previousId":440,"nextId":631},{"id":631,"name":"InspectFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L15"}],"type":{"type":"reflection","declaration":{"id":632,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":15,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L15"}],"signatures":[{"id":633,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":634,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":635,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":636,"name":"InspectOptions","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/std/fr/api/core#InspectFunction","previousId":936,"nextId":636},{"id":636,"name":"InspectOptions","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":17,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"},"permalink":"/std/fr/api/core#InspectOptions","previousId":631,"nextId":1160},{"id":1160,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L15"},{"fileName":"packages/core/src/Int.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L22"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"IntType","package":"@w5s/core","qualifiedName":"Int"},"permalink":"/std/fr/api/core#Int","previousId":636,"nextId":1169},{"id":1169,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L11"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"reflection","declaration":{"id":1170,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L17"}],"indexSignature":{"id":1171,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L18"}],"parameters":[{"id":1172,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1169,"name":"JSONValue","package":"@w5s/core"}}}}]},"permalink":"/std/fr/api/core#JSONValue","previousId":1160,"nextId":1409},{"id":1409,"name":"Option","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" is the type used to represent either a defined value "},{"kind":"code","text":"`Some<Value>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`None`"},{"kind":"text","text":" (i.e. "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":")\\n\\nThis module focuses on handling "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" values in a functional style, to avoid throwing errors at runtime.\\nBecause "},{"kind":"code","text":"`Option.None = undefined`"},{"kind":"text","text":", this modules provides an opinionated way to remove confusion between "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":".\\n\\nSome other libraries uses object to implement Maybe/Option monad but has drawbacks :\\n- ECMAScript already uses nullable/undefined values everywhere\\n- Each library that does not uses the "},{"kind":"code","text":"`Some/None`"},{"kind":"text","text":" must be patched / overridden\\n- it creates a third empty value "},{"kind":"code","text":"`None`"},{"kind":"text","text":" in addition to "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Option.Some(\'Django\') : Option.None;\\nconst displayName = (option) => Option.map(option, (value) => \'name: \'+ value);\\nconst print = (option) => {\\n  if (Option.isNone(option)) {\\n    console.warn(\'None\');\\n  } else {\\n    console.log(\'Some(\', option, \')\');\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const option = displayName(getName(i));\\n  print(option); // alternate console.log(\'Some(Django)\'); and console.warn(\'None\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":46,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L46"},{"fileName":"packages/core/src/Option.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"},{"fileName":"packages/core/src/Option.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L65"}],"typeParameters":[{"id":1410,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the contained value"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1410,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1411,"name":"Option.None","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Option","previousId":1169,"nextId":1479},{"id":1479,"name":"Record","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Record is an immutable mapping "},{"kind":"code","text":"`{ [string]: value }`"}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"typeParameters":[{"id":1480,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1414,"name":"RecordKey","package":"@w5s/core"}},{"id":1481,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"mapped","parameter":"P","parameterType":{"type":"reference","target":1480,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},"templateType":{"type":"reference","target":1481,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"readonlyModifier":"+"},"permalink":"/std/fr/api/core#Record","previousId":1409,"nextId":1414},{"id":1414,"name":"RecordKey","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L13"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"permalink":"/std/fr/api/core#RecordKey","previousId":1479,"nextId":1647},{"id":1647,"name":"Result","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Result<Value, Error>`"},{"kind":"text","text":" is the type used to represent either a "},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" or a "},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" as a function return value.\\n"},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" should be used when the result is the expected value.\\n"},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" should be used when recoverable error occurred (i.e. an error that does not require the program to stop)\\n\\nResults can be used with async functions returning "},{"kind":"code","text":"`Promise<Result<Value, Error>>`"},{"kind":"text","text":".\\n\\n**Important: Rejected "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" and thrown "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" should only occur when the program has an unexpected state that should stop the execution**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Result.Ok(\'Django\') : Result.Error(\'error!\');\\nconst displayName = (result) => Result.map(result, (value) => \'name: \'+ value);\\nconst print = (result) => {\\n  if (Result.isError(result)) {\\n    console.error(result.error);\\n  } else {\\n    console.log(result.value);\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const result = displayName(getName(i));\\n  print(result); // alternate console.log(\'name: Django\'); and console.error(\'error!\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":49,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L49"},{"fileName":"packages/core/src/Result.ts","line":54,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"},{"fileName":"packages/core/src/Result.ts","line":72,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L72"}],"typeParameters":[{"id":1648,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of value in case of "},{"kind":"code","text":"`Ok`"}]}},{"id":1649,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of error in case of "},{"kind":"code","text":"`Error`"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1650,"typeArguments":[{"type":"reference","target":1648,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Ok","package":"@w5s/core"},{"type":"reference","target":1659,"typeArguments":[{"type":"reference","target":1649,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Error","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Result","previousId":1414,"nextId":972},{"id":972,"name":"Struct","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L15"},{"fileName":"packages/core/src/Struct.ts","line":24,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L24"}],"typeParameters":[{"id":973,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":974,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":975,"name":"_","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type unique identifier"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L20"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[975]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":16,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L16"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":973,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"},"extendedBy":[{"type":"reference","target":1650,"name":"Ok"},{"type":"reference","target":1659,"name":"Error"}],"permalink":"/std/fr/api/core#Struct","previousId":1647},{"id":779,"name":"Callable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L28"},{"fileName":"packages/core/src/Callable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"},{"fileName":"packages/core/src/Callable.ts","line":32,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L32"}],"signatures":[{"id":780,"name":"Callable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new function from callable interface"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst myCallable = Callable({\\n  [Callable.symbol]: (arg: number) => arg,\\n  myMethod: () => {},\\n});\\n// myCallable(1)\\n// myCallable.myMethod();\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":28,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L28"}],"typeParameter":[{"id":781,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":783,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"parameters":[{"id":782,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":781,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":788,"name":"Callable.symbol","package":"@w5s/core"}},"objectType":{"type":"reference","target":781,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"type":"reference","target":781,"name":"T","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/fr/api/core/function/Callable","nextId":837},{"id":837,"name":"Comparable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"},{"fileName":"packages/core/src/Comparable.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L6"}],"signatures":[{"id":838,"name":"Comparable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct Comparable instance"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst NumberComparable = Comparable({\\n  compare: (left, right) => left - right,\\n});\\nNumberComparable[\'==\'](0, 0); // true\\nNumberComparable[\'<\'](0, 1); // true\\nNumberComparable[\'>\'](0, 1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"}],"typeParameter":[{"id":839,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":840,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":841,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":842,"name":"compare","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparison function"}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"}],"type":{"type":"reflection","declaration":{"id":843,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"}],"signatures":[{"id":844,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"}],"parameters":[{"id":845,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":839,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":846,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":839,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"}}]}}}],"groups":[{"title":"Properties","children":[842]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":129,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L129"}]}}}],"type":{"type":"reference","target":847,"typeArguments":[{"type":"reference","target":839,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Comparable","previousId":779,"nextId":900},{"id":900,"name":"DecodeError","variant":"declaration","kind":64,"flags":{},"children":[{"id":908,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":17}],"type":{"type":"reflection","declaration":{"id":909,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"signatures":[{"id":910,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"parameters":[{"id":911,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}}]}}},{"id":903,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":91,"character":17}],"type":{"type":"literal","value":"DecodeError"}},{"id":904,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":17}],"type":{"type":"reflection","declaration":{"id":905,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"signatures":[{"id":906,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"parameters":[{"id":907,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}}}]}}}],"groups":[{"title":"Properties","children":[908,903,904]}],"categories":[{"title":"Constructor","children":[908]},{"title":"__CATEGORY__","children":[903,904]}],"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L3"},{"fileName":"packages/core/src/DecodeError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L13"}],"signatures":[{"id":901,"name":"DecodeError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Decode Error constructor"}]},"sources":[{"fileName":"packages/core/src/DecodeError.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L3"},{"fileName":"packages/core/src/DecodeError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/DecodeError.ts#L13"}],"parameters":[{"id":902,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":912,"name":"DecodeError","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/DecodeError","previousId":837,"nextId":1011},{"id":1011,"name":"Equal","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"signatures":[{"id":1012,"name":"Equal","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Equal module constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TEqual = Equal<T>({\\n  \'==\': (left, right) => { /* ... */ },\\n});\\nconst value: T;\\n\\nTEqual[\'==\'](value, value); // true;\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"typeParameter":[{"id":1013,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1014,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1015,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1016,"name":"equals","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"type":{"type":"reflection","declaration":{"id":1017,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"signatures":[{"id":1018,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"parameters":[{"id":1019,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1013,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1020,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1013,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"groups":[{"title":"Properties","children":[1016]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}]}}}],"type":{"type":"reference","target":1021,"typeArguments":[{"type":"reference","target":1013,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Equal","previousId":900,"nextId":1482},{"id":1482,"name":"Ref","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"signatures":[{"id":1483,"name":"Ref","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" object containing a value\\nThis implementation is compatible with "},{"kind":"code","text":"`React.createRef()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(123);// { current: initialValue }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"}],"typeParameter":[{"id":1484,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1485,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value contained"}]},"type":{"type":"reference","target":1484,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1486,"typeArguments":[{"type":"reference","target":1484,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Ref","previousId":1011,"nextId":1042},{"id":1042,"name":"identity","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"signatures":[{"id":1043,"name":"identity","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the unchanged given "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nidentity(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"typeParameter":[{"id":1044,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1045,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input and return value"}]},"type":{"type":"reference","target":1044,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1044,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/function/identity","previousId":1482,"nextId":1039},{"id":1039,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/ignore.ts","line":12,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L12"}],"signatures":[{"id":1040,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" and ignore passed value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst doSomething = () => \'foo\\nconst doSomethingIgnore = () => ignore(doSomething());// undefined\\n```"}]}]},"sources":[{"fileName":"packages/core/src/ignore.ts","line":12,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L12"}],"parameters":[{"id":1041,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value that should be ignored"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/function/ignore","previousId":1042,"nextId":1161},{"id":1161,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1162,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the result of "},{"kind":"code","text":"`getValue`"},{"kind":"text","text":", that will be called once.\\nUseful for expensive computation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst expensiveRead = lazy(() => fs.readDirSync(\'my/dir\'));\\n// fs.readDirSync not called\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync called, return value is put in cache\\n);\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync not called, return value from cache\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"typeParameter":[{"id":1163,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1164,"name":"getValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the computation"}]},"type":{"type":"reflection","declaration":{"id":1165,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1166,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"type":{"type":"reference","target":1163,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reflection","declaration":{"id":1167,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1168,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"reference","target":1163,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"permalink":"/std/fr/api/core/function/lazy","previousId":1039,"nextId":627}],"groups":[{"title":"Functions","children":[779,837,900,1011,1482,1042,1039,1161]},{"title":"Interfaces","children":[627,783,810,847,912,942,1021,1486,1800,1816,703]},{"title":"Namespaces","children":[225,442,550,787,789,921,1046,1173,1180,1284,1341,1415,1490,1512,1668,976,1805,1810,637]},{"title":"Type Aliases","children":[440,936,631,636,1160,1169,1409,1479,1414,1647,972]}],"categories":[{"title":"Constructor","children":[900,1482]},{"title":"Functor","children":[837,1011]},{"title":"__CATEGORY__","children":[225,442,550,787,789,921,1046,1173,1180,1284,1341,1415,1490,1512,1668,976,1805,1810,637,627,783,810,847,912,942,1021,1486,1800,1816,703,440,936,631,636,1160,1169,1409,1479,1414,1647,972,779,1042,1039,1161]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/index.ts#L1"}],"permalink":"/std/fr/api/core"},"urlSlug":"core"}],"packageName":"@w5s/core","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":5,"name":"@w5s/core-type","variant":"declaration","kind":2,"flags":{},"children":[{"id":1886,"name":"AnyFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes any kind of parameters and returns anything"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nfunction decorate<F extends AnyFunction>(fn: F): F {\\n  // ...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"type":{"type":"reflection","declaration":{"id":1887,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"signatures":[{"id":1888,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":1889,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/std/fr/api/core-type#AnyFunction","previousId":1890,"nextId":1895},{"id":1895,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/src/Awaitable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Awaitable.ts#L7"}],"typeParameters":[{"id":1896,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":1896,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":1896,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/fr/api/core-type#Awaitable","previousId":1886,"nextId":1897},{"id":1897,"name":"JSONPrimitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any JSON primitive\\n\\n- null\\n- boolean\\n- number\\n- string"}]},"sources":[{"fileName":"packages/core-type/src/JSONPrimitive.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONPrimitive.ts#L9"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]},"permalink":"/std/fr/api/core-type#JSONPrimitive","previousId":1895,"nextId":1898},{"id":1898,"name":"Nullable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that can be either "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":", "},{"kind":"code","text":"`null`"},{"kind":"text","text":", or "},{"kind":"code","text":"`T`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype NullableNumber = Nullable<number>;\\n\\nfunction someFunction(value: NullableNumber) {\\n  // value is number | undefined | null\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Nullable.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Nullable.ts#L13"}],"typeParameters":[{"id":1899,"name":"T","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"},{"type":"reference","target":1899,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}]},"permalink":"/std/fr/api/core-type#Nullable","previousId":1897,"nextId":1900},{"id":1900,"name":"PartialKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a partial type of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" for keys in "},{"kind":"code","text":"`Keys`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = { required: boolean; optional1: string; optional2: string; };\\ntype OptionalT = PartialKeys<T, \'optional\'>; // { required: boolean; optional1?: string; optional2?: string; };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/PartialKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/PartialKeys.ts#L12"}],"typeParameters":[{"id":1901,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1902,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1901,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1903,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1901,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":1902,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":1901,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":1902,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Partial","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/fr/api/core-type#PartialKeys","previousId":1898,"nextId":1903},{"id":1903,"name":"Pretty","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Flatten the type. Useful for IDE information."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype A = { a: boolean };\\ntype B = { b: string };\\ntype AB = Pretty<A & B>; // { a: boolean; b: string; }\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}],"typeParameters":[{"id":1905,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"intersection","types":[{"type":"mapped","parameter":"KeyType","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1905,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/Pretty.ts","qualifiedName":"KeyType"},"name":"KeyType","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":1905,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}},{"type":"reflection","declaration":{"id":1904,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}]}}]},"permalink":"/std/fr/api/core-type#Pretty","previousId":1900,"nextId":1906},{"id":1906,"name":"Primitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Primitive values are immutable data at the lowest level of the language.\\n\\nThere are 7 primitive types\\n- string\\n- number\\n- symbol\\n- bigint\\n- boolean\\n- null\\n- undefined"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive"}]}]},"sources":[{"fileName":"packages/core-type/src/Primitive.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Primitive.ts#L15"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"permalink":"/std/fr/api/core-type#Primitive","previousId":1903},{"id":1890,"name":"assertType","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"signatures":[{"id":1891,"name":"assertType","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when "},{"kind":"code","text":"`Actual`"},{"kind":"text","text":" is not strictly equal to "},{"kind":"code","text":"`Expected`"},{"kind":"text","text":".\\nThis is a type helper and does nothing at run time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Expected = \'foo\'\\nassertType<\'foo\', Expected>(true);// -> everything is fine\\nassertType<\'bar\', Expected>(true);// -> ts raises an error\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"typeParameter":[{"id":1892,"name":"Actual","variant":"typeParam","kind":131072,"flags":{}},{"id":1893,"name":"Expected","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1894,"name":"_shouldBeEqual","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an inferred value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/assertType.ts","qualifiedName":"IsExact"},"typeArguments":[{"type":"reference","target":1892,"name":"Actual","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":1893,"name":"Expected","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"IsExact","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core-type/function/assertType","nextId":1886}],"groups":[{"title":"Functions","children":[1890]},{"title":"Type Aliases","children":[1886,1895,1897,1898,1900,1903,1906]}],"sources":[{"fileName":"packages/core-type/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/index.ts#L1"}],"permalink":"/std/fr/api/core-type"},"urlSlug":"core-type"}],"packageName":"@w5s/core-type","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":6,"name":"@w5s/env","variant":"declaration","kind":2,"flags":{},"children":[{"id":1908,"name":"Env","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A dictionary of environment variables"}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"indexSignature":{"id":1909,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/env/src/Env.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L28"}],"parameters":[{"id":1910,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}},"permalink":"/std/fr/api/env/interface/Env","nextId":1907},{"id":1907,"name":"Env","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An object containing the environment variables"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst NODE_ENV = Env[\'NODE_ENV\'];\\n```"}]}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"type":{"type":"reference","target":1908,"name":"Env","package":"@w5s/env"},"permalink":"/std/fr/api/env#Env","previousId":1908}],"groups":[{"title":"Interfaces","children":[1908]},{"title":"Variables","children":[1907]}],"sources":[{"fileName":"packages/env/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/env/src/index.ts#L1"}],"permalink":"/std/fr/api/env"},"urlSlug":"env"}],"packageName":"@w5s/env","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":7,"name":"@w5s/error","variant":"declaration","kind":2,"flags":{},"children":[{"id":1939,"name":"CustomError","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst parentError: Error;\\nconst error = CustomError({\\n  name: \'FooError\' as const, // this is required\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]},{"tag":"@param","name":"properties","content":[{"kind":"text","text":"initial properties"}]}]},"children":[{"id":1940,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type for all properties added by the result of "},{"kind":"code","text":"`Make()`"},{"kind":"text","text":" or "},{"kind":"code","text":"`MakeGeneric()`"}]},"children":[{"id":1946,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"type":{"type":"reflection","declaration":{"id":1947,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"signatures":[{"id":1948,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"parameters":[{"id":1949,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"reference","target":1959,"typeArguments":[{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/error","qualifiedName":"CustomError.Parameters"}}],"type":{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}}]}}},{"id":1941,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":161,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L161"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}}},{"id":1942,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"type":{"type":"reflection","declaration":{"id":1943,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"signatures":[{"id":1944,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"parameters":[{"id":1945,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}}}]}}}],"groups":[{"title":"Properties","children":[1946,1941,1942]}],"categories":[{"title":"Constructor","children":[1946]},{"title":"__CATEGORY__","children":[1941,1942]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":147,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L147"}],"typeParameters":[{"id":1950,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1931,"typeArguments":[{"type":"reflection","declaration":{"id":1951,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1952,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":147,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L147"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1952]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":147,"character":52,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L147"}]}}],"name":"CustomError","package":"@w5s/error"}}],"signatures":[{"id":1953,"name":"Module","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":148,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L148"}],"parameters":[{"id":1954,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":1959,"typeArguments":[{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/error","qualifiedName":"CustomError.Parameters"}}],"type":{"type":"reference","target":1950,"name":"Model","package":"@w5s/error","qualifiedName":"CustomError.Module.Model","refersToTypeParameter":true}}],"permalink":"/std/fr/api/error/namespace/CustomError#Module"},{"id":1959,"name":"Parameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new CustomError"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":202,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L202"}],"typeParameters":[{"id":1960,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"conditional","checkType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"RequiredKeysOf"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1960,"name":"Model","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"}],"name":"RequiredKeysOf","package":"@w5s/error"},"extendsType":{"type":"intrinsic","name":"never"},"trueType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1960,"name":"Model","package":"@w5s/error","refersToTypeParameter":true}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]},"falseType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1960,"name":"Model","package":"@w5s/error","refersToTypeParameter":true}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}},"permalink":"/std/fr/api/error/namespace/CustomError#Parameters"},{"id":1955,"name":"ParametersProperties","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all properties passed to constructor"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":196,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L196"}],"typeParameters":[{"id":1958,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1958,"name":"Model","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":1931,"typeArguments":[{"type":"reflection","declaration":{"id":1956,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1957,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":197,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L197"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1957]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":197,"character":29,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L197"}]}}],"name":"CustomError","package":"@w5s/error"},{"type":"union","types":[{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Pick","package":"typescript"}],"name":"Partial","package":"typescript"}]},"permalink":"/std/fr/api/error/namespace/CustomError#ParametersProperties"}],"groups":[{"title":"Interfaces","children":[1940]},{"title":"Type Aliases","children":[1959,1955]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":53,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L53"},{"fileName":"packages/error/src/CustomError.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L85"},{"fileName":"packages/error/src/CustomError.ts","line":143,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L143"}],"permalink":"/std/fr/api/error/namespace/CustomError","previousId":1973,"nextId":1931},{"id":1989,"name":"AggregateError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.AggregateError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2021.promise.d.ts","qualifiedName":"AggregateError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { AggregateError } from \'@w5s/error\';\\n\\ntry {\\n  throw new AggregateError([new Error(\\"some error\\")], \\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof AggregateError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"AggregateError\\"\\n  console.log(e.errors); // [ Error: \\"some error\\" ]\\n}\\n```"}]}]},"children":[{"id":1990,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L90"}],"signatures":[{"id":1991,"name":"new AggregateError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"AggregateError constructor"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L90"}],"typeParameter":[{"id":1992,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"parameters":[{"id":1993,"name":"errors","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an iterable of error"}]},"type":{"type":"reference","target":1992,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}},{"id":1994,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1989,"typeArguments":[{"type":"reference","target":1992,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"AggregateError","package":"@w5s/error"},"overwrites":{"type":"reference","target":1982,"name":"Error.constructor"}}],"overwrites":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":1996,"name":"errors","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of error"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L82"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1992,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"trueType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":1992,"typeArguments":[{"type":"reference","target":1992,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}}}]}},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1992,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"},"trueType":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true}},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":1995,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L77"}],"type":{"type":"literal","value":"AggregateError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[1990]},{"title":"Properties","children":[1996,1995]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":93,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L93"},{"fileName":"packages/error/src/nativeError.ts","line":76,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L76"}],"typeParameters":[{"id":1997,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/AggregateError","nextId":1980},{"id":1980,"name":"Error","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.Error","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { Error } from \'@w5s/error\';\\n\\nthrow new Error(\'my message\', { cause: someError });\\n```"}]}]},"children":[{"id":1981,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L50"}],"signatures":[{"id":1982,"name":"new Error","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L50"}],"parameters":[{"id":1983,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1984,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error options"}]},"type":{"type":"reference","target":2022,"name":"ErrorOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}}]},{"id":1988,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error cause"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L42"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1986,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L32"}],"type":{"type":"intrinsic","name":"string"}},{"id":1985,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L27"}],"type":{"type":"literal","value":"Error"}},{"id":1987,"name":"stack","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error stack description (when supported)"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L37"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[1981]},{"title":"Properties","children":[1988,1986,1985,1987]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":53,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L53"},{"fileName":"packages/error/src/nativeError.ts","line":23,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L23"}],"extendedBy":[{"type":"reference","target":1989,"name":"AggregateError"},{"type":"reference","target":1998,"name":"EvalError"},{"type":"reference","target":2002,"name":"RangeError"},{"type":"reference","target":2006,"name":"ReferenceError"},{"type":"reference","target":2010,"name":"SyntaxError"},{"type":"reference","target":2014,"name":"URIError"},{"type":"reference","target":2018,"name":"TypeError"}],"permalink":"/std/fr/api/error/class/Error","previousId":1989,"nextId":1998},{"id":1998,"name":"EvalError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.EvalError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"EvalError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { EvalError } from \'@w5s/error\';\\n\\ntry {\\n  throw new EvalError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeEvalErrorError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"EvalError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":1999,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2000,"name":"new EvalError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":1998,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2001,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":116,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L116"}],"type":{"type":"literal","value":"EvalError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[1999]},{"title":"Properties","children":[2001]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":119,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L119"},{"fileName":"packages/error/src/nativeError.ts","line":115,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L115"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/EvalError","previousId":1980,"nextId":2002},{"id":2002,"name":"RangeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.RangeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RangeError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { RangeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new RangeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"RangeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2003,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2004,"name":"new RangeError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":2002,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2005,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":142,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L142"}],"type":{"type":"literal","value":"RangeError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2003]},{"title":"Properties","children":[2005]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":145,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L145"},{"fileName":"packages/error/src/nativeError.ts","line":141,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L141"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/RangeError","previousId":1998,"nextId":2006},{"id":2006,"name":"ReferenceError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.ReferenceError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReferenceError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { ReferenceError } from \'@w5s/error\';\\n\\ntry {\\n  throw new ReferenceError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof ReferenceError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"ReferenceError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2007,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2008,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":2006,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2009,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":168,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L168"}],"type":{"type":"literal","value":"ReferenceError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2007]},{"title":"Properties","children":[2009]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":171,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L171"},{"fileName":"packages/error/src/nativeError.ts","line":167,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L167"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/ReferenceError","previousId":2002,"nextId":2010},{"id":2010,"name":"SyntaxError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.SyntaxError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"SyntaxError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { SyntaxError } from \'@w5s/error\';\\n\\ntry {\\n  throw new SyntaxError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof SyntaxError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"SyntaxError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2011,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2012,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":2010,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2013,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":194,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L194"}],"type":{"type":"literal","value":"SyntaxError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2011]},{"title":"Properties","children":[2013]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":197,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L197"},{"fileName":"packages/error/src/nativeError.ts","line":193,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L193"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/SyntaxError","previousId":2006,"nextId":2018},{"id":2018,"name":"TypeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.TypeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TypeError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { TypeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new TypeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof TypeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"TypeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2019,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2020,"name":"new TypeError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":2018,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2021,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":246,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L246"}],"type":{"type":"literal","value":"TypeError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2019]},{"title":"Properties","children":[2021]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":249,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L249"},{"fileName":"packages/error/src/nativeError.ts","line":245,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L245"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/TypeError","previousId":2010,"nextId":2014},{"id":2014,"name":"URIError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.URIError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"URIError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nimport { URIError } from \'@w5s/error\';\\n\\ntry {\\n  throw new URIError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof URIError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"URIError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":2015,"name":"constructor","variant":"declaration","kind":512,"flags":{},"signatures":[{"id":2016,"name":"new URIError","variant":"signature","kind":16384,"flags":{},"type":{"type":"reference","target":2014,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":1982,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":1981,"name":"Error.constructor"}},{"id":2017,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":220,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L220"}],"type":{"type":"literal","value":"URIError"},"inheritedFrom":{"type":"reference","target":1985,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2015]},{"title":"Properties","children":[2017]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":223,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L223"},{"fileName":"packages/error/src/nativeError.ts","line":219,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L219"}],"extendedTypes":[{"type":"reference","target":1980,"name":"Error","package":"@w5s/error"}],"permalink":"/std/fr/api/error/class/URIError","previousId":2018,"nextId":1911},{"id":1923,"name":"ArgumentError","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when wrong argument is passed to a function"}]},"children":[{"id":1928,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":66,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L66"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":1926,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":1929,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L8"}],"type":{"type":"literal","value":"ArgumentError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":1927,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":62,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L62"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[1928,1926,1929,1927]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"},{"fileName":"packages/error/src/ArgumentError.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L15"}],"extendedTypes":[{"type":"reference","target":1931,"typeArguments":[{"type":"reflection","declaration":{"id":1924,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1925,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L8"}],"type":{"type":"literal","value":"ArgumentError"}}],"groups":[{"title":"Properties","children":[1925]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":7,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L7"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/error/interface/ArgumentError","previousId":2024,"nextId":2022},{"id":2022,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":2023,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cause of the error"}]},"sources":[{"fileName":"packages/error/src/nativeError.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L9"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[2023]}],"sources":[{"fileName":"packages/error/src/nativeError.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/nativeError.ts#L5"}],"permalink":"/std/fr/api/error/interface/ErrorOptions","previousId":1923,"nextId":1973},{"id":1973,"name":"NotImplementedError","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when wrong argument is passed to a function"}]},"children":[{"id":1978,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":66,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L66"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":1976,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":1979,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L8"}],"type":{"type":"literal","value":"NotImplementedError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":1977,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":62,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L62"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[1978,1976,1979,1977]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L6"},{"fileName":"packages/error/src/NotImplementedError.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L22"}],"extendedTypes":[{"type":"reference","target":1931,"typeArguments":[{"type":"reflection","declaration":{"id":1974,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1975,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L8"}],"type":{"type":"literal","value":"NotImplementedError"}}],"groups":[{"title":"Properties","children":[1975]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":7,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L7"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/error/interface/NotImplementedError","previousId":2022,"nextId":1939},{"id":1931,"name":"CustomError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A custom error type"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":53,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L53"},{"fileName":"packages/error/src/CustomError.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L85"},{"fileName":"packages/error/src/CustomError.ts","line":143,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L143"}],"typeParameters":[{"id":1936,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":1937,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1938,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":53,"character":45,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L53"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1938]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":53,"character":43,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L53"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":1932,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1935,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":66,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L66"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1933,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"type":{"type":"intrinsic","name":"string"}},{"id":1934,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":62,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L62"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}}],"groups":[{"title":"Properties","children":[1935,1933,1934]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L54"}]}},{"type":"reference","target":1936,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"extendedBy":[{"type":"reference","target":1923,"name":"ArgumentError"},{"type":"reference","target":1973,"name":"NotImplementedError"}],"permalink":"/std/fr/api/error#CustomError","previousId":1939,"nextId":1930},{"id":1930,"name":"CustomError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst parentError: Error;\\nconst error = CustomError({\\n  name: \'FooError\' as const, // this is required\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]},{"tag":"@param","name":"properties","content":[{"kind":"text","text":"initial properties"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":53,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L53"},{"fileName":"packages/error/src/CustomError.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L85"},{"fileName":"packages/error/src/CustomError.ts","line":143,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L143"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorConstructor"},"name":"CustomErrorConstructor","package":"@w5s/error"},"permalink":"/std/fr/api/error#CustomError","previousId":1931},{"id":1911,"name":"ArgumentError","variant":"declaration","kind":64,"flags":{},"children":[{"id":1919,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"type":{"type":"reflection","declaration":{"id":1920,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"signatures":[{"id":1921,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"parameters":[{"id":1922,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1923,"name":"ArgumentError","package":"@w5s/error"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":1923,"name":"ArgumentError","package":"@w5s/error"}}]}}},{"id":1914,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":161,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L161"}],"type":{"type":"literal","value":"ArgumentError"}},{"id":1915,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"type":{"type":"reflection","declaration":{"id":1916,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"signatures":[{"id":1917,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"parameters":[{"id":1918,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1923,"name":"ArgumentError","package":"@w5s/error"}}}]}}}],"groups":[{"title":"Properties","children":[1919,1914,1915]}],"categories":[{"title":"Constructor","children":[1919]},{"title":"__CATEGORY__","children":[1914,1915]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"},{"fileName":"packages/error/src/ArgumentError.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L15"}],"signatures":[{"id":1912,"name":"ArgumentError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ArgumentError constructor"}]},"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"},{"fileName":"packages/error/src/ArgumentError.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L15"}],"parameters":[{"id":1913,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1923,"name":"ArgumentError","package":"@w5s/error"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":1923,"name":"ArgumentError","package":"@w5s/error"}}],"permalink":"/std/fr/api/error/function/ArgumentError","previousId":2014,"nextId":1961},{"id":1961,"name":"NotImplementedError","variant":"declaration","kind":64,"flags":{},"children":[{"id":1969,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"type":{"type":"reflection","declaration":{"id":1970,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"signatures":[{"id":1971,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":190,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L190"}],"parameters":[{"id":1972,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1973,"name":"NotImplementedError","package":"@w5s/error"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":1973,"name":"NotImplementedError","package":"@w5s/error"}}]}}},{"id":1964,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":161,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L161"}],"type":{"type":"literal","value":"NotImplementedError"}},{"id":1965,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"type":{"type":"reflection","declaration":{"id":1966,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"signatures":[{"id":1967,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":175,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L175"}],"parameters":[{"id":1968,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1973,"name":"NotImplementedError","package":"@w5s/error"}}}]}}}],"groups":[{"title":"Properties","children":[1969,1964,1965]}],"categories":[{"title":"Constructor","children":[1969]},{"title":"__CATEGORY__","children":[1964,1965]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L6"},{"fileName":"packages/error/src/NotImplementedError.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L22"}],"signatures":[{"id":1962,"name":"NotImplementedError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"NotImplementedError constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nfunction someFunction() {\\n  throw NotImplementedError();// message can be customized\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L6"},{"fileName":"packages/error/src/NotImplementedError.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L22"}],"parameters":[{"id":1963,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":1955,"typeArguments":[{"type":"reference","target":1973,"name":"NotImplementedError","package":"@w5s/error"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":1973,"name":"NotImplementedError","package":"@w5s/error"}}],"permalink":"/std/fr/api/error/function/NotImplementedError","previousId":1911,"nextId":2024},{"id":2024,"name":"throwError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/throwError.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/throwError.ts#L11"}],"signatures":[{"id":2025,"name":"throwError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Throw the given "},{"kind":"code","text":"`error`"},{"kind":"text","text":". Often used as expression"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst unknownValue: unknown = 123;\\nconst stringValue = typeof unknownValue === \'string\' ? unknownValue : throwError(new Error(\'not a string\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/throwError.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/throwError.ts#L11"}],"parameters":[{"id":2026,"name":"error","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error to throw"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"never"}}],"permalink":"/std/fr/api/error/function/throwError","previousId":1961,"nextId":1923}],"groups":[{"title":"Classes","children":[1989,1980,1998,2002,2006,2010,2018,2014]},{"title":"Functions","children":[1911,1961,2024]},{"title":"Interfaces","children":[1923,2022,1973]},{"title":"Namespaces","children":[1939]},{"title":"Type Aliases","children":[1931]},{"title":"Variables","children":[1930]}],"categories":[{"title":"Constructor","children":[1939,1930,1911,1961]},{"title":"__CATEGORY__","children":[1989,1980,1998,2002,2006,2010,2018,2014,1923,2022,1973,1931,2024]}],"sources":[{"fileName":"packages/error/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/error/src/index.ts#L1"}],"permalink":"/std/fr/api/error"},"urlSlug":"error"}],"packageName":"@w5s/error","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":8,"name":"@w5s/http","variant":"declaration","kind":2,"flags":{},"children":[{"id":2027,"name":"HTTP","variant":"declaration","kind":4,"flags":{},"children":[{"id":2036,"name":"request","variant":"declaration","kind":4,"flags":{},"children":[{"id":2037,"name":"Request","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP request type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request"}]}]},"children":[{"id":2058,"name":"body","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An optional BodyInit object to set request\'s body."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":197,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L197"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"BodyInit"},"name":"BodyInit","package":"typescript"}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2081,"name":"Request.body"}},{"id":2047,"name":"cache","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates how the request will interact with the browser\'s cache to set request\'s cache."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'no-store\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":146,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L146"}],"type":{"type":"reference","target":2068,"name":"Cache","package":"@w5s/http","qualifiedName":"HTTP.Cache"},"inheritedFrom":{"type":"reference","target":2070,"name":"Request.cache"}},{"id":2048,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":150,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L150"}],"type":{"type":"reference","target":2063,"name":"Credentials","package":"@w5s/http","qualifiedName":"HTTP.Credentials"},"inheritedFrom":{"type":"reference","target":2071,"name":"Request.credentials"}},{"id":2049,"name":"destination","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":151,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L151"}],"type":{"type":"reference","target":2067,"name":"RequestDestination","package":"@w5s/http","qualifiedName":"HTTP.RequestDestination"},"inheritedFrom":{"type":"reference","target":2072,"name":"Request.destination"}},{"id":2039,"name":"fetch","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The optional fetch function"}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":246,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L246"}],"type":{"type":"reflection","declaration":{"id":2040,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":28327,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":371,"character":13}],"signatures":[{"id":2041,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":28327,"character":17}],"parameters":[{"id":2042,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2043,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":2044,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":371,"character":13}],"parameters":[{"id":2045,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":2046,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}}},{"id":2051,"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request headers"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n{ \\"Content-type\\": \\"application/json\\" }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":167,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L167"}],"type":{"type":"reference","target":2031,"name":"Headers","package":"@w5s/http","qualifiedName":"HTTP.Headers"},"inheritedFrom":{"type":"reference","target":2074,"name":"Request.headers"}},{"id":2052,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":171,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L171"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2075,"name":"Request.integrity"}},{"id":2056,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L189"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2079,"name":"Request.keepalive"}},{"id":2055,"name":"method","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request Method"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'GET\', \'POST\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":185,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L185"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2078,"name":"Request.method"}},{"id":2057,"name":"mode","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":193,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L193"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestMode"},"name":"RequestMode","package":"typescript"},"inheritedFrom":{"type":"reference","target":2080,"name":"Request.mode"}},{"id":2038,"name":"parse","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Response Parser"}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":242,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L242"}],"type":{"type":"reference","target":2147,"typeArguments":[{"type":"reference","target":2061,"name":"Value","package":"@w5s/http","qualifiedName":"HTTP.request.Request.Value","refersToTypeParameter":true}],"name":"HTTPParser","package":"@w5s/http"}},{"id":2053,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion)."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":175,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L175"}],"type":{"type":"reference","target":2065,"name":"Redirect","package":"@w5s/http","qualifiedName":"HTTP.Redirect"},"inheritedFrom":{"type":"reference","target":2076,"name":"Request.redirect"}},{"id":2059,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":201,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L201"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2082,"name":"Request.referrer"}},{"id":2054,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request referrer policy"}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L179"}],"type":{"type":"reference","target":2066,"name":"ReferrerPolicy","package":"@w5s/http","qualifiedName":"HTTP.ReferrerPolicy"},"inheritedFrom":{"type":"reference","target":2077,"name":"Request.referrerPolicy"}},{"id":2050,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request URL"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'https://foo.com\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":158,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L158"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2073,"name":"Request.url"}},{"id":2060,"name":"window","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Can only be undefined. Used to disassociate request from any Window."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L209"}],"type":{"type":"intrinsic","name":"undefined"},"inheritedFrom":{"type":"reference","target":2083,"name":"Request.window"}}],"groups":[{"title":"Properties","children":[2058,2047,2048,2049,2039,2051,2052,2056,2055,2057,2038,2053,2059,2054,2050,2060]}],"sources":[{"fileName":"packages/http/src/HTTP.ts","line":238,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L238"}],"typeParameters":[{"id":2061,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2069,"name":"Request","package":"@w5s/http","qualifiedName":"HTTP.Request"}]}],"groups":[{"title":"Interfaces","children":[2037]}],"sources":[{"fileName":"packages/http/src/HTTP.ts","line":231,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L231"},{"fileName":"packages/http/src/HTTP.ts","line":236,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L236"}],"permalink":"/std/fr/api/http/namespace/HTTP#request"},{"id":2069,"name":"Request","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP request type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request"}]}]},"children":[{"id":2081,"name":"body","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An optional BodyInit object to set request\'s body."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":197,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L197"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"BodyInit"},"name":"BodyInit","package":"typescript"}],"name":"Option","package":"@w5s/core"}},{"id":2070,"name":"cache","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates how the request will interact with the browser\'s cache to set request\'s cache."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'no-store\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":146,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L146"}],"type":{"type":"reference","target":2068,"name":"Cache","package":"@w5s/http","qualifiedName":"HTTP.Cache"}},{"id":2071,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":150,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L150"}],"type":{"type":"reference","target":2063,"name":"Credentials","package":"@w5s/http","qualifiedName":"HTTP.Credentials"}},{"id":2072,"name":"destination","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":151,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L151"}],"type":{"type":"reference","target":2067,"name":"RequestDestination","package":"@w5s/http","qualifiedName":"HTTP.RequestDestination"}},{"id":2074,"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request headers"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n{ \\"Content-type\\": \\"application/json\\" }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":167,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L167"}],"type":{"type":"reference","target":2031,"name":"Headers","package":"@w5s/http","qualifiedName":"HTTP.Headers"}},{"id":2075,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":171,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L171"}],"type":{"type":"intrinsic","name":"string"}},{"id":2079,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L189"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2078,"name":"method","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request Method"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'GET\', \'POST\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":185,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L185"}],"type":{"type":"intrinsic","name":"string"}},{"id":2080,"name":"mode","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":193,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L193"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestMode"},"name":"RequestMode","package":"typescript"}},{"id":2076,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion)."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":175,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L175"}],"type":{"type":"reference","target":2065,"name":"Redirect","package":"@w5s/http","qualifiedName":"HTTP.Redirect"}},{"id":2082,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":201,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L201"}],"type":{"type":"intrinsic","name":"string"}},{"id":2077,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request referrer policy"}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L179"}],"type":{"type":"reference","target":2066,"name":"ReferrerPolicy","package":"@w5s/http","qualifiedName":"HTTP.ReferrerPolicy"}},{"id":2073,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Request URL"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\'https://foo.com\'\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":158,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L158"}],"type":{"type":"intrinsic","name":"string"}},{"id":2083,"name":"window","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Can only be undefined. Used to disassociate request from any Window."}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L209"}],"type":{"type":"intrinsic","name":"undefined"}}],"groups":[{"title":"Properties","children":[2081,2070,2071,2072,2074,2075,2079,2078,2080,2076,2082,2077,2073,2083]}],"sources":[{"fileName":"packages/http/src/HTTP.ts","line":136,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L136"}],"extendedBy":[{"type":"reference","target":2037,"name":"Request"}],"permalink":"/std/fr/api/http/namespace/HTTP#Request"},{"id":2084,"name":"Response","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":212,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L212"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"globalThis.Response","package":"typescript","qualifiedName":"Response"},{"type":"literal","value":"clone"}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":2085,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":214,"character":61,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L214"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/http/namespace/HTTP#Response"},{"id":2068,"name":"Cache","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP cache type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/cache"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":91,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L91"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"no-store"},{"type":"literal","value":"reload"},{"type":"literal","value":"no-cache"},{"type":"literal","value":"force-cache"},{"type":"literal","value":"only-if-cached"}]},"permalink":"/std/fr/api/http/namespace/HTTP#Cache"},{"id":2063,"name":"Credentials","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP credentials"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":27,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L27"}],"type":{"type":"union","types":[{"type":"literal","value":"include"},{"type":"literal","value":"omit"},{"type":"literal","value":"same-origin"}]},"permalink":"/std/fr/api/http/namespace/HTTP#Credentials"},{"id":2031,"name":"Headers","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record type"}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":115,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L115"},{"fileName":"packages/http/src/HTTP.ts","line":96,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L96"}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"HTTPHeaders"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/fr/api/http/namespace/HTTP#Headers"},{"id":2064,"name":"Method","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Method type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/method"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":34,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L34"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/http/namespace/HTTP#Method"},{"id":2065,"name":"Redirect","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP redirect type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L41"}],"type":{"type":"union","types":[{"type":"literal","value":"follow"},{"type":"literal","value":"error"},{"type":"literal","value":"manual"}]},"permalink":"/std/fr/api/http/namespace/HTTP#Redirect"},{"id":2066,"name":"ReferrerPolicy","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP referrer policy type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":48,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L48"}],"type":{"type":"union","types":[{"type":"literal","value":""},{"type":"literal","value":"no-referrer"},{"type":"literal","value":"no-referrer-when-downgrade"},{"type":"literal","value":"same-origin"},{"type":"literal","value":"origin"},{"type":"literal","value":"strict-origin"},{"type":"literal","value":"origin-when-cross-origin"},{"type":"literal","value":"strict-origin-when-cross-origin"},{"type":"literal","value":"unsafe-url"}]},"permalink":"/std/fr/api/http/namespace/HTTP#ReferrerPolicy"},{"id":2067,"name":"RequestDestination","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP request destination type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":64,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L64"}],"type":{"type":"union","types":[{"type":"literal","value":""},{"type":"literal","value":"audio"},{"type":"literal","value":"audioworklet"},{"type":"literal","value":"document"},{"type":"literal","value":"embed"},{"type":"literal","value":"font"},{"type":"literal","value":"frame"},{"type":"literal","value":"iframe"},{"type":"literal","value":"image"},{"type":"literal","value":"manifest"},{"type":"literal","value":"object"},{"type":"literal","value":"paintworklet"},{"type":"literal","value":"report"},{"type":"literal","value":"script"},{"type":"literal","value":"sharedworker"},{"type":"literal","value":"style"},{"type":"literal","value":"track"},{"type":"literal","value":"video"},{"type":"literal","value":"worker"},{"type":"literal","value":"xslt"}]},"permalink":"/std/fr/api/http/namespace/HTTP#RequestDestination"},{"id":2062,"name":"URL","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP URL type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/url"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":20,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/http/namespace/HTTP#URL"},{"id":2028,"name":"Headers","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":115,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L115"},{"fileName":"packages/http/src/HTTP.ts","line":96,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L96"}],"signatures":[{"id":2029,"name":"Headers","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst headersFromIterable = Headers([\\n [\'key1\', \'value1\'],\\n [\'key2\', \'value2\']\\n]);// { key1: \'value1, key2: \'value2\' }\\nconst headersFromObject = Headers({\\n key1: \'value1\',\\n key2: \'value2\'\\n});// { key1: \'value1, key2: \'value2\' }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":115,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L115"}],"parameters":[{"id":2030,"name":"values","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a record or iterable to initialize"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":2031,"name":"Headers","package":"@w5s/http","qualifiedName":"HTTP.Headers"}}],"permalink":"/std/fr/api/http/namespace/HTTP#Headers"},{"id":2032,"name":"request","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":231,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L231"},{"fileName":"packages/http/src/HTTP.ts","line":236,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L236"}],"signatures":[{"id":2033,"name":"request","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Task"},{"kind":"text","text":" that will send an HTTP request"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst responseTask = HTTP.request({\\n  url: \'http://someurl.com\',\\n  parse: parseText,\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTP.ts","line":231,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L231"}],"typeParameter":[{"id":2034,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2035,"name":"requestObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request parameters"}]},"type":{"type":"reference","target":2037,"typeArguments":[{"type":"reference","target":2034,"name":"Value","package":"@w5s/http","refersToTypeParameter":true}],"name":"Request","package":"@w5s/http","qualifiedName":"HTTP.request.Request"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2034,"name":"Value","package":"@w5s/http","refersToTypeParameter":true},{"type":"reference","target":2086,"name":"HTTPError","package":"@w5s/http"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/HTTP#request"}],"groups":[{"title":"Namespaces","children":[2036]},{"title":"Interfaces","children":[2069,2084]},{"title":"Type Aliases","children":[2068,2063,2031,2064,2065,2066,2067,2062]},{"title":"Functions","children":[2028,2032]}],"categories":[{"title":"Constructor","children":[2028]},{"title":"__CATEGORY__","children":[2036,2069,2084,2068,2063,2031,2064,2065,2066,2067,2062,2032]}],"sources":[{"fileName":"packages/http/src/HTTP.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTP.ts#L14"}],"permalink":"/std/fr/api/http/namespace/HTTP","previousId":2147,"nextId":2087},{"id":2087,"name":"HTTPError","variant":"declaration","kind":4,"flags":{},"children":[{"id":2100,"name":"InvalidURL","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when url passed is invalid"}]},"children":[{"id":2106,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":2108,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":15,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L15"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.input"}},{"id":2104,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":2107,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L14"}],"type":{"type":"literal","value":"HTTPInvalidURLError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":2105,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":50,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[2106,2108,2104,2107,2105]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":12,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L12"},{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError"},"typeArguments":[{"type":"reflection","declaration":{"id":2101,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2103,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":15,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L15"}],"type":{"type":"intrinsic","name":"string"}},{"id":2102,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L14"}],"type":{"type":"literal","value":"HTTPInvalidURLError"}}],"groups":[{"title":"Properties","children":[2103,2102]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":13,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L13"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/http/namespace/HTTPError#InvalidURL"},{"id":2121,"name":"NetworkError","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A network error when "},{"kind":"code","text":"`fetch`"},{"kind":"text","text":" fails"}]},"children":[{"id":2126,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":2124,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":2127,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":32,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L32"}],"type":{"type":"literal","value":"HTTPNetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":2125,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":50,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[2126,2124,2127,2125]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"},{"fileName":"packages/http/src/HTTPError.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L39"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError"},"typeArguments":[{"type":"reflection","declaration":{"id":2122,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2123,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":32,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L32"}],"type":{"type":"literal","value":"HTTPNetworkError"}}],"groups":[{"title":"Properties","children":[2123]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":31,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L31"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/http/namespace/HTTPError#NetworkError"},{"id":2140,"name":"ParserError","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A parsing error when the body cannot be parsed"}]},"children":[{"id":2145,"name":"cause","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.cause"}},{"id":2143,"name":"message","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.message"}},{"id":2146,"name":"name","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":49,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L49"}],"type":{"type":"literal","value":"HTTPParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.name"}},{"id":2144,"name":"stack","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Optional stack trace (when supported)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":50,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"CustomError.stack"}}],"groups":[{"title":"Properties","children":[2145,2143,2146,2144]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":47,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L47"},{"fileName":"packages/http/src/HTTPError.ts","line":56,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L56"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError"},"typeArguments":[{"type":"reflection","declaration":{"id":2141,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2142,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":49,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L49"}],"type":{"type":"literal","value":"HTTPParserError"}}],"groups":[{"title":"Properties","children":[2142]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":48,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L48"}]}}],"name":"CustomError","package":"@w5s/error"}],"permalink":"/std/fr/api/http/namespace/HTTPError#ParserError"},{"id":2088,"name":"InvalidURL","variant":"declaration","kind":64,"flags":{},"children":[{"id":2096,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":17}],"type":{"type":"reflection","declaration":{"id":2097,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"signatures":[{"id":2098,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"parameters":[{"id":2099,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2100,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2100,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"}}]}}},{"id":2091,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":91,"character":17}],"type":{"type":"literal","value":"HTTPInvalidURLError"}},{"id":2092,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":17}],"type":{"type":"reflection","declaration":{"id":2093,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"signatures":[{"id":2094,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"parameters":[{"id":2095,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2100,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"}}}]}}}],"groups":[{"title":"Properties","children":[2096,2091,2092]}],"categories":[{"title":"Constructor","children":[2096]},{"title":"__CATEGORY__","children":[2091,2092]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":12,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L12"},{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"signatures":[{"id":2089,"name":"InvalidURL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"InvalidURL constructor"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":12,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L12"},{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"parameters":[{"id":2090,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2100,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2100,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"}}],"permalink":"/std/fr/api/http/namespace/HTTPError#InvalidURL"},{"id":2109,"name":"NetworkError","variant":"declaration","kind":64,"flags":{},"children":[{"id":2117,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":17}],"type":{"type":"reflection","declaration":{"id":2118,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"signatures":[{"id":2119,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"parameters":[{"id":2120,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2121,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2121,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"}}]}}},{"id":2112,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":91,"character":17}],"type":{"type":"literal","value":"HTTPNetworkError"}},{"id":2113,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":17}],"type":{"type":"reflection","declaration":{"id":2114,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"signatures":[{"id":2115,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"parameters":[{"id":2116,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2121,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"}}}]}}}],"groups":[{"title":"Properties","children":[2117,2112,2113]}],"categories":[{"title":"Constructor","children":[2117]},{"title":"__CATEGORY__","children":[2112,2113]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"},{"fileName":"packages/http/src/HTTPError.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L39"}],"signatures":[{"id":2110,"name":"NetworkError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"NetworkError constructor"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"},{"fileName":"packages/http/src/HTTPError.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L39"}],"parameters":[{"id":2111,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2121,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2121,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"}}],"permalink":"/std/fr/api/http/namespace/HTTPError#NetworkError"},{"id":2128,"name":"ParserError","variant":"declaration","kind":64,"flags":{},"children":[{"id":2136,"name":"create","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst error = MyError.create({\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":17}],"type":{"type":"reflection","declaration":{"id":2137,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"signatures":[{"id":2138,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":120,"character":25}],"parameters":[{"id":2139,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"initial properties"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}}]}}},{"id":2131,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The model name constant. Can be useful for "},{"kind":"code","text":"`switch`"},{"kind":"text","text":" / "},{"kind":"code","text":"`case`"},{"kind":"text","text":" statements."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst error: SomeError;\\nswitch (error.name) {\\n  case SomeError.errorName: //...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":91,"character":17}],"type":{"type":"literal","value":"HTTPParserError"}},{"id":2132,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Predicate that returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"code","text":"`Model`"},{"kind":"text","text":"\\nThe implementation compares "},{"kind":"code","text":"`anyValue.name === Module.errorName`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyError = CustomError.define(\'MyError1\');\\nconst unknownError: unknown;\\nif (MyError.hasInstance(unknownError)) {\\n  // unknownError.name === \'MyError1\'\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":17}],"type":{"type":"reflection","declaration":{"id":2133,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"signatures":[{"id":2134,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":105,"character":30}],"parameters":[{"id":2135,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}}}]}}}],"groups":[{"title":"Properties","children":[2136,2131,2132]}],"categories":[{"title":"Constructor","children":[2136]},{"title":"__CATEGORY__","children":[2131,2132]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":47,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L47"},{"fileName":"packages/http/src/HTTPError.ts","line":56,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L56"}],"signatures":[{"id":2129,"name":"ParserError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ParserError constructor"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":47,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L47"},{"fileName":"packages/http/src/HTTPError.ts","line":56,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L56"}],"parameters":[{"id":2130,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomError.ParametersProperties"},"typeArguments":[{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"ParametersProperties","package":"@w5s/error","qualifiedName":"CustomError.ParametersProperties"}}]}}],"type":{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}}],"permalink":"/std/fr/api/http/namespace/HTTPError#ParserError"}],"groups":[{"title":"Interfaces","children":[2100,2121,2140]},{"title":"Functions","children":[2088,2109,2128]}],"categories":[{"title":"Constructor","children":[2088,2109,2128]},{"title":"__CATEGORY__","children":[2100,2121,2140]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L6"},{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"}],"permalink":"/std/fr/api/http/namespace/HTTPError","previousId":2027,"nextId":2151},{"id":2151,"name":"HTTPParser","variant":"declaration","kind":4,"flags":{},"children":[{"id":2156,"name":"arrayBuffer","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L44"}],"signatures":[{"id":2157,"name":"arrayBuffer","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ArrayBuffer response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst request = HTTP.request({\\n  url: \'http://localhost\',\\n  parse: HTTPParser.arrayBuffer,\\n});// Task<ArrayBuffer, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L44"}],"parameters":[{"id":2158,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"Response","package":"@w5s/http","qualifiedName":"HTTP.Response"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"},{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/HTTPParser#arrayBuffer"},{"id":2162,"name":"blob","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L95"}],"signatures":[{"id":2163,"name":"blob","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Blob response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst request = HTTP.request({\\n  url: \'http://localhost\',\\n  parse: HTTPParser.blob,\\n});// Task<Blob, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L95"}],"parameters":[{"id":2164,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"Response","package":"@w5s/http","qualifiedName":"HTTP.Response"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Blob"},"name":"Blob","package":"typescript"},{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/HTTPParser#blob"},{"id":2159,"name":"formData","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L57"}],"signatures":[{"id":2160,"name":"formData","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst request = HTTP.request({\\n  url: \'http://localhost\',\\n  parse: HTTPParser.formData,\\n});// Task<FormData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L57"}],"parameters":[{"id":2161,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"Response","package":"@w5s/http","qualifiedName":"HTTP.Response"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"FormData"},"name":"FormData","package":"typescript"},{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/HTTPParser#formData"},{"id":2152,"name":"json","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L72"}],"signatures":[{"id":2153,"name":"json","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype MyData = { foo: string, bar: boolean };\\n\\nconst request = HTTP.request({\\n  url: \'http://localhost\',\\n  parse: HTTPParser.json<MyData>(\'unsafe\'),\\n});// Task<MyData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L72"}],"typeParameter":[{"id":2154,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"parameters":[{"id":2155,"name":"CodecModule","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":"unsafe"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec"},"typeArguments":[{"type":"reference","target":2154,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}]}}],"type":{"type":"reference","target":2147,"typeArguments":[{"type":"reference","target":2154,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"HTTPParser","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/namespace/HTTPParser#json"},{"id":2165,"name":"text","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L108"}],"signatures":[{"id":2166,"name":"text","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Text response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst request = HTTP.request({\\n  url: \'http://localhost\',\\n  parse: HTTPParser.text,\\n});// Task<string, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L108"}],"parameters":[{"id":2167,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"Response","package":"@w5s/http","qualifiedName":"HTTP.Response"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/HTTPParser#text"}],"groups":[{"title":"Functions","children":[2156,2162,2159,2152,2165]}],"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":13,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L13"},{"fileName":"packages/http/src/HTTPParser.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L16"}],"permalink":"/std/fr/api/http/namespace/HTTPParser","previousId":2087,"nextId":2086},{"id":2147,"name":"HTTPParser","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A transformation function taking an "},{"kind":"inline-tag","tag":"@link","text":"HTTP.Response","target":2084,"tsLinkText":""},{"kind":"text","text":" as input"}]},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":13,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L13"},{"fileName":"packages/http/src/HTTPParser.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L16"}],"typeParameters":[{"id":2148,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"signatures":[{"id":2149,"name":"HTTPParser","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPParser.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPParser.ts#L14"}],"parameters":[{"id":2150,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2084,"name":"Response","package":"@w5s/http","qualifiedName":"HTTP.Response"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2148,"name":"Value","package":"@w5s/http","qualifiedName":"HTTPParser.Value","refersToTypeParameter":true},{"type":"reference","target":2140,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/interface/HTTPParser","nextId":2027},{"id":2086,"name":"HTTPError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Union type of http client errors"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L6"},{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"}],"type":{"type":"union","types":[{"type":"reference","target":2121,"name":"HTTPError.NetworkError","package":"@w5s/http"},{"type":"reference","target":2100,"name":"HTTPError.InvalidURL","package":"@w5s/http"},{"type":"reference","target":2140,"name":"HTTPError.ParserError","package":"@w5s/http"}]},"permalink":"/std/fr/api/http#HTTPError","previousId":2151}],"groups":[{"title":"Interfaces","children":[2147]},{"title":"Namespaces","children":[2027,2087,2151]},{"title":"Type Aliases","children":[2086]}],"sources":[{"fileName":"packages/http/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/http/src/index.ts#L1"}],"permalink":"/std/fr/api/http"},"urlSlug":"http"}],"packageName":"@w5s/http","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":9,"name":"@w5s/invariant","variant":"declaration","kind":2,"flags":{},"children":[{"id":2168,"name":"assertNever","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/invariant/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/assertNever.ts#L17"}],"signatures":[{"id":2169,"name":"assertNever","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when accessing this function and throws a TypeError at runtime\\nThis is useful for exhaustive switch check."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst print = (fruit: \'banana\'|\'kiwi\') => {\\n  switch (fruit) {\\n    case \'banana\': return \'\ud83c\udf4c Banana\';\\n    case \'kiwi\': return \'\ud83e\udd5d Kiwi\';\\n    default: return assertNever(fruit); // <- This line will report an error if a case is missing\\n  }\\n}\\n```"}]}]},"sources":[{"fileName":"packages/invariant/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/assertNever.ts#L17"}],"typeParameter":[{"id":2170,"name":"V","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2171,"name":"subject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the never value that should be reported"}]},"type":{"type":"reference","target":2170,"name":"V","package":"@w5s/invariant","refersToTypeParameter":true}}],"type":{"type":"reference","target":2170,"name":"V","package":"@w5s/invariant","refersToTypeParameter":true}}],"permalink":"/std/fr/api/invariant/function/assertNever","nextId":2172},{"id":2172,"name":"invariant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/invariant/src/invariant.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/invariant.ts#L14"},{"fileName":"packages/invariant/src/invariant.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/invariant.ts#L15"},{"fileName":"packages/invariant/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/invariant.ts#L16"}],"signatures":[{"id":2173,"name":"invariant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else throws "},{"kind":"code","text":"`Error { name: \'InvariantError\', message }`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninvariant(true, \'this should be true\');// pass\\ninvariant(false, \'this should be true\');// throw new Error(\'this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/invariant/src/invariant.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/invariant.ts#L14"}],"parameters":[{"id":2174,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"literal","value":false}},{"id":2175,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"never"}},{"id":2176,"name":"invariant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/invariant/src/invariant.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/invariant.ts#L15"}],"parameters":[{"id":2177,"name":"condition","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":2178,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"predicate","name":"condition","asserts":true}}],"permalink":"/std/fr/api/invariant/function/invariant","previousId":2168,"nextId":2179},{"id":2179,"name":"warning","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/invariant/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/warning.ts#L14"}],"signatures":[{"id":2180,"name":"warning","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else print a message using "},{"kind":"code","text":"`console.warn`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nwarning(true, \'this should be true\');// pass\\nwarning(false, \'this should be true\');// console.warn(\'Warning: this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/invariant/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/warning.ts#L14"}],"parameters":[{"id":2181,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":2182,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/invariant/function/warning","previousId":2172}],"groups":[{"title":"Functions","children":[2168,2172,2179]}],"sources":[{"fileName":"packages/invariant/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/invariant/src/index.ts#L1"}],"permalink":"/std/fr/api/invariant"},"urlSlug":"invariant"}],"packageName":"@w5s/invariant","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":10,"name":"@w5s/money","variant":"declaration","kind":2,"flags":{},"children":[{"id":2183,"name":"Currency","variant":"declaration","kind":4,"flags":{},"children":[{"id":2253,"name":"defaultPrecision","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L12"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Currency#defaultPrecision"},{"id":2252,"name":"defaultRounding","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L11"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Currency#defaultRounding"},{"id":2195,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":2196,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":2197,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":2198,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2199,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2200,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":2201,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/money/namespace/Currency#inspect"},{"id":2188,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":47,"character":17}],"type":{"type":"literal","value":"Currency"},"permalink":"/std/fr/api/money/namespace/Currency#typeName"},{"id":2242,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":2243,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":2244,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2245,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2246,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#!="},{"id":2212,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"signatures":[{"id":2213,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"parameters":[{"id":2214,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2215,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2216,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#<"},{"id":2207,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"signatures":[{"id":2208,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"parameters":[{"id":2209,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2210,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2211,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#<="},{"id":2247,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":2248,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":2249,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2250,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2251,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#=="},{"id":2222,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"signatures":[{"id":2223,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"parameters":[{"id":2224,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2225,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2226,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#>"},{"id":2217,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"signatures":[{"id":2218,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"parameters":[{"id":2219,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2220,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2221,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#>="},{"id":2202,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"signatures":[{"id":2203,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"parameters":[{"id":2204,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2205,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2206,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/money/namespace/Currency#compare"},{"id":2184,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"signatures":[{"id":2185,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"parameters":[{"id":2186,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2187,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#create"},{"id":2237,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":2238,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":2239,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2240,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2241,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#equals"},{"id":2192,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":2193,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":2194,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Currency#from"},{"id":2189,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":2190,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":2191,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}}],"permalink":"/std/fr/api/money/namespace/Currency#hasInstance"},{"id":2232,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"signatures":[{"id":2233,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"parameters":[{"id":2234,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2235,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2236,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#max"},{"id":2227,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"signatures":[{"id":2228,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"parameters":[{"id":2229,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2230,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":2231,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#min"}],"groups":[{"title":"Variables","children":[2253,2252,2195,2188]},{"title":"Functions","children":[2242,2212,2207,2247,2222,2217,2202,2184,2237,2192,2189,2232,2227]}],"categories":[{"title":"Comparator","children":[2242,2212,2207,2247,2222,2217,2202,2237,2232,2227]},{"title":"Constructor","children":[2184,2192]},{"title":"Type","children":[2195,2188,2189]},{"title":"__CATEGORY__","children":[2253,2252]}],"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"permalink":"/std/fr/api/money/namespace/Currency","previousId":2691,"nextId":2255},{"id":2255,"name":"Money","variant":"declaration","kind":4,"flags":{},"children":[{"id":2267,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":2268,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":2269,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":2270,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2271,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2272,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":2273,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/money/namespace/Money#inspect"},{"id":2260,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":47,"character":17}],"type":{"type":"literal","value":"Money"},"permalink":"/std/fr/api/money/namespace/Money#typeName"},{"id":2326,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":2327,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":2328,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2329,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2330,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#!="},{"id":2282,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L63"}],"signatures":[{"id":2283,"name":"*","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":63,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L63"}],"parameters":[{"id":2284,"name":"money","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2285,"name":"multiplier","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#*"},{"id":2274,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L38"}],"signatures":[{"id":2275,"name":"+","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L38"}],"parameters":[{"id":2276,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2277,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#+"},{"id":2278,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L51"}],"signatures":[{"id":2279,"name":"-","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L51"}],"parameters":[{"id":2280,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2281,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#-"},{"id":2296,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"signatures":[{"id":2297,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"parameters":[{"id":2298,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2299,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2300,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#<"},{"id":2291,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"signatures":[{"id":2292,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"parameters":[{"id":2293,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2294,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2295,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#<="},{"id":2331,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":2332,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":2333,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2334,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2335,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#=="},{"id":2306,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"signatures":[{"id":2307,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"parameters":[{"id":2308,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2309,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2310,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#>"},{"id":2301,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"signatures":[{"id":2302,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"parameters":[{"id":2303,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2304,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2305,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#>="},{"id":2286,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"signatures":[{"id":2287,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"parameters":[{"id":2288,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2289,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2290,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/money/namespace/Money#compare"},{"id":2256,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"signatures":[{"id":2257,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":41,"character":8}],"parameters":[{"id":2258,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2259,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#create"},{"id":2321,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":2322,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":2323,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2324,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2325,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#equals"},{"id":2264,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":2265,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":2266,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#from"},{"id":2261,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":2262,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":2263,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}}],"permalink":"/std/fr/api/money/namespace/Money#hasInstance"},{"id":2316,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"signatures":[{"id":2317,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"parameters":[{"id":2318,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2319,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2320,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#max"},{"id":2311,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"signatures":[{"id":2312,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"parameters":[{"id":2313,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2314,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":2315,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#min"}],"groups":[{"title":"Variables","children":[2267,2260]},{"title":"Functions","children":[2326,2282,2274,2278,2296,2291,2331,2306,2301,2286,2256,2321,2264,2261,2316,2311]}],"categories":[{"title":"Comparator","children":[2326,2296,2291,2331,2306,2301,2286,2321,2316,2311]},{"title":"Constructor","children":[2256,2264]},{"title":"Type","children":[2267,2260,2261]},{"title":"__CATEGORY__","children":[2282,2274,2278]}],"sources":[{"fileName":"packages/money/src/Money.ts","line":5,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L5"},{"fileName":"packages/money/src/Money.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L10"}],"permalink":"/std/fr/api/money/namespace/Money","previousId":2183,"nextId":2254},{"id":2254,"name":"Currency","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"CurrencyType","package":"@w5s/money","qualifiedName":"Currency"},"permalink":"/std/fr/api/money#Currency","previousId":2255,"nextId":2336},{"id":2336,"name":"Money","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":5,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L5"},{"fileName":"packages/money/src/Money.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L10"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"MoneyType","package":"@w5s/money","qualifiedName":"Money"},"permalink":"/std/fr/api/money#Money","previousId":2254},{"id":2346,"name":"AED","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1240,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1240"}],"signatures":[{"id":2347,"name":"AED","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"United Arab Emirates Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AED(\'1.25\');// Money({ currency: Currency({ code: \'AED\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1240,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1240"}],"parameters":[{"id":2348,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AED","nextId":2349},{"id":2349,"name":"AFN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1250,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1250"}],"signatures":[{"id":2350,"name":"AFN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Afghan Afghani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AFN(\'1.25\');// Money({ currency: Currency({ code: \'AFN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1250,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1250"}],"parameters":[{"id":2351,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AFN","previousId":2346,"nextId":2352},{"id":2352,"name":"ALL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1260"}],"signatures":[{"id":2353,"name":"ALL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Albanian Lek money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ALL(\'1.25\');// Money({ currency: Currency({ code: \'ALL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1260"}],"parameters":[{"id":2354,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ALL","previousId":2349,"nextId":2355},{"id":2355,"name":"AMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1270,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1270"}],"signatures":[{"id":2356,"name":"AMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Armenian Dram money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AMD(\'1.25\');// Money({ currency: Currency({ code: \'AMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1270,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1270"}],"parameters":[{"id":2357,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AMD","previousId":2352,"nextId":2358},{"id":2358,"name":"ARS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1280,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1280"}],"signatures":[{"id":2359,"name":"ARS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Argentine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ARS(\'1.25\');// Money({ currency: Currency({ code: \'ARS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1280,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1280"}],"parameters":[{"id":2360,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ARS","previousId":2355,"nextId":2361},{"id":2361,"name":"AUD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1290,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1290"}],"signatures":[{"id":2362,"name":"AUD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Australian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AUD(\'1.25\');// Money({ currency: Currency({ code: \'AUD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1290,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1290"}],"parameters":[{"id":2363,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AUD","previousId":2358,"nextId":2364},{"id":2364,"name":"AZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1300,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1300"}],"signatures":[{"id":2365,"name":"AZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Azerbaijani Manat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AZN(\'1.25\');// Money({ currency: Currency({ code: \'AZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1300,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1300"}],"parameters":[{"id":2366,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AZN","previousId":2361,"nextId":2367},{"id":2367,"name":"BAM","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1310,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1310"}],"signatures":[{"id":2368,"name":"BAM","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bosnia-Herzegovina Convertible Mark money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BAM(\'1.25\');// Money({ currency: Currency({ code: \'BAM\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1310,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1310"}],"parameters":[{"id":2369,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BAM","previousId":2364,"nextId":2370},{"id":2370,"name":"BDT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1320,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1320"}],"signatures":[{"id":2371,"name":"BDT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bangladeshi Taka money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BDT(\'1.25\');// Money({ currency: Currency({ code: \'BDT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1320,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1320"}],"parameters":[{"id":2372,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BDT","previousId":2367,"nextId":2373},{"id":2373,"name":"BGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1330"}],"signatures":[{"id":2374,"name":"BGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bulgarian Lev money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BGN(\'1.25\');// Money({ currency: Currency({ code: \'BGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1330"}],"parameters":[{"id":2375,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BGN","previousId":2370,"nextId":2376},{"id":2376,"name":"BHD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1340,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1340"}],"signatures":[{"id":2377,"name":"BHD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bahraini Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BHD(\'1.25\');// Money({ currency: Currency({ code: \'BHD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1340,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1340"}],"parameters":[{"id":2378,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BHD","previousId":2373,"nextId":2379},{"id":2379,"name":"BIF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1350,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1350"}],"signatures":[{"id":2380,"name":"BIF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Burundian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BIF(\'1.25\');// Money({ currency: Currency({ code: \'BIF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1350,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1350"}],"parameters":[{"id":2381,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BIF","previousId":2376,"nextId":2382},{"id":2382,"name":"BND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1360,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1360"}],"signatures":[{"id":2383,"name":"BND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brunei Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BND(\'1.25\');// Money({ currency: Currency({ code: \'BND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1360,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1360"}],"parameters":[{"id":2384,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BND","previousId":2379,"nextId":2385},{"id":2385,"name":"BOB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1370,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1370"}],"signatures":[{"id":2386,"name":"BOB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bolivian Boliviano money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BOB(\'1.25\');// Money({ currency: Currency({ code: \'BOB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1370,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1370"}],"parameters":[{"id":2387,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BOB","previousId":2382,"nextId":2388},{"id":2388,"name":"BRL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1380,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1380"}],"signatures":[{"id":2389,"name":"BRL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brazilian Real money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BRL(\'1.25\');// Money({ currency: Currency({ code: \'BRL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1380,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1380"}],"parameters":[{"id":2390,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BRL","previousId":2385,"nextId":2391},{"id":2391,"name":"BWP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1390,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1390"}],"signatures":[{"id":2392,"name":"BWP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Botswanan Pula money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BWP(\'1.25\');// Money({ currency: Currency({ code: \'BWP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1390,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1390"}],"parameters":[{"id":2393,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BWP","previousId":2388,"nextId":2394},{"id":2394,"name":"BYN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1400,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1400"}],"signatures":[{"id":2395,"name":"BYN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belarusian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BYN(\'1.25\');// Money({ currency: Currency({ code: \'BYN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1400,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1400"}],"parameters":[{"id":2396,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BYN","previousId":2391,"nextId":2397},{"id":2397,"name":"BZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1410,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1410"}],"signatures":[{"id":2398,"name":"BZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belize Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BZD(\'1.25\');// Money({ currency: Currency({ code: \'BZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1410,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1410"}],"parameters":[{"id":2399,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BZD","previousId":2394,"nextId":2340},{"id":2340,"name":"CAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1220,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1220"}],"signatures":[{"id":2341,"name":"CAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canadian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CAD(\'1.25\');// Money({ currency: Currency({ code: \'CAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1220,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1220"}],"parameters":[{"id":2342,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CAD","previousId":2397,"nextId":2400},{"id":2400,"name":"CDF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1420,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1420"}],"signatures":[{"id":2401,"name":"CDF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Congolese Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CDF(\'1.25\');// Money({ currency: Currency({ code: \'CDF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1420,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1420"}],"parameters":[{"id":2402,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CDF","previousId":2340,"nextId":2403},{"id":2403,"name":"CHF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1430,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1430"}],"signatures":[{"id":2404,"name":"CHF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swiss Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CHF(\'1.25\');// Money({ currency: Currency({ code: \'CHF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1430,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1430"}],"parameters":[{"id":2405,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CHF","previousId":2400,"nextId":2406},{"id":2406,"name":"CLP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1440,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1440"}],"signatures":[{"id":2407,"name":"CLP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chilean Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CLP(\'1.25\');// Money({ currency: Currency({ code: \'CLP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1440,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1440"}],"parameters":[{"id":2408,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CLP","previousId":2403,"nextId":2409},{"id":2409,"name":"CNY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1450,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1450"}],"signatures":[{"id":2410,"name":"CNY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chinese Yuan money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CNY(\'1.25\');// Money({ currency: Currency({ code: \'CNY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1450,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1450"}],"parameters":[{"id":2411,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CNY","previousId":2406,"nextId":2412},{"id":2412,"name":"COP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1460,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1460"}],"signatures":[{"id":2413,"name":"COP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Colombian Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = COP(\'1.25\');// Money({ currency: Currency({ code: \'COP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1460,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1460"}],"parameters":[{"id":2414,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/COP","previousId":2409,"nextId":2415},{"id":2415,"name":"CRC","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1470,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1470"}],"signatures":[{"id":2416,"name":"CRC","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Costa Rican Col\xf3n money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CRC(\'1.25\');// Money({ currency: Currency({ code: \'CRC\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1470,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1470"}],"parameters":[{"id":2417,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CRC","previousId":2412,"nextId":2418},{"id":2418,"name":"CVE","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1480,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1480"}],"signatures":[{"id":2419,"name":"CVE","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cape Verdean Escudo money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CVE(\'1.25\');// Money({ currency: Currency({ code: \'CVE\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1480,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1480"}],"parameters":[{"id":2420,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CVE","previousId":2415,"nextId":2421},{"id":2421,"name":"CZK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1490,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1490"}],"signatures":[{"id":2422,"name":"CZK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Czech Republic Koruna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CZK(\'1.25\');// Money({ currency: Currency({ code: \'CZK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1490,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1490"}],"parameters":[{"id":2423,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CZK","previousId":2418,"nextId":2424},{"id":2424,"name":"DJF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1500,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1500"}],"signatures":[{"id":2425,"name":"DJF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Djiboutian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DJF(\'1.25\');// Money({ currency: Currency({ code: \'DJF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1500,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1500"}],"parameters":[{"id":2426,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DJF","previousId":2421,"nextId":2427},{"id":2427,"name":"DKK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1510,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1510"}],"signatures":[{"id":2428,"name":"DKK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Danish Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DKK(\'1.25\');// Money({ currency: Currency({ code: \'DKK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1510,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1510"}],"parameters":[{"id":2429,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DKK","previousId":2424,"nextId":2430},{"id":2430,"name":"DOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1520,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1520"}],"signatures":[{"id":2431,"name":"DOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Dominican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DOP(\'1.25\');// Money({ currency: Currency({ code: \'DOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1520,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1520"}],"parameters":[{"id":2432,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DOP","previousId":2427,"nextId":2433},{"id":2433,"name":"DZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1530,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1530"}],"signatures":[{"id":2434,"name":"DZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Algerian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DZD(\'1.25\');// Money({ currency: Currency({ code: \'DZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1530,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1530"}],"parameters":[{"id":2435,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DZD","previousId":2430,"nextId":2436},{"id":2436,"name":"EEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1540,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1540"}],"signatures":[{"id":2437,"name":"EEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Estonian Kroon money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EEK(\'1.25\');// Money({ currency: Currency({ code: \'EEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1540,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1540"}],"parameters":[{"id":2438,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EEK","previousId":2433,"nextId":2439},{"id":2439,"name":"EGP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1550,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1550"}],"signatures":[{"id":2440,"name":"EGP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Egyptian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EGP(\'1.25\');// Money({ currency: Currency({ code: \'EGP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1550,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1550"}],"parameters":[{"id":2441,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EGP","previousId":2436,"nextId":2442},{"id":2442,"name":"ERN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1560,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1560"}],"signatures":[{"id":2443,"name":"ERN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Eritrean Nakfa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ERN(\'1.25\');// Money({ currency: Currency({ code: \'ERN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1560,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1560"}],"parameters":[{"id":2444,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ERN","previousId":2439,"nextId":2445},{"id":2445,"name":"ETB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1570,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1570"}],"signatures":[{"id":2446,"name":"ETB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ethiopian Birr money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ETB(\'1.25\');// Money({ currency: Currency({ code: \'ETB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1570,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1570"}],"parameters":[{"id":2447,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ETB","previousId":2442,"nextId":2343},{"id":2343,"name":"EUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1230,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1230"}],"signatures":[{"id":2344,"name":"EUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Euro money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EUR(\'1.25\');// Money({ currency: Currency({ code: \'EUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1230,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1230"}],"parameters":[{"id":2345,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EUR","previousId":2445,"nextId":2448},{"id":2448,"name":"GBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1580,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1580"}],"signatures":[{"id":2449,"name":"GBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"British Pound Sterling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GBP(\'1.25\');// Money({ currency: Currency({ code: \'GBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1580,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1580"}],"parameters":[{"id":2450,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GBP","previousId":2343,"nextId":2451},{"id":2451,"name":"GEL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1590,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1590"}],"signatures":[{"id":2452,"name":"GEL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Georgian Lari money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GEL(\'1.25\');// Money({ currency: Currency({ code: \'GEL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1590,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1590"}],"parameters":[{"id":2453,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GEL","previousId":2448,"nextId":2454},{"id":2454,"name":"GHS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1600,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1600"}],"signatures":[{"id":2455,"name":"GHS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ghanaian Cedi money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GHS(\'1.25\');// Money({ currency: Currency({ code: \'GHS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1600,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1600"}],"parameters":[{"id":2456,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GHS","previousId":2451,"nextId":2457},{"id":2457,"name":"GNF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1610,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1610"}],"signatures":[{"id":2458,"name":"GNF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guinean Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GNF(\'1.25\');// Money({ currency: Currency({ code: \'GNF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1610,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1610"}],"parameters":[{"id":2459,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GNF","previousId":2454,"nextId":2460},{"id":2460,"name":"GTQ","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1620,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1620"}],"signatures":[{"id":2461,"name":"GTQ","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guatemalan Quetzal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GTQ(\'1.25\');// Money({ currency: Currency({ code: \'GTQ\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1620,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1620"}],"parameters":[{"id":2462,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GTQ","previousId":2457,"nextId":2463},{"id":2463,"name":"HKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1630,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1630"}],"signatures":[{"id":2464,"name":"HKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hong Kong Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HKD(\'1.25\');// Money({ currency: Currency({ code: \'HKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1630,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1630"}],"parameters":[{"id":2465,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HKD","previousId":2460,"nextId":2466},{"id":2466,"name":"HNL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1640,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1640"}],"signatures":[{"id":2467,"name":"HNL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Honduran Lempira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HNL(\'1.25\');// Money({ currency: Currency({ code: \'HNL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1640,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1640"}],"parameters":[{"id":2468,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HNL","previousId":2463,"nextId":2469},{"id":2469,"name":"HRK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1650,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1650"}],"signatures":[{"id":2470,"name":"HRK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Croatian Kuna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HRK(\'1.25\');// Money({ currency: Currency({ code: \'HRK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1650,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1650"}],"parameters":[{"id":2471,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HRK","previousId":2466,"nextId":2472},{"id":2472,"name":"HUF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1660,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1660"}],"signatures":[{"id":2473,"name":"HUF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hungarian Forint money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HUF(\'1.25\');// Money({ currency: Currency({ code: \'HUF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1660,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1660"}],"parameters":[{"id":2474,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HUF","previousId":2469,"nextId":2475},{"id":2475,"name":"IDR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1670,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1670"}],"signatures":[{"id":2476,"name":"IDR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indonesian Rupiah money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IDR(\'1.25\');// Money({ currency: Currency({ code: \'IDR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1670,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1670"}],"parameters":[{"id":2477,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IDR","previousId":2472,"nextId":2478},{"id":2478,"name":"ILS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1680,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1680"}],"signatures":[{"id":2479,"name":"ILS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Israeli New Sheqel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ILS(\'1.25\');// Money({ currency: Currency({ code: \'ILS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1680,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1680"}],"parameters":[{"id":2480,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ILS","previousId":2475,"nextId":2481},{"id":2481,"name":"INR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1690,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1690"}],"signatures":[{"id":2482,"name":"INR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = INR(\'1.25\');// Money({ currency: Currency({ code: \'INR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1690,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1690"}],"parameters":[{"id":2483,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/INR","previousId":2478,"nextId":2484},{"id":2484,"name":"IQD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1700,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1700"}],"signatures":[{"id":2485,"name":"IQD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iraqi Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IQD(\'1.25\');// Money({ currency: Currency({ code: \'IQD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1700,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1700"}],"parameters":[{"id":2486,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IQD","previousId":2481,"nextId":2487},{"id":2487,"name":"IRR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1710,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1710"}],"signatures":[{"id":2488,"name":"IRR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iranian Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IRR(\'1.25\');// Money({ currency: Currency({ code: \'IRR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1710,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1710"}],"parameters":[{"id":2489,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IRR","previousId":2484,"nextId":2490},{"id":2490,"name":"ISK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1720,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1720"}],"signatures":[{"id":2491,"name":"ISK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Icelandic Kr\xf3na money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ISK(\'1.25\');// Money({ currency: Currency({ code: \'ISK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1720,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1720"}],"parameters":[{"id":2492,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ISK","previousId":2487,"nextId":2493},{"id":2493,"name":"JMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1730,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1730"}],"signatures":[{"id":2494,"name":"JMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jamaican Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JMD(\'1.25\');// Money({ currency: Currency({ code: \'JMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1730,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1730"}],"parameters":[{"id":2495,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JMD","previousId":2490,"nextId":2496},{"id":2496,"name":"JOD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1740,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1740"}],"signatures":[{"id":2497,"name":"JOD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jordanian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JOD(\'1.25\');// Money({ currency: Currency({ code: \'JOD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1740,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1740"}],"parameters":[{"id":2498,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JOD","previousId":2493,"nextId":2499},{"id":2499,"name":"JPY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1750,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1750"}],"signatures":[{"id":2500,"name":"JPY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Japanese Yen money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JPY(\'1.25\');// Money({ currency: Currency({ code: \'JPY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1750,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1750"}],"parameters":[{"id":2501,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JPY","previousId":2496,"nextId":2502},{"id":2502,"name":"KES","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1760,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1760"}],"signatures":[{"id":2503,"name":"KES","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kenyan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KES(\'1.25\');// Money({ currency: Currency({ code: \'KES\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1760,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1760"}],"parameters":[{"id":2504,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KES","previousId":2499,"nextId":2505},{"id":2505,"name":"KHR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1770,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1770"}],"signatures":[{"id":2506,"name":"KHR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cambodian Riel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KHR(\'1.25\');// Money({ currency: Currency({ code: \'KHR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1770,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1770"}],"parameters":[{"id":2507,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KHR","previousId":2502,"nextId":2508},{"id":2508,"name":"KMF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1780,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1780"}],"signatures":[{"id":2509,"name":"KMF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Comorian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KMF(\'1.25\');// Money({ currency: Currency({ code: \'KMF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1780,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1780"}],"parameters":[{"id":2510,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KMF","previousId":2505,"nextId":2511},{"id":2511,"name":"KRW","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1790,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1790"}],"signatures":[{"id":2512,"name":"KRW","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South Korean Won money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KRW(\'1.25\');// Money({ currency: Currency({ code: \'KRW\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1790,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1790"}],"parameters":[{"id":2513,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KRW","previousId":2508,"nextId":2514},{"id":2514,"name":"KWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1800,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1800"}],"signatures":[{"id":2515,"name":"KWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kuwaiti Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KWD(\'1.25\');// Money({ currency: Currency({ code: \'KWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1800,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1800"}],"parameters":[{"id":2516,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KWD","previousId":2511,"nextId":2517},{"id":2517,"name":"KZT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1810,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1810"}],"signatures":[{"id":2518,"name":"KZT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kazakhstani Tenge money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KZT(\'1.25\');// Money({ currency: Currency({ code: \'KZT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1810,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1810"}],"parameters":[{"id":2519,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KZT","previousId":2514,"nextId":2520},{"id":2520,"name":"LBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1820,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1820"}],"signatures":[{"id":2521,"name":"LBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lebanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LBP(\'1.25\');// Money({ currency: Currency({ code: \'LBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1820,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1820"}],"parameters":[{"id":2522,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LBP","previousId":2517,"nextId":2523},{"id":2523,"name":"LKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1830,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1830"}],"signatures":[{"id":2524,"name":"LKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sri Lankan Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LKR(\'1.25\');// Money({ currency: Currency({ code: \'LKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1830,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1830"}],"parameters":[{"id":2525,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LKR","previousId":2520,"nextId":2526},{"id":2526,"name":"LTL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1840,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1840"}],"signatures":[{"id":2527,"name":"LTL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lithuanian Litas money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LTL(\'1.25\');// Money({ currency: Currency({ code: \'LTL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1840,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1840"}],"parameters":[{"id":2528,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LTL","previousId":2523,"nextId":2529},{"id":2529,"name":"LVL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1850,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1850"}],"signatures":[{"id":2530,"name":"LVL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Latvian Lats money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LVL(\'1.25\');// Money({ currency: Currency({ code: \'LVL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1850,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1850"}],"parameters":[{"id":2531,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LVL","previousId":2526,"nextId":2532},{"id":2532,"name":"LYD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1860,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1860"}],"signatures":[{"id":2533,"name":"LYD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Libyan Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LYD(\'1.25\');// Money({ currency: Currency({ code: \'LYD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1860,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1860"}],"parameters":[{"id":2534,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LYD","previousId":2529,"nextId":2535},{"id":2535,"name":"MAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1870,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1870"}],"signatures":[{"id":2536,"name":"MAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moroccan Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MAD(\'1.25\');// Money({ currency: Currency({ code: \'MAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1870,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1870"}],"parameters":[{"id":2537,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MAD","previousId":2532,"nextId":2538},{"id":2538,"name":"MDL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1880,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1880"}],"signatures":[{"id":2539,"name":"MDL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moldovan Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MDL(\'1.25\');// Money({ currency: Currency({ code: \'MDL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1880,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1880"}],"parameters":[{"id":2540,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MDL","previousId":2535,"nextId":2541},{"id":2541,"name":"MGA","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1890,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1890"}],"signatures":[{"id":2542,"name":"MGA","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malagasy Ariary money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MGA(\'1.25\');// Money({ currency: Currency({ code: \'MGA\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1890,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1890"}],"parameters":[{"id":2543,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MGA","previousId":2538,"nextId":2544},{"id":2544,"name":"MKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1900,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1900"}],"signatures":[{"id":2545,"name":"MKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macedonian Denar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MKD(\'1.25\');// Money({ currency: Currency({ code: \'MKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1900,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1900"}],"parameters":[{"id":2546,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MKD","previousId":2541,"nextId":2547},{"id":2547,"name":"MMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1910,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1910"}],"signatures":[{"id":2548,"name":"MMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Myanma Kyat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MMK(\'1.25\');// Money({ currency: Currency({ code: \'MMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1910,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1910"}],"parameters":[{"id":2549,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MMK","previousId":2544,"nextId":2550},{"id":2550,"name":"MOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1920,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1920"}],"signatures":[{"id":2551,"name":"MOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macanese Pataca money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MOP(\'1.25\');// Money({ currency: Currency({ code: \'MOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1920,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1920"}],"parameters":[{"id":2552,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MOP","previousId":2547,"nextId":2553},{"id":2553,"name":"MUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1930,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1930"}],"signatures":[{"id":2554,"name":"MUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mauritian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MUR(\'1.25\');// Money({ currency: Currency({ code: \'MUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1930,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1930"}],"parameters":[{"id":2555,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MUR","previousId":2550,"nextId":2556},{"id":2556,"name":"MXN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1940,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1940"}],"signatures":[{"id":2557,"name":"MXN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mexican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MXN(\'1.25\');// Money({ currency: Currency({ code: \'MXN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1940,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1940"}],"parameters":[{"id":2558,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MXN","previousId":2553,"nextId":2559},{"id":2559,"name":"MYR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1950,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1950"}],"signatures":[{"id":2560,"name":"MYR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malaysian Ringgit money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MYR(\'1.25\');// Money({ currency: Currency({ code: \'MYR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1950,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1950"}],"parameters":[{"id":2561,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MYR","previousId":2556,"nextId":2562},{"id":2562,"name":"MZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1960,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1960"}],"signatures":[{"id":2563,"name":"MZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mozambican Metical money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MZN(\'1.25\');// Money({ currency: Currency({ code: \'MZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1960,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1960"}],"parameters":[{"id":2564,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MZN","previousId":2559,"nextId":2565},{"id":2565,"name":"NAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1970,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1970"}],"signatures":[{"id":2566,"name":"NAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Namibian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NAD(\'1.25\');// Money({ currency: Currency({ code: \'NAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1970,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1970"}],"parameters":[{"id":2567,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NAD","previousId":2562,"nextId":2568},{"id":2568,"name":"NGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1980,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1980"}],"signatures":[{"id":2569,"name":"NGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nigerian Naira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NGN(\'1.25\');// Money({ currency: Currency({ code: \'NGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1980,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1980"}],"parameters":[{"id":2570,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NGN","previousId":2565,"nextId":2571},{"id":2571,"name":"NIO","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1990,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1990"}],"signatures":[{"id":2572,"name":"NIO","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nicaraguan C\xf3rdoba money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NIO(\'1.25\');// Money({ currency: Currency({ code: \'NIO\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1990,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1990"}],"parameters":[{"id":2573,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NIO","previousId":2568,"nextId":2574},{"id":2574,"name":"NOK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2000,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2000"}],"signatures":[{"id":2575,"name":"NOK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Norwegian Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NOK(\'1.25\');// Money({ currency: Currency({ code: \'NOK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2000,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2000"}],"parameters":[{"id":2576,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NOK","previousId":2571,"nextId":2577},{"id":2577,"name":"NPR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2010,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2010"}],"signatures":[{"id":2578,"name":"NPR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nepalese Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NPR(\'1.25\');// Money({ currency: Currency({ code: \'NPR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2010,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2010"}],"parameters":[{"id":2579,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NPR","previousId":2574,"nextId":2580},{"id":2580,"name":"NZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2020,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2020"}],"signatures":[{"id":2581,"name":"NZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Zealand Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NZD(\'1.25\');// Money({ currency: Currency({ code: \'NZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2020,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2020"}],"parameters":[{"id":2582,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NZD","previousId":2577,"nextId":2583},{"id":2583,"name":"OMR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2030,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2030"}],"signatures":[{"id":2584,"name":"OMR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Omani Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = OMR(\'1.25\');// Money({ currency: Currency({ code: \'OMR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2030,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2030"}],"parameters":[{"id":2585,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/OMR","previousId":2580,"nextId":2586},{"id":2586,"name":"PAB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2040,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2040"}],"signatures":[{"id":2587,"name":"PAB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Panamanian Balboa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PAB(\'1.25\');// Money({ currency: Currency({ code: \'PAB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2040,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2040"}],"parameters":[{"id":2588,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PAB","previousId":2583,"nextId":2589},{"id":2589,"name":"PEN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2050,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2050"}],"signatures":[{"id":2590,"name":"PEN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Peruvian Nuevo Sol money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PEN(\'1.25\');// Money({ currency: Currency({ code: \'PEN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2050,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2050"}],"parameters":[{"id":2591,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PEN","previousId":2586,"nextId":2592},{"id":2592,"name":"PHP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2060,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2060"}],"signatures":[{"id":2593,"name":"PHP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Philippine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PHP(\'1.25\');// Money({ currency: Currency({ code: \'PHP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2060,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2060"}],"parameters":[{"id":2594,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PHP","previousId":2589,"nextId":2595},{"id":2595,"name":"PKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2070,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2070"}],"signatures":[{"id":2596,"name":"PKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pakistani Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PKR(\'1.25\');// Money({ currency: Currency({ code: \'PKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2070,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2070"}],"parameters":[{"id":2597,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PKR","previousId":2592,"nextId":2598},{"id":2598,"name":"PLN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2080,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2080"}],"signatures":[{"id":2599,"name":"PLN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Polish Zloty money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PLN(\'1.25\');// Money({ currency: Currency({ code: \'PLN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2080,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2080"}],"parameters":[{"id":2600,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PLN","previousId":2595,"nextId":2601},{"id":2601,"name":"PYG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2090,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2090"}],"signatures":[{"id":2602,"name":"PYG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Paraguayan Guarani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PYG(\'1.25\');// Money({ currency: Currency({ code: \'PYG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2090,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2090"}],"parameters":[{"id":2603,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PYG","previousId":2598,"nextId":2604},{"id":2604,"name":"QAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2100,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2100"}],"signatures":[{"id":2605,"name":"QAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Qatari Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = QAR(\'1.25\');// Money({ currency: Currency({ code: \'QAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2100,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2100"}],"parameters":[{"id":2606,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/QAR","previousId":2601,"nextId":2607},{"id":2607,"name":"RON","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2110,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2110"}],"signatures":[{"id":2608,"name":"RON","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Romanian Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RON(\'1.25\');// Money({ currency: Currency({ code: \'RON\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2110,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2110"}],"parameters":[{"id":2609,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RON","previousId":2604,"nextId":2610},{"id":2610,"name":"RSD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2120,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2120"}],"signatures":[{"id":2611,"name":"RSD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Serbian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RSD(\'1.25\');// Money({ currency: Currency({ code: \'RSD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2120,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2120"}],"parameters":[{"id":2612,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RSD","previousId":2607,"nextId":2613},{"id":2613,"name":"RUB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2130,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2130"}],"signatures":[{"id":2614,"name":"RUB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Russian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RUB(\'1.25\');// Money({ currency: Currency({ code: \'RUB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2130,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2130"}],"parameters":[{"id":2615,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RUB","previousId":2610,"nextId":2616},{"id":2616,"name":"RWF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2140,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2140"}],"signatures":[{"id":2617,"name":"RWF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Rwandan Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RWF(\'1.25\');// Money({ currency: Currency({ code: \'RWF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2140,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2140"}],"parameters":[{"id":2618,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RWF","previousId":2613,"nextId":2619},{"id":2619,"name":"SAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2150,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2150"}],"signatures":[{"id":2620,"name":"SAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Saudi Riyal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SAR(\'1.25\');// Money({ currency: Currency({ code: \'SAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2150,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2150"}],"parameters":[{"id":2621,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SAR","previousId":2616,"nextId":2622},{"id":2622,"name":"SDG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2160,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2160"}],"signatures":[{"id":2623,"name":"SDG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sudanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SDG(\'1.25\');// Money({ currency: Currency({ code: \'SDG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2160,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2160"}],"parameters":[{"id":2624,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SDG","previousId":2619,"nextId":2625},{"id":2625,"name":"SEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2170,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2170"}],"signatures":[{"id":2626,"name":"SEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swedish Krona money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SEK(\'1.25\');// Money({ currency: Currency({ code: \'SEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2170,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2170"}],"parameters":[{"id":2627,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SEK","previousId":2622,"nextId":2628},{"id":2628,"name":"SGD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2180,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2180"}],"signatures":[{"id":2629,"name":"SGD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Singapore Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SGD(\'1.25\');// Money({ currency: Currency({ code: \'SGD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2180,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2180"}],"parameters":[{"id":2630,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SGD","previousId":2625,"nextId":2631},{"id":2631,"name":"SOS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2190,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2190"}],"signatures":[{"id":2632,"name":"SOS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Somali Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SOS(\'1.25\');// Money({ currency: Currency({ code: \'SOS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2190,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2190"}],"parameters":[{"id":2633,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SOS","previousId":2628,"nextId":2634},{"id":2634,"name":"SYP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2200,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2200"}],"signatures":[{"id":2635,"name":"SYP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Syrian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SYP(\'1.25\');// Money({ currency: Currency({ code: \'SYP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2200,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2200"}],"parameters":[{"id":2636,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SYP","previousId":2631,"nextId":2637},{"id":2637,"name":"THB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2210,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2210"}],"signatures":[{"id":2638,"name":"THB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Thai Baht money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = THB(\'1.25\');// Money({ currency: Currency({ code: \'THB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2210,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2210"}],"parameters":[{"id":2639,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/THB","previousId":2634,"nextId":2640},{"id":2640,"name":"TND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2220,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2220"}],"signatures":[{"id":2641,"name":"TND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tunisian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TND(\'1.25\');// Money({ currency: Currency({ code: \'TND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2220,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2220"}],"parameters":[{"id":2642,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TND","previousId":2637,"nextId":2643},{"id":2643,"name":"TOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2230,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2230"}],"signatures":[{"id":2644,"name":"TOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tongan Pa\u02bbanga money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TOP(\'1.25\');// Money({ currency: Currency({ code: \'TOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2230,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2230"}],"parameters":[{"id":2645,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TOP","previousId":2640,"nextId":2646},{"id":2646,"name":"TRY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2240,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2240"}],"signatures":[{"id":2647,"name":"TRY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Turkish Lira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TRY(\'1.25\');// Money({ currency: Currency({ code: \'TRY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2240,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2240"}],"parameters":[{"id":2648,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TRY","previousId":2643,"nextId":2649},{"id":2649,"name":"TTD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2250,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2250"}],"signatures":[{"id":2650,"name":"TTD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Trinidad and Tobago Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TTD(\'1.25\');// Money({ currency: Currency({ code: \'TTD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2250,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2250"}],"parameters":[{"id":2651,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TTD","previousId":2646,"nextId":2652},{"id":2652,"name":"TWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2260"}],"signatures":[{"id":2653,"name":"TWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Taiwan Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TWD(\'1.25\');// Money({ currency: Currency({ code: \'TWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2260"}],"parameters":[{"id":2654,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TWD","previousId":2649,"nextId":2655},{"id":2655,"name":"TZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2270,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2270"}],"signatures":[{"id":2656,"name":"TZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tanzanian Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TZS(\'1.25\');// Money({ currency: Currency({ code: \'TZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2270,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2270"}],"parameters":[{"id":2657,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TZS","previousId":2652,"nextId":2658},{"id":2658,"name":"UAH","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2280,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2280"}],"signatures":[{"id":2659,"name":"UAH","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ukrainian Hryvnia money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UAH(\'1.25\');// Money({ currency: Currency({ code: \'UAH\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2280,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2280"}],"parameters":[{"id":2660,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UAH","previousId":2655,"nextId":2661},{"id":2661,"name":"UGX","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2290,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2290"}],"signatures":[{"id":2662,"name":"UGX","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ugandan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UGX(\'1.25\');// Money({ currency: Currency({ code: \'UGX\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2290,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2290"}],"parameters":[{"id":2663,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UGX","previousId":2658,"nextId":2337},{"id":2337,"name":"USD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1210,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1210"}],"signatures":[{"id":2338,"name":"USD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"US Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = USD(\'1.25\');// Money({ currency: Currency({ code: \'USD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1210,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1210"}],"parameters":[{"id":2339,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/USD","previousId":2661,"nextId":2664},{"id":2664,"name":"UYU","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2300,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2300"}],"signatures":[{"id":2665,"name":"UYU","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uruguayan Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UYU(\'1.25\');// Money({ currency: Currency({ code: \'UYU\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2300,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2300"}],"parameters":[{"id":2666,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UYU","previousId":2337,"nextId":2667},{"id":2667,"name":"UZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2310,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2310"}],"signatures":[{"id":2668,"name":"UZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uzbekistan Som money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UZS(\'1.25\');// Money({ currency: Currency({ code: \'UZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2310,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2310"}],"parameters":[{"id":2669,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UZS","previousId":2664,"nextId":2670},{"id":2670,"name":"VEF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2320,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2320"}],"signatures":[{"id":2671,"name":"VEF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Venezuelan Bol\xedvar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VEF(\'1.25\');// Money({ currency: Currency({ code: \'VEF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2320,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2320"}],"parameters":[{"id":2672,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/VEF","previousId":2667,"nextId":2673},{"id":2673,"name":"VND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2330"}],"signatures":[{"id":2674,"name":"VND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Vietnamese Dong money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VND(\'1.25\');// Money({ currency: Currency({ code: \'VND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2330"}],"parameters":[{"id":2675,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/VND","previousId":2670,"nextId":2676},{"id":2676,"name":"XAF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2340,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2340"}],"signatures":[{"id":2677,"name":"XAF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BEAC money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XAF(\'1.25\');// Money({ currency: Currency({ code: \'XAF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2340,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2340"}],"parameters":[{"id":2678,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/XAF","previousId":2673,"nextId":2679},{"id":2679,"name":"XOF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2350,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2350"}],"signatures":[{"id":2680,"name":"XOF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BCEAO money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XOF(\'1.25\');// Money({ currency: Currency({ code: \'XOF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2350,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2350"}],"parameters":[{"id":2681,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/XOF","previousId":2676,"nextId":2682},{"id":2682,"name":"YER","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2360,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2360"}],"signatures":[{"id":2683,"name":"YER","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Yemeni Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = YER(\'1.25\');// Money({ currency: Currency({ code: \'YER\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2360,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2360"}],"parameters":[{"id":2684,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/YER","previousId":2679,"nextId":2685},{"id":2685,"name":"ZAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2370,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2370"}],"signatures":[{"id":2686,"name":"ZAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South African Rand money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZAR(\'1.25\');// Money({ currency: Currency({ code: \'ZAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2370,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2370"}],"parameters":[{"id":2687,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZAR","previousId":2682,"nextId":2688},{"id":2688,"name":"ZMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2380,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2380"}],"signatures":[{"id":2689,"name":"ZMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zambian Kwacha money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZMK(\'1.25\');// Money({ currency: Currency({ code: \'ZMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2380,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2380"}],"parameters":[{"id":2690,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZMK","previousId":2685,"nextId":2691},{"id":2691,"name":"ZWL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2390,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2390"}],"signatures":[{"id":2692,"name":"ZWL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zimbabwean Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZWL(\'1.25\');// Money({ currency: Currency({ code: \'ZWL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":2390,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L2390"}],"parameters":[{"id":2693,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZWL","previousId":2688,"nextId":2183}],"groups":[{"title":"Functions","children":[2346,2349,2352,2355,2358,2361,2364,2367,2370,2373,2376,2379,2382,2385,2388,2391,2394,2397,2340,2400,2403,2406,2409,2412,2415,2418,2421,2424,2427,2430,2433,2436,2439,2442,2445,2343,2448,2451,2454,2457,2460,2463,2466,2469,2472,2475,2478,2481,2484,2487,2490,2493,2496,2499,2502,2505,2508,2511,2514,2517,2520,2523,2526,2529,2532,2535,2538,2541,2544,2547,2550,2553,2556,2559,2562,2565,2568,2571,2574,2577,2580,2583,2586,2589,2592,2595,2598,2601,2604,2607,2610,2613,2616,2619,2622,2625,2628,2631,2634,2637,2640,2643,2646,2649,2652,2655,2658,2661,2337,2664,2667,2670,2673,2676,2679,2682,2685,2688,2691]},{"title":"Namespaces","children":[2183,2255]},{"title":"Type Aliases","children":[2254,2336]}],"sources":[{"fileName":"packages/money/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/money/src/index.ts#L1"}],"permalink":"/std/fr/api/money"},"urlSlug":"money"}],"packageName":"@w5s/money","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":11,"name":"@w5s/random","variant":"declaration","kind":2,"flags":{},"children":[{"id":2747,"name":"RandomGenerator","variant":"declaration","kind":4,"flags":{},"children":[{"id":2749,"name":"crypto","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Safe crypto generator, using "},{"kind":"code","text":"`crypto.getRandomValues`"}]},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":48,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L48"}],"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"},"defaultValue":"...","permalink":"/std/fr/api/random/namespace/RandomGenerator#crypto"},{"id":2748,"name":"unsafe","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Unsafe generator, using "},{"kind":"code","text":"`Math.random`"}]},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":30,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L30"}],"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"},"defaultValue":"...","permalink":"/std/fr/api/random/namespace/RandomGenerator#unsafe"}],"groups":[{"title":"Variables","children":[2749,2748]}],"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"},{"fileName":"packages/random/src/randomGenerator.ts","line":9,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L9"},{"fileName":"packages/random/src/randomGenerator.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L26"}],"permalink":"/std/fr/api/random/namespace/RandomGenerator","previousId":2775,"nextId":2751},{"id":2751,"name":"RandomValue","variant":"declaration","kind":4,"flags":{},"children":[{"id":2755,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomValue.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L36"}],"signatures":[{"id":2756,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a valid "},{"kind":"code","text":"`RandomValue`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nRandomValue.hasInstance(null); // === false\\nRandomValue.hasInstance(RandomValue.of(0)); // === true\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomValue.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L36"}],"parameters":[{"id":2757,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an unknown value to be refined"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"}}}],"permalink":"/std/fr/api/random/namespace/RandomValue#hasInstance"},{"id":2752,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomValue.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L21"}],"signatures":[{"id":2753,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new random value from number 0<= N <=1.\\nAn invariant error is thrown when invalid number is given"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst random = RandomValue.of(0);\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomValue.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L21"}],"parameters":[{"id":2754,"name":"numeric","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"numeric value >=0 and <=1"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"}}],"permalink":"/std/fr/api/random/namespace/RandomValue#of"}],"groups":[{"title":"Functions","children":[2755,2752]}],"categories":[{"title":"Constructor","children":[2752]},{"title":"Type","children":[2755]}],"sources":[{"fileName":"packages/random/src/randomValue.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L4"},{"fileName":"packages/random/src/randomValue.ts","line":9,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L9"}],"permalink":"/std/fr/api/random/namespace/RandomValue","previousId":2747,"nextId":2694},{"id":2694,"name":"UUID","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate UUID"}]},"children":[{"id":2708,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":2709,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":2710,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":2711,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}},{"id":2712,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2713,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":2714,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/random/namespace/UUID#inspect"},{"id":2701,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":27,"character":4}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/random/namespace/UUID#typeName"},{"id":2715,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"signatures":[{"id":2716,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"parameters":[{"id":2717,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2718,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2719,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/DecodeError.ts","qualifiedName":"DecodeError"},"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/random/namespace/UUID#codecDecode"},{"id":2720,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"signatures":[{"id":2721,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"parameters":[{"id":2722,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2723,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/random/namespace/UUID#codecEncode"},{"id":2724,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"signatures":[{"id":2725,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"parameters":[{"id":2726,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/random/namespace/UUID#codecSchema"},{"id":2727,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/UUID.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L34"}],"signatures":[{"id":2728,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an "},{"kind":"code","text":"`UUID`"},{"kind":"text","text":" with only "},{"kind":"code","text":"`0`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst emptyUUID = UUID.empty();// \'00000000-0000-0000-0000-000000000000\'\\n```"}]}]},"sources":[{"fileName":"packages/random/src/UUID.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L34"}],"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}],"permalink":"/std/fr/api/random/namespace/UUID#empty"},{"id":2705,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":2706,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":2707,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/random/namespace/UUID#from"},{"id":2702,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":2703,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":2704,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}}],"permalink":"/std/fr/api/random/namespace/UUID#hasInstance"},{"id":2729,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/UUID.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L48"}],"signatures":[{"id":2730,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID.of(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/random/src/UUID.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L48"}],"parameters":[{"id":2731,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string representation"}]},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}],"permalink":"/std/fr/api/random/namespace/UUID#of"},{"id":2698,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"signatures":[{"id":2699,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"parameters":[{"id":2700,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"permalink":"/std/fr/api/random/namespace/UUID#unwrap"},{"id":2695,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"signatures":[{"id":2696,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"parameters":[{"id":2697,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"}}],"permalink":"/std/fr/api/random/namespace/UUID#wrap"}],"groups":[{"title":"Variables","children":[2708,2701]},{"title":"Functions","children":[2715,2720,2724,2727,2705,2702,2729,2698,2695]}],"categories":[{"title":"Codec","children":[2715,2720,2724]},{"title":"Constructor","children":[2727,2705,2729]},{"title":"Type","children":[2708,2701,2702]},{"title":"__CATEGORY__","children":[2698,2695]}],"sources":[{"fileName":"packages/random/src/UUID.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L6"},{"fileName":"packages/random/src/UUID.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L24"}],"permalink":"/std/fr/api/random/namespace/UUID","previousId":2751,"nextId":2758},{"id":2738,"name":"RandomGenerator","variant":"declaration","kind":256,"flags":{},"children":[{"id":2739,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"Task<RandomValue, never>.constructor"}},{"id":2743,"name":"taskRun","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":59,"character":13}],"type":{"type":"reflection","declaration":{"id":2744,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":59,"character":22}],"signatures":[{"id":2745,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":59,"character":22}],"parameters":[{"id":2746,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskParameters"},"typeArguments":[{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"},{"type":"intrinsic","name":"never"}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.taskRun"}},{"id":2740,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":70,"character":4}],"signatures":[{"id":2741,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":70,"character":4}],"parameters":[{"id":2742,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskCanceler"},"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"groups":[{"title":"Constructors","children":[2739]},{"title":"Properties","children":[2743]},{"title":"Methods","children":[2740]}],"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"},{"fileName":"packages/random/src/randomGenerator.ts","line":9,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L9"},{"fileName":"packages/random/src/randomGenerator.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}],"permalink":"/std/fr/api/random/interface/RandomGenerator","previousId":2773,"nextId":2775},{"id":2775,"name":"UUIDGenerator","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/random/src/randomUUID.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomUUID.ts#L20"}],"signatures":[{"id":2776,"name":"UUIDGenerator","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the next UUID (v4)"}]},"sources":[{"fileName":"packages/random/src/randomUUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomUUID.ts#L24"}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/random/interface/UUIDGenerator","previousId":2738,"nextId":2747},{"id":2758,"name":"RandomValue","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/random/src/randomValue.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L4"},{"fileName":"packages/random/src/randomValue.ts","line":9,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomValue.ts#L9"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"RandomValue"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/fr/api/random#RandomValue","previousId":2694,"nextId":2732},{"id":2732,"name":"UUID","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID string type"}]},"sources":[{"fileName":"packages/random/src/UUID.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L6"},{"fileName":"packages/random/src/UUID.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/UUID.ts#L24"}],"type":{"type":"intersection","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"UUID"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/fr/api/random#UUID","previousId":2758,"nextId":2750},{"id":2750,"name":"defaultRandomGenerator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Default generator"}]},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":60,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L60"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"}],"name":"Ref","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/random#defaultRandomGenerator","previousId":2732,"nextId":2777},{"id":2777,"name":"defaultUUIDGenerator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Default UUID generator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomUUID.ts","line":32,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomUUID.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":2775,"name":"UUIDGenerator","package":"@w5s/random"}],"name":"Ref","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/random#defaultUUIDGenerator","previousId":2750},{"id":2733,"name":"RandomGenerator","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"},{"fileName":"packages/random/src/randomGenerator.ts","line":9,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L9"},{"fileName":"packages/random/src/randomGenerator.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L26"}],"signatures":[{"id":2734,"name":"RandomGenerator","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new generator from a callback"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst dummyGenerator = RandomGenerator(() => RandomValue.of(1));\\nTask.unsafeRun(dummyGenerator); // 1\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"}],"parameters":[{"id":2735,"name":"getNextValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an impure function that returns a new value"}]},"type":{"type":"reflection","declaration":{"id":2736,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"}],"signatures":[{"id":2737,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":22,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L22"}],"type":{"type":"reference","target":2758,"name":"RandomValue","package":"@w5s/random"}}]}}}],"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"}}],"permalink":"/std/fr/api/random/function/RandomGenerator","nextId":2759},{"id":2759,"name":"randomBoolean","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"signatures":[{"id":2760,"name":"randomBoolean","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate booleans."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomBoolean(0.7);\\nTask.unsafeRun(next);// Result.Ok(true|false);\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"parameters":[{"id":2761,"name":"trueWeight","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the probability to obtain true"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0.5"},{"id":2762,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomBoolean","previousId":2733,"nextId":2763},{"id":2763,"name":"randomInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"signatures":[{"id":2764,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate integers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomInt(-10, 10);\\nTask.unsafeRun(next);// Result.Ok(N); where N is an integer between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"parameters":[{"id":2765,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":2766,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":2767,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomInt","previousId":2759,"nextId":2768},{"id":2768,"name":"randomNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"signatures":[{"id":2769,"name":"randomNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate floating numbers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomNumber(-10, 10);\\nTask.unsafeRun(next);// Result.Ok(F); where F is a floating number between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"parameters":[{"id":2770,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":2771,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":2772,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":2738,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomNumber","previousId":2763,"nextId":2773},{"id":2773,"name":"randomUUID","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomUUID.ts","line":51,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomUUID.ts#L51"}],"signatures":[{"id":2774,"name":"randomUUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that returns a new "},{"kind":"code","text":"`UUID`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst createUser = (name: string) => Task.map(randomUUID(), (uuid) => ({\\n  id: uuid,\\n  name,\\n}));\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomUUID.ts","line":51,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomUUID.ts#L51"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2732,"name":"UUID","package":"@w5s/random"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomUUID","previousId":2768,"nextId":2738}],"groups":[{"title":"Functions","children":[2733,2759,2763,2768,2773]},{"title":"Interfaces","children":[2738,2775]},{"title":"Namespaces","children":[2747,2751,2694]},{"title":"Type Aliases","children":[2758,2732]},{"title":"Variables","children":[2750,2777]}],"categories":[{"title":"Constructor","children":[2733]},{"title":"__CATEGORY__","children":[2747,2751,2694,2738,2775,2758,2732,2750,2777,2759,2763,2768,2773]}],"sources":[{"fileName":"packages/random/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/random/src/index.ts#L1"}],"permalink":"/std/fr/api/random"},"urlSlug":"random"}],"packageName":"@w5s/random","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":12,"name":"@w5s/task","variant":"declaration","kind":2,"flags":{},"children":[{"id":2778,"name":"Console","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to write in stdin (NodeJS) or WebConsole (browser)"}]},"children":[{"id":2779,"name":"debug","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Console.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L30"}],"signatures":[{"id":2780,"name":"debug","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`debug`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.unsafeRun(Console.debug(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Console.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L30"}],"parameters":[{"id":2781,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Console#debug"},{"id":2791,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Console.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L82"}],"signatures":[{"id":2792,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`error`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.unsafeRun(Console.error(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Console.ts","line":82,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L82"}],"parameters":[{"id":2793,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Console#error"},{"id":2785,"name":"info","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Console.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L56"}],"signatures":[{"id":2786,"name":"info","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`info`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.unsafeRun(Console.info(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Console.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L56"}],"parameters":[{"id":2787,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Console#info"},{"id":2782,"name":"log","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Console.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L43"}],"signatures":[{"id":2783,"name":"log","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`log`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.unsafeRun(Console.log(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Console.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L43"}],"parameters":[{"id":2784,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Console#log"},{"id":2788,"name":"warn","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Console.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L69"}],"signatures":[{"id":2789,"name":"warn","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.unsafeRun(Console.warn(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Console.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L69"}],"parameters":[{"id":2790,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Console#warn"}],"groups":[{"title":"Functions","children":[2779,2791,2785,2782,2788]}],"sources":[{"fileName":"packages/task/src/Console.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Console.ts#L20"}],"permalink":"/std/fr/api/task/namespace/Console","previousId":2807,"nextId":2827},{"id":2827,"name":"Task","variant":"declaration","kind":4,"flags":{},"children":[{"id":3002,"name":"ErrorOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts error type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"typeParameters":[{"id":3003,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":3003,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"inferred","name":"Error"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Error"},"name":"Error","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/task/namespace/Task#ErrorOf"},{"id":3000,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts value type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"typeParameters":[{"id":3001,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":3001,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":2990,"typeArguments":[{"type":"inferred","name":"V"},{"type":"intrinsic","name":"any"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"V"},"name":"V","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/task/namespace/Task#ValueOf"},{"id":2828,"name":"all","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":84,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L84"}],"signatures":[{"id":2829,"name":"all","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the array of all task values, or reject with the first error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.all([\\n  Task.resolve(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.unsafeRun(success);// Result.Ok([1, 2])\\n\\nconst failure = Task.all([\\n  Task.resolve(1),\\n  Task.reject(\'error\'),\\n]);\\nconst failureResult = Task.unsafeRun(failure);// Result.Error(\'error\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":84,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L84"}],"typeParameter":[{"id":2830,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2820,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}}],"parameters":[{"id":2831,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2830,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2830,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":3000,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/all.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":2830,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"}},{"type":"reference","target":3002,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2830,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":2830,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Task","package":"@w5s/task"}},{"id":2832,"name":"all","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":84,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L84"}],"typeParameter":[{"id":2833,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2834,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2835,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2833,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2834,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":2833,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},{"type":"reference","target":2834,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#all"},{"id":2836,"name":"allSettled","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L85"}],"signatures":[{"id":2837,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves an array of all task results"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.allSettled([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst taskResults = Task.unsafeRun(task);// [Result.Error(1), Result.Ok(2)]\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L85"}],"typeParameter":[{"id":2838,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":2820,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":2839,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2838,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2838,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":3000,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":2838,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":3002,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":2838,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Result","package":"@w5s/core"}},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}},{"id":2840,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L85"}],"typeParameter":[{"id":2841,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2842,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2843,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2841,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2842,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2841,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2842,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#allSettled"},{"id":2844,"name":"andRun","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"signatures":[{"id":2845,"name":"andRun","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Similar to "},{"kind":"inline-tag","tag":"@link","text":"andThen","target":2854,"tsLinkText":""},{"kind":"text","text":" but the task keep "},{"kind":"code","text":"`task`"},{"kind":"text","text":" resolved value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andRun(success, (value) => Console.log(\'result=\', value));// console.log(\'result=foo\'); then resolves \'foo\'\\nTask.andRun(success, (value) => Task.reject(`SomeError`));// Task.reject(\'SomeError\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andRun(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"typeParameter":[{"id":2846,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2847,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2848,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2849,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2846,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2847,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2850,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":2851,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"signatures":[{"id":2852,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"parameters":[{"id":2853,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2846,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2820,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":2848,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2846,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":2847,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2848,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#andRun"},{"id":2854,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":87,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L87"}],"signatures":[{"id":2855,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is successful, otherwise returns the failed task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andThen(success, (value) => Task.resolve(`${value}_then`));// Task.resolve(\'foo_then\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andThen(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":87,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L87"}],"typeParameter":[{"id":2856,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2857,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2858,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":2859,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2860,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2856,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2857,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2861,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":2862,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"signatures":[{"id":2863,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"parameters":[{"id":2864,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2856,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2858,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2859,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2858,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":2857,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2859,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#andThen"},{"id":2865,"name":"any","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L88"}],"signatures":[{"id":2866,"name":"any","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the first value, or reject with an aggregated error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.any([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.unsafeRun(success);// Result.Ok(2)\\n\\nconst failure = Task.any([\\n  Task.reject(\'error1\'),\\n  Task.reject(\'error2\'),\\n]);\\nconst failureResult = Task.unsafeRun(failure);// Result.Error(AggregateError({ errors: [\'error1\', \'error2\']}))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L88"}],"typeParameter":[{"id":2867,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":2820,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":2868,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2867,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":3000,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2867,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":2867,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2867,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":3002,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/any.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":2867,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}},{"id":2869,"name":"any","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":88,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L88"}],"typeParameter":[{"id":2870,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2871,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2872,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2870,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2871,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2870,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/nativeError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2871,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#any"},{"id":2873,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":89,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L89"}],"signatures":[{"id":2874,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Task constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getTime = Task(({ ok }) => ok(Date.now()));\\nconst fetchTask = (url: string) => Task(({ ok, error }) => fetch(url).then(ok, error));\\nconst delay = (ms: number) => Task(({ ok }) => new Promise(resolve => { setTimeout(() => resolve(ok()); }), ms));\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":89,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L89"}],"typeParameter":[{"id":2875,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2876,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2877,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the effect function"}]},"type":{"type":"reflection","declaration":{"id":2878,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L22"}],"signatures":[{"id":2879,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L22"}],"parameters":[{"id":2880,"name":"resolver","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2881,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2894,"name":"canceler","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canceler"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L40"}],"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"}},{"id":2888,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new error object"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":33,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L33"}],"type":{"type":"reflection","declaration":{"id":2889,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":33,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L33"}],"signatures":[{"id":2890,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":34,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L34"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":2891,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":35,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L35"}],"typeParameter":[{"id":2892,"name":"EE","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2893,"name":"errorValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2892,"name":"EE","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":2892,"name":"EE","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}},{"id":2882,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new ok object"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":26,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L26"}],"type":{"type":"reflection","declaration":{"id":2883,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":26,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L26"}],"signatures":[{"id":2884,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":27,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L27"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":2885,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":28,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L28"}],"typeParameter":[{"id":2886,"name":"VV","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2887,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2886,"name":"VV","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2886,"name":"VV","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}]}}},{"id":2895,"name":"run","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task runner that can be used to run subtasks"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L44"}],"type":{"type":"reflection","declaration":{"id":2896,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":44,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L44"}],"signatures":[{"id":2897,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":44,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L44"}],"typeParameter":[{"id":2898,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":2899,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2900,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2898,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2899,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2898,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2899,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[2894,2888,2882,2895]}],"sources":[{"fileName":"packages/task/src/Task/create.ts","line":22,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L22"}]}}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2875,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2876,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2875,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2876,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#create"},{"id":2901,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L90"}],"signatures":[{"id":2902,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a Task from a "},{"kind":"code","text":"`taskRun`"},{"kind":"text","text":" function or a TaskLike"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst task = Task.from((resolve) => resolve(\'hello\'));// from a callback\\nconst task = Task.from({ taskRun: (resolve) => resolve(\'hello\') });// from a TaskLike\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L90"}],"typeParameter":[{"id":2903,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2904,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2905,"name":"taskLike","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2903,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2904,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"reflection","declaration":{"id":2906,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"signatures":[{"id":2907,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"parameters":[{"id":2908,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2807,"typeArguments":[{"type":"reference","target":2903,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2904,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"intrinsic","name":"void"}}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":2903,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2904,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#from"},{"id":2909,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":91,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L91"}],"signatures":[{"id":2910,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if anyValue is a valid "},{"kind":"code","text":"`Task`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.hasInstance(Task.resolve(...)); // true\\nTask.hasInstance({}); // false\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":91,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L91"}],"parameters":[{"id":2911,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2820,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"TaskLike","package":"@w5s/task"}}}],"permalink":"/std/fr/api/task/namespace/Task#hasInstance"},{"id":2912,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":92,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"}],"signatures":[{"id":2913,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<NewValue, Error>`"},{"kind":"text","text":" by applying a function to a success value, leaving a failure untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.map(task, (value) => `${value}_bar`));// Task.resolve(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":92,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"}],"typeParameter":[{"id":2914,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2915,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2916,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2917,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2914,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2915,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2918,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":2919,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"signatures":[{"id":2920,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"parameters":[{"id":2921,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2914,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2916,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2916,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2915,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#map"},{"id":2922,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"signatures":[{"id":2923,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained failure error, leaving a success value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nTask.mapError(task, (value) => `${value}_bar`));// Task.reject(\'error_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":2924,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2925,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2926,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2927,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2924,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2925,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2928,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":2929,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"signatures":[{"id":2930,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"parameters":[{"id":2931,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2925,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2926,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2924,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2926,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#mapError"},{"id":2932,"name":"mapResult","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"signatures":[{"id":2933,"name":"mapResult","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<ValueFrom, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<ValueTo, ErrorTo>`"},{"kind":"text","text":" by applying a function to the result of the task."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst task = Task.reject(\'error\');\\nconst handledTask = Task.mapResult(task, (result) =>\\n   Result.isOk(result) ? result : Result.Ok(\'handled_value\') )\\n); // Task.resolve(\'handled_value\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":2934,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2935,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2936,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":2937,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2938,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2934,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2935,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2939,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A result mapper function"}]},"type":{"type":"reflection","declaration":{"id":2940,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"signatures":[{"id":2941,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"parameters":[{"id":2942,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2934,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2935,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2936,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2937,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2936,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2937,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#mapResult"},{"id":2943,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"signatures":[{"id":2944,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is failed, otherwise returns the successful task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.orElse(success, (value) => Task.resolve(`never_used`));// Task.resolve(\'foo\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.orElse(failure, (error) => Task.reject(`${value}_caught`));// Task.reject(\'PreviousError_caught\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"typeParameter":[{"id":2945,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2946,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2947,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":2948,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2949,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2945,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2946,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2950,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":2951,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"signatures":[{"id":2952,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"parameters":[{"id":2953,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2946,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2947,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2948,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"union","types":[{"type":"reference","target":2945,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2947,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}]},{"type":"reference","target":2948,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#orElse"},{"id":2954,"name":"reject","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"signatures":[{"id":2955,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`error`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task(({ error }) => error(errorValue))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(1);\\nconst result = Task.unsafeRun(task);// Result.Error(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"typeParameter":[{"id":2956,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2956,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"void"}],"name":"Task","package":"@w5s/task"}},{"id":2957,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"typeParameter":[{"id":2958,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}},{"id":2959,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2960,"name":"errorValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error value"}]},"type":{"type":"reference","target":2959,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2958,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2959,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#reject"},{"id":2961,"name":"resolve","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"signatures":[{"id":2962,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a successful "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`value`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task(({ ok }) => ok(value))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(1);\\nconst result = Task.unsafeRun(task);// Result.Ok(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":2963,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":2963,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}},{"id":2964,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":2965,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2966,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2967,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the success value"}]},"type":{"type":"reference","target":2965,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2965,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2966,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#resolve"},{"id":2968,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"signatures":[{"id":2969,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`sideEffect()`"},{"kind":"text","text":".\\nWhen an exception is thrown then it rejects "},{"kind":"code","text":"`onError([thrown error])`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class FetchError extends Error {}\\nconst task = Task.tryCall(\\n () => fetch(\'my/url\'),\\n (error) => new FetchError()\\n);\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"typeParameter":[{"id":2970,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2971,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2972,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":2973,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L21"}],"signatures":[{"id":2974,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L21"}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":2970,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":2975,"name":"onError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":2976,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":22,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L22"}],"signatures":[{"id":2977,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":22,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L22"}],"parameters":[{"id":2978,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":2971,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":2990,"typeArguments":[{"type":"reference","target":2970,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2971,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#tryCall"},{"id":2979,"name":"unsafeRun","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"signatures":[{"id":2980,"name":"unsafeRun","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Run "},{"kind":"code","text":"`task`"},{"kind":"text","text":" and return the result or a promise of the result\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getMessage = Task.resolve(\'Hello World!\');\\nconst messageResult = Task.unsafeRun(getMessage);// Result.Ok(\'Hello World!\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"typeParameter":[{"id":2981,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2982,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2983,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the task to be run"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2981,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2982,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2984,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"},"defaultValue":"..."}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2981,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2982,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/task/namespace/Task#unsafeRun"},{"id":2985,"name":"unsafeRunOk","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"signatures":[{"id":2986,"name":"unsafeRunOk","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Run "},{"kind":"code","text":"`task`"},{"kind":"text","text":" that never fails and return the value or a promise of the value\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getMessage = Task.resolve(\'Hello World!\');\\nconst messageResult = Task.unsafeRunOk(getMessage);// \'Hello World!\'\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"typeParameter":[{"id":2987,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2988,"name":"task","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the task to be run"}]},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2987,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"TaskLike","package":"@w5s/task"}},{"id":2989,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":2987,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/task/namespace/Task#unsafeRunOk"}],"groups":[{"title":"Type Aliases","children":[3002,3000]},{"title":"Functions","children":[2828,2836,2844,2854,2865,2873,2901,2909,2912,2922,2932,2943,2954,2961,2968,2979,2985]}],"categories":[{"title":"Constructor","children":[2873,2954,2961]},{"title":"Type","children":[2909]},{"title":"__CATEGORY__","children":[3002,3000,2828,2836,2844,2854,2865,2901,2912,2922,2932,2943,2968,2979,2985]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":71,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L71"},{"fileName":"packages/task/src/Task.ts","line":83,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L83"},{"fileName":"packages/task/src/Task.ts","line":103,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"permalink":"/std/fr/api/task/namespace/Task","previousId":2778,"nextId":2800},{"id":2990,"name":"Task","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An implementation of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!TaskLike"}]},"children":[{"id":2994,"name":"taskRun","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"type":{"type":"reflection","declaration":{"id":2995,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"signatures":[{"id":2996,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"parameters":[{"id":2997,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2807,"typeArguments":[{"type":"reference","target":2998,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":2999,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":2821,"name":"TaskLike.taskRun"}},{"id":2991,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L77"}],"signatures":[{"id":2992,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L77"}],"parameters":[{"id":2993,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2998,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":2999,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}],"groups":[{"title":"Properties","children":[2994]},{"title":"Methods","children":[2991]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":71,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L71"},{"fileName":"packages/task/src/Task.ts","line":83,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L83"},{"fileName":"packages/task/src/Task.ts","line":103,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"typeParameters":[{"id":2998,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2999,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2998,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":2999,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"permalink":"/std/fr/api/task/interface/Task","nextId":2794},{"id":2794,"name":"TaskCanceler","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Interface used to cancel running task"}]},"children":[{"id":2797,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/dist/Ref.d.ts","line":5,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":2798,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":24,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L24"}],"signatures":[{"id":2799,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":24,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L24"}],"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ref.current"}}],"groups":[{"title":"Properties","children":[2797]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":24,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L24"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":2795,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":24,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L24"}],"signatures":[{"id":2796,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"}],"name":"Ref","package":"@w5s/core"}],"permalink":"/std/fr/api/task/interface/TaskCanceler","previousId":2990,"nextId":2820},{"id":2820,"name":"TaskLike","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Task interface that represents a lazy computation that will be evaluated later.\\nThe result of the computation is a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"},{"kind":"text","text":"\\nA task is also cancelable and can run other subtasks"}]},"children":[{"id":2821,"name":"taskRun","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"type":{"type":"reflection","declaration":{"id":2822,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"signatures":[{"id":2823,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":65,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L65"}],"parameters":[{"id":2824,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2807,"typeArguments":[{"type":"reference","target":2825,"name":"Value","package":"@w5s/task","qualifiedName":"TaskLike.Value","refersToTypeParameter":true},{"type":"reference","target":2826,"name":"Error","package":"@w5s/task","qualifiedName":"TaskLike.Error","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2821]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":61,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L61"}],"typeParameters":[{"id":2825,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2826,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2990,"name":"Task"}],"permalink":"/std/fr/api/task/interface/TaskLike","previousId":2794,"nextId":2807},{"id":2807,"name":"TaskParameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"All context passed to task in order to execute"}]},"children":[{"id":2816,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L49"}],"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"}},{"id":2812,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":45,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L45"}],"type":{"type":"reflection","declaration":{"id":2813,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":45,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L45"}],"signatures":[{"id":2814,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":45,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L45"}],"parameters":[{"id":2815,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2819,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParameters.Error","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2808,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":41,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L41"}],"type":{"type":"reflection","declaration":{"id":2809,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":41,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L41"}],"signatures":[{"id":2810,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":41,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L41"}],"parameters":[{"id":2811,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2818,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParameters.Value","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2817,"name":"run","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The runner function (to run sub tasks)"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":53,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L53"}],"type":{"type":"reference","target":2800,"name":"TaskRunner","package":"@w5s/task"}}],"groups":[{"title":"Properties","children":[2816,2812,2808,2817]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":37,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L37"}],"typeParameters":[{"id":2818,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2819,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/task/interface/TaskParameters","previousId":2820,"nextId":2778},{"id":2800,"name":"TaskRunner","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that runs the task and returns a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L29"}],"type":{"type":"reflection","declaration":{"id":2801,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":29,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L29"}],"signatures":[{"id":2802,"name":"__type","variant":"signature","kind":4096,"flags":{},"typeParameter":[{"id":2805,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":2806,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2803,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2820,"typeArguments":[{"type":"reference","target":2805,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2806,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":2804,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2794,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":56,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":2805,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":2806,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/fr/api/task#TaskRunner","previousId":2827}],"groups":[{"title":"Interfaces","children":[2990,2794,2820,2807]},{"title":"Namespaces","children":[2778,2827]},{"title":"Type Aliases","children":[2800]}],"sources":[{"fileName":"packages/task/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task/src/index.ts#L1"}],"permalink":"/std/fr/api/task"},"urlSlug":"task"}],"packageName":"@w5s/task","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":13,"name":"@w5s/time","variant":"declaration","kind":2,"flags":{},"children":[{"id":3004,"name":"Time","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time (i.e timestamp)"}]},"children":[{"id":3018,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":3019,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":3020,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":3021,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3022,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3023,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3024,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/time/namespace/Time#inspect"},{"id":3060,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/fr/api/time/namespace/Time#maxValue"},{"id":3059,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/fr/api/time/namespace/Time#minValue"},{"id":3011,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":27,"character":4}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/time/namespace/Time#typeName"},{"id":3101,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3102,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3103,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3104,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3105,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#!="},{"id":3071,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"signatures":[{"id":3072,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"parameters":[{"id":3073,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3074,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3075,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#<"},{"id":3066,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"signatures":[{"id":3067,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"parameters":[{"id":3068,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3069,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3070,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#<="},{"id":3106,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3107,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3108,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3109,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3110,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#=="},{"id":3081,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"signatures":[{"id":3082,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"parameters":[{"id":3083,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3084,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3085,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#>"},{"id":3076,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"signatures":[{"id":3077,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"parameters":[{"id":3078,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3079,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3080,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#>="},{"id":3051,"name":"add","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L42"}],"signatures":[{"id":3052,"name":"add","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Adds "},{"kind":"code","text":"`duration`"},{"kind":"text","text":" to "},{"kind":"code","text":"`time`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst now = Time.of(0);\\nconst duration = TimeDuration.of(10);\\nTime.add(now, duration);// now + 10ms\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L42"}],"parameters":[{"id":3053,"name":"time","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3054,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A duration value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#add"},{"id":3025,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"signatures":[{"id":3026,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"parameters":[{"id":3027,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3028,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3029,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/DecodeError.ts","qualifiedName":"DecodeError"},"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#codecDecode"},{"id":3030,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"signatures":[{"id":3031,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"parameters":[{"id":3032,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3033,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/time/namespace/Time#codecEncode"},{"id":3034,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"signatures":[{"id":3035,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"parameters":[{"id":3036,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#codecSchema"},{"id":3061,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"signatures":[{"id":3062,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"parameters":[{"id":3063,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3064,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3065,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/Time#compare"},{"id":3042,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L26"}],"signatures":[{"id":3043,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves the current time in milliseconds after waiting "},{"kind":"code","text":"`duration`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst wait2s = Time.delay(TimeDuration.seconds(2));\\nconst logTime = Task.andThen(wait2s, (time) => Console.debug(time));\\nTask.unsafeRun(logTime);// wait 2 seconds then console.debug(Date.now())\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L26"}],"parameters":[{"id":3044,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds to wait"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/time/namespace/Time#delay"},{"id":3055,"name":"diff","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L58"}],"signatures":[{"id":3056,"name":"diff","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the difference between 2 time values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst begin = Time.of(0);\\nconst end = Time.of(10);\\nTime.diff(end, begin);// TimeDuration.of(10)\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L58"}],"parameters":[{"id":3057,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3058,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#diff"},{"id":3096,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3097,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3098,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3099,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3100,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#equals"},{"id":3048,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L28"}],"signatures":[{"id":3049,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an ISO 8601 string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\nTime.format(time);// \'1970-01-01T00:00:00.000Z\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L28"}],"parameters":[{"id":3050,"name":"time","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/time/namespace/Time#format"},{"id":3015,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":3016,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":3017,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#from"},{"id":3012,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":3013,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":3014,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}}],"permalink":"/std/fr/api/time/namespace/Time#hasInstance"},{"id":3091,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"signatures":[{"id":3092,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"parameters":[{"id":3093,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3094,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3095,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#max"},{"id":3086,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"signatures":[{"id":3087,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"parameters":[{"id":3088,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3089,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":3090,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#min"},{"id":3040,"name":"now","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"signatures":[{"id":3041,"name":"now","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that resolves the current time in milliseconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst program = () => Task.andThen(Time.now(), (currentTime) => {\\n  // use currentTime\\n});\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/time/namespace/Time#now"},{"id":3037,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L24"}],"signatures":[{"id":3038,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Time value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L24"}],"parameters":[{"id":3039,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#of"},{"id":3045,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L27"}],"signatures":[{"id":3046,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse an ISO 8601 string. If invalid, returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.parse(\'1970-01-01T00:00:00.000Z\');// 0\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L27"}],"parameters":[{"id":3047,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#parse"},{"id":3008,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"signatures":[{"id":3009,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"parameters":[{"id":3010,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/Time#unwrap"},{"id":3005,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"signatures":[{"id":3006,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"parameters":[{"id":3007,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#wrap"}],"groups":[{"title":"Variables","children":[3018,3060,3059,3011]},{"title":"Functions","children":[3101,3071,3066,3106,3081,3076,3051,3025,3030,3034,3061,3042,3055,3096,3048,3015,3012,3091,3086,3040,3037,3045,3008,3005]}],"categories":[{"title":"Bound","children":[3060,3059]},{"title":"Codec","children":[3025,3030,3034]},{"title":"Comparator","children":[3101,3071,3066,3106,3081,3076,3061,3096,3091,3086]},{"title":"Constructor","children":[3015,3037]},{"title":"Type","children":[3018,3011,3012]},{"title":"__CATEGORY__","children":[3051,3042,3055,3048,3040,3045,3008,3005]}],"sources":[{"fileName":"packages/time/src/Time.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L14"},{"fileName":"packages/time/src/Time.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L21"}],"permalink":"/std/fr/api/time/namespace/Time","nextId":3112},{"id":3112,"name":"TimeDuration","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time duration (i.e amount of milliseconds)"}]},"children":[{"id":3119,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":27,"character":4}],"target":3011,"permalink":"/std/fr/api/time/namespace/TimeDuration#typeName"},{"id":3126,"name":"inspect","variant":"declaration","kind":32,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":3127,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"signatures":[{"id":3128,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":65,"character":14}],"parameters":[{"id":3129,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3130,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3131,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3132,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}]},"permalink":"/std/fr/api/time/namespace/TimeDuration#inspect"},{"id":3221,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3222,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3223,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3224,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3225,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#!="},{"id":3177,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":119,"character":8}],"signatures":[{"id":3178,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":119,"character":8}],"parameters":[{"id":3179,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3180,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#*"},{"id":3169,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":87,"character":8}],"signatures":[{"id":3170,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":87,"character":8}],"parameters":[{"id":3171,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3172,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#+"},{"id":3173,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":103,"character":8}],"signatures":[{"id":3174,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":103,"character":8}],"parameters":[{"id":3175,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3176,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#-"},{"id":3191,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"signatures":[{"id":3192,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":49,"character":4}],"parameters":[{"id":3193,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3194,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3195,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#<"},{"id":3186,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"signatures":[{"id":3187,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":33,"character":4}],"parameters":[{"id":3188,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3189,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3190,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#<="},{"id":3226,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3227,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3228,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3229,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3230,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#=="},{"id":3201,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"signatures":[{"id":3202,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":81,"character":4}],"parameters":[{"id":3203,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3204,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3205,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#>"},{"id":3196,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"signatures":[{"id":3197,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":65,"character":4}],"parameters":[{"id":3198,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3199,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3200,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#>="},{"id":3163,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":16,"character":8}],"signatures":[{"id":3164,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":16,"character":8}],"parameters":[{"id":3165,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#abs"},{"id":3133,"name":"codecDecode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"signatures":[{"id":3134,"name":"codecDecode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":24,"character":4}],"parameters":[{"id":3135,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3136,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3137,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/DecodeError.ts","qualifiedName":"DecodeError"},"name":"DecodeError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#codecDecode"},{"id":3138,"name":"codecEncode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"signatures":[{"id":3139,"name":"codecEncode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":40,"character":4}],"parameters":[{"id":3140,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3141,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#codecEncode"},{"id":3142,"name":"codecSchema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"signatures":[{"id":3143,"name":"codecSchema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":51,"character":4}],"parameters":[{"id":3144,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#codecSchema"},{"id":3181,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"signatures":[{"id":3182,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a number that represents comparison"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":17,"character":4}],"parameters":[{"id":3183,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3184,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3185,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#compare"},{"id":3160,"name":"days","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L31"}],"signatures":[{"id":3161,"name":"days","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" days"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.days(1);// 1000 * 60 * 60 * 24\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L31"}],"parameters":[{"id":3162,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#days"},{"id":3216,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3217,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3218,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3219,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3220,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#equals"},{"id":3123,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"signatures":[{"id":3124,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.from(\'foo\'); // Option.Some(\'foo\')\\nStringType.from(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":54,"character":4}],"parameters":[{"id":3125,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#from"},{"id":3120,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"signatures":[{"id":3121,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":41,"character":4}],"parameters":[{"id":3122,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#hasInstance"},{"id":3157,"name":"hours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L30"}],"signatures":[{"id":3158,"name":"hours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" hours"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.hours(1);// 1000 * 60 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L30"}],"parameters":[{"id":3159,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#hours"},{"id":3211,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"signatures":[{"id":3212,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":109,"character":4}],"parameters":[{"id":3213,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3214,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3215,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#max"},{"id":3148,"name":"milliseconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"}],"signatures":[{"id":3149,"name":"milliseconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" milliseconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.milliseconds(1);// 1\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"}],"parameters":[{"id":3150,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#milliseconds"},{"id":3206,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"signatures":[{"id":3207,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":95,"character":4}],"parameters":[{"id":3208,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3209,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":3210,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#min"},{"id":3154,"name":"minutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L29"}],"signatures":[{"id":3155,"name":"minutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" minutes"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.minutes(1);// 1000 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L29"}],"parameters":[{"id":3156,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#minutes"},{"id":3145,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L26"}],"signatures":[{"id":3146,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration from a number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.of(0);// typeof duration === \'number\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L26"}],"parameters":[{"id":3147,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#of"},{"id":3151,"name":"seconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L28"}],"signatures":[{"id":3152,"name":"seconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" seconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.seconds(1);// 1000\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L28"}],"parameters":[{"id":3153,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#seconds"},{"id":3166,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":23,"character":8}],"signatures":[{"id":3167,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric.d.ts","line":23,"character":8}],"parameters":[{"id":3168,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#sign"},{"id":3116,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"signatures":[{"id":3117,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":52,"character":8}],"parameters":[{"id":3118,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#unwrap"},{"id":3113,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"signatures":[{"id":3114,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":46,"character":8}],"parameters":[{"id":3115,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#wrap"}],"groups":[{"title":"References","children":[3119]},{"title":"Variables","children":[3126]},{"title":"Functions","children":[3221,3177,3169,3173,3191,3186,3226,3201,3196,3163,3133,3138,3142,3181,3160,3216,3123,3120,3157,3211,3148,3206,3154,3145,3151,3166,3116,3113]}],"categories":[{"title":"Codec","children":[3133,3138,3142]},{"title":"Comparator","children":[3221,3191,3186,3226,3201,3196,3181,3216,3211,3206]},{"title":"Constructor","children":[3160,3123,3157,3148,3154,3145,3151]},{"title":"Numeric","children":[3177,3169,3173,3163,3166]},{"title":"Type","children":[3126,3120]},{"title":"__CATEGORY__","children":[3119,3116,3113]}],"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L15"},{"fileName":"packages/time/src/TimeDuration.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L22"}],"permalink":"/std/fr/api/time/namespace/TimeDuration","previousId":3004,"nextId":3111},{"id":3111,"name":"Time","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a time typically returned by "},{"kind":"code","text":"`Date.now()`"}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L14"},{"fileName":"packages/time/src/Time.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"TimeType","package":"@w5s/time","qualifiedName":"Time"},"permalink":"/std/fr/api/time#Time","previousId":3112,"nextId":3231},{"id":3231,"name":"TimeDuration","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a duration in milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L15"},{"fileName":"packages/time/src/TimeDuration.ts","line":22,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L22"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDurationType","package":"@w5s/time","qualifiedName":"TimeDuration"},"permalink":"/std/fr/api/time#TimeDuration","previousId":3111}],"groups":[{"title":"Namespaces","children":[3004,3112]},{"title":"Type Aliases","children":[3111,3231]}],"sources":[{"fileName":"packages/time/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/time/src/index.ts#L1"}],"permalink":"/std/fr/api/time"},"urlSlug":"time"}],"packageName":"@w5s/time","packageVersion":"1.0.0-alpha.0"}]')}}]);