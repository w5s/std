"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[6370],{8417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"reflection":{"id":1,"name":"@w5s/application","variant":"declaration","kind":2,"flags":{},"children":[{"id":23,"name":"Application","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application instance type"}]},"children":[{"id":24,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"ApplicationRef.constructor"}},{"id":33,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":36,"name":"ApplicationId","package":"@w5s/application"},"inheritedFrom":{"type":"reference","target":39,"name":"ApplicationRef.id"}},{"id":25,"name":"initialConfiguration","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L39"}],"type":{"type":"reference","target":35,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}},{"id":34,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":37,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":40,"name":"ApplicationRef.state"}},{"id":26,"name":"configure","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"signatures":[{"id":27,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L55"}],"parameters":[{"id":28,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":35,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":29,"name":"get","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"signatures":[{"id":30,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L68"}],"typeParameter":[{"id":31,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":32,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":31,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":31,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":35,"name":"Configuration","package":"@w5s/application","qualifiedName":"Application.Configuration","refersToTypeParameter":true}}}]}],"groups":[{"title":"Constructors","children":[24]},{"title":"Properties","children":[33,25,34]},{"title":"Methods","children":[26,29]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"typeParameters":[{"id":35,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"EmptyObject"},"name":"EmptyObject","package":"@w5s/application"}}],"extendedTypes":[{"type":"reference","target":38,"name":"ApplicationRef","package":"@w5s/application"}],"permalink":"/std/fr/api/application/interface/Application","categories":[],"previousId":41,"nextId":38},{"id":38,"name":"ApplicationRef","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minimal Application interface"}]},"children":[{"id":39,"name":"id","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":25,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L25"}],"type":{"type":"reference","target":36,"name":"ApplicationId","package":"@w5s/application"}},{"id":40,"name":"state","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":29,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":37,"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"}}],"groups":[{"title":"Properties","children":[39,40]}],"sources":[{"fileName":"packages/application/src/Application.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L21"}],"extendedBy":[{"type":"reference","target":23,"name":"Application"}],"permalink":"/std/fr/api/application/interface/ApplicationRef","categories":[],"previousId":23,"nextId":37},{"id":37,"name":"ApplicationState","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application state generic type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":16,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L16"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"AnyObject"},"name":"AnyObject","package":"@w5s/application"}],"permalink":"/std/fr/api/application/interface/ApplicationState","categories":[],"previousId":38,"nextId":45},{"id":45,"name":"Storage","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for the global Map that holds all application states"}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.collection.d.ts","qualifiedName":"Map"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Map","package":"typescript"}],"permalink":"/std/fr/api/application/interface/Storage","categories":[],"previousId":37,"nextId":36},{"id":36,"name":"ApplicationId","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application id type"}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L11"}],"type":{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Tag.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"literal","value":"ApplicationId"}],"name":"Tag","package":"@w5s/core"}]},"permalink":"/std/fr/api/application#ApplicationId","categories":[],"previousId":45,"nextId":44},{"id":44,"name":"$storage","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":3,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L3"}],"type":{"type":"query","queryType":{"type":"reference","target":44,"name":"$storage","package":"@w5s/application"}},"defaultValue":"...","permalink":"/std/fr/api/application#$storage","categories":[],"previousId":36},{"id":17,"name":"Application","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"},{"fileName":"packages/application/src/Application.ts","line":35,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L35"}],"signatures":[{"id":18,"name":"Application","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an app instance with a state ref that will be stored in "},{"kind":"code","text":"`applicationStore.current[id]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface MyAppConfiguration {\\n  foo: number\\n}\\n\\nconst myApp = Application<MyAppConfiguration>(\'my-app\', {\\n  foo: 1,\\n});\\nmyApp.configure({ foo: 2 });\\n\\nmyApp.state.current = {\\n  ...myApp.state.current,\\n  myProperty: \'hello world !\',\\n};\\n```"}]}]},"sources":[{"fileName":"packages/application/src/Application.ts","line":94,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/Application.ts#L94"}],"typeParameter":[{"id":19,"name":"Configuration","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":20,"name":"id","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application unique identifier"}]},"type":{"type":"intrinsic","name":"string"}},{"id":21,"name":"initialConfiguration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"type":{"type":"reference","target":19,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true},"defaultValue":"..."},{"id":22,"name":"store","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Application store ref where the data will be set"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":37,"name":"ApplicationState","package":"@w5s/application"}],"name":"Record","package":"typescript"}],"name":"Readonly","package":"typescript"}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":23,"typeArguments":[{"type":"reference","target":19,"name":"Configuration","package":"@w5s/application","refersToTypeParameter":true}],"name":"Application","package":"@w5s/application"}}],"permalink":"/std/fr/api/application/function/Application","categories":[],"nextId":46},{"id":46,"name":"useRef","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"signatures":[{"id":47,"name":"useRef","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" stored at "},{"kind":"code","text":"`storage.get(key)`"},{"kind":"text","text":" or "},{"kind":"code","text":"`ref.value[key]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst globalStorage = useStorage(globalThis);\\nconst counterRef = useRef<number>(globalStorage, \'counter\', 1);\\n// globalStorage == Map { counter => 1 }\\n\\nconst state = Ref({});\\nconst counterRef = useRef<number>(state, \'counter\', 2);\\n// state == { counter: 2 }\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useRef.ts","line":59,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useRef.ts#L59"}],"typeParameter":[{"id":48,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":49,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ref or storage containing the value"}]},"type":{"type":"union","types":[{"type":"reference","target":45,"name":"Storage","package":"@w5s/application"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}],"name":"Ref","package":"@w5s/core"}]}},{"id":50,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the key where data is stored"}]},"type":{"type":"intrinsic","name":"string"}},{"id":51,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value"}]},"type":{"type":"reference","target":48,"name":"V","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":48,"name":"V","package":"@w5s/application","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/fr/api/application/function/useRef","categories":[],"previousId":17,"nextId":41},{"id":41,"name":"useStorage","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"signatures":[{"id":42,"name":"useStorage","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Get or create a map object storage for "},{"kind":"code","text":"`hostObject`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst objectStorage = useStorage(someObject);\\nconst globalStorage = useStorage(globalThis);\\n```"}]}]},"sources":[{"fileName":"packages/application/src/useStorage.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/application/src/useStorage.ts#L20"}],"parameters":[{"id":43,"name":"hostObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object hosting the storage"}]},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":45,"name":"Storage","package":"@w5s/application"}}],"permalink":"/std/fr/api/application/function/useStorage","categories":[],"previousId":46,"nextId":23}],"groups":[{"title":"Functions","children":[17,46,41]},{"title":"Interfaces","children":[23,38,37,45]},{"title":"Type Aliases","children":[36]},{"title":"Variables","children":[44]}],"sources":[{"fileName":"packages/application/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/application/src/index.ts#L1"}],"permalink":"/std/fr/api/application"},"urlSlug":"application"}],"packageName":"@w5s/application","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":2,"name":"@w5s/async","variant":"declaration","kind":2,"flags":{},"children":[{"id":52,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/dist/index.d.ts","line":43,"character":5}],"typeParameters":[{"id":53,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":53,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":53,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/fr/api/async#Awaitable","categories":[],"previousId":64},{"id":54,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"signatures":[{"id":55,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a promise after waiting "},{"kind":"code","text":"`milliseconds`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nawait delay(5);\\n```"}]}]},"sources":[{"fileName":"packages/async/src/delay.ts","line":11,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/async/src/delay.ts#L11"}],"parameters":[{"id":56,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the delay to wait in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/fr/api/async/function/delay","categories":[],"nextId":61},{"id":61,"name":"isPromise","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"signatures":[{"id":62,"name":"isPromise","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"Promise","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromise(Promise.resolve());// true\\nisPromise({ then() {} });// false\\nisPromise(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromise.ts","line":15,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromise.ts#L15"}],"parameters":[{"id":63,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}}}],"permalink":"/std/fr/api/async/function/isPromise","categories":[],"previousId":54,"nextId":57},{"id":57,"name":"isPromiseLike","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"signatures":[{"id":58,"name":"isPromiseLike","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is a "},{"kind":"inline-tag","tag":"@link","text":"PromiseLike","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nisPromiseLike(Promise.resolve());// true\\nisPromiseLike({ then() {} });// true\\nisPromiseLike(null);// false\\n```"}]}]},"sources":[{"fileName":"packages/async/src/isPromiseLike.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/isPromiseLike.ts#L13"}],"typeParameter":[{"id":59,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":60,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":59,"name":"V","package":"@w5s/async","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}}}],"permalink":"/std/fr/api/async/function/isPromiseLike","categories":[],"previousId":61,"nextId":64},{"id":64,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"signatures":[{"id":65,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`block().then(onSuccess, onError)`"},{"kind":"text","text":" when a asynchronous.\\nElse returns "},{"kind":"code","text":"`try { return onSuccess(block()) } catch (error) { onError(error) }`"},{"kind":"text","text":" when synchronous"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst syncBlock = () => \'sync\'\\ntryCall(syncBlock, (_) => `${_}_foo`);// \'async_foo\'\\nconst asyncBlock = () => Promise.resolve(\'async\')\\ntryCall(asyncBlock, (_) => `${_}_foo`);// Promise.resolve(\'async_foo\')\\n```"}]}]},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":20,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L20"}],"typeParameter":[{"id":66,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":67,"name":"TResult1","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":66,"name":"T","package":"@w5s/async","refersToTypeParameter":true}},{"id":68,"name":"TResult2","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":69,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the callback returning an awaitable value"}]},"type":{"type":"reflection","declaration":{"id":70,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"signatures":[{"id":71,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":21,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L21"}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":66,"name":"T","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":72,"name":"onSuccess","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":73,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"signatures":[{"id":74,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":22,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L22"}],"parameters":[{"id":75,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":66,"name":"T","package":"@w5s/async","refersToTypeParameter":true}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":67,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}]}},{"id":76,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":77,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"signatures":[{"id":78,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/async/src/tryCall.ts","line":23,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/async/src/tryCall.ts#L23"}],"parameters":[{"id":79,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":68,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"union","types":[{"type":"reference","target":67,"name":"TResult1","package":"@w5s/async","refersToTypeParameter":true},{"type":"reference","target":68,"name":"TResult2","package":"@w5s/async","refersToTypeParameter":true}]}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/async/function/tryCall","categories":[],"previousId":57,"nextId":52}],"groups":[{"title":"Functions","children":[54,61,57,64]},{"title":"Type Aliases","children":[52]}],"categories":[{"title":"Type","children":[61,57]},{"title":"__CATEGORY__","children":[52,54,64]}],"sources":[{"fileName":"packages/async/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/async/src/index.ts#L1"}],"permalink":"/std/fr/api/async"},"urlSlug":"async"}],"packageName":"@w5s/async","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":3,"name":"@w5s/bigdecimal","variant":"declaration","kind":2,"flags":{},"children":[{"id":81,"name":"BigDecimal","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`BigDecimal`"}]},"children":[{"id":214,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":215,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":216,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":217,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":218,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":219,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":220,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#__inspect__"},{"id":207,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"BigDecimal"},"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#typeName"},{"id":187,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":188,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":189,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":190,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":191,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#!="},{"id":134,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":135,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":136,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":137,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#*"},{"id":126,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":127,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":128,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":129,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#+"},{"id":130,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":131,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":132,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":133,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#-"},{"id":151,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":152,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":153,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":154,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":155,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#<"},{"id":146,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":147,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":148,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":149,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":150,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#<="},{"id":192,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":193,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":194,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":195,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":196,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#=="},{"id":161,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":162,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":163,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":164,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":165,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#>"},{"id":156,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":157,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":158,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":159,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":160,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#>="},{"id":197,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"signatures":[{"id":198,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":199,"name":"stringValue","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":200,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal/BigDecimal.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal/BigDecimal.ts#L47"}],"parameters":[{"id":201,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":202,"name":"scale","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#__call__"},{"id":221,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":222,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":223,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":224,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":225,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#__decode__"},{"id":226,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":227,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":228,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":229,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#__encode__"},{"id":230,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":231,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":232,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#__schema__"},{"id":110,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":111,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":112,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":113,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#abs"},{"id":211,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":212,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":213,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#asInstance"},{"id":99,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":100,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":101,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":102,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#asString"},{"id":176,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":177,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":178,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":179,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":180,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":181,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#clamp"},{"id":141,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":142,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":143,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":144,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":145,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#compare"},{"id":203,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":204,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":205,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":206,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#create"},{"id":182,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":183,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":184,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":185,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":186,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#equals"},{"id":96,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"signatures":[{"id":97,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of a BigDecimal"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.format(BigDecimal(\'1.020\')); // \'1.020\'\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L39"}],"parameters":[{"id":98,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#format"},{"id":208,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":209,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":210,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#hasInstance"},{"id":118,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"signatures":[{"id":119,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"parameters":[{"id":120,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":121,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#isNegative"},{"id":114,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"signatures":[{"id":115,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"parameters":[{"id":116,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":117,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#isPositive"},{"id":106,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":107,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":108,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":109,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#isZero"},{"id":171,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":172,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":173,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":174,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":175,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#max"},{"id":166,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":167,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":168,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":169,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":170,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#min"},{"id":138,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":139,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":140,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#negate"},{"id":82,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L35"}],"signatures":[{"id":83,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a normalized "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.normalize(BigDecimal(\'1.020\')); //  BigDecimal(\'1.02\')\\nBigDecimal.normalize(BigDecimal(\'1.0200\')); //  BigDecimal(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L35"}],"parameters":[{"id":84,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#normalize"},{"id":85,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L36"}],"signatures":[{"id":86,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" from "},{"kind":"code","text":"`value`"},{"kind":"text","text":" and "},{"kind":"code","text":"`scale`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.of(1n, 1); // BigDecimal(\'0.1\')\\nBigDecimal.of(-234n, 2); // BigDecimal(\'2.34\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L36"}],"parameters":[{"id":87,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The base integer value."}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":88,"name":"scale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The scale."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#of"},{"id":93,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"signatures":[{"id":94,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new BigDecimal from a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigDecimal.parse(\'1.020\'); // Option.Some(BigDecimal(\'1.020\'))\\nBigDecimal.parse(\'A\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L38"}],"parameters":[{"id":95,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#parse"},{"id":89,"name":"scale","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"signatures":[{"id":90,"name":"scale","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Scales a given "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" to the specified scale."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst value = BigDecimal(\'1.02\');\\nBigDecimal.scale(value, 1); //  BigDecimal(\'1.0\')\\nBigDecimal.scale(value, 3); //  BigDecimal(\'1.020\')\\n```"}]}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L37"}],"parameters":[{"id":91,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}},{"id":92,"name":"newScale","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The new scale"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#scale"},{"id":122,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"signatures":[{"id":123,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"parameters":[{"id":124,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":125,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#sign"},{"id":103,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":104,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":105,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal#zero"}],"groups":[{"title":"Variables","children":[214,207]},{"title":"Functions","children":[187,134,126,130,151,146,192,161,156,197,221,226,230,110,211,99,176,141,203,182,96,208,118,114,106,171,166,138,82,85,93,89,122,103]}],"categories":[{"title":"Codec","children":[221,226,230]},{"title":"Comparator","children":[187,151,146,192,161,156,176,141,182,171,166]},{"title":"Constructor","children":[203,85]},{"title":"Formatting","children":[99]},{"title":"Numeric","children":[134,126,130,110,118,114,106,138,122,103]},{"title":"Scaling","children":[82,89]},{"title":"Type","children":[214,207,211,208]},{"title":"__CATEGORY__","children":[197,96,93]}],"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L20"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"permalink":"/std/fr/api/bigdecimal/namespace/BigDecimal","nextId":233},{"id":233,"name":"BigDecimal","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L20"},{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L27"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimalType","package":"@w5s/bigdecimal","qualifiedName":"BigDecimal"},"permalink":"/std/fr/api/bigdecimal#BigDecimal","categories":[],"previousId":81,"nextId":80},{"id":80,"name":"BigDecimalString","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Valid BigDecimal string representation"}]},"sources":[{"fileName":"packages/bigdecimal/src/BigDecimal.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/BigDecimal.ts#L18"}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},"permalink":"/std/fr/api/bigdecimal#BigDecimalString","categories":[],"previousId":233}],"groups":[{"title":"Namespaces","children":[81]},{"title":"Type Aliases","children":[233,80]}],"sources":[{"fileName":"packages/bigdecimal/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/bigdecimal/src/index.ts#L1"}],"permalink":"/std/fr/api/bigdecimal"},"urlSlug":"bigdecimal"}],"packageName":"@w5s/bigdecimal","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":4,"name":"@w5s/bigint","variant":"declaration","kind":2,"flags":{},"children":[{"id":234,"name":"BigInt","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`bigint`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { BigInt } from \'@w5s/core\';\\n\\nconst total = [1n, 2n, 3n].reduce(BigInt[\'+\'], 0n);// 6n\\nBigInt[\'==\'](total, 6n);// true\\n```"}]}]},"children":[{"id":262,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":263,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":264,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":265,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":266,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":267,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":268,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/bigint/namespace/BigInt#__inspect__"},{"id":320,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"bigint"},"permalink":"/std/fr/api/bigint/namespace/BigInt#indexType"},{"id":255,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/bigint/namespace/BigInt#typeName"},{"id":381,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":382,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":383,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":384,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":385,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#!="},{"id":305,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":306,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":307,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":308,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#*"},{"id":309,"name":"**","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"signatures":[{"id":310,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Power.d.ts","line":15,"character":4}],"parameters":[{"id":311,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":312,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#**"},{"id":301,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":302,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":303,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":304,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#+"},{"id":313,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":314,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":315,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":316,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#-"},{"id":345,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":346,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":347,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":348,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":349,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#<"},{"id":340,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":341,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":342,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":343,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":344,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#<="},{"id":386,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":387,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":388,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":389,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":390,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#=="},{"id":355,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":356,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":357,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":358,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":359,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#>"},{"id":350,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":351,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":352,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":353,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":354,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#>="},{"id":269,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":270,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":271,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":272,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":273,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"bigint"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#__decode__"},{"id":274,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":275,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":276,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":277,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#__encode__"},{"id":278,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":279,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":280,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#__schema__"},{"id":285,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":286,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":287,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":288,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#abs"},{"id":259,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":260,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":261,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#asInstance"},{"id":281,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":282,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":283,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":284,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#asString"},{"id":321,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":322,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":323,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#at"},{"id":370,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":371,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":372,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":373,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":374,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":375,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#clamp"},{"id":335,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":336,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":337,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":338,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":339,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#compare"},{"id":376,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":377,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":378,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":379,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":380,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#equals"},{"id":238,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L34"}],"signatures":[{"id":239,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of bigint using "},{"kind":"code","text":"`radix`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.format(1024n, 10);// \'1024\'\\nBigInt.format(1024n, 16);// \'400\'\\n```"}]}]},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L34"}],"parameters":[{"id":240,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":241,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#format"},{"id":242,"name":"fromInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L35"}],"signatures":[{"id":243,"name":"fromInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an integer to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromInt(Int(1));// 1n\\nBigInt.fromInt(Int(-1));// -1n\\n```"}]}]},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L35"}],"parameters":[{"id":244,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#fromInt"},{"id":245,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L36"}],"signatures":[{"id":246,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a number to a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.fromNumber(1);// Option.Some(1n)\\nBigInt.fromNumber(-1);// Option.Some(-1n)\\nBigInt.fromNumber(1.1);// Option.None\\nBigInt.fromNumber(Number.MAX_SAFE_INTEGER + 1);// Option.None\\nBigInt.fromNumber(Number.MIN_SAFE_INTEGER - 1);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L36"}],"parameters":[{"id":247,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the number to convert"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#fromNumber"},{"id":256,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":257,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":258,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"bigint"}}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#hasInstance"},{"id":324,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":325,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":326,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#indexOf"},{"id":293,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"signatures":[{"id":294,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"parameters":[{"id":295,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":296,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#isNegative"},{"id":289,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"signatures":[{"id":290,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"parameters":[{"id":291,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":292,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#isPositive"},{"id":251,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"signatures":[{"id":252,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":23,"character":4}],"parameters":[{"id":253,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":254,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#isZero"},{"id":365,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":366,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":367,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":368,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":369,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#max"},{"id":360,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":361,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":362,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":363,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}},{"id":364,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#min"},{"id":317,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":318,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":319,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#negate"},{"id":235,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L33"}],"signatures":[{"id":236,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse the expression and returns a bigint"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nBigInt.parse(\'0b10101\');// Option.Some(21n)\\nBigInt.parse(\'1024\');// Option.Some(1024n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'0x123\');// Option.Some(291n)\\nBigInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L33"}],"parameters":[{"id":237,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the expression to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#parse"},{"id":331,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":332,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":333,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":334,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#range"},{"id":327,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":328,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":329,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"bigint"}},{"id":330,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#rangeSize"},{"id":297,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"signatures":[{"id":298,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"parameters":[{"id":299,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":300,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"bigint"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#sign"},{"id":248,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"signatures":[{"id":249,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Zero.d.ts","line":11,"character":4}],"parameters":[{"id":250,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/bigint/namespace/BigInt#zero"}],"groups":[{"title":"Variables","children":[262,320,255]},{"title":"Functions","children":[381,305,309,301,313,345,340,386,355,350,269,274,278,285,259,281,321,370,335,376,238,242,245,256,324,293,289,251,365,360,317,235,331,327,297,248]}],"categories":[{"title":"Codec","children":[269,274,278]},{"title":"Comparator","children":[381,345,340,386,355,350,370,335,376,365,360]},{"title":"Formatting","children":[281]},{"title":"Indexable","children":[320,321,324,331,327]},{"title":"Numeric","children":[305,309,301,313,285,293,289,251,317,297,248]},{"title":"Type","children":[262,255,259,256]},{"title":"__CATEGORY__","children":[238,242,245,235]}],"sources":[{"fileName":"packages/bigint/src/BigInt.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/BigInt.ts#L25"}],"permalink":"/std/fr/api/bigint/namespace/BigInt"}],"groups":[{"title":"Namespaces","children":[234]}],"sources":[{"fileName":"packages/bigint/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/bigint/src/index.ts#L1"}],"permalink":"/std/fr/api/bigint"},"urlSlug":"bigint"}],"packageName":"@w5s/bigint","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":5,"name":"@w5s/console","variant":"declaration","kind":2,"flags":{},"children":[{"id":409,"name":"ANSICode","variant":"declaration","kind":4,"flags":{},"children":[{"id":410,"name":"color","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"signatures":[{"id":411,"name":"color","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the ANSI escape sequence for the given color."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ncolor(\'red\')(\'foo\') // \'\\\\x1b[31mfoo\\\\x1b[39m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"the ANSI escape sequence for the given color"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L13"}],"parameters":[{"id":412,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"one of: black, red, green, yellow, blue, magenta, cyan, white"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/color.ts","qualifiedName":"Color"},"name":"Color","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#color"},{"id":416,"name":"fontStyle","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"signatures":[{"id":417,"name":"fontStyle","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font style."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontStyle(\'italic\')(\'foo\');// \'\\\\u001B[3mfoo\\\\u001B[22m\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L15"}],"parameters":[{"id":418,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font style to retrieve the escape code for. Can be \'normal\' or \'italic\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontStyle.ts","qualifiedName":"FontStyle"},"name":"FontStyle","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#fontStyle"},{"id":413,"name":"fontWeight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"signatures":[{"id":414,"name":"fontWeight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the ANSI escape code for a given font weight."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfontWeight(\'bold\')(\'foo\') // \'\\\\x1b[1mfoo\\\\x1b[22m\'\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The ANSI escape code associated with the provided font weight."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L14"}],"parameters":[{"id":415,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The font weight to retrieve the escape code for. Can be \'bold\' or \'dim\'."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/fontWeight.ts","qualifiedName":"FontWeight"},"name":"FontWeight","package":"@w5s/console"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#fontWeight"},{"id":419,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"signatures":[{"id":420,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://en.wikipedia.org/wiki/ANSI_escape_code"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.format([1, 2], \'m\');// \'\\\\u001b[1;2m\'\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L16"}],"parameters":[{"id":421,"name":"args","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a list of arguments"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":422,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a code suffix"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#format"},{"id":423,"name":"strip","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"signatures":[{"id":424,"name":"strip","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Strip ANSI escape codes from the string."}],"blockTags":[{"tag":"@example","name":"Usage","content":[{"kind":"code","text":"```typescript\\nANSICode.strip(red(\\"Hello, world!\\"));// == \\"Hello, world!\\"\\n```"}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L17"}],"parameters":[{"id":425,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The text to remove ANSI escape codes from"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#strip"},{"id":426,"name":"style","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"signatures":[{"id":427,"name":"style","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Apply ANSI styles to a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nANSICode.style({ color: \'red\', fontWeight: \'bold\' })(\'foo\');\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and applies the styles."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L18"}],"parameters":[{"id":428,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The style definition."}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/style.ts","qualifiedName":"Style"},"name":"Style","package":"@w5s/console"}],"name":"Partial","package":"typescript"}}],"type":{"type":"reflection","declaration":{"id":429,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"signatures":[{"id":430,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode/style.ts","line":37,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode/style.ts#L37"}],"parameters":[{"id":431,"name":"_","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/std/fr/api/console/namespace/ANSICode#style"},{"id":432,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"signatures":[{"id":433,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wraps a given string with ANSI escape codes for styling."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A function that takes a string and returns it wrapped with the specified ANSI codes."}]}]},"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L19"}],"parameters":[{"id":434,"name":"open","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An array of numbers representing the opening ANSI codes."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":435,"name":"close","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A number representing the closing ANSI code."}]},"type":{"type":"intrinsic","name":"number"}},{"id":436,"name":"code","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string representing the ANSI code suffix."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/console/src/ANSICode/wrap.ts","qualifiedName":"ANSIWrapper"},"name":"ANSIWrapper","package":"@w5s/console"}}],"permalink":"/std/fr/api/console/namespace/ANSICode#wrap"}],"groups":[{"title":"Functions","children":[410,416,413,419,423,426,432]}],"sources":[{"fileName":"packages/console/src/ANSICode.ts","line":12,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/ANSICode.ts#L12"}],"permalink":"/std/fr/api/console/namespace/ANSICode","categories":[],"nextId":391},{"id":391,"name":"Console","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to write in stdin (NodeJS) or WebConsole (browser)"}]},"children":[{"id":392,"name":"debug","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"signatures":[{"id":393,"name":"debug","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`debug`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.debug(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L14"}],"parameters":[{"id":394,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/console/namespace/Console#debug"},{"id":404,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"signatures":[{"id":405,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`error`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.error(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L18"}],"parameters":[{"id":406,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/console/namespace/Console#error"},{"id":398,"name":"info","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"signatures":[{"id":399,"name":"info","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`info`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.info(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L16"}],"parameters":[{"id":400,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/console/namespace/Console#info"},{"id":407,"name":"isWeb","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"signatures":[{"id":408,"name":"isWeb","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L19"}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/console/namespace/Console#isWeb"},{"id":395,"name":"log","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"signatures":[{"id":396,"name":"log","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`log`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.log(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L15"}],"parameters":[{"id":397,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/console/namespace/Console#log"},{"id":401,"name":"warn","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"signatures":[{"id":402,"name":"warn","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Display a message in console with "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" level"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.run(Console.warn(\'Hello\', \'World !\'));// > Hello World !\\n```"}]}]},"sources":[{"fileName":"packages/console/src/Console.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L17"}],"parameters":[{"id":403,"name":"parameters","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of values to be logged"}]},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"required","isOptional":false,"element":{"type":"intrinsic","name":"unknown"}},{"type":"rest","elementType":{"type":"namedTupleMember","name":"optionalParameters","isOptional":false,"element":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/console/namespace/Console#warn"}],"groups":[{"title":"Functions","children":[392,404,398,407,395,401]}],"sources":[{"fileName":"packages/console/src/Console.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/console/src/Console.ts#L13"}],"permalink":"/std/fr/api/console/namespace/Console","categories":[],"previousId":409}],"groups":[{"title":"Namespaces","children":[409,391]}],"sources":[{"fileName":"packages/console/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/console/src/index.ts#L1"}],"permalink":"/std/fr/api/console"},"urlSlug":"console"}],"packageName":"@w5s/console","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":6,"name":"@w5s/core","variant":"declaration","kind":2,"flags":{},"children":[{"id":437,"name":"Array","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate readonly arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Array } from \'@w5s/core\';\\n\\nconst array = Array.of(2, 1, 3);\\nconst reversed = Array.reversed(array);// [3, 1, 2]\\nconst sorted = Array.sort(array, (left, right) => left === right ? 0 : left < right ? -1 : 1);// [1, 2, 3]\\n```"}]}]},"children":[{"id":438,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"signatures":[{"id":439,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an item at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nArray.at(array, 1) // Option.Some(\'bar\')\\nArray.at(array, -1) //  Option.Some(\'baz\') i.e. the last\\nArray.at(array, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L48"}],"typeParameter":[{"id":440,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":441,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"reference","target":440,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayLike","package":"typescript"}},{"id":442,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":440,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#at"},{"id":443,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"signatures":[{"id":444,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Concatenate all elements of arrays\\nEquivalent to "},{"kind":"code","text":"`[...array, ...extension[0], ...extension[1], ...]`"},{"kind":"text","text":","}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.concat([1, 2], [3, 4], [5, 6]);// [1, 2, 3, 4, 5, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L49"}],"typeParameter":[{"id":445,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":446,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":445,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":447,"name":"extensions","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The other arrays to append"}]},"type":{"type":"array","elementType":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":445,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":445,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#concat"},{"id":448,"name":"deleteAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"signatures":[{"id":449,"name":"deleteAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an array excluding the item at the "},{"kind":"code","text":"`index`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.deletedAt([1, 2, 3, 4], 1);// [1, 3, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L50"}],"typeParameter":[{"id":450,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":451,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":450,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":452,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the deleted item in the array"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":450,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#deleteAt"},{"id":453,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"signatures":[{"id":454,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always returns an empty array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.empty() // []\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L51"}],"typeParameter":[{"id":455,"name":"Item","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":455,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#empty"},{"id":456,"name":"every","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"signatures":[{"id":457,"name":"every","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether all the members of an array satisfy the specified test."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.every([1, 2, 3], isEven); // false\\nArray.every([2, 4], isEven); // true\\nArray.every([], (value) => false); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"typeParameter":[{"id":458,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":459,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":460,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":458,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":461,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":462,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"signatures":[{"id":463,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L20"}],"parameters":[{"id":464,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":458,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":465,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":466,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":458,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":459,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"predicate","name":"self","asserts":false,"targetType":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":459,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}},{"id":467,"name":"every","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L52"}],"typeParameter":[{"id":468,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":469,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":468,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":470,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":471,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"signatures":[{"id":472,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/every.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/every.ts#L24"}],"parameters":[{"id":473,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":468,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":474,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":475,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":468,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#every"},{"id":476,"name":"filter","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"signatures":[{"id":477,"name":"filter","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the items of an array that meet the condition specified in a callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3, 4];\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.filter(array, isEven); // [2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"typeParameter":[{"id":478,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":479,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":480,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":478,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":481,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The filter method calls the predicate function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":482,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"signatures":[{"id":483,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":19,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L19"}],"parameters":[{"id":484,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":478,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":479,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":479,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":485,"name":"filter","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L53"}],"typeParameter":[{"id":486,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":487,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":486,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":488,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":489,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"signatures":[{"id":490,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/filter.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/filter.ts#L23"}],"parameters":[{"id":491,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":486,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":492,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":493,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":486,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":486,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#filter"},{"id":494,"name":"find","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"signatures":[{"id":495,"name":"find","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.find([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'ab\')\\nArray.find([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"typeParameter":[{"id":496,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":497,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":498,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":496,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":499,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":500,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"signatures":[{"id":501,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L21"}],"parameters":[{"id":502,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":496,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":503,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":504,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":496,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":497,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":497,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":505,"name":"find","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L54"}],"typeParameter":[{"id":506,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":507,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":506,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":508,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":509,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"signatures":[{"id":510,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/find.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/find.ts#L25"}],"parameters":[{"id":511,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":506,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":512,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":513,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":506,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":506,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#find"},{"id":514,"name":"findIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"signatures":[{"id":515,"name":"findIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(0)\\nArray.findIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L55"}],"typeParameter":[{"id":516,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":517,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":516,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":518,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in ascending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":519,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"signatures":[{"id":520,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findIndex.ts#L21"}],"parameters":[{"id":521,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":516,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":522,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":523,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":516,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#findIndex"},{"id":524,"name":"findLast","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"signatures":[{"id":525,"name":"findLast","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLast([\'aa\', \'ab\', \'abc\'], (value) => (value[1] === \'b\'));// Option.Some(\'abc\')\\nArray.findLast([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"typeParameter":[{"id":526,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":527,"name":"RefinedItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":528,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":529,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":530,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L21"}],"signatures":[{"id":531,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L21"}],"parameters":[{"id":532,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":533,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":534,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":526,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":527,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":527,"name":"RefinedItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}},{"id":535,"name":"findLast","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L56"}],"typeParameter":[{"id":536,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":537,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":538,"name":"predicate","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":539,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L25"}],"signatures":[{"id":540,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLast.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLast.ts#L25"}],"parameters":[{"id":541,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":542,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":543,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":536,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#findLast"},{"id":544,"name":"findLastIndex","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"signatures":[{"id":545,"name":"findLastIndex","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last element in the array where predicate is true, and Option.None\\notherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => (value === \'a\'));// Option.Some(2)\\nArray.findLastIndex([\'a\', \'b\', \'a\'], (value) => false);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L57"}],"typeParameter":[{"id":546,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":547,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":546,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":548,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"find calls predicate once for each element of the array, in descending\\norder, until it finds one where predicate returns true. If such an element is found, find\\nimmediately returns that element value. Otherwise, find returns Option.None."}]},"type":{"type":"reflection","declaration":{"id":549,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLastIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLastIndex.ts#L21"}],"signatures":[{"id":550,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/findLastIndex.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/findLastIndex.ts#L21"}],"parameters":[{"id":551,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":546,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":552,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":553,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":546,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#findLastIndex"},{"id":554,"name":"flatMap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"signatures":[{"id":555,"name":"flatMap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array. Each calls should return an array.\\nThe final result is the concatenation of each arrays."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\'];\\nconst concat = (_: string) => [_ + \'_1\', _ + \'_2\'];\\nArray.flatMap(array, concat); // [\'a_1\', \'a_2\', \'b_1\', \'b_2\', \'c_1\', \'c_2\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L58"}],"typeParameter":[{"id":556,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":557,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":558,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":556,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":559,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array and returns an array that will be concatenated."}]},"type":{"type":"reflection","declaration":{"id":560,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L19"}],"signatures":[{"id":561,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/flatMap.ts","line":19,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/flatMap.ts#L19"}],"parameters":[{"id":562,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":556,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":563,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":564,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":556,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":557,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":557,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#flatMap"},{"id":565,"name":"fromAsync","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"signatures":[{"id":566,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"typeParameter":[{"id":567,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":568,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":567,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":567,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":567,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":567,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":569,"name":"fromAsync","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an array from an async iterator or iterable object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L59"}],"typeParameter":[{"id":570,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":571,"name":"U","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":572,"name":"iterableOrArrayLike","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An async iterator or array-like object to convert to an array."}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"AsyncIterable"},"typeArguments":[{"type":"reference","target":570,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AsyncIterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":570,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}},{"id":573,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A mapping function to call on every element of iterableOrArrayLike.\\n     Each return value is awaited before being added to result array."}]},"type":{"type":"reflection","declaration":{"id":574,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/fromAsync.ts","line":45,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/fromAsync.ts#L45"}],"signatures":[{"id":575,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/fromAsync.ts","line":45,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/fromAsync.ts#L45"}],"parameters":[{"id":576,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":570,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}},{"id":577,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":571,"name":"U","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":571,"name":"U","package":"@w5s/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript"}],"name":"Array","package":"@w5s/core"}],"name":"Promise","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Array#fromAsync"},{"id":578,"name":"generate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"signatures":[{"id":579,"name":"generate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generate an array of "},{"kind":"code","text":"`length`"},{"kind":"text","text":" using "},{"kind":"code","text":"`mapFn(index)`"},{"kind":"text","text":" on each element"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.generate(3, () => \'a\');// == [\'a\', \'a\', \'a\']\\nArray.generate(3, (index) => index * 2);// == [0, 2, 4]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L60"}],"typeParameter":[{"id":580,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":581,"name":"length","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of elements"}]},"type":{"type":"intrinsic","name":"number"}},{"id":582,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The mapping function"}]},"type":{"type":"reflection","declaration":{"id":583,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"signatures":[{"id":584,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/generate.ts","line":17,"character":55,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/generate.ts#L17"}],"parameters":[{"id":585,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":580,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":580,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#generate"},{"id":586,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"signatures":[{"id":587,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"code","text":"`Array.isArray()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.hasInstance(Array.empty()) // true\\nArray.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L61"}],"parameters":[{"id":588,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":702,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Array","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Array#hasInstance"},{"id":589,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"signatures":[{"id":590,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether an array includes a certain item, returning true or false as appropriate."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.includes([\'a\', \'\', \'a\'], \'a\'); // true\\nArray.includes([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // true\\nArray.includes([\'a\', \'b\'], \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L62"}],"typeParameter":[{"id":591,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":592,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":591,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":593,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to search for."}]},"type":{"type":"reference","target":591,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":594,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The position in this array at which to begin searching for searchItem."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#includes"},{"id":595,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"signatures":[{"id":596,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.indexOf([\'a\', \'\', \'a\'], \'a\'); // Option.Some(0)\\nArray.indexOf([\'a\', \'\', \'a\',  \'\', \'a\'], \'a\', 1); // Option.Some(2)\\nArray.indexOf([\'a\', \'b\'], \'absent\'); // Option.Some(\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L63"}],"typeParameter":[{"id":597,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":598,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":597,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":599,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":597,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":600,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#indexOf"},{"id":601,"name":"insertAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"signatures":[{"id":602,"name":"insertAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.insertAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'b\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L64"}],"typeParameter":[{"id":603,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":604,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":603,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":605,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":606,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":603,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":603,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#insertAt"},{"id":607,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"signatures":[{"id":608,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.isEmpty([]);// true\\nArray.isEmpty([\'a\', \'b\', \'c\']);// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L65"}],"parameters":[{"id":609,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#isEmpty"},{"id":610,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"signatures":[{"id":611,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of a specified "},{"kind":"code","text":"`searchItem`"},{"kind":"text","text":" in an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.lastIndexOf([\'a\', \'b\', \'a\'], \'a\') // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\', \'a\', \'b\', \'a\'], \'a\', 4); // Option.Some(2)\\nArray.lastIndexOf([\'a\', \'b\'], \'absent\') // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L66"}],"typeParameter":[{"id":612,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":613,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":612,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":614,"name":"searchItem","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to locate in the array."}]},"type":{"type":"reference","target":612,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":615,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index of the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#lastIndexOf"},{"id":616,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"signatures":[{"id":617,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls a defined callback function on each item of an array, and returns an array that contains the results."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [1, 2, 3];\\nconst double = (_: number) => _ * 2;\\nArray.map(array, double); // [2, 4, 6]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":67,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L67"}],"typeParameter":[{"id":618,"name":"FromItem","variant":"typeParam","kind":131072,"flags":{}},{"id":619,"name":"ToItem","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":620,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":618,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":621,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to three arguments. The map method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":622,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"signatures":[{"id":623,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/map.ts","line":18,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/map.ts#L18"}],"parameters":[{"id":624,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":618,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}},{"id":625,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":626,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":618,"name":"FromItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":619,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":619,"name":"ToItem","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#map"},{"id":627,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"signatures":[{"id":628,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new array from a set of items."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.of(1, 2, 3);// [1, 2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":68,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L68"}],"typeParameter":[{"id":629,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":630,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A set of items to include in the new array object."}]},"type":{"type":"array","elementType":{"type":"reference","target":629,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":629,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#of"},{"id":631,"name":"reduce","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"signatures":[{"id":632,"name":"reduce","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduce(array, concat, \'$\') // \'$foo:bar:baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L69"}],"typeParameter":[{"id":633,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":634,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":635,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":633,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":636,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":637,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"signatures":[{"id":638,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduce.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduce.ts#L19"}],"parameters":[{"id":639,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":634,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":640,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":633,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":641,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":642,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":633,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":634,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":643,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":634,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":634,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Array#reduce"},{"id":644,"name":"reduceRight","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L70"}],"signatures":[{"id":645,"name":"reduceRight","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls the specified callback function for all the items in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'foo\', \'bar\', \'baz\'];\\nconst concat = (_: string, item: string) => _ + \':\' + item;\\nArray.reduceRight(array, concat, \'$\') // \'$baz:bar:foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":70,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L70"}],"typeParameter":[{"id":646,"name":"Item","variant":"typeParam","kind":131072,"flags":{}},{"id":647,"name":"ReturnValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":648,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":646,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":649,"name":"reduceFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts up to four arguments. The reduce method calls the function one time for each item in the array."}]},"type":{"type":"reflection","declaration":{"id":650,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"signatures":[{"id":651,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/reduceRight.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/reduceRight.ts#L19"}],"parameters":[{"id":652,"name":"previousValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":647,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}},{"id":653,"name":"currentItem","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":646,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":654,"name":"currentIndex","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":655,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":646,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":647,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":656,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."}]},"type":{"type":"reference","target":647,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":647,"name":"ReturnValue","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Array#reduceRight"},{"id":657,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L71"}],"signatures":[{"id":658,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a reversed array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.reverse([1, 2, 3]);// [3, 2, 1]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":71,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L71"}],"typeParameter":[{"id":659,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":660,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":659,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":659,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#reverse"},{"id":661,"name":"setAt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L72"}],"signatures":[{"id":662,"name":"setAt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Replace "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.setAt([\'a\', \'b\', \'c\'], 1, \'$\');// [\'a\', \'$\', \'c\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":72,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L72"}],"typeParameter":[{"id":663,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":664,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":663,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":665,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the updated item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":666,"name":"item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The item to insert"}]},"type":{"type":"reference","target":663,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":663,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#setAt"},{"id":667,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L73"}],"signatures":[{"id":668,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.size([]) // 0\\nArray.size([\'foo\', \'bar\']) // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L73"}],"parameters":[{"id":669,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayLike"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"ArrayLike","package":"typescript"}}],"type":{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#size"},{"id":670,"name":"slice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L74"}],"signatures":[{"id":671,"name":"slice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a section of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([1, 2, 3, 4], 1, 3);// [2, 3]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":74,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L74"}],"typeParameter":[{"id":672,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":673,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":672,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":674,"name":"start","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The beginning of the specified portion of the array."}]},"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}},{"id":675,"name":"end","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The end of the specified portion of the array. This is exclusive of the item at the index "},{"kind":"code","text":"`end`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":672,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#slice"},{"id":683,"name":"some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L76"}],"signatures":[{"id":684,"name":"some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Determines whether the specified callback function returns true for any item of an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst isEven = (_: number) => _ % 2 === 0;\\nArray.some([1, 2, 3], isEven); // true\\nArray.some([1, 3], isEven); // false\\nArray.some([], (value) => true); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L76"}],"typeParameter":[{"id":685,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":686,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":685,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":687,"name":"predicate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The predicate function is called until it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":", or until the end of the array."}]},"type":{"type":"reflection","declaration":{"id":688,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"signatures":[{"id":689,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/some.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/some.ts#L20"}],"parameters":[{"id":690,"name":"item","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":685,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":691,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":692,"name":"array","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":685,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Array#some"},{"id":693,"name":"sort","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L77"}],"signatures":[{"id":694,"name":"sort","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a sorted array using "},{"kind":"code","text":"`compareFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nArray.sort([11, 2, 22, 1], Number.compare);// [1, 2, 11, 22]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":77,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L77"}],"typeParameter":[{"id":695,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":696,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":695,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":697,"name":"compareFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Function used to determine the order of the items. It is expected to return\\na negative value if first argument is less than second argument, zero if they\'re equal and a positive\\nvalue otherwise."}]},"type":{"type":"reflection","declaration":{"id":698,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L16"}],"signatures":[{"id":699,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Array/sort.ts","line":16,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array/sort.ts#L16"}],"parameters":[{"id":700,"name":"a","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":695,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}},{"id":701,"name":"b","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":695,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":695,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#sort"},{"id":676,"name":"splice","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L75"}],"signatures":[{"id":677,"name":"splice","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`item`"},{"kind":"text","text":" at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" in the array"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst array = [\'a\', \'b\', \'c\', \'d\', \'e\'];\\n// Remove 2 items starting at index 1\\nsplice(array, 1, 2); // [\'a\', \'d\', \'e\']\\n// Insert items at index 2\\nsplice(array, 2, 0, \'x\', \'y\'); // [\'a\', \'b\', \'x\', \'y\', \'c\', \'d\', \'e\']\\n// Replace items at index 1\\nsplice(array, 1, 2, \'u\', \'v\'); // [\'a\', \'u\', \'v\', \'d\', \'e\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Array.ts","line":75,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L75"}],"typeParameter":[{"id":678,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":679,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The array object"}]},"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":678,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}},{"id":680,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the inserted item in the array"}]},"type":{"type":"intrinsic","name":"number"}},{"id":681,"name":"deleteCount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The number of deleted items"}]},"type":{"type":"intrinsic","name":"number"}},{"id":682,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":678,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}}}],"type":{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":678,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"Array","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Array#splice"}],"groups":[{"title":"Functions","children":[438,443,448,453,456,476,494,514,524,544,554,565,578,586,589,595,601,607,610,616,627,631,644,657,661,667,670,683,693,676]}],"categories":[{"title":"Accessor","children":[438,667]},{"title":"Constructor","children":[453,578,627]},{"title":"Predicate","children":[456,589,607,683]},{"title":"Type","children":[586]},{"title":"__CATEGORY__","children":[443,448,476,494,514,524,544,554,565,595,601,610,616,631,644,657,661,670,693,676]}],"sources":[{"fileName":"packages/core/src/Array.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L32"},{"fileName":"packages/core/src/Array.ts","line":47,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"permalink":"/std/fr/api/core/namespace/Array","previousId":2660,"nextId":710},{"id":710,"name":"Boolean","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`boolean`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Boolean } from \'@w5s/core\';\\n\\nif (Boolean.hasInstance(unknownValue)) {\\n  // typeof unknownValue === \'boolean\'\\n}\\n```"}]}]},"children":[{"id":777,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":778,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":779,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":780,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":781,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":782,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":783,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Boolean#__inspect__"},{"id":770,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/core/namespace/Boolean#typeName"},{"id":760,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":761,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":762,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":763,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":764,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#!="},{"id":724,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":725,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":726,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":727,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":728,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#<"},{"id":719,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":720,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":721,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":722,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":723,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#<="},{"id":765,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":766,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":767,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":768,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":769,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#=="},{"id":734,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":735,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":736,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":737,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":738,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#>"},{"id":729,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":730,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":731,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":732,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":733,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#>="},{"id":784,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":785,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":786,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":787,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":788,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#__decode__"},{"id":789,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":790,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":791,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":792,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Boolean#__encode__"},{"id":793,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":794,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":795,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#__schema__"},{"id":774,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":775,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":776,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#asInstance"},{"id":796,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":797,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":798,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":799,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Boolean#asString"},{"id":749,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":750,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":751,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":752,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":753,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":754,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#clamp"},{"id":714,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":715,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":716,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":717,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":718,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Boolean#compare"},{"id":755,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":756,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":757,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":758,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":759,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#equals"},{"id":771,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":772,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":773,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/std/fr/api/core/namespace/Boolean#hasInstance"},{"id":744,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":745,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":746,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":747,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":748,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#max"},{"id":739,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":740,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":741,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":742,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":743,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#min"},{"id":711,"name":"not","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":712,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":713,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Boolean#not"}],"groups":[{"title":"Variables","children":[777,770]},{"title":"Functions","children":[760,724,719,765,734,729,784,789,793,774,796,749,714,755,771,744,739,711]}],"categories":[{"title":"Codec","children":[784,789,793]},{"title":"Comparator","children":[760,724,719,765,734,729,749,714,755,744,739]},{"title":"Formatting","children":[796]},{"title":"Type","children":[777,770,774,771]},{"title":"__CATEGORY__","children":[711]}],"sources":[{"fileName":"packages/core/src/Boolean.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Boolean.ts#L18"}],"permalink":"/std/fr/api/core/namespace/Boolean","previousId":437,"nextId":812},{"id":812,"name":"Callable","variant":"declaration","kind":4,"flags":{},"children":[{"id":813,"name":"symbol","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Alias to "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Symbol.call"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L43"}],"type":{"type":"reference","target":2345,"name":"Symbol.call","package":"@w5s/core"},"defaultValue":"Symbol.call","permalink":"/std/fr/api/core/namespace/Callable#symbol"}],"groups":[{"title":"Variables","children":[813]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"permalink":"/std/fr/api/core/namespace/Callable","categories":[],"previousId":710,"nextId":816},{"id":816,"name":"Char","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate characters"}]},"children":[{"id":899,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770,"permalink":"/std/fr/api/core/namespace/Char#typeName"},{"id":906,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":907,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":908,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":909,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":910,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":911,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":912,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Char#__inspect__"},{"id":820,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/fr/api/core/namespace/Char#indexType"},{"id":836,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Char#maxValue"},{"id":835,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Char#minValue"},{"id":883,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":884,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":885,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":886,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":887,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#!="},{"id":847,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":848,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":849,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":850,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":851,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#<"},{"id":842,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":843,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":844,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":845,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":846,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#<="},{"id":888,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":889,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":890,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":891,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":892,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#=="},{"id":857,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":858,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":859,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":860,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":861,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#>"},{"id":852,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":853,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":854,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":855,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":856,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#>="},{"id":929,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":930,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":931,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#__call__"},{"id":913,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":914,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":915,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":916,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":917,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#__decode__"},{"id":918,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":919,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":920,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":921,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Char#__encode__"},{"id":922,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":923,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":924,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#__schema__"},{"id":903,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":904,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":905,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#asInstance"},{"id":925,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":926,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":927,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":928,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Char#asString"},{"id":821,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":822,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":823,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#at"},{"id":872,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":873,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":874,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":875,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":876,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":877,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#clamp"},{"id":837,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":838,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":839,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":840,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":841,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#compare"},{"id":878,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":879,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":880,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":881,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":882,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Char#equals"},{"id":817,"name":"fromCodePoint","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"signatures":[{"id":818,"name":"fromCodePoint","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Char created by using the specified code point."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nChar.fromCodePoint(65, 9731) == \\"A\u2603\\"\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L25"}],"parameters":[{"id":819,"name":"code","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"an array of string codes"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"reference","target":932,"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#fromCodePoint"},{"id":900,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":901,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":902,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Char#hasInstance"},{"id":824,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":825,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":826,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#indexOf"},{"id":867,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":868,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":869,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":870,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":871,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#max"},{"id":862,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":863,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":864,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":865,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}},{"id":866,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#min"},{"id":831,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":832,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":833,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":834,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#range"},{"id":827,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":828,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":829,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"intrinsic","name":"string"}},{"id":830,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Char#rangeSize"},{"id":896,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":897,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":898,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Char#unwrap"},{"id":893,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":894,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":895,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Char#wrap"}],"groups":[{"title":"References","children":[899]},{"title":"Variables","children":[906,820,836,835]},{"title":"Functions","children":[883,847,842,888,857,852,929,913,918,922,903,925,821,872,837,878,817,900,824,867,862,831,827,896,893]}],"categories":[{"title":"Bound","children":[836,835]},{"title":"Codec","children":[913,918,922]},{"title":"Comparator","children":[883,847,842,888,857,852,872,837,878,867,862]},{"title":"Constructor","children":[817]},{"title":"Formatting","children":[925]},{"title":"Indexable","children":[820,821,824,831,827]},{"title":"Type","children":[906,903,900]},{"title":"__CATEGORY__","children":[899,929,896,893]}],"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"permalink":"/std/fr/api/core/namespace/Char","previousId":812,"nextId":933},{"id":933,"name":"Codec","variant":"declaration","kind":4,"flags":{},"children":[{"id":970,"name":"Context","variant":"declaration","kind":256,"flags":{},"children":[{"id":975,"name":"error","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Error result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"type":{"type":"reflection","declaration":{"id":976,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"signatures":[{"id":977,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":80,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L80"}],"parameters":[{"id":978,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":979,"name":"asType","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":980,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}},{"id":971,"name":"ok","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Helper that returns a new Ok result"}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"type":{"type":"reflection","declaration":{"id":972,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"signatures":[{"id":973,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":74,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L74"}],"parameters":[{"id":974,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":980,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":980,"name":"T","package":"@w5s/core","qualifiedName":"Codec.Context.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[975,971]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":68,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L68"}],"typeParameters":[{"id":980,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Codec#Context"},{"id":968,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":66,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L66"}],"typeParameters":[{"id":969,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":969,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":954,"typeArguments":[{"type":"inferred","name":"Type"}],"name":"Codec","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Type"},"name":"Type","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/core/namespace/Codec#TypeOf"},{"id":934,"name":"decode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"signatures":[{"id":935,"name":"decode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" containing the decoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = \'2022-07-31T14:04:48.449Z\';\\nconst decoded = Codec.decode(codec, input);// Result.Ok(\'2022-07-31T14:04:48.449Z\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L60"}],"typeParameter":[{"id":936,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":937,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":936,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__decode__"}],"name":"Pick","package":"typescript"}},{"id":938,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":936,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#decode"},{"id":939,"name":"encode","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"signatures":[{"id":940,"name":"encode","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec: Codec<Date> = dateISO;\\nconst input = new Date(\'2022-07-31T14:04:48.449Z\');\\nconst encoded = Codec.encode(codec, input);// \'2022-07-31T14:04:48.449Z\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L61"}],"typeParameter":[{"id":941,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":942,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the encoder module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":941,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__encode__"}],"name":"Pick","package":"typescript"}},{"id":943,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input to encode"}]},"type":{"type":"reference","target":941,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Codec#encode"},{"id":944,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"signatures":[{"id":945,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a lazy evaluated codec. Useful for recursive structures."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Node {\\n  value: unknown,\\n  children: Node[]\\n}\\nconst Node = object<Node>({\\n  content: string,\\n  responses: Codec.lazy(() => array(Node))\\n})\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L62"}],"typeParameter":[{"id":946,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":947,"name":"getCodec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the accessor to the codec"}]},"type":{"type":"reflection","declaration":{"id":948,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"signatures":[{"id":949,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Codec/lazy.ts","line":24,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec/lazy.ts#L24"}],"type":{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":946,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":946,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#lazy"},{"id":950,"name":"schema","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"signatures":[{"id":951,"name":"schema","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCodec.schema(string);// { type: \'string\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L63"}],"typeParameter":[{"id":952,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":953,"name":"codec","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec module"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":952,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"literal","value":"__schema__"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Codec#schema"}],"groups":[{"title":"Interfaces","children":[970]},{"title":"Type Aliases","children":[968]},{"title":"Functions","children":[934,939,944,950]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"permalink":"/std/fr/api/core/namespace/Codec","categories":[],"previousId":816,"nextId":1078},{"id":1078,"name":"Enum","variant":"declaration","kind":4,"flags":{},"children":[{"id":1096,"name":"KeyOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum keys of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":26,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L26"}],"typeParameters":[{"id":1097,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"ArrayValue"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":2354,"name":"Symbol.enumKeys","package":"@w5s/core"}},"objectType":{"type":"reference","target":1097,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"name":"ArrayValue","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Enum#KeyOf"},{"id":1098,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return enum values of T"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":30,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L30"}],"typeParameters":[{"id":1099,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":1096,"typeArguments":[{"type":"reference","target":1099,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"KeyOf","package":"@w5s/core","qualifiedName":"Enum.KeyOf"},"objectType":{"type":"reference","target":1099,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/fr/api/core/namespace/Enum#ValueOf"},{"id":1079,"name":"enumKeys","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Symbol for the property holding enum keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L15"}],"type":{"type":"intrinsic","name":"symbol"},"defaultValue":"Symbol.enumKeys","permalink":"/std/fr/api/core/namespace/Enum#enumKeys"},{"id":1080,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"signatures":[{"id":1081,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Enum Object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({\\n  // typeName: \'MyEnum\', // Add this we want a named Enum\\n  Foo: \'foo\',\\n  Bar: \'bar\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L16"}],"typeParameter":[{"id":1082,"name":"T","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1083,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"intersection","types":[{"type":"reference","target":1082,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":1084,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1085,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1085]}],"sources":[{"fileName":"packages/core/src/Enum/define.ts","line":20,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum/define.ts#L20"}]}}]}}],"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":1082,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Enum#define"},{"id":1086,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"signatures":[{"id":1087,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.keys(MyEnum) // [\'Foo\', \'Bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L17"}],"typeParameter":[{"id":1088,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1089,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1088,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1096,"typeArguments":[{"type":"reference","target":1088,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.KeyOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Enum#keys"},{"id":1090,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"signatures":[{"id":1091,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of enum values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst MyEnum = Enum.define({ Foo: \'foo\', Bar: \'bar\' });\\nEnum.values(MyEnum) // [\'foo\', \'bar\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L18"}],"typeParameter":[{"id":1092,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Enum","package":"@w5s/core"}}],"parameters":[{"id":1093,"name":"enumObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1092,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1098,"typeArguments":[{"type":"reference","target":1092,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Enum.ValueOf","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Enum#values"}],"groups":[{"title":"Type Aliases","children":[1096,1098]},{"title":"Variables","children":[1079]},{"title":"Functions","children":[1080,1086,1090]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":42,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L42"}],"permalink":"/std/fr/api/core/namespace/Enum","categories":[],"previousId":933,"nextId":1207},{"id":1207,"name":"Indexable","variant":"declaration","kind":4,"flags":{},"children":[{"id":1208,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":1215,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexType"}},{"id":1212,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1213,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1214,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.at"}},{"id":1209,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1210,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1211,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.indexOf"}},{"id":1220,"name":"range","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1221,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1222,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1223,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.range"}},{"id":1216,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1217,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1218,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}},{"id":1219,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.rangeSize"}}],"groups":[{"title":"Properties","children":[1215]},{"title":"Methods","children":[1212,1209,1220,1216]}],"categories":[{"title":"Indexable","children":[1215,1212,1209,1220,1216]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":102,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L102"}],"typeParameters":[{"id":1224,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1225,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":1188,"typeArguments":[{"type":"reference","target":1224,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1225,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Parameters.Index","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"},{"type":"union","types":[{"type":"literal","value":"rangeSize"},{"type":"literal","value":"range"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/fr/api/core/namespace/Indexable#Parameters"}],"groups":[{"title":"Interfaces","children":[1208]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"permalink":"/std/fr/api/core/namespace/Indexable","categories":[],"previousId":1078,"nextId":1226},{"id":1226,"name":"Int","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate integer values"}]},"children":[{"id":1359,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770,"permalink":"/std/fr/api/core/namespace/Int#typeName"},{"id":1366,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":1367,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1368,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1369,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1370,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1371,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":1372,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Int#__inspect__"},{"id":1282,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/fr/api/core/namespace/Int#indexType"},{"id":1281,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Int#maxValue"},{"id":1280,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Int#minValue"},{"id":1343,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1344,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1345,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1346,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1347,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#!="},{"id":1269,"name":"**?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"signatures":[{"id":1270,"name":"**?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedPower<T> = ...;\\nconst result = TNumeric[\'**?\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"parameters":[{"id":1271,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1272,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#**?"},{"id":1265,"name":"*?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"signatures":[{"id":1266,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"parameters":[{"id":1267,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1268,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#*?"},{"id":1261,"name":"+?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"signatures":[{"id":1262,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"parameters":[{"id":1263,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1264,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#+?"},{"id":1273,"name":"-?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"signatures":[{"id":1274,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"parameters":[{"id":1275,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1276,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#-?"},{"id":1307,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1308,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1309,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1310,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1311,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#<"},{"id":1302,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":1303,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1304,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1305,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1306,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#<="},{"id":1348,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1349,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1350,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1351,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1352,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#=="},{"id":1317,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1318,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1319,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1320,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1321,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#>"},{"id":1312,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1313,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1314,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1315,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1316,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#>="},{"id":1389,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"signatures":[{"id":1390,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"parameters":[{"id":1391,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#__call__"},{"id":1373,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1374,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1375,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1376,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1377,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#__decode__"},{"id":1378,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1379,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1380,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1381,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Int#__encode__"},{"id":1382,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1383,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1384,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#__schema__"},{"id":1245,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1246,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1247,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1248,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#abs"},{"id":1363,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1364,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1365,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#asInstance"},{"id":1385,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1386,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1387,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1388,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Int#asString"},{"id":1283,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1284,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1285,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#at"},{"id":1332,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1333,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1334,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1335,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1336,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1337,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#clamp"},{"id":1297,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":1298,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":1299,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1300,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1301,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#compare"},{"id":1338,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1339,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1340,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1341,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1342,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#equals"},{"id":1227,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L35"}],"signatures":[{"id":1228,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of integer"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.format(Int(1), 10);// \'1\'\\nInt.format(Int(10), 16);// \'A\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L35"}],"parameters":[{"id":1229,"name":"intValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1230,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Int#format"},{"id":1235,"name":"fromNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L37"}],"signatures":[{"id":1236,"name":"fromNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new integer from "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst intValue = Int.fromNumber(0.5);// 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L37"}],"parameters":[{"id":1237,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an initial numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#fromNumber"},{"id":1360,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1361,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1362,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Int#hasInstance"},{"id":1286,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1287,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1288,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#indexOf"},{"id":1253,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1254,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1255,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1256,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#isNegative"},{"id":1249,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1250,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1251,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1252,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#isPositive"},{"id":1241,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1242,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1243,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1244,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Int#isZero"},{"id":1327,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1328,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1329,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1330,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1331,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#max"},{"id":1322,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1323,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1324,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1325,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1326,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#min"},{"id":1277,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1278,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1279,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#negate"},{"id":1231,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L36"}],"signatures":[{"id":1232,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nInt.parse(\'1\');// Option.Some(1)\\nInt.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L36"}],"parameters":[{"id":1233,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an integer expression"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1234,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#parse"},{"id":1293,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1294,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1295,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1296,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#range"},{"id":1289,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1290,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1291,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":1292,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#rangeSize"},{"id":1257,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1258,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1259,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1260,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#sign"},{"id":1356,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":1357,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":1358,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Int#unwrap"},{"id":1353,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":1354,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":1355,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#wrap"},{"id":1238,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1239,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1240,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Int#zero"}],"groups":[{"title":"References","children":[1359]},{"title":"Variables","children":[1366,1282,1281,1280]},{"title":"Functions","children":[1343,1269,1265,1261,1273,1307,1302,1348,1317,1312,1389,1373,1378,1382,1245,1363,1385,1283,1332,1297,1338,1227,1235,1360,1286,1253,1249,1241,1327,1322,1277,1231,1293,1289,1257,1356,1353,1238]}],"categories":[{"title":"Bound","children":[1281,1280]},{"title":"Codec","children":[1373,1378,1382]},{"title":"Comparator","children":[1343,1307,1302,1348,1317,1312,1332,1297,1338,1327,1322]},{"title":"Constructor","children":[1235]},{"title":"Formatting","children":[1385]},{"title":"Indexable","children":[1282,1283,1286,1293,1289]},{"title":"Numeric","children":[1269,1265,1261,1273,1245,1253,1249,1241,1277,1257,1238]},{"title":"Type","children":[1366,1363,1360]},{"title":"__CATEGORY__","children":[1359,1389,1227,1231,1356,1353]}],"sources":[{"fileName":"packages/core/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L19"},{"fileName":"packages/core/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L26"}],"permalink":"/std/fr/api/core/namespace/Int","previousId":1207,"nextId":1397},{"id":1397,"name":"JSON","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to encode/decode JSON. Instead of throwing errors like "},{"kind":"code","text":"`globalThis.JSON`"},{"kind":"text","text":", functions returns "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { JSON } from \'@w5s/core\';\\n\\nconst object = { a: true };\\nconst encoded = JSON.stringify(object); // Result.Ok(\'{\\"a\\":true}\')\\nif (Result.isOk(encoded)) {\\n  const decoded = JSON.parse(encoded); // Result.Ok({ a: true })\\n}\\n```"}]}]},"children":[{"id":1398,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"signatures":[{"id":1399,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse using "},{"kind":"code","text":"`JSON.parse()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = \'{ \\"a\\": true }\';\\nJSON.parse(valid); // Result.Ok({ a: true })\\n\\nconst invalid = \'{ \\"a\\": }\';\\nJSON.parse(invalid); // Result.Error(new SyntaxError(\'Unexpected token } in JSON at position 7\'))\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L51"}],"parameters":[{"id":1400,"name":"anyString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string to parse"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/SyntaxError.ts","qualifiedName":"SyntaxError"},"name":"SyntaxError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/JSON#parse"},{"id":1401,"name":"stringify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"signatures":[{"id":1402,"name":"stringify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert to string using "},{"kind":"code","text":"`JSON.stringify()`"},{"kind":"text","text":" and return a "},{"kind":"code","text":"`Result`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst valid = { a: true };\\nJSON.stringify(valid); // Result.Ok(\'{\\"a\\":true}\')\\n\\nconst circular = {\\n  get ref() {\\n    return this;\\n  },\\n};\\nJSON.stringify(circular);// Result.Error(new TypeError(...));\\n```"}]}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":76,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L76"}],"parameters":[{"id":1403,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to convert"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TypeError.ts","qualifiedName":"TypeError"},"name":"TypeError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/JSON#stringify"}],"groups":[{"title":"Functions","children":[1398,1401]}],"sources":[{"fileName":"packages/core/src/JSON.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L37"}],"permalink":"/std/fr/api/core/namespace/JSON","categories":[],"previousId":1226,"nextId":1418},{"id":1418,"name":"Number","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`number`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Number } from \'@w5s/core\';\\n\\nconst total = [1, 1.5, 2].reduce(Number[\'+\'], 0);// 4.5\\nNumber[\'==\'](total, 4.5);// true\\n```"}]}]},"children":[{"id":1534,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770,"permalink":"/std/fr/api/core/namespace/Number#typeName"},{"id":1541,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":1542,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1543,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1544,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1545,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1546,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":1547,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Number#__inspect__"},{"id":1437,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/fr/api/core/namespace/Number#maxValue"},{"id":1436,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/fr/api/core/namespace/Number#minValue"},{"id":1524,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1525,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1526,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1527,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1528,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#!="},{"id":1462,"name":"%","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"signatures":[{"id":1463,"name":"%","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Remainder<T> = ...;\\nconst result = Numeric[\'%\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"parameters":[{"id":1464,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1465,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#%"},{"id":1458,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":1459,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":1460,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1461,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#*"},{"id":1470,"name":"**","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"signatures":[{"id":1471,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"parameters":[{"id":1472,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1473,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#**"},{"id":1454,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":1455,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":1456,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1457,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#+"},{"id":1466,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":1467,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":1468,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1469,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#-"},{"id":1474,"name":"/?","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"signatures":[{"id":1475,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"parameters":[{"id":1476,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1477,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#?"},{"id":1488,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1489,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1490,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1491,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1492,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#<"},{"id":1483,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":1484,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1485,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1486,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1487,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#<="},{"id":1529,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1530,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1531,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1532,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1533,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#=="},{"id":1498,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1499,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1500,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1501,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1502,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#>"},{"id":1493,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1494,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1495,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1496,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1497,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#>="},{"id":1548,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1549,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1550,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1551,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1552,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#__decode__"},{"id":1553,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1554,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1555,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1556,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Number#__encode__"},{"id":1557,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1558,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1559,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#__schema__"},{"id":1438,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1439,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1440,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1441,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#abs"},{"id":1538,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1539,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1540,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#asInstance"},{"id":1560,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1561,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1562,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1563,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Number#asString"},{"id":1513,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1514,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1515,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1516,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1517,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1518,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#clamp"},{"id":1478,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":1479,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":1480,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1481,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1482,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#compare"},{"id":1519,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1520,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1521,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1522,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1523,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#equals"},{"id":1422,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L32"}],"signatures":[{"id":1423,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return string representation of number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.format(1.1);// \'1.1\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L32"}],"parameters":[{"id":1424,"name":"numberValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number"}]},"type":{"type":"intrinsic","name":"number"}},{"id":1425,"name":"radix","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional base (ex: 10, 16)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Number/Radix36.ts","qualifiedName":"Radix36"},"name":"Radix36","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Number#format"},{"id":1535,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1536,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1537,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/std/fr/api/core/namespace/Number#hasInstance"},{"id":1446,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1447,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1448,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1449,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#isNegative"},{"id":1442,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1443,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1444,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1445,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#isPositive"},{"id":1429,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1430,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1431,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1432,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Number#isZero"},{"id":1508,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1509,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1510,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1511,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1512,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#max"},{"id":1503,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1504,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1505,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1506,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1507,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#min"},{"id":1433,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1434,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1435,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#negate"},{"id":1419,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L31"}],"signatures":[{"id":1420,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns an number\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.parse(\'1\');// Option.Some(1)\\nNumber.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Number.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L31"}],"parameters":[{"id":1421,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Number#parse"},{"id":1450,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1451,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1452,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1453,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#sign"},{"id":1426,"name":"zero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1427,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1428,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Number#zero"}],"groups":[{"title":"References","children":[1534]},{"title":"Variables","children":[1541,1437,1436]},{"title":"Functions","children":[1524,1462,1458,1470,1454,1466,1474,1488,1483,1529,1498,1493,1548,1553,1557,1438,1538,1560,1513,1478,1519,1422,1535,1446,1442,1429,1508,1503,1433,1419,1450,1426]}],"categories":[{"title":"Bound","children":[1437,1436]},{"title":"Codec","children":[1548,1553,1557]},{"title":"Comparator","children":[1524,1488,1483,1529,1498,1493,1513,1478,1519,1508,1503]},{"title":"Formatting","children":[1560]},{"title":"Numeric","children":[1462,1458,1470,1454,1466,1474,1438,1446,1442,1429,1433,1450,1426]},{"title":"Type","children":[1541,1538,1535]},{"title":"__CATEGORY__","children":[1534,1422,1419]}],"sources":[{"fileName":"packages/core/src/Number.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Number.ts#L23"}],"permalink":"/std/fr/api/core/namespace/Number","previousId":1397,"nextId":1564},{"id":1564,"name":"Numeric","variant":"declaration","kind":4,"flags":{},"children":[{"id":1565,"name":"Add","variant":"declaration","kind":256,"flags":{},"children":[{"id":1566,"name":"+","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"signatures":[{"id":1567,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L15"}],"parameters":[{"id":1568,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1570,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1569,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1571,"name":"Right","package":"@w5s/core","qualifiedName":"Add.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1572,"name":"Return","package":"@w5s/core","qualifiedName":"Add.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1566]}],"categories":[{"title":"Numeric","children":[1566]}],"sources":[{"fileName":"packages/core/src/Numeric/Add.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Add.ts#L1"}],"typeParameters":[{"id":1570,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1571,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1570,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}},{"id":1572,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1570,"name":"Left","package":"@w5s/core","qualifiedName":"Add.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Add"},{"id":1573,"name":"CheckedAdd","variant":"declaration","kind":256,"flags":{},"children":[{"id":1574,"name":"+?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"signatures":[{"id":1575,"name":"+?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedAdd<T> = ...;\\nconst result = TNumeric[\'+?\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L17"}],"parameters":[{"id":1576,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1578,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1577,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1579,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedAdd.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1580,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedAdd.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1574]}],"categories":[{"title":"Numeric","children":[1574]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedAdd.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedAdd.ts#L3"}],"typeParameters":[{"id":1578,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1579,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1578,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}},{"id":1580,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1578,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedAdd.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedAdd"},{"id":1581,"name":"CheckedDivide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1582,"name":"/?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"signatures":[{"id":1583,"name":"/?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedDivide<T> = ...;\\nconst result = Numeric[\'/?\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L17"}],"parameters":[{"id":1584,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1586,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1585,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1587,"name":"Divider","package":"@w5s/core","qualifiedName":"CheckedDivide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1588,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedDivide.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1582]}],"categories":[{"title":"Numeric","children":[1582]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedDivide.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedDivide.ts#L3"}],"typeParameters":[{"id":1586,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1587,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1586,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}},{"id":1588,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1586,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedDivide.Base","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedDivide"},{"id":1589,"name":"CheckedMultiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1590,"name":"*?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"signatures":[{"id":1591,"name":"*?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedMultiply<T> = ...;\\nconst result = Numeric[\'*?\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L17"}],"parameters":[{"id":1592,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1594,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1593,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1595,"name":"Multiplier","package":"@w5s/core","qualifiedName":"CheckedMultiply.Multiplier","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1596,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedMultiply.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1590]}],"categories":[{"title":"Numeric","children":[1590]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedMultiply.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedMultiply.ts#L3"}],"typeParameters":[{"id":1594,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1595,"name":"Multiplier","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1594,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}},{"id":1596,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1594,"name":"Base","package":"@w5s/core","qualifiedName":"CheckedMultiply.Base","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedMultiply"},{"id":1597,"name":"CheckedPower","variant":"declaration","kind":256,"flags":{},"children":[{"id":1598,"name":"**?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"signatures":[{"id":1599,"name":"**?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedPower<T> = ...;\\nconst result = TNumeric[\'**?\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L17"}],"parameters":[{"id":1600,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1602,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}},{"id":1601,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1603,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedPower.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1604,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedPower.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1598]}],"categories":[{"title":"Numeric","children":[1598]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedPower.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedPower.ts#L3"}],"typeParameters":[{"id":1602,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1603,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1602,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}},{"id":1604,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1602,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedPower.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedPower"},{"id":1605,"name":"CheckedSubtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1606,"name":"-?","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"signatures":[{"id":1607,"name":"-?","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator that returns "},{"kind":"code","text":"`None`"},{"kind":"text","text":" instead of wrapping around on overflow."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.CheckedSubtract<T> = ...;\\nconst result = TNumeric[\'-?\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L17"}],"parameters":[{"id":1608,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1610,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1609,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1611,"name":"Right","package":"@w5s/core","qualifiedName":"CheckedSubtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1612,"name":"Return","package":"@w5s/core","qualifiedName":"CheckedSubtract.Return","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[1606]}],"categories":[{"title":"Numeric","children":[1606]}],"sources":[{"fileName":"packages/core/src/Numeric/CheckedSubtract.ts","line":3,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/CheckedSubtract.ts#L3"}],"typeParameters":[{"id":1610,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1611,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1610,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}},{"id":1612,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1610,"name":"Left","package":"@w5s/core","qualifiedName":"CheckedSubtract.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#CheckedSubtract"},{"id":1613,"name":"Divide","variant":"declaration","kind":256,"flags":{},"children":[{"id":1614,"name":"/","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"signatures":[{"id":1615,"name":"/","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Division operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Divide<T> = ...;\\nconst result = Numeric[\'/\'](left, right);// represents (left / right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L15"}],"parameters":[{"id":1616,"name":"base","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the base part"}]},"type":{"type":"reference","target":1618,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1617,"name":"divider","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the divider part"}]},"type":{"type":"reference","target":1619,"name":"Divider","package":"@w5s/core","qualifiedName":"Divide.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1620,"name":"Return","package":"@w5s/core","qualifiedName":"Divide.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1614]}],"categories":[{"title":"Numeric","children":[1614]}],"sources":[{"fileName":"packages/core/src/Numeric/Divide.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Divide.ts#L1"}],"typeParameters":[{"id":1618,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1619,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1618,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}},{"id":1620,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1618,"name":"Base","package":"@w5s/core","qualifiedName":"Divide.Base","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Divide"},{"id":1621,"name":"Multiply","variant":"declaration","kind":256,"flags":{},"children":[{"id":1622,"name":"*","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"signatures":[{"id":1623,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L15"}],"parameters":[{"id":1624,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1626,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1625,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1627,"name":"Right","package":"@w5s/core","qualifiedName":"Multiply.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1628,"name":"Return","package":"@w5s/core","qualifiedName":"Multiply.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1622]}],"categories":[{"title":"Numeric","children":[1622]}],"sources":[{"fileName":"packages/core/src/Numeric/Multiply.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Multiply.ts#L1"}],"typeParameters":[{"id":1626,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1627,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1626,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}},{"id":1628,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1626,"name":"Left","package":"@w5s/core","qualifiedName":"Multiply.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Multiply"},{"id":1629,"name":"Negate","variant":"declaration","kind":256,"flags":{},"children":[{"id":1630,"name":"negate","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"signatures":[{"id":1631,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L14"}],"parameters":[{"id":1632,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1633,"name":"T","package":"@w5s/core","qualifiedName":"Negate.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1634,"name":"Return","package":"@w5s/core","qualifiedName":"Negate.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1630]}],"categories":[{"title":"Numeric","children":[1630]}],"sources":[{"fileName":"packages/core/src/Numeric/Negate.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Negate.ts#L1"}],"typeParameters":[{"id":1633,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1634,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1633,"name":"T","package":"@w5s/core","qualifiedName":"Negate.T","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Negate"},{"id":1635,"name":"Power","variant":"declaration","kind":256,"flags":{},"children":[{"id":1636,"name":"**","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"signatures":[{"id":1637,"name":"**","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Power operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Power<T> = ...;\\nconst result = Numeric[\'**\'](left, right);// represents (left ** right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L15"}],"parameters":[{"id":1638,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1640,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}},{"id":1639,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1641,"name":"Right","package":"@w5s/core","qualifiedName":"Power.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1642,"name":"Return","package":"@w5s/core","qualifiedName":"Power.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1636]}],"categories":[{"title":"Numeric","children":[1636]}],"sources":[{"fileName":"packages/core/src/Numeric/Power.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Power.ts#L1"}],"typeParameters":[{"id":1640,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1641,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1640,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}},{"id":1642,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1640,"name":"Left","package":"@w5s/core","qualifiedName":"Power.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Power"},{"id":1643,"name":"Remainder","variant":"declaration","kind":256,"flags":{},"children":[{"id":1644,"name":"%","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"signatures":[{"id":1645,"name":"%","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Remainder operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Remainder<T> = ...;\\nconst result = Numeric[\'%\'](left, right);// represents (left % right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L15"}],"parameters":[{"id":1646,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1648,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}},{"id":1647,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1649,"name":"Divider","package":"@w5s/core","qualifiedName":"Remainder.Divider","refersToTypeParameter":true}}],"type":{"type":"reference","target":1650,"name":"Return","package":"@w5s/core","qualifiedName":"Remainder.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1644]}],"categories":[{"title":"Numeric","children":[1644]}],"sources":[{"fileName":"packages/core/src/Numeric/Remainder.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Remainder.ts#L1"}],"typeParameters":[{"id":1648,"name":"Base","variant":"typeParam","kind":131072,"flags":{}},{"id":1649,"name":"Divider","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1648,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}},{"id":1650,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1648,"name":"Base","package":"@w5s/core","qualifiedName":"Remainder.Base","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Remainder"},{"id":1651,"name":"Signed","variant":"declaration","kind":256,"flags":{},"children":[{"id":1652,"name":"abs","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"signatures":[{"id":1653,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L14"}],"parameters":[{"id":1654,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1655,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]},{"id":1660,"name":"isNegative","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"signatures":[{"id":1661,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L28"}],"parameters":[{"id":1662,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1663,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1656,"name":"isPositive","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"signatures":[{"id":1657,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L21"}],"parameters":[{"id":1658,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1659,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1664,"name":"sign","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"signatures":[{"id":1665,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L35"}],"parameters":[{"id":1666,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1667,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1668,"name":"T","package":"@w5s/core","qualifiedName":"Signed.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1652,1660,1656,1664]}],"categories":[{"title":"Numeric","children":[1652,1660,1656,1664]}],"sources":[{"fileName":"packages/core/src/Numeric/Signed.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Signed.ts#L1"}],"typeParameters":[{"id":1668,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Numeric#Signed"},{"id":1669,"name":"Subtract","variant":"declaration","kind":256,"flags":{},"children":[{"id":1670,"name":"-","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"signatures":[{"id":1671,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L15"}],"parameters":[{"id":1672,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":1674,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1673,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":1675,"name":"Right","package":"@w5s/core","qualifiedName":"Subtract.Right","refersToTypeParameter":true}}],"type":{"type":"reference","target":1676,"name":"Return","package":"@w5s/core","qualifiedName":"Subtract.Return","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1670]}],"categories":[{"title":"Numeric","children":[1670]}],"sources":[{"fileName":"packages/core/src/Numeric/Subtract.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Subtract.ts#L1"}],"typeParameters":[{"id":1674,"name":"Left","variant":"typeParam","kind":131072,"flags":{}},{"id":1675,"name":"Right","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1674,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}},{"id":1676,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1674,"name":"Left","package":"@w5s/core","qualifiedName":"Subtract.Left","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Numeric#Subtract"},{"id":1677,"name":"Zero","variant":"declaration","kind":256,"flags":{},"children":[{"id":1681,"name":"isZero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"signatures":[{"id":1682,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.isZero(0); // true\\nNumber.isZero(1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L23"}],"parameters":[{"id":1683,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1684,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1685,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1678,"name":"zero","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"signatures":[{"id":1679,"name":"zero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the additive identity element of "},{"kind":"code","text":"`T`"},{"kind":"text","text":", 0."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.zero(); // 0\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L11"}],"parameters":[{"id":1680,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1685,"name":"T","package":"@w5s/core","qualifiedName":"Zero.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1681,1678]}],"categories":[{"title":"Numeric","children":[1681,1678]}],"sources":[{"fileName":"packages/core/src/Numeric/Zero.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/Zero.ts#L1"}],"typeParameters":[{"id":1685,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Numeric#Zero"}],"groups":[{"title":"Interfaces","children":[1565,1573,1581,1589,1597,1605,1613,1621,1629,1635,1643,1651,1669,1677]}],"sources":[{"fileName":"packages/core/src/Numeric/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Numeric/index.ts#L1"}],"permalink":"/std/fr/api/core/namespace/Numeric","categories":[],"previousId":1418,"nextId":1686},{"id":1686,"name":"Option","variant":"declaration","kind":4,"flags":{},"children":[{"id":1742,"name":"None","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`undefined`"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":67,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L67"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/fr/api/core/namespace/Option#None"},{"id":1743,"name":"Some","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Non "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and non "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" value"}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":72,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L72"}],"typeParameters":[{"id":1744,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1744,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","target":1744,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},"permalink":"/std/fr/api/core/namespace/Option#Some"},{"id":1691,"name":"None","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L52"}],"type":{"type":"intrinsic","name":"undefined"},"permalink":"/std/fr/api/core/namespace/Option#None"},{"id":1687,"name":"Some","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"}],"signatures":[{"id":1688,"name":"Some","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"An identity function that validates passed value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L51"}],"typeParameter":[{"id":1689,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1690,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the non empty value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1689,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1689,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#Some"},{"id":1692,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L53"}],"signatures":[{"id":1693,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":" if the option is "},{"kind":"code","text":"`Option.None`"},{"kind":"text","text":", otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" with the value and returns the result.\\nSome languages call this operation "},{"kind":"code","text":"`flatMap`"},{"kind":"text","text":" or "},{"kind":"code","text":"`chain`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (x: number): Option<number> => Option.Some(x * x);\\n\\nOption.andThen(Option.Some(2), square); // Option.Some(16)\\nOption.andThen(Option.None, square); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L53"}],"typeParameter":[{"id":1694,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1695,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1696,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1694,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1697,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1698,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"signatures":[{"id":1699,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/andThen.ts#L21"}],"parameters":[{"id":1700,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1694,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1695,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1695,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#andThen"},{"id":1701,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"signatures":[{"id":1702,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to coerce value to "},{"kind":"code","text":"`Option`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.from(null);// undefined\\nOption.from(undefined);// undefined\\nOption.from(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L54"}],"typeParameter":[{"id":1703,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1704,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the converted value"}]},"type":{"type":"reference","target":1703,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1703,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option/from.ts","qualifiedName":"NullableValues"},"name":"NullableValues","package":"@w5s/core"}],"name":"Exclude","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#from"},{"id":1705,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"signatures":[{"id":1706,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nconst x = None;\\nOption.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L55"}],"typeParameter":[{"id":1707,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1708,"name":"DefaultValue","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1709,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1707,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1710,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a default value"}]},"type":{"type":"reflection","declaration":{"id":1711,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"signatures":[{"id":1712,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/getOrElse.ts","line":20,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/getOrElse.ts#L20"}],"type":{"type":"reference","target":1708,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1707,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1708,"name":"DefaultValue","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/fr/api/core/namespace/Option#getOrElse"},{"id":1713,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"signatures":[{"id":1714,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value if "},{"kind":"code","text":"`Some`"},{"kind":"text","text":", throw an error if "},{"kind":"code","text":"`None`"},{"kind":"text","text":"\\n\\n**\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Some(\'foo\');\\nOption.getOrThrow(x);// \'foo\'\\n\\nlet x = None;\\nOption.getOrThrow(x);// throw TypeError(\'option must not be a null|undefined\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L56"}],"typeParameter":[{"id":1715,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1716,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1715,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}],"type":{"type":"reference","target":1715,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Option#getOrThrow"},{"id":1717,"name":"isNone","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"signatures":[{"id":1718,"name":"isNone","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"code","text":"`null`"},{"kind":"text","text":"or "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isNone(None);// true\\nOption.isNone(undefined);// true\\nOption.isNone(null);// true\\n\\nOption.isNone(Some(\'foo\'));// false\\nOption.isNone(\'foo\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L57"}],"parameters":[{"id":1719,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}}}],"permalink":"/std/fr/api/core/namespace/Option#isNone"},{"id":1720,"name":"isSome","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"signatures":[{"id":1721,"name":"isSome","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is neither "},{"kind":"code","text":"`null`"},{"kind":"text","text":" nor "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOption.isSome(Option.None);// false\\nOption.isSome(undefined);// false\\nOption.isSome(null);// false\\n\\nOption.isSome(Option.Some(\'foo\'));// true\\nOption.isSome(\'foo\');// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L58"}],"typeParameter":[{"id":1722,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1723,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":1722,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":1722,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"name":"Nullable","package":"@w5s/core-type"}],"name":"Exclude","package":"typescript"}}}],"permalink":"/std/fr/api/core/namespace/Option#isSome"},{"id":1724,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"signatures":[{"id":1725,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Option<U>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"code","text":"`Some`"},{"kind":"text","text":" value, leaving a "},{"kind":"code","text":"`None`"},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst x = Some(\'foo\');\\nOption.map(x, (value) => `${value}_bar`));// Some(\'foo_bar\') == \'foo_bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L59"}],"typeParameter":[{"id":1726,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1727,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1728,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1726,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1729,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1730,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"signatures":[{"id":1731,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/map.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/map.ts#L19"}],"parameters":[{"id":1732,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1726,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"NonNullable"},"typeArguments":[{"type":"reference","target":1727,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"NonNullable","package":"typescript"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1727,"name":"ValueTo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#map"},{"id":1733,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"signatures":[{"id":1734,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the option if it contains a value, otherwise calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" and returns the result."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst alt = () => Some(\'bar\')\\n\\nOption.orElse(Option.Some(\'foo\'), alt); // Option.Some(\'foo\')\\nOption.orElse(Option.None, alt); // Option.Some(\'bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L60"}],"typeParameter":[{"id":1735,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1736,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an optional value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1735,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}},{"id":1737,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a callback"}]},"type":{"type":"reflection","declaration":{"id":1738,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"signatures":[{"id":1739,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Option/orElse.ts","line":18,"character":65,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option/orElse.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Nullable"},"typeArguments":[{"type":"reference","target":1735,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Nullable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1735,"name":"ValueFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Option#orElse"}],"groups":[{"title":"Type Aliases","children":[1742,1743]},{"title":"Variables","children":[1691]},{"title":"Functions","children":[1687,1692,1701,1705,1713,1717,1720,1724,1733]}],"categories":[{"title":"Accessor","children":[1705,1713]},{"title":"Constructor","children":[1687,1701]},{"title":"Type","children":[1717,1720]},{"title":"__CATEGORY__","children":[1742,1743,1691,1692,1724,1733]}],"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":50,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L50"},{"fileName":"packages/core/src/Option.ts","line":63,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"permalink":"/std/fr/api/core/namespace/Option","previousId":1564,"nextId":1745},{"id":1745,"name":"Order","variant":"declaration","kind":4,"flags":{},"children":[{"id":1755,"name":"combine","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L19"}],"signatures":[{"id":1756,"name":"combine","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface Person {\\n  name: string;\\n  age: number;\\n}\\nconst comparePerson = combine(\\n  (left: Person, right: Person) => String.compare(left.name, right.name),\\n  (left: Person, right: Person) => Number.compare(left.age, right.age),\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L19"}],"typeParameter":[{"id":1757,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1758,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1757,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}},{"id":1759,"name":"others","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1757,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}}],"type":{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1757,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Order#combine"},{"id":1746,"name":"compareBy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L18"}],"signatures":[{"id":1747,"name":"compareBy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1745,"tsLinkText":""},{"kind":"text","text":" function that will map the parameters using "},{"kind":"code","text":"`selectFn`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst compareByName = compareBy((named: { name: string }) => named.name, String.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L18"}],"typeParameter":[{"id":1748,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":1749,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1750,"name":"selector","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes a "},{"kind":"code","text":"`From`"},{"kind":"text","text":" value and returns a "},{"kind":"code","text":"`To`"},{"kind":"text","text":" value."}]},"type":{"type":"reflection","declaration":{"id":1751,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L16"}],"signatures":[{"id":1752,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Order/compareBy.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order/compareBy.ts#L16"}],"parameters":[{"id":1753,"name":"from","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1749,"name":"To","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1748,"name":"From","package":"@w5s/core","refersToTypeParameter":true}}]}}},{"id":1754,"name":"compareTo","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1745,"tsLinkText":""},{"kind":"text","text":" function."}]},"type":{"type":"union","types":[{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1748,"name":"From","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"},{"type":"reference","target":991,"typeArguments":[{"type":"reference","target":1748,"name":"From","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}]}}],"type":{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1749,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Order#compareBy"},{"id":1760,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L20"}],"signatures":[{"id":1761,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a reversed "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1745,"tsLinkText":""},{"kind":"text","text":" from the given "},{"kind":"inline-tag","tag":"@link","text":"Order","target":1745,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Comparable","target":981,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nreverse(Number.compare); // == (left, right) => Ordering.reverse(Number.compare(left, right))\\nreverse(Number); // == reverse(Number.compare)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L20"}],"typeParameter":[{"id":1762,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1763,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparator function or comparable object to be reversed."}]},"type":{"type":"union","types":[{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1762,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":991,"typeArguments":[{"type":"reference","target":1762,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"},{"type":"literal","value":"compare"}],"name":"Pick","package":"typescript"}]}}],"type":{"type":"reference","target":1764,"typeArguments":[{"type":"reference","target":1762,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Order","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Order#reverse"}],"groups":[{"title":"Functions","children":[1755,1746,1760]}],"categories":[{"title":"Constructor","children":[1746]},{"title":"__CATEGORY__","children":[1755,1760]}],"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"},{"fileName":"packages/core/src/Order.ts","line":17,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L17"}],"permalink":"/std/fr/api/core/namespace/Order","previousId":1686,"nextId":1770},{"id":1770,"name":"Ordering","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate ordering values"}]},"children":[{"id":1776,"name":"Equal","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0","permalink":"/std/fr/api/core/namespace/Ordering#Equal"},{"id":1777,"name":"Greater","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1","permalink":"/std/fr/api/core/namespace/Ordering#Greater"},{"id":1775,"name":"Less","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1","permalink":"/std/fr/api/core/namespace/Ordering#Less"},{"id":1778,"name":"[enumKeys]","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L39"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"Less"},{"type":"literal","value":"Equal"},{"type":"literal","value":"Greater"}]}}},"permalink":"/std/fr/api/core/namespace/Ordering#[enumKeys]"},{"id":1785,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":1786,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1787,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1788,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1789,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1790,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":1791,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Ordering#__inspect__"},{"id":1808,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"permalink":"/std/fr/api/core/namespace/Ordering#indexType"},{"id":1774,"name":"typeName","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"},{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'","permalink":"/std/fr/api/core/namespace/Ordering#typeName"},{"id":1792,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1793,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1794,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1795,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1796,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#__decode__"},{"id":1797,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1798,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1799,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1800,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/Ordering#__encode__"},{"id":1801,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1802,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1803,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#__schema__"},{"id":1782,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1783,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1784,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#asInstance"},{"id":1804,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1805,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1806,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1807,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/Ordering#asString"},{"id":1809,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1810,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1811,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#at"},{"id":1779,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1780,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1781,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}}],"permalink":"/std/fr/api/core/namespace/Ordering#hasInstance"},{"id":1812,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1813,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1814,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#indexOf"},{"id":1819,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1820,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1821,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1822,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#range"},{"id":1815,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1816,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1817,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}},{"id":1818,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"literal","value":-1},{"type":"literal","value":0},{"type":"literal","value":1}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/core/namespace/Ordering#rangeSize"},{"id":1771,"name":"reverse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"signatures":[{"id":1772,"name":"reverse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Reverses the "},{"kind":"code","text":"`Ordering`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Less`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Greater`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Less`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Equal`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nreverse(Ordering.Less); // == Ordering.Greater\\nreverse(Ordering.Greater); // == Ordering.Less\\nreverse(Ordering.Equal); // == Ordering.Equal\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L18"}],"parameters":[{"id":1773,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the ordering"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"type":{"type":"reference","target":1823,"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Ordering#reverse"}],"groups":[{"title":"Variables","children":[1776,1777,1775,1778,1785,1808,1774]},{"title":"Functions","children":[1792,1797,1801,1782,1804,1809,1779,1812,1819,1815,1771]}],"categories":[{"title":"Codec","children":[1792,1797,1801]},{"title":"Formatting","children":[1804]},{"title":"Indexable","children":[1808,1809,1812,1819,1815]},{"title":"Type","children":[1785,1774,1782,1779]},{"title":"__CATEGORY__","children":[1776,1777,1775,1778,1771]}],"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"permalink":"/std/fr/api/core/namespace/Ordering","previousId":1745,"nextId":1829},{"id":1829,"name":"Record","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate Record"}]},"children":[{"id":1830,"name":"delete","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"signatures":[{"id":1831,"name":"delete","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record without the "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.delete(record, \'myProperty\'); // {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L28"}],"typeParameter":[{"id":1832,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1833,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1834,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1832,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1833,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1835,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1832,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1832,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1833,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#delete"},{"id":1836,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"signatures":[{"id":1837,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an empty "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1829,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst empty = Record.empty(); // frozen {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L29"}],"typeParameter":[{"id":1838,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1839,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1838,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1839,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#empty"},{"id":1840,"name":"entries","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"signatures":[{"id":1841,"name":"entries","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [[\'first\', 1], [\'second\', 2]]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L30"}],"typeParameter":[{"id":1842,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1843,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1844,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1842,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1843,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1842,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1843,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#entries"},{"id":1845,"name":"forEach","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"signatures":[{"id":1846,"name":"forEach","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Call "},{"kind":"code","text":"`fn(value, key, record)`"},{"kind":"text","text":" on each entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.forEach(record, (value, key, record) => {\\n // call (1, \'first\', record)\\n // call (2, \'second\', record)\\n}); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L31"}],"typeParameter":[{"id":1847,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1848,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":1849,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1847,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1848,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1850,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1849,"name":"D","package":"@w5s/core","refersToTypeParameter":true}},{"id":1851,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"callback called on each entry"}]},"type":{"type":"reflection","declaration":{"id":1852,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"signatures":[{"id":1853,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Record/forEach.ts","line":20,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record/forEach.ts#L20"}],"parameters":[{"id":1854,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1848,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":1855,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1847,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1856,"name":"record","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1849,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Record#forEach"},{"id":1857,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"signatures":[{"id":1858,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"Record","target":1829,"tsLinkText":""},{"kind":"text","text":" from an iterable of [key, value]"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = Record.from([[\'a\', 1], [\'b\', 2]]); // frozen { a: 1, b: 2}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L32"}],"typeParameter":[{"id":1859,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1860,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1861,"name":"iterable","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":1859,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1860,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1859,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1860,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#from"},{"id":1862,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"signatures":[{"id":1863,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an Option of value for the given "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.get(record, \'myProperty\'); // Option.Some(\'myValue\')\\nRecord.get(record, \'nonExistent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L33"}],"typeParameter":[{"id":1864,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1865,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1866,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1864,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1865,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1867,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1864,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1865,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Record#get"},{"id":1868,"name":"has","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"signatures":[{"id":1869,"name":"has","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if "},{"kind":"code","text":"`record`"},{"kind":"text","text":" contains "},{"kind":"code","text":"`key`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.has(record, \'myProperty\'); // true\\nRecord.has(record, \'nonExistent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L34"}],"typeParameter":[{"id":1870,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1871,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1870,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}},{"id":1872,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1870,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/Record#has"},{"id":1873,"name":"keys","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"signatures":[{"id":1874,"name":"keys","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all keys"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.keys(record)); // [\'first\', \'second\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L35"}],"typeParameter":[{"id":1875,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}}],"parameters":[{"id":1876,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1875,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1875,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#keys"},{"id":1877,"name":"set","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"signatures":[{"id":1878,"name":"set","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new record including the new "},{"kind":"code","text":"`[key, value]`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { myProperty: \'myValue\' };\\nRecord.set(record, \'myOtherProperty\', \'myOtherValue\'); // { myProperty: \'myValue\', myOtherProperty: \'myOtherValue\' }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L36"}],"typeParameter":[{"id":1879,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1880,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1881,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1879,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1880,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}},{"id":1882,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry key"}]},"type":{"type":"reference","target":1879,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":1883,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the entry value"}]},"type":{"type":"reference","target":1880,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1879,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1880,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#set"},{"id":1884,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"signatures":[{"id":1885,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the number of entries in the record"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nRecord.size(record); // 2\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L37"}],"typeParameter":[{"id":1886,"name":"D","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"parameters":[{"id":1887,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":1886,"name":"D","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Record#size"},{"id":1888,"name":"values","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"signatures":[{"id":1889,"name":"values","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an iterator over all values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst record = { first: 1, second: 2 };\\nArray.from(Record.entries(record)); // [1, 2]\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L38"}],"typeParameter":[{"id":1890,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1891,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1892,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the record"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":1890,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1891,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1891,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}}],"permalink":"/std/fr/api/core/namespace/Record#values"}],"groups":[{"title":"Functions","children":[1830,1836,1840,1845,1857,1862,1868,1873,1877,1884,1888]}],"categories":[{"title":"Accessor","children":[1862,1884]},{"title":"Constructor","children":[1836,1857]},{"title":"__CATEGORY__","children":[1830,1840,1845,1868,1873,1877,1888]}],"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"permalink":"/std/fr/api/core/namespace/Record","previousId":1770,"nextId":1904},{"id":1904,"name":"Ref","variant":"declaration","kind":4,"flags":{},"children":[{"id":1925,"name":"current","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Current value symbol"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":25,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L25"}],"type":{"type":"literal","value":"current"},"defaultValue":"\'current\'","permalink":"/std/fr/api/core/namespace/Ref#current"},{"id":1905,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"signatures":[{"id":1906,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" has a "},{"kind":"code","text":"`current`"},{"kind":"text","text":" property"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nRef.hasInstance(Ref(123)) // true\\nRef.hasInstance(null)) // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":38,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L38"}],"parameters":[{"id":1907,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":1900,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Ref","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Ref#hasInstance"},{"id":1917,"name":"modify","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1918,"name":"modify","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value using a mapping function that returns the new value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.modify(ref, (current) => current + \'bar\'); // Ref.read(ref) == \'foobar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"typeParameter":[{"id":1919,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1920,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1900,"typeArguments":[{"type":"reference","target":1919,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1921,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapping function that will be applied"}]},"type":{"type":"reflection","declaration":{"id":1922,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"signatures":[{"id":1923,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":87,"character":56,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L87"}],"parameters":[{"id":1924,"name":"current","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1919,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1919,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Ref#modify"},{"id":1908,"name":"read","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"signatures":[{"id":1909,"name":"read","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current ref value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.read(ref); // \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":55,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L55"}],"typeParameter":[{"id":1910,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1911,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1900,"typeArguments":[{"type":"reference","target":1910,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"type":{"type":"reference","target":1910,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Ref#read"},{"id":1912,"name":"write","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"signatures":[{"id":1913,"name":"write","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Change the current value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(\'foo\');\\nRef.write(ref, \'bar\'); // Ref.read(ref) == \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":71,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L71"}],"typeParameter":[{"id":1914,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1915,"name":"ref","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the reference object"}]},"type":{"type":"reference","target":1900,"typeArguments":[{"type":"reference","target":1914,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}},{"id":1916,"name":"newValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the new value to be set"}]},"type":{"type":"reference","target":1914,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/namespace/Ref#write"}],"groups":[{"title":"Variables","children":[1925]},{"title":"Functions","children":[1905,1917,1908,1912]}],"categories":[{"title":"Accessor","children":[1917,1908,1912]},{"title":"Type","children":[1905]},{"title":"__CATEGORY__","children":[1925]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"permalink":"/std/fr/api/core/namespace/Ref","previousId":1829,"nextId":1926},{"id":1926,"name":"Result","variant":"declaration","kind":4,"flags":{},"children":[{"id":2050,"name":"Error","variant":"declaration","kind":256,"flags":{},"children":[{"id":2052,"name":"error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The error value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L89"}],"type":{"type":"reference","target":2053,"name":"E","package":"@w5s/core","qualifiedName":"Result.Error.E","refersToTypeParameter":true}},{"id":2051,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`false`"},{"kind":"text","text":" only for Error objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":85,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L85"}],"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[2052,2051]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":81,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L81"}],"typeParameters":[{"id":2053,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Result#Error"},{"id":2046,"name":"Ok","variant":"declaration","kind":256,"flags":{},"children":[{"id":2047,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" only for Ok objects"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":74,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L74"}],"type":{"type":"literal","value":true}},{"id":2048,"name":"value","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The success value"}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":78,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L78"}],"type":{"type":"reference","target":2049,"name":"V","package":"@w5s/core","qualifiedName":"Result.Ok.V","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2047,2048]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":70,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L70"}],"typeParameters":[{"id":2049,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/namespace/Result#Ok"},{"id":1932,"name":"Error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"signatures":[{"id":1933,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":1934,"name":"Error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L54"}],"typeParameter":[{"id":1935,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1936,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":1935,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1935,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#Error"},{"id":1927,"name":"Ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"signatures":[{"id":1928,"name":"Ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":1929,"name":"Ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L53"}],"typeParameter":[{"id":1930,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1931,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1930,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1930,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#Ok"},{"id":1937,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"signatures":[{"id":1938,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Result`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst square = (num: number): Result<number, \'TestError\'> => Result.Ok(num * num);\\nResult.andThen(Result.Ok(4), square); // Result.Ok(16)\\nResult.andThen(Result.Error(\'TestError\'), square); // Result.Error(\'TestError\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L55"}],"typeParameter":[{"id":1939,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1940,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1941,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1942,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1943,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1939,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1940,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1944,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a value mapping function"}]},"type":{"type":"reflection","declaration":{"id":1945,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"signatures":[{"id":1946,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/andThen.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/andThen.ts#L19"}],"parameters":[{"id":1947,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1939,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1941,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1942,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1941,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":1940,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1942,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}]}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#andThen"},{"id":1948,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"signatures":[{"id":1949,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1691,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.get(x);// Option.Some(\'foo\')\\n\\nlet x = Error(\'foo\');\\nResult.get(x);// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1950,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1951,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1950,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1743,"typeArguments":[{"type":"reference","target":1950,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1952,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"parameters":[{"id":1953,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1742,"name":"Option.None","package":"@w5s/core"}},{"id":1954,"name":"get","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L56"}],"typeParameter":[{"id":1955,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1956,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1955,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1955,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#get"},{"id":1957,"name":"getError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"signatures":[{"id":1958,"name":"getError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@link","text":"Option.None","target":1691,"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getError(x);// Option.None\\n\\nlet x = Error(\'foo\');\\nResult.getError(x);// Option.Some(\'foo\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1959,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1960,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":1959,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1743,"typeArguments":[{"type":"reference","target":1959,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option.Some","package":"@w5s/core"}},{"id":1961,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"parameters":[{"id":1962,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1742,"name":"Option.None","package":"@w5s/core"}},{"id":1963,"name":"getError","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":57,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L57"}],"typeParameter":[{"id":1964,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1965,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":1964,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1964,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#getError"},{"id":1966,"name":"getOrElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"signatures":[{"id":1967,"name":"getOrElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":", "},{"kind":"code","text":"`getDefaultValue()`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrElse(x, () => \'bar\');// \'bar\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L58"}],"typeParameter":[{"id":1968,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1969,"name":"VDefault","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1970,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1968,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}},{"id":1971,"name":"getDefaultValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns default value"}]},"type":{"type":"reflection","declaration":{"id":1972,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"signatures":[{"id":1973,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/getOrElse.ts","line":19,"character":82,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/getOrElse.ts#L19"}],"type":{"type":"reference","target":1969,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1968,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1969,"name":"VDefault","package":"@w5s/core","refersToTypeParameter":true}]}}],"permalink":"/std/fr/api/core/namespace/Result#getOrElse"},{"id":1974,"name":"getOrThrow","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"signatures":[{"id":1975,"name":"getOrThrow","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":", throw "},{"kind":"code","text":"`error`"},{"kind":"text","text":" if "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":".\\n\\n **\u26a0 Impure function that may throw an error, its use is generally discouraged.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nResult.getOrThrow(x);// \'foo\'\\n\\nlet x = Error(\'foo\');\\nResult.getOrThrow(x);// throw \'error\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":59,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L59"}],"typeParameter":[{"id":1976,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1977,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1976,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":1976,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Result#getOrThrow"},{"id":1978,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"signatures":[{"id":1979,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nResult.hasInstance(null); // === false\\nResult.hasInstance(Result.Ok(null)); // === true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L60"}],"parameters":[{"id":1980,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"Result","package":"@w5s/core"}}}],"permalink":"/std/fr/api/core/namespace/Result#hasInstance"},{"id":1981,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"signatures":[{"id":1982,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(Result.isError(x));// false\\n\\nlet x = Error(\'foo\');\\nconsole.log(Result.isError(x));// true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":61,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L61"}],"typeParameter":[{"id":1983,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1984,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1985,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1983,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1984,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2050,"typeArguments":[{"type":"reference","target":1984,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Error","package":"@w5s/core","qualifiedName":"Result.Error"}}}],"permalink":"/std/fr/api/core/namespace/Result#isError"},{"id":1986,"name":"isOk","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"signatures":[{"id":1987,"name":"isOk","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if "},{"kind":"code","text":"`anyValue`"},{"kind":"text","text":" is "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nlet x = Ok(\'foo\');\\nconsole.log(isOk(x));// true\\n\\nlet x = Error(\'foo\');\\nconsole.log(isOk(x));// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":62,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L62"}],"typeParameter":[{"id":1988,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":1989,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1990,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to tested"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1988,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1989,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2046,"typeArguments":[{"type":"reference","target":1988,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ok","package":"@w5s/core","qualifiedName":"Result.Ok"}}}],"permalink":"/std/fr/api/core/namespace/Result#isOk"},{"id":1991,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"signatures":[{"id":1992,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<ValueFrom, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<ValueTo, Error>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Ok(\'foo\');\\nResult.map(result, (value) => `${value}_bar`));// Ok(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L63"}],"typeParameter":[{"id":1993,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":1994,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":1995,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1996,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1993,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1995,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":1997,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":1998,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"signatures":[{"id":1999,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/map.ts","line":17,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/map.ts#L17"}],"parameters":[{"id":2000,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1993,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1994,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":1994,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1995,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#map"},{"id":2001,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"signatures":[{"id":2002,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Result<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Result<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":" value, leaving a "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":" value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst result = Error(\'foo\');\\nResult.mapError(result, (value) => `${value}_bar`));// Error(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L64"}],"typeParameter":[{"id":2003,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":2004,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2005,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2006,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2003,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2004,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":2007,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error  mapper function"}]},"type":{"type":"reflection","declaration":{"id":2008,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"signatures":[{"id":2009,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/mapError.ts","line":17,"character":68,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/mapError.ts#L17"}],"parameters":[{"id":2010,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2004,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2005,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2003,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2005,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#mapError"},{"id":2011,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"signatures":[{"id":2012,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the result is "},{"kind":"inline-tag","tag":"@link","text":"Result.Error","target":1932,"tsLinkText":""},{"kind":"text","text":", otherwise returns the "},{"kind":"inline-tag","tag":"@link","text":"Result.Ok","target":1927,"tsLinkText":""},{"kind":"text","text":" value of self.\\nThis function can be used for control flow based on result values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst handleError = (message: string) => Result.Ok(message + \'_handled\');\\nResult.orElse(Result.Error(\'TestError\'), square); // Result.Ok(\'TestError_handled\')\\nResult.orElse(Result.Ok(4), square); // Result.Ok(4)\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L65"}],"typeParameter":[{"id":2013,"name":"VFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2014,"name":"EFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":2015,"name":"VTo","variant":"typeParam","kind":131072,"flags":{}},{"id":2016,"name":"ETo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2017,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Result object"}]},"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2013,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2014,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}},{"id":2018,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a error mapping function"}]},"type":{"type":"reflection","declaration":{"id":2019,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"signatures":[{"id":2020,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/orElse.ts","line":19,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/orElse.ts#L19"}],"parameters":[{"id":2021,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2014,"name":"EFrom","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2015,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2016,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"union","types":[{"type":"reference","target":2013,"name":"VFrom","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2015,"name":"VTo","package":"@w5s/core","refersToTypeParameter":true}]},{"type":"reference","target":2016,"name":"ETo","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#orElse"},{"id":2022,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"signatures":[{"id":2023,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`Ok(block())`"},{"kind":"text","text":". If an error was thrown then it returns "},{"kind":"code","text":"`Error(onError(<<thrown error>>))`"},{"kind":"text","text":" instead"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class InvalidURLError extends Error {}\\nconst result = Result.tryCall(\\n () => new URL(\'my/url\'),\\n (error) => new InvalidURLError()\\n);\\n\\nconst class FetchError extends Error {}\\nconst result = Result.tryCall(\\n () => fetch(\'my/url\'),\\n () => new FetchError()\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":2024,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":2025,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2026,"name":"block","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":2027,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":2028,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":2024,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}},{"id":2029,"name":"onError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":2030,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"signatures":[{"id":2031,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":28,"character":64,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L28"}],"parameters":[{"id":2032,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":2025,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2024,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2025,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Promise","package":"typescript"}},{"id":2033,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L66"}],"typeParameter":[{"id":2034,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":2035,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2036,"name":"block","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2037,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":2038,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":2034,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}},{"id":2039,"name":"onError","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2040,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"signatures":[{"id":2041,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Result/tryCall.ts","line":29,"character":67,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result/tryCall.ts#L29"}],"parameters":[{"id":2042,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Exclude"},"typeArguments":[{"type":"reference","target":2035,"name":"E","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","package":"typescript"}],"name":"Exclude","package":"typescript"}}]}}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2034,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2035,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Result#tryCall"}],"groups":[{"title":"Interfaces","children":[2050,2046]},{"title":"Functions","children":[1932,1927,1937,1948,1957,1966,1974,1978,1981,1986,1991,2001,2011,2022]}],"categories":[{"title":"Accessor","children":[1948,1957,1966,1974]},{"title":"Constructor","children":[1932,1927]},{"title":"Type","children":[1978,1981,1986]},{"title":"__CATEGORY__","children":[2050,2046,1937,1991,2001,2011,2022]}],"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"permalink":"/std/fr/api/core/namespace/Result","previousId":1904,"nextId":2054},{"id":2054,"name":"String","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate "},{"kind":"code","text":"`string`"}]},"children":[{"id":2181,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770,"permalink":"/std/fr/api/core/namespace/String#typeName"},{"id":2188,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2189,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2190,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2191,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2192,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2193,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2194,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/String#__inspect__"},{"id":2171,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":2172,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":2173,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2174,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2175,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#!="},{"id":2135,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":2136,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":2137,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2138,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2139,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#<"},{"id":2130,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":2131,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":2132,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2133,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2134,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#<="},{"id":2176,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":2177,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":2178,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2179,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2180,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#=="},{"id":2145,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":2146,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":2147,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2148,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2149,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#>"},{"id":2140,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":2141,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":2142,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2143,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2144,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#>="},{"id":2195,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2196,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2197,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2198,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2199,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#__decode__"},{"id":2200,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2201,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2202,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2203,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/core/namespace/String#__encode__"},{"id":2204,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2205,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2206,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#__schema__"},{"id":2185,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2186,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2187,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#asInstance"},{"id":2207,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2208,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2209,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2210,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#asString"},{"id":2055,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"signatures":[{"id":2056,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the character at the "},{"kind":"code","text":"`index`"},{"kind":"text","text":" position"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst string = \'bar\';\\nString.at(string, 1) // Option.Some(\'a\')\\nString.at(string, -1) //  Option.Some(\'r\') i.e. the last\\nString.at(string, 99) // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L27"}],"parameters":[{"id":2057,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2058,"name":"index","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The zero based position"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":932,"name":"Char","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#at"},{"id":2160,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":2161,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":2162,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2163,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2164,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2165,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#clamp"},{"id":2125,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":2126,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":2127,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2128,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2129,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#compare"},{"id":2059,"name":"concat","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"signatures":[{"id":2060,"name":"concat","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.concat([\'a\', \'b\', \'c\']) // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L28"}],"parameters":[{"id":2061,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#concat"},{"id":2062,"name":"endsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"signatures":[{"id":2063,"name":"endsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string ends with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.endsWith(\'abc\', \'bc\'); // true\\nString.endsWith(\'abc\', \'ab\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L29"}],"parameters":[{"id":2064,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2065,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#endsWith"},{"id":2166,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":2167,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":2168,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2169,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2170,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#equals"},{"id":2182,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2183,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2184,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/fr/api/core/namespace/String#hasInstance"},{"id":2066,"name":"includes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"signatures":[{"id":2067,"name":"includes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.includes(\'abc\', \'ab\'); // true\\nString.includes(\'abc\', \'absent\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L30"}],"parameters":[{"id":2068,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2069,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#includes"},{"id":2070,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"signatures":[{"id":2071,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the first occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.indexOf(\'aa\', \'a\'); // Option.Some(0)\\nString.indexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.indexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L31"}],"parameters":[{"id":2072,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2073,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2074,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#indexOf"},{"id":2075,"name":"isEmpty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"signatures":[{"id":2076,"name":"isEmpty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if the size of the array is 0"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.isEmpty(\'\');// true\\nString.isEmpty(\'abc\');// false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L32"}],"parameters":[{"id":2077,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#isEmpty"},{"id":2078,"name":"join","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"signatures":[{"id":2079,"name":"join","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Joins the given array of strings."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.join(\'|\', [\'a\', \'b\', \'c\']) // \'a|b|c\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L33"}],"parameters":[{"id":2080,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the separator"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2081,"name":"parts","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#join"},{"id":2082,"name":"lastIndexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"signatures":[{"id":2083,"name":"lastIndexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the index of the last occurrence of "},{"kind":"code","text":"`searchString`"},{"kind":"text","text":" in a string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.lastIndexOf(\'aa\', \'a\'); // Option.Some(1)\\nString.lastIndexOf(\'aaa\', \'a\', 1); // Option.Some(1)\\nString.lastIndexOf(\'ab\', \'absent\'); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L34"}],"parameters":[{"id":2084,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2085,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2086,"name":"fromIndex","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The character index at which to begin the search. If fromIndex is omitted, the search starts at index 0."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#lastIndexOf"},{"id":2155,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":2156,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":2157,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2158,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2159,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#max"},{"id":2150,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":2151,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":2152,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2153,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2154,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#min"},{"id":2087,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"signatures":[{"id":2088,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new string from all parts passed as arguments"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.of(\'a\', \'b\', \'c\') // \'abc\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":35,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L35"}],"parameters":[{"id":2089,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"a list of parts"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#of"},{"id":2090,"name":"padEnd","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"signatures":[{"id":2091,"name":"padEnd","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padEnd(\'abc\', 9, \'1234\'); // \'abcd1234\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":36,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L36"}],"parameters":[{"id":2092,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2093,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":2094,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#padEnd"},{"id":2095,"name":"padStart","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"signatures":[{"id":2096,"name":"padStart","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.padStart(\'abc\', 9, \'1234\'); // \'1234abcd\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L37"}],"parameters":[{"id":2097,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to pad."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2098,"name":"maxLength","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The length of the resulting string once the current string has been padded.\\n       If this parameter is smaller than the current string\'s length, the current string will be returned as it is."}]},"type":{"type":"intrinsic","name":"number"}},{"id":2099,"name":"fillString","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The string to pad the current string with.\\n       If this string is too long, it will be truncated and the left-most part will be applied.\\n       The default value for this parameter is \\" \\" (U+0020)."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#padStart"},{"id":2100,"name":"size","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"signatures":[{"id":2101,"name":"size","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the length of the string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.size(\'\') // 0\\nString.size(\'foo bar\') // 6\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L38"}],"parameters":[{"id":2102,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1392,"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/String#size"},{"id":2103,"name":"split","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"signatures":[{"id":2104,"name":"split","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Split a string into substrings using the specified separator and return them as an array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.split(\'a|b|c\', \'|\'); // [\'a\', \'b\', \'c\']\\nString.split(\'a|b|c\', \'|\', 2); // [\'a\', \'b\']\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L39"}],"parameters":[{"id":2105,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2106,"name":"separator","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reflection","declaration":{"id":2107,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2108,"name":"[split]","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"signatures":[{"id":2109,"name":"[split]","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}],"parameters":[{"id":2110,"name":"string","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2111,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"groups":[{"title":"Methods","children":[2108]}],"sources":[{"fileName":"packages/core/src/String/split.ts","line":15,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/split.ts#L15"}]}}]}},{"id":2112,"name":"limit","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value used to limit the number of elements returned in the array."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/std/fr/api/core/namespace/String#split"},{"id":2113,"name":"startsWith","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"signatures":[{"id":2114,"name":"startsWith","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if string starts with searchString"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nString.startsWith(\'abc\', \'ab\'); // true\\nString.startsWith(\'abc\', \'bc\'); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":40,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L40"}],"parameters":[{"id":2115,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2116,"name":"searchString","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The string to search"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/core/namespace/String#startsWith"},{"id":2117,"name":"truncate","variant":"declaration","kind":64,"flags":{},"children":[{"id":2121,"name":"defaultOptions","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}],"type":{"type":"reflection","declaration":{"id":2122,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2123,"name":"ellipsis","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":44,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L44"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'...\'"},{"id":2124,"name":"maxLength","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":45,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L45"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[2123,2124]}],"sources":[{"fileName":"packages/core/src/String/truncate.ts","line":43,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String/truncate.ts#L43"}]}},"defaultValue":"..."}],"groups":[{"title":"Properties","children":[2121]}],"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"signatures":[{"id":2118,"name":"truncate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Truncates a string to a specified length, adding \'...\' if necessary."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntruncate(\'Hello World\', { maxLength: 1 }); // \'Hello World\'\\ntruncate(\'Hello World\', { maxLength: 5 }); // \'He...\'\\ntruncate(\'Hello World\', { maxLength: 5, ellipsis: \'[...]\' }); // \'He[...]\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/String.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L41"}],"parameters":[{"id":2119,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The input string to truncate. If not provided or null/undefined,\\n                          will return the default truncation string (\'...\')"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2120,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"An optional object containing additional options for the truncation."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/String/truncate.ts","qualifiedName":"truncate.Options"},"name":"Options","package":"@w5s/core","qualifiedName":"truncate.Options"},"defaultValue":"truncate.defaultOptions"}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/core/namespace/String#truncate"}],"groups":[{"title":"References","children":[2181]},{"title":"Variables","children":[2188]},{"title":"Functions","children":[2171,2135,2130,2176,2145,2140,2195,2200,2204,2185,2207,2055,2160,2125,2059,2062,2166,2182,2066,2070,2075,2078,2082,2155,2150,2087,2090,2095,2100,2103,2113,2117]}],"categories":[{"title":"Accessor","children":[2055,2100]},{"title":"Codec","children":[2195,2200,2204]},{"title":"Combinator","children":[2059,2078]},{"title":"Comparator","children":[2171,2135,2130,2176,2145,2140,2160,2125,2166,2155,2150]},{"title":"Constructor","children":[2087]},{"title":"Formatting","children":[2207]},{"title":"Predicate","children":[2062,2066,2075,2113]},{"title":"Type","children":[2188,2185,2182]},{"title":"__CATEGORY__","children":[2181,2070,2082,2090,2095,2103,2117]}],"sources":[{"fileName":"packages/core/src/String.ts","line":24,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/String.ts#L24"}],"permalink":"/std/fr/api/core/namespace/String","previousId":1926,"nextId":2217},{"id":2217,"name":"Struct","variant":"declaration","kind":4,"flags":{},"children":[{"id":2278,"name":"DefineParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":2292,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2293,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2294,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2295,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},{"id":2296,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2297,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2298,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":2306,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2307,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2308,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2309,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.hasInstance"}},{"id":2279,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":90,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L90"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":2284,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2285,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2286,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2287,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2288,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__decode__"}},{"id":2280,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2281,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2282,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2283,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__encode__"}},{"id":2289,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2290,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2291,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__schema__"}},{"id":2299,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2300,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2301,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":2302,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2303,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2304,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2305,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asString"}}],"groups":[{"title":"Properties","children":[2292,2306,2279]},{"title":"Methods","children":[2284,2280,2289,2299,2302]}],"categories":[{"title":"Codec","children":[2284,2280,2289]},{"title":"Formatting","children":[2302]},{"title":"Type","children":[2292,2299]},{"title":"__CATEGORY__","children":[2306,2279]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}],"typeParameters":[{"id":2310,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2211,"typeArguments":[{"type":"reflection","declaration":{"id":2311,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2312,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2312]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":88,"character":57,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L88"}]}}],"name":"Struct","package":"@w5s/core"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":2678,"typeArguments":[{"type":"reference","target":2310,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.DefineParameters.Model","refersToTypeParameter":true}],"name":"Type.Parameters","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/fr/api/core/namespace/Struct#DefineParameters"},{"id":2231,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2269,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2270,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L39"}],"signatures":[{"id":2271,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L39"}],"parameters":[{"id":2272,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2229,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":810,"name":"Callable.__call__"}},{"id":2246,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2247,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2248,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2249,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},{"id":2250,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2251,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2252,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2719,"name":"Module.__inspect__"}},{"id":2239,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L59"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"_"},"objectType":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"overwrites":{"type":"reference","target":2712,"name":"Module.typeName"}},{"id":2253,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2254,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2255,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2256,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2257,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2727,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2726,"name":"Module.__decode__"}},{"id":2258,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2259,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2260,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2261,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2732,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2731,"name":"Module.__encode__"}},{"id":2262,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2263,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2264,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2736,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2735,"name":"Module.__schema__"}},{"id":2243,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2244,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2245,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2717,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2716,"name":"Module.asInstance"}},{"id":2265,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2266,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2267,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2268,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2739,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2738,"name":"Module.asString"}},{"id":2235,"name":"create","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":53,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L53"}],"signatures":[{"id":2236,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":53,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L53"}],"parameters":[{"id":2237,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2238,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":2229,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]},{"id":2240,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2241,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2242,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2714,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2713,"name":"Module.hasInstance"}}],"groups":[{"title":"Properties","children":[2269,2246,2239]},{"title":"Methods","children":[2253,2258,2262,2243,2265,2235,2240]}],"categories":[{"title":"Callable","children":[2269]},{"title":"Codec","children":[2253,2258,2262]},{"title":"Constructor","children":[2235]},{"title":"Formatting","children":[2265]},{"title":"Type","children":[2246,2239,2243,2240]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":37,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L37"}],"typeParameters":[{"id":2273,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2211,"name":"Struct","package":"@w5s/core"}}],"signatures":[{"id":2274,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":46,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L46"}],"parameters":[{"id":2275,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":2229,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":808,"typeArguments":[{"type":"reflection","declaration":{"id":2232,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":39,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L39"}],"signatures":[{"id":2233,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2234,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2229,"typeArguments":[{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":2273,"name":"Model","package":"@w5s/core","qualifiedName":"Struct.Module.Model","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Struct#Module"},{"id":2229,"name":"Parameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new Struct"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L35"}],"typeParameters":[{"id":2230,"name":"Model","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2230,"name":"Model","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2277,"name":"Struct.type","package":"@w5s/core"}],"name":"Omit","package":"typescript"},"permalink":"/std/fr/api/core/namespace/Struct#Parameters"},{"id":2277,"name":"type","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L64"},{"fileName":"packages/core/src/Struct.ts","line":66,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L66"}],"type":{"type":"query","queryType":{"type":"reference","target":2276,"name":"type","package":"@w5s/core","qualifiedName":"Struct.type"}},"permalink":"/std/fr/api/core/namespace/Struct#type"},{"id":2276,"name":"type","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"The type property discriminator"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L64"},{"fileName":"packages/core/src/Struct.ts","line":66,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L66"}],"type":{"type":"literal","value":"_"},"defaultValue":"\'_\'","permalink":"/std/fr/api/core/namespace/Struct#type"},{"id":2218,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":81,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L81"}],"signatures":[{"id":2219,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new Struct from "},{"kind":"code","text":"`properties`"},{"kind":"text","text":".\\nStruct adds debugging / inspecting abilities"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.define<{ some: boolean }>({ typeName: \'SomeType\' });\\n\\nStruct.create(SomeType, { some: true });// Struct { _: \'SomeType\', some: true }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":81,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L81"}],"typeParameter":[{"id":2220,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2221,"name":"module","variant":"param","kind":32768,"flags":{},"type":{"type":"intersection","types":[{"type":"reference","target":2660,"typeArguments":[{"type":"reference","target":2220,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":704,"typeArguments":[{"type":"reference","target":2220,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}]}},{"id":2222,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2220,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2220,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/namespace/Struct#create"},{"id":2223,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"signatures":[{"id":2224,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Struct`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"Module","target":2231,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Model = Struct<{ [Struct.type]: \'Model\', foo: boolean }>\\nconst Model = Struct.define<Model>({ typeName: \'Model\' });\\n\\nconst instance = Model({ foo: true }); // { _: \'Model\', foo: true }\\nModel.typeName === \'Model\' // true\\nModel.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"typeParameter":[{"id":2225,"name":"Model","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":2226,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2227,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":48,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2227]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":108,"character":46,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L108"}]}}],"name":"Readonly","package":"typescript"}}],"parameters":[{"id":2228,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2278,"typeArguments":[{"type":"reference","target":2225,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"DefineParameters","package":"@w5s/core","qualifiedName":"Struct.DefineParameters"}}],"type":{"type":"reference","target":2231,"typeArguments":[{"type":"reference","target":2225,"name":"Model","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Struct.Module"}}],"permalink":"/std/fr/api/core/namespace/Struct#define"}],"groups":[{"title":"Interfaces","children":[2278,2231]},{"title":"Type Aliases","children":[2229,2277]},{"title":"Variables","children":[2276]},{"title":"Functions","children":[2218,2223]}],"categories":[{"title":"Constructor","children":[2231]},{"title":"__CATEGORY__","children":[2278,2229,2277,2276,2218,2223]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L20"},{"fileName":"packages/core/src/Struct.ts","line":31,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L31"}],"permalink":"/std/fr/api/core/namespace/Struct","previousId":2054,"nextId":2313},{"id":2313,"name":"Symbol","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of well known symbols"}]},"children":[{"id":2343,"name":"asyncDispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":2342,"name":"asyncDispose","package":"@w5s/core","qualifiedName":"Symbol.asyncDispose"}},"permalink":"/std/fr/api/core/namespace/Symbol#asyncDispose"},{"id":2317,"name":"asyncIterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":2316,"name":"asyncIterator","package":"@w5s/core","qualifiedName":"Symbol.asyncIterator"}},"permalink":"/std/fr/api/core/namespace/Symbol#asyncIterator"},{"id":2345,"name":"call","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"query","queryType":{"type":"reference","target":2344,"name":"call","package":"@w5s/core","qualifiedName":"Symbol.call"}},"permalink":"/std/fr/api/core/namespace/Symbol#call"},{"id":2351,"name":"decode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"query","queryType":{"type":"reference","target":2350,"name":"decode","package":"@w5s/core","qualifiedName":"Symbol.decode"}},"permalink":"/std/fr/api/core/namespace/Symbol#decode"},{"id":2341,"name":"dispose","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":2340,"name":"dispose","package":"@w5s/core","qualifiedName":"Symbol.dispose"}},"permalink":"/std/fr/api/core/namespace/Symbol#dispose"},{"id":2349,"name":"encode","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"query","queryType":{"type":"reference","target":2348,"name":"encode","package":"@w5s/core","qualifiedName":"Symbol.encode"}},"permalink":"/std/fr/api/core/namespace/Symbol#encode"},{"id":2355,"name":"enumKeys","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"query","queryType":{"type":"reference","target":2354,"name":"enumKeys","package":"@w5s/core","qualifiedName":"Symbol.enumKeys"}},"permalink":"/std/fr/api/core/namespace/Symbol#enumKeys"},{"id":2319,"name":"hasInstance","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":2318,"name":"hasInstance","package":"@w5s/core","qualifiedName":"Symbol.hasInstance"}},"permalink":"/std/fr/api/core/namespace/Symbol#hasInstance"},{"id":2347,"name":"inspect","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"query","queryType":{"type":"reference","target":2346,"name":"inspect","package":"@w5s/core","qualifiedName":"Symbol.inspect"}},"permalink":"/std/fr/api/core/namespace/Symbol#inspect"},{"id":2321,"name":"isConcatSpreadable","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":2320,"name":"isConcatSpreadable","package":"@w5s/core","qualifiedName":"Symbol.isConcatSpreadable"}},"permalink":"/std/fr/api/core/namespace/Symbol#isConcatSpreadable"},{"id":2315,"name":"iterator","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":2314,"name":"iterator","package":"@w5s/core","qualifiedName":"Symbol.iterator"}},"permalink":"/std/fr/api/core/namespace/Symbol#iterator"},{"id":2323,"name":"match","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":2322,"name":"match","package":"@w5s/core","qualifiedName":"Symbol.match"}},"permalink":"/std/fr/api/core/namespace/Symbol#match"},{"id":2325,"name":"matchAll","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":2324,"name":"matchAll","package":"@w5s/core","qualifiedName":"Symbol.matchAll"}},"permalink":"/std/fr/api/core/namespace/Symbol#matchAll"},{"id":2327,"name":"replace","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":2326,"name":"replace","package":"@w5s/core","qualifiedName":"Symbol.replace"}},"permalink":"/std/fr/api/core/namespace/Symbol#replace"},{"id":2357,"name":"run","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"query","queryType":{"type":"reference","target":2356,"name":"run","package":"@w5s/core","qualifiedName":"Symbol.run"}},"permalink":"/std/fr/api/core/namespace/Symbol#run"},{"id":2353,"name":"schema","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"query","queryType":{"type":"reference","target":2352,"name":"schema","package":"@w5s/core","qualifiedName":"Symbol.schema"}},"permalink":"/std/fr/api/core/namespace/Symbol#schema"},{"id":2329,"name":"search","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":2328,"name":"search","package":"@w5s/core","qualifiedName":"Symbol.search"}},"permalink":"/std/fr/api/core/namespace/Symbol#search"},{"id":2331,"name":"species","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":2330,"name":"species","package":"@w5s/core","qualifiedName":"Symbol.species"}},"permalink":"/std/fr/api/core/namespace/Symbol#species"},{"id":2333,"name":"split","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":2332,"name":"split","package":"@w5s/core","qualifiedName":"Symbol.split"}},"permalink":"/std/fr/api/core/namespace/Symbol#split"},{"id":2337,"name":"toPrimitive","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":2336,"name":"toPrimitive","package":"@w5s/core","qualifiedName":"Symbol.toPrimitive"}},"permalink":"/std/fr/api/core/namespace/Symbol#toPrimitive"},{"id":2335,"name":"toStringTag","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":2334,"name":"toStringTag","package":"@w5s/core","qualifiedName":"Symbol.toStringTag"}},"permalink":"/std/fr/api/core/namespace/Symbol#toStringTag"},{"id":2339,"name":"unscopables","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":2338,"name":"unscopables","package":"@w5s/core","qualifiedName":"Symbol.unscopables"}},"permalink":"/std/fr/api/core/namespace/Symbol#unscopables"},{"id":2342,"name":"asyncDispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to asynchronously release resources held by an object. Called by the semantics of the await using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":100,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L100"},{"fileName":"packages/core/src/Symbol.ts","line":101,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L101"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.asyncDispose"},"name":"GlobalSymbol.asyncDispose","package":"typescript","qualifiedName":"SymbolConstructor.asyncDispose","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#asyncDispose"},{"id":2316,"name":"asyncIterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default async iterator for an object. Called by the semantics of the for-await-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L22"},{"fileName":"packages/core/src/Symbol.ts","line":23,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L23"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","qualifiedName":"SymbolConstructor.asyncIterator"},"name":"GlobalSymbol.asyncIterator","package":"typescript","qualifiedName":"SymbolConstructor.asyncIterator","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#asyncIterator"},{"id":2344,"name":"call","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Call signature"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":110,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L110"},{"fileName":"packages/core/src/Symbol.ts","line":111,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L111"}],"type":{"type":"literal","value":"__call__"},"defaultValue":"\'__call__\'","permalink":"/std/fr/api/core/namespace/Symbol#call"},{"id":2350,"name":"decode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Decode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":933}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":134,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L134"},{"fileName":"packages/core/src/Symbol.ts","line":135,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L135"}],"type":{"type":"literal","value":"__decode__"},"defaultValue":"\'__decode__\'","permalink":"/std/fr/api/core/namespace/Symbol#decode"},{"id":2340,"name":"dispose","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that is used to release resources held by an object. Called by the semantics of the using statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":94,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L94"},{"fileName":"packages/core/src/Symbol.ts","line":95,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L95"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","qualifiedName":"SymbolConstructor.dispose"},"name":"GlobalSymbol.dispose","package":"typescript","qualifiedName":"SymbolConstructor.dispose","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#dispose"},{"id":2348,"name":"encode","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":933}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":126,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L126"},{"fileName":"packages/core/src/Symbol.ts","line":127,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L127"}],"type":{"type":"literal","value":"__encode__"},"defaultValue":"\'__encode__\'","permalink":"/std/fr/api/core/namespace/Symbol#encode"},{"id":2354,"name":"enumKeys","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Enum keys"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":148,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L148"},{"fileName":"packages/core/src/Symbol.ts","line":149,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L149"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#enumKeys"},{"id":2318,"name":"hasInstance","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that determines if a constructor object recognizes an object as one of the constructor\u2019s instances. Called by the semantics of the instanceof operator."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":28,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L28"},{"fileName":"packages/core/src/Symbol.ts","line":29,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L29"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.hasInstance"},"name":"GlobalSymbol.hasInstance","package":"typescript","qualifiedName":"SymbolConstructor.hasInstance","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#hasInstance"},{"id":2346,"name":"inspect","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Encode property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Type","target":2453}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":118,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L118"},{"fileName":"packages/core/src/Symbol.ts","line":119,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L119"}],"type":{"type":"literal","value":"__inspect__"},"defaultValue":"\'__inspect__\'","permalink":"/std/fr/api/core/namespace/Symbol#inspect"},{"id":2320,"name":"isConcatSpreadable","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A Boolean value that if true indicates that an object should flatten to its array elements by Array.prototype.concat."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":34,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L34"},{"fileName":"packages/core/src/Symbol.ts","line":35,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L35"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.isConcatSpreadable"},"name":"GlobalSymbol.isConcatSpreadable","package":"typescript","qualifiedName":"SymbolConstructor.isConcatSpreadable","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#isConcatSpreadable"},{"id":2314,"name":"iterator","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that returns the default iterator for an object. Called by the semantics of the for-of statement."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":16,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L16"},{"fileName":"packages/core/src/Symbol.ts","line":17,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L17"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"SymbolConstructor.iterator"},"name":"GlobalSymbol.iterator","package":"typescript","qualifiedName":"SymbolConstructor.iterator","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#iterator"},{"id":2322,"name":"match","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.match method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":40,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L40"},{"fileName":"packages/core/src/Symbol.ts","line":41,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L41"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.match"},"name":"GlobalSymbol.match","package":"typescript","qualifiedName":"SymbolConstructor.match","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#match"},{"id":2324,"name":"matchAll","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that matches the regular expression against a string. Called by the String.prototype.matchAll method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":46,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L46"},{"fileName":"packages/core/src/Symbol.ts","line":47,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L47"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.matchAll"},"name":"GlobalSymbol.matchAll","package":"typescript","qualifiedName":"SymbolConstructor.matchAll","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#matchAll"},{"id":2326,"name":"replace","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":52,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L52"},{"fileName":"packages/core/src/Symbol.ts","line":53,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L53"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.replace"},"name":"GlobalSymbol.replace","package":"typescript","qualifiedName":"SymbolConstructor.replace","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#replace"},{"id":2356,"name":"run","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Task run effect"}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":154,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L154"},{"fileName":"packages/core/src/Symbol.ts","line":155,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L155"}],"type":{"type":"typeOperator","operator":"unique","target":{"type":"intrinsic","name":"symbol"}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#run"},{"id":2352,"name":"schema","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Schema property symbol"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Codec","target":933}]}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":142,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L142"},{"fileName":"packages/core/src/Symbol.ts","line":143,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L143"}],"type":{"type":"literal","value":"__schema__"},"defaultValue":"\'__schema__\'","permalink":"/std/fr/api/core/namespace/Symbol#schema"},{"id":2328,"name":"search","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that replaces matched substrings of a string. Called by the String.prototype.replace method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":58,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L58"},{"fileName":"packages/core/src/Symbol.ts","line":59,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L59"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.search"},"name":"GlobalSymbol.search","package":"typescript","qualifiedName":"SymbolConstructor.search","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#search"},{"id":2330,"name":"species","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A function valued property that is the constructor function that is used to create derived objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":64,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L64"},{"fileName":"packages/core/src/Symbol.ts","line":65,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L65"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.species"},"name":"GlobalSymbol.species","package":"typescript","qualifiedName":"SymbolConstructor.species","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#species"},{"id":2332,"name":"split","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A regular expression method that splits a string at the indices that match the regular expression. Called by the String.prototype.split method."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":70,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L70"},{"fileName":"packages/core/src/Symbol.ts","line":71,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L71"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.split"},"name":"GlobalSymbol.split","package":"typescript","qualifiedName":"SymbolConstructor.split","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#split"},{"id":2336,"name":"toPrimitive","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A method that converts an object to a corresponding primitive value. Called by the ToPrimitive abstract operation."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":82,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L82"},{"fileName":"packages/core/src/Symbol.ts","line":83,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L83"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toPrimitive"},"name":"GlobalSymbol.toPrimitive","package":"typescript","qualifiedName":"SymbolConstructor.toPrimitive","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#toPrimitive"},{"id":2334,"name":"toStringTag","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"A String value that is used in the creation of the default string description of an object. Called by the built-in method Object.prototype.toString."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":76,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L76"},{"fileName":"packages/core/src/Symbol.ts","line":77,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L77"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.toStringTag"},"name":"GlobalSymbol.toStringTag","package":"typescript","qualifiedName":"SymbolConstructor.toStringTag","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#toStringTag"},{"id":2338,"name":"unscopables","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"An Object whose truthy properties are properties that are excluded from the \'with\' environment bindings of the associated objects."}]},"sources":[{"fileName":"packages/core/src/Symbol.ts","line":88,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L88"},{"fileName":"packages/core/src/Symbol.ts","line":89,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L89"}],"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","qualifiedName":"SymbolConstructor.unscopables"},"name":"GlobalSymbol.unscopables","package":"typescript","qualifiedName":"SymbolConstructor.unscopables","preferValues":true}},"defaultValue":"...","permalink":"/std/fr/api/core/namespace/Symbol#unscopables"}],"groups":[{"title":"Type Aliases","children":[2343,2317,2345,2351,2341,2349,2355,2319,2347,2321,2315,2323,2325,2327,2357,2353,2329,2331,2333,2337,2335,2339]},{"title":"Variables","children":[2342,2316,2344,2350,2340,2348,2354,2318,2346,2320,2314,2322,2324,2326,2356,2352,2328,2330,2332,2336,2334,2338]}],"sources":[{"fileName":"packages/core/src/Symbol.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Symbol.ts#L12"}],"permalink":"/std/fr/api/core/namespace/Symbol","categories":[],"previousId":2217,"nextId":2358},{"id":2358,"name":"Tag","variant":"declaration","kind":4,"flags":{},"children":[{"id":2399,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2409,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2712,"name":"Module.typeName"},"target":770},{"id":2439,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2440,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2441,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2442,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}},"inheritedFrom":{"type":"reference","target":810,"name":"Callable.__call__"}},{"id":2416,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2417,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2418,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2419,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},{"id":2420,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2421,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2422,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2719,"name":"Module.__inspect__"}},{"id":2423,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2424,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2425,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2426,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2427,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2727,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2726,"name":"Module.__decode__"}},{"id":2428,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2429,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2430,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2431,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2732,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2731,"name":"Module.__encode__"}},{"id":2432,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2433,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2434,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2736,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2735,"name":"Module.__schema__"}},{"id":2413,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2414,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2415,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2717,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2716,"name":"Module.asInstance"}},{"id":2435,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2436,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2437,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2438,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2739,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2738,"name":"Module.asString"}},{"id":2410,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2411,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2412,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2714,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2713,"name":"Module.hasInstance"}},{"id":2406,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2407,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2408,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}]},{"id":2403,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2404,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2405,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}],"groups":[{"title":"References","children":[2409]},{"title":"Properties","children":[2439,2416]},{"title":"Methods","children":[2423,2428,2432,2413,2435,2410,2406,2403]}],"categories":[{"title":"Callable","children":[2439]},{"title":"Codec","children":[2423,2428,2432]},{"title":"Formatting","children":[2435]},{"title":"Type","children":[2416,2413,2410]},{"title":"__CATEGORY__","children":[2409,2406,2403]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"typeParameters":[{"id":2443,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2444,"name":"To","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"signatures":[{"id":2445,"name":"Module","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":28,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L28"}],"parameters":[{"id":2446,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}],"extendedTypes":[{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":808,"typeArguments":[{"type":"reflection","declaration":{"id":2400,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2401,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2402,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2443,"name":"From","package":"@w5s/core","qualifiedName":"Tag.Module.From","refersToTypeParameter":true}}],"type":{"type":"reference","target":2444,"name":"To","package":"@w5s/core","qualifiedName":"Tag.Module.To","refersToTypeParameter":true}}]}}],"name":"Callable","package":"@w5s/core"}],"permalink":"/std/fr/api/core/namespace/Tag#Module"},{"id":2366,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2372,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2373,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2374,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2375,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}},{"id":2376,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2377,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2378,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2684,"name":"Parameters.__inspect__"}},{"id":2367,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2368,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2369,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2370,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}},"inheritedFrom":{"type":"reference","target":2679,"name":"Parameters.hasInstance"}},{"id":2371,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2683,"name":"Parameters.typeName"}},{"id":2382,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2383,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2384,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2385,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2386,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2695,"name":"Parameters.__decode__"}}],"inheritedFrom":{"type":"reference","target":2694,"name":"Parameters.__decode__"}},{"id":2387,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2388,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2389,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2390,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2700,"name":"Parameters.__encode__"}}],"inheritedFrom":{"type":"reference","target":2699,"name":"Parameters.__encode__"}},{"id":2391,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2392,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2393,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2704,"name":"Parameters.__schema__"}}],"inheritedFrom":{"type":"reference","target":2703,"name":"Parameters.__schema__"}},{"id":2379,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2380,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2381,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2692,"name":"Parameters.asInstance"}}],"inheritedFrom":{"type":"reference","target":2691,"name":"Parameters.asInstance"}},{"id":2394,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2395,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2396,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2397,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2707,"name":"Parameters.asString"}}],"inheritedFrom":{"type":"reference","target":2706,"name":"Parameters.asString"}}],"groups":[{"title":"Properties","children":[2372,2367,2371]},{"title":"Methods","children":[2382,2387,2391,2379,2394]}],"categories":[{"title":"Codec","children":[2382,2387,2391]},{"title":"Formatting","children":[2394]},{"title":"Type","children":[2372,2371,2379]},{"title":"__CATEGORY__","children":[2367]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":19,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L19"}],"typeParameters":[{"id":2398,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2678,"typeArguments":[{"type":"reference","target":2398,"name":"T","package":"@w5s/core","qualifiedName":"Tag.Parameters.T","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}],"permalink":"/std/fr/api/core/namespace/Tag#Parameters"},{"id":2359,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"signatures":[{"id":2360,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Tag module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Foo = string & Tag<\'Foo\'>;\\nconst Foo = Tag.define<string, Foo>({\\n  typeName: \'Foo\',\\n  hasInstance: (anyValue) => typeof anyValue === \'string\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L16"}],"typeParameter":[{"id":2361,"name":"From","variant":"typeParam","kind":131072,"flags":{}},{"id":2362,"name":"To","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2363,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2366,"typeArguments":[{"type":"reference","target":2362,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Tag.Parameters"}}],"type":{"type":"reference","target":2399,"typeArguments":[{"type":"reference","target":2361,"name":"From","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":2362,"name":"To","package":"@w5s/core","refersToTypeParameter":true}],"name":"Tag.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Tag#define"}],"groups":[{"title":"Interfaces","children":[2399,2366]},{"title":"Functions","children":[2359]}],"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"permalink":"/std/fr/api/core/namespace/Tag","categories":[],"previousId":2313,"nextId":2453},{"id":2453,"name":"Type","variant":"declaration","kind":4,"flags":{},"children":[{"id":2711,"name":"Module","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":2712,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2661,"name":"Type.typeName"},"target":770},{"id":2719,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2720,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2721,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2722,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},{"id":2723,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2724,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2725,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2668,"name":"Type.__inspect__"}},{"id":2726,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2727,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2728,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2729,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2730,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":956,"name":"Codec.__decode__"}}],"inheritedFrom":{"type":"reference","target":955,"name":"Codec.__decode__"}},{"id":2731,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2732,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2733,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2734,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":961,"name":"Codec.__encode__"}}],"inheritedFrom":{"type":"reference","target":960,"name":"Codec.__encode__"}},{"id":2735,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2736,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2737,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":965,"name":"Codec.__schema__"}}],"inheritedFrom":{"type":"reference","target":964,"name":"Codec.__schema__"}},{"id":2716,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2717,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2718,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2666,"name":"Type.asInstance"}}],"inheritedFrom":{"type":"reference","target":2665,"name":"Type.asInstance"}},{"id":2738,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2739,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2740,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2741,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":706,"name":"AsString.asString"}}],"inheritedFrom":{"type":"reference","target":705,"name":"AsString.asString"}},{"id":2713,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2714,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2715,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}},"inheritedFrom":{"type":"reference","target":2663,"name":"Type.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2662,"name":"Type.hasInstance"}}],"groups":[{"title":"References","children":[2712]},{"title":"Properties","children":[2719]},{"title":"Methods","children":[2726,2731,2735,2716,2738,2713]}],"categories":[{"title":"Codec","children":[2726,2731,2735]},{"title":"Formatting","children":[2738]},{"title":"Type","children":[2719,2716,2713]},{"title":"__CATEGORY__","children":[2712]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":143,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L143"}],"typeParameters":[{"id":2742,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":2660,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"},{"type":"reference","target":704,"typeArguments":[{"type":"reference","target":2742,"name":"T","package":"@w5s/core","qualifiedName":"Type.Module.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"extendedBy":[{"type":"reference","target":1100,"name":"Enumerable"},{"type":"reference","target":2231,"name":"Module"},{"type":"reference","target":2399,"name":"Module"}],"permalink":"/std/fr/api/core/namespace/Type#Module"},{"id":2678,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module constructor parameters"}]},"children":[{"id":2684,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2685,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2686,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2687,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}},{"id":2688,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2689,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2690,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.__inspect__"}},{"id":2679,"name":"hasInstance","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"type":{"type":"reflection","declaration":{"id":2680,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"signatures":[{"id":2681,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":137,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L137"}],"parameters":[{"id":2682,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":2683,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nStringType.typeName // \'String\'\\nInt.typeName // \'Int\'\\nPerson.typeName // \'Person\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.typeName"}},{"id":2694,"name":"__decode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2695,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2696,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2697,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2698,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__decode__"}},{"id":2699,"name":"__encode__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2700,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2701,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2702,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__encode__"}},{"id":2703,"name":"__schema__","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2704,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2705,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.__schema__"}},{"id":2691,"name":"asInstance","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2692,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2693,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.asInstance"}},{"id":2706,"name":"asString","variant":"declaration","kind":2048,"flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2707,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2708,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2709,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.asString"}}],"groups":[{"title":"Properties","children":[2684,2679,2683]},{"title":"Methods","children":[2694,2699,2703,2691,2706]}],"categories":[{"title":"Codec","children":[2694,2699,2703]},{"title":"Formatting","children":[2706]},{"title":"Type","children":[2684,2683,2691]},{"title":"__CATEGORY__","children":[2679]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":133,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L133"}],"typeParameters":[{"id":2710,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2660,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"},{"type":"literal","value":"hasInstance"}],"name":"Omit","package":"typescript"},{"type":"union","types":[{"type":"literal","value":"asInstance"},{"type":"reference","target":2347,"name":"Symbol.inspect","package":"@w5s/core"}]}],"name":"PartialKeys","package":"@w5s/core-type"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":954,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}],"name":"Partial","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":704,"typeArguments":[{"type":"reference","target":2710,"name":"T","package":"@w5s/core","qualifiedName":"Type.Parameters.T","refersToTypeParameter":true}],"name":"AsString","package":"@w5s/core"}],"name":"Partial","package":"typescript"}],"extendedBy":[{"type":"reference","target":2366,"name":"Parameters"}],"permalink":"/std/fr/api/core/namespace/Type#Parameters"},{"id":2676,"name":"TypeOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract the type of object from its module"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":128,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L128"}],"typeParameters":[{"id":2677,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":2677,"name":"V","package":"@w5s/core","refersToTypeParameter":true},"extendsType":{"type":"reference","target":2660,"typeArguments":[{"type":"inferred","name":"T"}],"name":"Type","package":"@w5s/core"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"T"},"name":"T","package":"@w5s/core","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/core/namespace/Type#TypeOf"},{"id":2520,"name":"Ordering","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":114,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L114"}],"type":{"type":"reference","target":1094,"typeArguments":[{"type":"reflection","declaration":{"id":2521,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2524,"name":"Equal","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is equal to another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L16"}],"type":{"type":"literal","value":0},"defaultValue":"0"},{"id":2525,"name":"Greater","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is greater than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L20"}],"type":{"type":"literal","value":1},"defaultValue":"1"},{"id":2523,"name":"Less","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An ordering where a compared value is less than another."}]},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L12"}],"type":{"type":"literal","value":-1},"defaultValue":"-1"},{"id":2522,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L8"}],"type":{"type":"literal","value":"Ordering"},"defaultValue":"\'Ordering\'"}],"groups":[{"title":"Properties","children":[2524,2525,2523,2522]}],"sources":[{"fileName":"packages/core/src/Type/Ordering.ts","line":7,"character":31,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/Ordering.ts#L7"}]}}],"name":"Enum","package":"@w5s/core"},"permalink":"/std/fr/api/core/namespace/Type#Ordering"},{"id":2538,"name":"RegExp","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":119,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L119"}],"type":{"type":"reflection","declaration":{"id":2539,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2544,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2551,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2552,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2553,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2554,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}},{"id":2555,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2556,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2557,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2540,"name":"parse","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L51"}],"type":{"type":"reflection","declaration":{"id":2541,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"signatures":[{"id":2542,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":5,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L5"}],"parameters":[{"id":2543,"name":"expression","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]}}},{"id":2558,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2559,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2560,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2561,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2562,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2563,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2564,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2565,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2566,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2567,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2568,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2569,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2548,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2549,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2550,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}],"name":"Option","package":"@w5s/core"}}]},{"id":2570,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2571,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2572,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2573,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2545,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2546,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2547,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript"}}}]}],"groups":[{"title":"References","children":[2544]},{"title":"Properties","children":[2551,2540]},{"title":"Methods","children":[2558,2563,2567,2548,2570,2545]}],"categories":[{"title":"Codec","children":[2558,2563,2567]},{"title":"Formatting","children":[2570]},{"title":"Type","children":[2551,2548,2545]},{"title":"__CATEGORY__","children":[2544,2540]}],"sources":[{"fileName":"packages/core/src/Type/RegExp.ts","line":26,"character":22,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type/RegExp.ts#L26"}]}},"permalink":"/std/fr/api/core/namespace/Type#RegExp"},{"id":2494,"name":"bigint","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L108"}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#bigint"},{"id":2495,"name":"boolean","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L109"}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#boolean"},{"id":2510,"name":"number","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L111"}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#number"},{"id":2532,"name":"string","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":116,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L116"}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#string"},{"id":2537,"name":"unknown","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":118,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L118"}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"permalink":"/std/fr/api/core/namespace/Type#unknown"},{"id":2476,"name":"Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"signatures":[{"id":2477,"name":"Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a codec for "},{"kind":"code","text":"`Array<V>`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst codec = Type.Array(dateISO);\\nconst encoded = Codec.encode(codec, [new Date(\'1970-01-01T00:00:00.000Z\')]);// [\'1970-01-01T00:00:00.000Z\']\\nconst decoded = Codec.decode(codec, [\'1970-01-01T00:00:00.000Z\']);// Result.Ok([Date(\'1970-01-01T00:00:00.000Z\')])\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L106"}],"typeParameter":[{"id":2478,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2479,"name":"Item","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module for array item"}]},"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2478,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":702,"typeArguments":[{"type":"reference","target":2478,"name":"V","package":"@w5s/core","refersToTypeParameter":true}],"name":"ArrayType","package":"@w5s/core","qualifiedName":"Array"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Array"},{"id":2480,"name":"Char","variant":"declaration","kind":64,"flags":{},"children":[{"id":2493,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":929},{"id":2489,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":913},{"id":2490,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":918},{"id":2488,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":906},{"id":2491,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":922},{"id":2487,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":903},{"id":2492,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":925},{"id":2486,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":900},{"id":2485,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2484,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"target":896},{"id":2483,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"target":893}],"groups":[{"title":"References","children":[2493,2489,2490,2488,2491,2487,2492,2486,2485,2484,2483]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"signatures":[{"id":2481,"name":"Char","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L107"}],"parameters":[{"id":2482,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"Char","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Char"},{"id":2496,"name":"Int","variant":"declaration","kind":64,"flags":{},"children":[{"id":2509,"name":"__call__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"target":1389},{"id":2505,"name":"__decode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"target":1373},{"id":2506,"name":"__encode__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"target":1378},{"id":2504,"name":"__inspect__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"target":1366},{"id":2507,"name":"__schema__","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"target":1382},{"id":2503,"name":"asInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"target":1363},{"id":2508,"name":"asString","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"target":1385},{"id":2502,"name":"hasInstance","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"target":1360},{"id":2501,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2500,"name":"unwrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"target":1356},{"id":2499,"name":"wrap","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"target":1353}],"groups":[{"title":"References","children":[2509,2505,2506,2504,2507,2503,2508,2502,2501,2500,2499]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"signatures":[{"id":2497,"name":"Int","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L110"}],"parameters":[{"id":2498,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Int"},{"id":2511,"name":"Object","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"signatures":[{"id":2512,"name":"Object","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new Type for "},{"kind":"code","text":"`P`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst SomeType = Type.Object({ created: dateISO }, \'SomeType\');\\nconst encoded = Codec.encode(SomeType, { created: new Date(\'1970-01-01T00:00:00.000Z\') });// { created: \'1970-01-01T00:00:00.000Z\' }\\nconst decoded = Codec.decode(SomeType, { created: \'1970-01-01T00:00:00.000Z\' });// Result.Ok({ created: Date(\'1970-01-01T00:00:00.000Z\') })\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":112,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L112"}],"typeParameter":[{"id":2513,"name":"P","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2514,"name":"Properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the codec for each array item"}]},"type":{"type":"mapped","parameter":"K","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":2711,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Object.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2513,"name":"P","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},"readonlyModifier":"+"}},{"id":2515,"name":"typeName","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":2513,"name":"P","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Object"},{"id":2516,"name":"Option","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"signatures":[{"id":2517,"name":"Option","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new optional type from "},{"kind":"code","text":"`Value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst OptionString = Type.Option(Type.String);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L113"}],"typeParameter":[{"id":2518,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2519,"name":"Value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value type"}]},"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2518,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2518,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"OptionType","package":"@w5s/core","qualifiedName":"Option"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Option"},{"id":2526,"name":"Record","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"signatures":[{"id":2527,"name":"Record","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":115,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L115"}],"typeParameter":[{"id":2528,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}},{"id":2529,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}],"parameters":[{"id":2530,"name":"Key","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2528,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}},{"id":2531,"name":"Value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2529,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":2676,"typeArguments":[{"type":"reference","target":2528,"name":"Key","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"},{"type":"reference","target":2676,"typeArguments":[{"type":"reference","target":2529,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Record","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Record"},{"id":2533,"name":"Tuple","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"signatures":[{"id":2534,"name":"Tuple","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":117,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L117"}],"typeParameter":[{"id":2535,"name":"C","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2536,"name":"items","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2535,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2535,"name":"C","package":"@w5s/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":2676,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Tuple.ts","qualifiedName":"K"},"name":"K","package":"@w5s/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":2535,"name":"C","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"},"readonlyModifier":"+"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#Tuple"},{"id":2617,"name":"URL","variant":"declaration","kind":64,"flags":{},"children":[{"id":2626,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2656,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2657,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2658,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2659,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}}},{"id":2633,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2634,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2635,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2636,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}},{"id":2637,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2638,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2639,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2640,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2641,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2642,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2643,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2644,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2645,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2646,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2647,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2648,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2649,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2650,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2651,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2630,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2631,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2632,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2652,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2653,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2654,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2655,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2627,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2628,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2629,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}}]},{"id":2623,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2624,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2625,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2620,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2621,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2622,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2626]},{"title":"Properties","children":[2656,2633]},{"title":"Methods","children":[2640,2645,2649,2630,2652,2627,2623,2620]}],"categories":[{"title":"Callable","children":[2656]},{"title":"Codec","children":[2640,2645,2649]},{"title":"Formatting","children":[2652]},{"title":"Type","children":[2633,2630,2627]},{"title":"__CATEGORY__","children":[2626,2623,2620]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"signatures":[{"id":2618,"name":"URL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":121,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L121"}],"parameters":[{"id":2619,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/URL.ts","qualifiedName":"URL"},"name":"URL","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#URL"},{"id":2574,"name":"UUID","variant":"declaration","kind":64,"flags":{},"children":[{"id":2583,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2613,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reflection","declaration":{"id":2614,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"signatures":[{"id":2615,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":21,"character":83,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L21"}],"parameters":[{"id":2616,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}}},{"id":2590,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2591,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2592,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2593,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":2594,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2595,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2596,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2597,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":2598,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":2599,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2600,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":2601,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":2602,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":2603,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":2604,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2605,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":2606,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":2607,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":2608,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}]},{"id":2587,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2588,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2589,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":2609,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":2610,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":2611,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":2612,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":2584,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2585,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2586,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}]},{"id":2580,"name":"unwrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"signatures":[{"id":2581,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":40,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L40"}],"parameters":[{"id":2582,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}]},{"id":2577,"name":"wrap","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"signatures":[{"id":2578,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L34"}],"parameters":[{"id":2579,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}]}],"groups":[{"title":"References","children":[2583]},{"title":"Properties","children":[2613,2590]},{"title":"Methods","children":[2597,2602,2606,2587,2609,2584,2580,2577]}],"categories":[{"title":"Callable","children":[2613]},{"title":"Codec","children":[2597,2602,2606]},{"title":"Formatting","children":[2609]},{"title":"Type","children":[2590,2587,2584]},{"title":"__CATEGORY__","children":[2583,2580,2577]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"signatures":[{"id":2575,"name":"UUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type\\nAlias to "},{"kind":"code","text":"`wrap(value)`"}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":120,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L120"}],"parameters":[{"id":2576,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#UUID"},{"id":2458,"name":"constant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"signatures":[{"id":2459,"name":"constant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type for constant "},{"kind":"code","text":"`value`"},{"kind":"text","text":". An encoded value can be specified as second argument."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst constantType = Type.constant(\'_\'); // Encoded and decoded value are \'_\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someSymbol = Symbol(\'someSymbol\');\\nconst someSymbolType = Type.constant(someSymbol, \'__someSymbol__\'); // Encoded value is \'__someSymbol__\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2460,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}}],"parameters":[{"id":2461,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the decoded constant value"}]},"type":{"type":"reference","target":2460,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2462,"name":"encodedValue","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the encoded value (required only for non JSON representable values)"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2460,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}},{"id":2463,"name":"constant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L103"}],"typeParameter":[{"id":2464,"name":"Value","variant":"typeParam","kind":131072,"flags":{"isConst":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":2465,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2464,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}},{"id":2466,"name":"encodedValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"JSONPrimitive"},"name":"JSONPrimitive","package":"@w5s/core-type"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2464,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#constant"},{"id":2467,"name":"define","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"signatures":[{"id":2468,"name":"define","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Define a new Type module"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface NewType {\\n  foo: boolean;\\n}\\nconst NewType = Type.define<NewType>({\\n  typeName: \'NewType\',\\n  hasInstance(value) {\\n    return typeof value.foo === \'boolean\';\\n  },\\n});\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L104"}],"typeParameter":[{"id":2469,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2470,"name":"parameters","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type parameters"}]},"type":{"type":"reference","target":2678,"typeArguments":[{"type":"reference","target":2469,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Type.Parameters"}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2469,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#define"},{"id":2471,"name":"ensure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"signatures":[{"id":2472,"name":"ensure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ensure that "},{"kind":"code","text":"`value`"},{"kind":"text","text":" is a valid "},{"kind":"code","text":"`T`"},{"kind":"text","text":". Throw a TypeError otherwise."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nType.ensure(Type.String, \'foo\'); // void\\nType.ensure(Type.String, 42); // throw new Error(\'42 is not a valid String\')\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L105"}],"typeParameter":[{"id":2473,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2474,"name":"Type","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type module"}]},"type":{"type":"reference","target":2660,"typeArguments":[{"type":"reference","target":2473,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Type","package":"@w5s/core"}},{"id":2475,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to ensure"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":true,"targetType":{"type":"reference","target":2473,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}}],"permalink":"/std/fr/api/core/namespace/Type#ensure"},{"id":2454,"name":"union","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"signatures":[{"id":2455,"name":"union","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a union of all types"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ABType = Type.anyOf(AType, BType);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L102"}],"typeParameter":[{"id":2456,"name":"Types","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2711,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"}}}}],"parameters":[{"id":2457,"name":"types","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2456,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2711,"typeArguments":[{"type":"reference","target":2676,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"reference","target":2456,"name":"Types","package":"@w5s/core","refersToTypeParameter":true}}],"name":"Type.TypeOf","package":"@w5s/core"}],"name":"Type.Module","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/namespace/Type#union"}],"groups":[{"title":"Interfaces","children":[2711,2678]},{"title":"Type Aliases","children":[2676]},{"title":"Variables","children":[2520,2538,2494,2495,2510,2532,2537]},{"title":"Functions","children":[2476,2480,2496,2511,2516,2526,2533,2617,2574,2458,2467,2471,2454]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"permalink":"/std/fr/api/core/namespace/Type","categories":[],"previousId":2358,"nextId":702},{"id":1050,"name":"CodecError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Codec Error constructor"}]},"children":[{"id":1072,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":1073,"name":"new CodecError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":1074,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":1075,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1076,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[1076]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n})<{\\n  /**\\n   * Input given for encoding/decoding\\n   */\\n  input: unknown;\\n}>.constructor"}},{"id":1077,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).input"}},{"id":1060,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"CodecError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).errorName"}},{"id":1061,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":1062,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":1063,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).asString"}},{"id":1064,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":1065,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":1066,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":1067,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":1068,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":1069,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":1070,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":1071,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'CodecError\',\\n  errorMessage: \'The encoding or decoding operation failed\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[1072]},{"title":"Properties","children":[1077,1060]},{"title":"Methods","children":[1061,1064]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":8,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L8"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":1051,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1055,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1053,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1052,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"CodecError"}},{"id":1054,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1055,1053,1052,1054]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":1056,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1057,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"CodecError"}}],"groups":[{"title":"Properties","children":[1057]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":1058,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1059,"name":"input","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Input given for encoding/decoding"}]},"sources":[{"fileName":"packages/core/src/CodecError.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[1059]}],"sources":[{"fileName":"packages/core/src/CodecError.ts","line":11,"character":3,"url":"https://github.com/w5s/std/blob/master/packages/core/src/CodecError.ts#L11"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/core/class/CodecError","categories":[],"nextId":804},{"id":704,"name":"AsString","variant":"declaration","kind":256,"flags":{},"children":[{"id":705,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":706,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":707,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":708,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":709,"name":"T","package":"@w5s/core","qualifiedName":"AsString.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[705]}],"categories":[{"title":"Formatting","children":[705]}],"sources":[{"fileName":"packages/core/src/AsString.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L1"}],"typeParameters":[{"id":709,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2711,"name":"Module"}],"permalink":"/std/fr/api/core/interface/AsString","previousId":1404,"nextId":800},{"id":800,"name":"Bounded","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Generic bound module of value "},{"kind":"code","text":"`T`"}]},"children":[{"id":802,"name":"maxValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":26,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L26"}],"type":{"type":"reference","target":803,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}},{"id":801,"name":"minValue","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Bounded.ts","line":15,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L15"}],"type":{"type":"reference","target":803,"name":"T","package":"@w5s/core","qualifiedName":"Bounded.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[802,801]}],"categories":[{"title":"Bound","children":[802,801]}],"sources":[{"fileName":"packages/core/src/Bounded.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Bounded.ts#L4"}],"typeParameters":[{"id":803,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/interface/Bounded","previousId":704,"nextId":808},{"id":808,"name":"Callable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable interface"}]},"children":[{"id":809,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":810,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Callable property"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L18"}],"type":{"type":"reference","target":811,"name":"F","package":"@w5s/core","qualifiedName":"Callable.F","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[809]},{"title":"Properties","children":[810]}],"categories":[{"title":"Callable","children":[810]},{"title":"__CATEGORY__","children":[809]}],"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"typeParameters":[{"id":811,"name":"F","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}}],"extendedBy":[{"type":"reference","target":2231,"name":"Module"},{"type":"reference","target":2399,"name":"Module"}],"permalink":"/std/fr/api/core/interface/Callable","previousId":800,"nextId":954},{"id":954,"name":"Codec","variant":"declaration","kind":256,"flags":{},"children":[{"id":955,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":956,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":957,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":958,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":959,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"reference","target":967,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"reference","target":967,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":960,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":961,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":962,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":963,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":967,"name":"T","package":"@w5s/core","qualifiedName":"Codec.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":964,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":965,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":966,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}]}],"groups":[{"title":"Methods","children":[955,960,964]}],"categories":[{"title":"Codec","children":[955,960,964]}],"sources":[{"fileName":"packages/core/src/Codec.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L10"},{"fileName":"packages/core/src/Codec.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L59"},{"fileName":"packages/core/src/Codec.ts","line":65,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L65"}],"typeParameters":[{"id":967,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2711,"name":"Module"}],"permalink":"/std/fr/api/core/interface/Codec","previousId":808,"nextId":991},{"id":991,"name":"Comparable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have total order"}]},"children":[{"id":992,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":1159,"name":"Equal.constructor"}},{"id":1039,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1040,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1041,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1042,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1043,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1166,"name":"Equal.!="}}],"inheritedFrom":{"type":"reference","target":1165,"name":"Equal.!="}},{"id":1003,"name":"<","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"signatures":[{"id":1004,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L53"}],"parameters":[{"id":1005,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1006,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1007,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":998,"name":"<=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"signatures":[{"id":999,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":37,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L37"}],"parameters":[{"id":1000,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1001,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1002,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1044,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1045,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1046,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1047,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1048,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1171,"name":"Equal.=="}}],"inheritedFrom":{"type":"reference","target":1170,"name":"Equal.=="}},{"id":1013,"name":">","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"signatures":[{"id":1014,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":85,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L85"}],"parameters":[{"id":1015,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1016,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1017,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1008,"name":">=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"signatures":[{"id":1009,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":69,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L69"}],"parameters":[{"id":1010,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1011,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1012,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1028,"name":"clamp","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"signatures":[{"id":1029,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":125,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L125"}],"parameters":[{"id":1030,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1031,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1032,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1033,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":993,"name":"compare","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"signatures":[{"id":994,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order","target":1745}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L21"}],"parameters":[{"id":995,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":996,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":997,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]},{"id":1034,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1035,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1036,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1037,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1038,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1161,"name":"Equal.equals"}}],"inheritedFrom":{"type":"reference","target":1160,"name":"Equal.equals"}},{"id":1023,"name":"max","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"signatures":[{"id":1024,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":113,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L113"}],"parameters":[{"id":1025,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1026,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1027,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]},{"id":1018,"name":"min","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"signatures":[{"id":1019,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L99"}],"parameters":[{"id":1020,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1021,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}},{"id":1022,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[992]},{"title":"Methods","children":[1039,1003,998,1044,1013,1008,1028,993,1034,1023,1018]}],"categories":[{"title":"Comparator","children":[1039,1003,998,1044,1013,1008,1028,993,1034,1023,1018]},{"title":"__CATEGORY__","children":[992]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"typeParameters":[{"id":1049,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":1158,"typeArguments":[{"type":"reference","target":1049,"name":"T","package":"@w5s/core","qualifiedName":"Comparable.T","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}],"permalink":"/std/fr/api/core/interface/Comparable","previousId":954,"nextId":1100},{"id":1100,"name":"Enumerable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type module interface"}]},"children":[{"id":1102,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"inheritedFrom":{"type":"reference","target":2712,"name":"Module.typeName"},"target":770},{"id":1101,"name":"[enumKeys]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"An array of all keys"}]},"sources":[{"fileName":"packages/core/src/Enum.ts","line":39,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L39"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}}},{"id":1109,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":1110,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":1111,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":1112,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1113,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1114,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":1115,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2719,"name":"Module.__inspect__"}},{"id":1132,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"literal","value":"number"},"inheritedFrom":{"type":"reference","target":1190,"name":"Indexable.indexType"}},{"id":1116,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"signatures":[{"id":1117,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L26"}],"parameters":[{"id":1118,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1119,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":1120,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":970,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":2043,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},{"type":"reference","target":1050,"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2727,"name":"Module.__decode__"}}],"inheritedFrom":{"type":"reference","target":2726,"name":"Module.__decode__"}},{"id":1121,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"signatures":[{"id":1122,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L42"}],"parameters":[{"id":1123,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1124,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":2732,"name":"Module.__encode__"}}],"inheritedFrom":{"type":"reference","target":2731,"name":"Module.__encode__"}},{"id":1125,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"signatures":[{"id":1126,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Codec.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Codec.ts#L53"}],"parameters":[{"id":1127,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2736,"name":"Module.__schema__"}}],"inheritedFrom":{"type":"reference","target":2735,"name":"Module.__schema__"}},{"id":1106,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":1107,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":1108,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":2717,"name":"Module.asInstance"}}],"inheritedFrom":{"type":"reference","target":2716,"name":"Module.asInstance"}},{"id":1128,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"signatures":[{"id":1129,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/AsString.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/AsString.ts#L12"}],"parameters":[{"id":1130,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1131,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2739,"name":"Module.asString"}}],"inheritedFrom":{"type":"reference","target":2738,"name":"Module.asString"}},{"id":1133,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1134,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1135,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1192,"name":"Indexable.at"}}],"inheritedFrom":{"type":"reference","target":1191,"name":"Indexable.at"}},{"id":1103,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":1104,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":1105,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},"inheritedFrom":{"type":"reference","target":2714,"name":"Module.hasInstance"}}],"inheritedFrom":{"type":"reference","target":2713,"name":"Module.hasInstance"}},{"id":1136,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1137,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1138,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1195,"name":"Indexable.indexOf"}}],"inheritedFrom":{"type":"reference","target":1194,"name":"Indexable.indexOf"}},{"id":1143,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1144,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1145,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1146,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Range","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":1202,"name":"Indexable.range"}}],"inheritedFrom":{"type":"reference","target":1201,"name":"Indexable.range"}},{"id":1139,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1140,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1141,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}},{"id":1142,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":1198,"name":"Indexable.rangeSize"}}],"inheritedFrom":{"type":"reference","target":1197,"name":"Indexable.rangeSize"}}],"groups":[{"title":"References","children":[1102]},{"title":"Properties","children":[1101,1109,1132]},{"title":"Methods","children":[1116,1121,1125,1106,1128,1133,1103,1136,1143,1139]}],"categories":[{"title":"Codec","children":[1116,1121,1125]},{"title":"Formatting","children":[1128]},{"title":"Indexable","children":[1132,1133,1136,1143,1139]},{"title":"Type","children":[1109,1106,1103]},{"title":"__CATEGORY__","children":[1102,1101]}],"sources":[{"fileName":"packages/core/src/Enum.ts","line":33,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L33"}],"typeParameters":[{"id":1147,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","target":2711,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}}],"name":"Module","package":"@w5s/core","qualifiedName":"Type.Module"},{"type":"reference","target":1188,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},"objectType":{"type":"reference","target":1147,"name":"T","package":"@w5s/core","qualifiedName":"Enumerable.T","refersToTypeParameter":true}},{"type":"intrinsic","name":"number"}],"name":"Indexable","package":"@w5s/core"}],"permalink":"/std/fr/api/core/interface/Enumerable","previousId":991,"nextId":1158},{"id":1158,"name":"Equal","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for values that have equivalence relation"}]},"children":[{"id":1159,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1165,"name":"!=","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"signatures":[{"id":1166,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L29"}],"parameters":[{"id":1167,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1168,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1169,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1170,"name":"==","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"signatures":[{"id":1171,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L42"}],"parameters":[{"id":1172,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1173,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1174,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1160,"name":"equals","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"signatures":[{"id":1161,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L17"}],"parameters":[{"id":1162,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":1163,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}},{"id":1164,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1175,"name":"T","package":"@w5s/core","qualifiedName":"Equal.T","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","children":[1159]},{"title":"Methods","children":[1165,1170,1160]}],"categories":[{"title":"Comparator","children":[1165,1170,1160]},{"title":"__CATEGORY__","children":[1159]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"typeParameters":[{"id":1175,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":991,"name":"Comparable"}],"permalink":"/std/fr/api/core/interface/Equal","previousId":1100,"nextId":1188},{"id":1188,"name":"Indexable","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type Indexable is a type with values that can be indexed by a number."}]},"children":[{"id":1189,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1190,"name":"indexType","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L16"}],"type":{"type":"conditional","checkType":{"type":"reference","target":1206,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"number"},"trueType":{"type":"literal","value":"number"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1206,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"bigint"},"trueType":{"type":"literal","value":"bigint"},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":1191,"name":"at","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"signatures":[{"id":1192,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L23"}],"parameters":[{"id":1193,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1206,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1194,"name":"indexOf","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"signatures":[{"id":1195,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L30"}],"parameters":[{"id":1196,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":1206,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":1201,"name":"range","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"signatures":[{"id":1202,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L48"}],"parameters":[{"id":1203,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1204,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1824,"typeArguments":[{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}],"name":"Range","package":"@w5s/core"}}]},{"id":1197,"name":"rangeSize","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"signatures":[{"id":1198,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L39"}],"parameters":[{"id":1199,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}},{"id":1200,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"reference","target":1205,"name":"T","package":"@w5s/core","qualifiedName":"Indexable.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":1206,"name":"Index","package":"@w5s/core","qualifiedName":"Indexable.Index","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[1189]},{"title":"Properties","children":[1190]},{"title":"Methods","children":[1191,1194,1201,1197]}],"categories":[{"title":"Indexable","children":[1190,1191,1194,1201,1197]},{"title":"__CATEGORY__","children":[1189]}],"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"typeParameters":[{"id":1205,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1206,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"extendedBy":[{"type":"reference","target":1100,"name":"Enumerable"}],"permalink":"/std/fr/api/core/interface/Indexable","previousId":1158,"nextId":1412},{"id":1412,"name":"Not","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Module interface for the unary "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operator"}]},"children":[{"id":1413,"name":"not","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"signatures":[{"id":1414,"name":"not","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Performs the equivalent of the "},{"kind":"code","text":"`!`"},{"kind":"text","text":" operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Answer = \'yes\' | \'no\';\\n\\nconst Answer: Not<Answer> = {\\n  not(self) => self === \'yes\' ? \'no\' : \'yes\',\\n};\\n\\nAnswer.not(\'yes\') // \'no\'\\nAnswer.not(\'no\') // \'yes\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Not.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L22"}],"parameters":[{"id":1415,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":1416,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"type":{"type":"reference","target":1417,"name":"Output","package":"@w5s/core","qualifiedName":"Not.Output","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[1413]}],"sources":[{"fileName":"packages/core/src/Not.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Not.ts#L4"}],"typeParameters":[{"id":1416,"name":"Self","variant":"typeParam","kind":131072,"flags":{}},{"id":1417,"name":"Output","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"reference","target":1416,"name":"Self","package":"@w5s/core","qualifiedName":"Not.Self","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/interface/Not","categories":[],"previousId":1188,"nextId":1824},{"id":1824,"name":"Range","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A range is a sequence of elements that are contiguous in some way."}]},"children":[{"id":1826,"name":"rangeEnd","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"End of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":14,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L14"}],"type":{"type":"reference","target":1827,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}},{"id":1825,"name":"rangeStart","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Start of range"}]},"sources":[{"fileName":"packages/core/src/Range.ts","line":10,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L10"}],"type":{"type":"reference","target":1827,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[1826,1825]}],"sources":[{"fileName":"packages/core/src/Range.ts","line":6,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Range.ts#L6"}],"typeParameters":[{"id":1827,"name":"T","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the elements in the range."}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":1827,"name":"T","package":"@w5s/core","qualifiedName":"Range.T","refersToTypeParameter":true}],"name":"Iterable","package":"typescript"}],"permalink":"/std/fr/api/core/interface/Range","categories":[],"previousId":1412,"nextId":1900},{"id":1900,"name":"Ref","variant":"declaration","kind":256,"flags":{},"children":[{"id":1901,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":1902,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L5"}],"type":{"type":"reference","target":1903,"name":"Value","package":"@w5s/core","qualifiedName":"Ref.Value","refersToTypeParameter":true}}],"groups":[{"title":"Constructors","children":[1901]},{"title":"Properties","children":[1902]}],"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"typeParameters":[{"id":1903,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/core/interface/Ref","categories":[],"previousId":1824,"nextId":2660},{"id":2660,"name":"Type","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that represents a class module of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" instances"}]},"children":[{"id":2661,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L46"}],"target":770},{"id":2668,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct","target":2217},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reflection","declaration":{"id":2669,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"signatures":[{"id":2670,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":95,"character":27,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L95"}],"parameters":[{"id":2671,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2675,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}},{"id":2672,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2673,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}},{"id":2674,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2447,"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":2665,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"signatures":[{"id":2666,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":73,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L73"}],"parameters":[{"id":2667,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1740,"typeArguments":[{"type":"reference","target":2675,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}],"name":"Option","package":"@w5s/core"}}]},{"id":2662,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"signatures":[{"id":2663,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Type.ts","line":60,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L60"}],"parameters":[{"id":2664,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":2675,"name":"T","package":"@w5s/core","qualifiedName":"Type.T","refersToTypeParameter":true}}}]}],"groups":[{"title":"References","children":[2661]},{"title":"Properties","children":[2668]},{"title":"Methods","children":[2665,2662]}],"categories":[{"title":"Type","children":[2668,2665,2662]},{"title":"__CATEGORY__","children":[2661]}],"sources":[{"fileName":"packages/core/src/Type.ts","line":34,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L34"},{"fileName":"packages/core/src/Type.ts","line":101,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L101"},{"fileName":"packages/core/src/Type.ts","line":124,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L124"}],"typeParameters":[{"id":2675,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":2711,"name":"Module"}],"permalink":"/std/fr/api/core/interface/Type","previousId":1900,"nextId":437},{"id":702,"name":"Array","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Array.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L32"},{"fileName":"packages/core/src/Array.ts","line":47,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Array.ts#L47"}],"typeParameters":[{"id":703,"name":"Item","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":703,"name":"Item","package":"@w5s/core","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},"permalink":"/std/fr/api/core#Array","categories":[],"previousId":2453,"nextId":814},{"id":814,"name":"CallableFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A callable function with callable interface"}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L7"}],"typeParameters":[{"id":815,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":808,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"query","queryType":{"type":"reference","target":813,"name":"Callable.symbol","package":"@w5s/core"}},"objectType":{"type":"reference","target":815,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"type":"reference","target":815,"name":"T","package":"@w5s/core","refersToTypeParameter":true}]},"permalink":"/std/fr/api/core#CallableFunction","categories":[],"previousId":702,"nextId":932},{"id":932,"name":"Char","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Character value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"CharType","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"tsLinkText":""}]},"sources":[{"fileName":"packages/core/src/Char.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L13"},{"fileName":"packages/core/src/Char.ts","line":20,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Char.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Char.ts","qualifiedName":"Char"},"name":"CharType","package":"@w5s/core","qualifiedName":"Char"},"permalink":"/std/fr/api/core#Char","categories":[],"previousId":814,"nextId":1094},{"id":1094,"name":"Enum","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Enum.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L11"},{"fileName":"packages/core/src/Enum.ts","line":20,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L20"},{"fileName":"packages/core/src/Enum.ts","line":42,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Enum.ts#L42"}],"typeParameters":[{"id":1095,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1095,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1100,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1095,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"literal","value":"typeName"}],"name":"Omit","package":"typescript"}],"name":"Enumerable","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Enum","categories":[],"previousId":932,"nextId":2447},{"id":2447,"name":"InspectFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"type":{"type":"reflection","declaration":{"id":2448,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":27,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L27"}],"signatures":[{"id":2449,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2450,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":2451,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2452,"name":"InspectOptions","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/std/fr/api/core#InspectFunction","categories":[],"previousId":1094,"nextId":2452},{"id":2452,"name":"InspectOptions","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Type.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Type.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"@w5s/core"},"permalink":"/std/fr/api/core#InspectOptions","categories":[],"previousId":2447,"nextId":1392},{"id":1392,"name":"Int","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Int.ts","line":19,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L19"},{"fileName":"packages/core/src/Int.ts","line":26,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Int.ts#L26"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"IntType","package":"@w5s/core","qualifiedName":"Int"},"permalink":"/std/fr/api/core#Int","categories":[],"previousId":2452,"nextId":1393},{"id":1393,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core/src/JSON.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L11"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"reflection","declaration":{"id":1394,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":17,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L17"}],"indexSignature":{"id":1395,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core/src/JSON.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/JSON.ts#L18"}],"parameters":[{"id":1396,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1393,"name":"JSONValue","package":"@w5s/core"}}}}]},"permalink":"/std/fr/api/core#JSONValue","categories":[],"previousId":1392,"nextId":1740},{"id":1740,"name":"Option","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Option<Value>`"},{"kind":"text","text":" is the type used to represent either a defined value "},{"kind":"code","text":"`Some<Value>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`None`"},{"kind":"text","text":" (i.e. "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":")\\n\\nThis module focuses on handling "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" values in a functional style, to avoid throwing errors at runtime.\\nBecause "},{"kind":"code","text":"`Option.None = undefined`"},{"kind":"text","text":", this modules provides an opinionated way to remove confusion between "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":".\\n\\nSome other libraries uses object to implement Maybe/Option monad but has drawbacks :\\n- ECMAScript already uses nullable/undefined values everywhere\\n- Each library that does not uses the "},{"kind":"code","text":"`Some/None`"},{"kind":"text","text":" must be patched / overridden\\n- it creates a third empty value "},{"kind":"code","text":"`None`"},{"kind":"text","text":" in addition to "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Option.Some(\'Django\') : Option.None;\\nconst displayName = (option) => Option.map(option, (value) => \'name: \'+ value);\\nconst print = (option) => {\\n  if (Option.isNone(option)) {\\n    console.warn(\'None\');\\n  } else {\\n    console.log(\'Some(\', option, \')\');\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const option = displayName(getName(i));\\n  print(option); // alternate console.log(\'Some(Django)\'); and console.warn(\'None\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Option.ts","line":45,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L45"},{"fileName":"packages/core/src/Option.ts","line":50,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L50"},{"fileName":"packages/core/src/Option.ts","line":63,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Option.ts#L63"}],"typeParameters":[{"id":1741,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the contained value"}]}}],"type":{"type":"union","types":[{"type":"reference","target":1741,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1742,"name":"Option.None","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Option","categories":[],"previousId":1393,"nextId":1764},{"id":1764,"name":"Order","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":1770,"tsLinkText":""},{"kind":"text","text":" thats represents the comparison result"}]},"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"},{"fileName":"packages/core/src/Order.ts","line":17,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L17"}],"typeParameters":[{"id":1769,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":1765,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Order.ts","line":12,"character":23,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Order.ts#L12"}],"signatures":[{"id":1766,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":1767,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1769,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1768,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"left side operand"}]},"type":{"type":"reference","target":1769,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1823,"name":"Ordering","package":"@w5s/core"}}]}},"permalink":"/std/fr/api/core#Order","categories":[],"previousId":1740,"nextId":1823},{"id":1823,"name":"Ordering","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Integer value\\n\\nAlias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Type.Int"}]},"sources":[{"fileName":"packages/core/src/Ordering.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L9"},{"fileName":"packages/core/src/Ordering.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ordering.ts#L16"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"OrderingType","package":"@w5s/core","qualifiedName":"Ordering"},"permalink":"/std/fr/api/core#Ordering","categories":[],"previousId":1764,"nextId":1893},{"id":1893,"name":"Record","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Record is an immutable mapping "},{"kind":"code","text":"`{ [string]: value }`"}]},"sources":[{"fileName":"packages/core/src/Record.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L18"},{"fileName":"packages/core/src/Record.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L27"}],"typeParameters":[{"id":1894,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":1828,"name":"RecordKey","package":"@w5s/core"}},{"id":1895,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"mapped","parameter":"P","parameterType":{"type":"reference","target":1894,"name":"Key","package":"@w5s/core","refersToTypeParameter":true},"templateType":{"type":"reference","target":1895,"name":"Value","package":"@w5s/core","refersToTypeParameter":true},"readonlyModifier":"+"},"permalink":"/std/fr/api/core#Record","categories":[],"previousId":1823,"nextId":1828},{"id":1828,"name":"RecordKey","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/src/Record.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Record.ts#L13"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"permalink":"/std/fr/api/core#RecordKey","categories":[],"previousId":1893,"nextId":2043},{"id":2043,"name":"Result","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"code","text":"`Result<Value, Error>`"},{"kind":"text","text":" is the type used to represent either a "},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" or a "},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" as a function return value.\\n"},{"kind":"code","text":"`Result.Result.Ok<Value>`"},{"kind":"text","text":" should be used when the result is the expected value.\\n"},{"kind":"code","text":"`Result.Error<Error>`"},{"kind":"text","text":" should be used when recoverable error occurred (i.e. an error that does not require the program to stop)\\n\\nResults can be used with async functions returning "},{"kind":"code","text":"`Promise<Result<Value, Error>>`"},{"kind":"text","text":".\\n\\n**Important: Rejected "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" and thrown "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" should only occur when the program has an unexpected state that should stop the execution**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getName = (num) => num % 2 === 0? Result.Ok(\'Django\') : Result.Error(\'error!\');\\nconst displayName = (result) => Result.map(result, (value) => \'name: \'+ value);\\nconst print = (result) => {\\n  if (Result.isError(result)) {\\n    console.error(result.error);\\n  } else {\\n    console.log(result.value);\\n  }\\n}\\n\\nfor (let i = 0; i < 6; i++) {\\n  const result = displayName(getName(i));\\n  print(result); // alternate console.log(\'name: Django\'); and console.error(\'error!\');\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Result.ts","line":47,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L47"},{"fileName":"packages/core/src/Result.ts","line":52,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L52"},{"fileName":"packages/core/src/Result.ts","line":69,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Result.ts#L69"}],"typeParameters":[{"id":2044,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of value in case of "},{"kind":"code","text":"`Ok`"}]}},{"id":2045,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"comment":{"summary":[{"kind":"text","text":"the type of error in case of "},{"kind":"code","text":"`Error`"}]}}],"type":{"type":"union","types":[{"type":"reference","target":2046,"typeArguments":[{"type":"reference","target":2044,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Ok","package":"@w5s/core"},{"type":"reference","target":2050,"typeArguments":[{"type":"reference","target":2045,"name":"Error","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result.Error","package":"@w5s/core"}]},"permalink":"/std/fr/api/core#Result","categories":[],"previousId":1828,"nextId":2211},{"id":2211,"name":"Struct","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An Immutable Data Object with a "},{"kind":"code","text":"`type`"},{"kind":"text","text":" identifier"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n// Interface have a better appearance in VSCode\\nexport interface MyType extends Struct<{\\n [Struct.type]: \'MyType\',\\n foo: boolean;\\n}> {}\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":20,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L20"},{"fileName":"packages/core/src/Struct.ts","line":31,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L31"}],"typeParameters":[{"id":2212,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2213,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2214,"name":"_","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"The type unique identifier"}]},"sources":[{"fileName":"packages/core/src/Struct.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L25"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2214]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":21,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L21"}]}},"default":{"type":"reflection","declaration":{"id":2215,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2216,"name":"_","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Struct.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2216]}],"sources":[{"fileName":"packages/core/src/Struct.ts","line":26,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Struct.ts#L26"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reference","target":2212,"name":"Properties","package":"@w5s/core","refersToTypeParameter":true}],"name":"Readonly","package":"typescript"},"permalink":"/std/fr/api/core#Struct","categories":[],"previousId":2043,"nextId":2364},{"id":2364,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core-type!Tag"}]},"sources":[{"fileName":"packages/core/src/Tag.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L10"},{"fileName":"packages/core/src/Tag.ts","line":15,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L15"},{"fileName":"packages/core/src/Tag.ts","line":18,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Tag.ts#L18"}],"typeParameters":[{"id":2365,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Tag"},"typeArguments":[{"type":"reference","target":2365,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CoreTypeTag","package":"@w5s/core-type","qualifiedName":"Tag"},"permalink":"/std/fr/api/core#Tag","categories":[],"previousId":2211},{"id":804,"name":"Callable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"},{"fileName":"packages/core/src/Callable.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L12"},{"fileName":"packages/core/src/Callable.ts","line":39,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L39"}],"signatures":[{"id":805,"name":"Callable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new function from callable interface"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst myCallable = Callable({\\n  [Callable.symbol]: (arg: number) => arg,\\n  myMethod: () => {},\\n});\\n// myCallable(1)\\n// myCallable.myMethod();\\n\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Callable.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Callable.ts#L35"}],"typeParameter":[{"id":806,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":808,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"AnyFunction"},"name":"AnyFunction","package":"@w5s/core-type"}],"name":"Callable","package":"@w5s/core"}}],"parameters":[{"id":807,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":806,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":814,"typeArguments":[{"type":"reference","target":806,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"CallableFunction","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Callable","categories":[],"previousId":1050,"nextId":981},{"id":981,"name":"Comparable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"},{"fileName":"packages/core/src/Comparable.ts","line":7,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L7"}],"signatures":[{"id":982,"name":"Comparable","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct Comparable instance"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NumberComparable = Comparable({\\n  compare: (left, right) => left - right,\\n});\\nNumberComparable[\'==\'](0, 0); // true\\nNumberComparable[\'<\'](0, 1); // true\\nNumberComparable[\'>\'](0, 1); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"typeParameter":[{"id":983,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":984,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":985,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":986,"name":"compare","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"the comparison function"}]},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"type":{"type":"reflection","declaration":{"id":987,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"signatures":[{"id":988,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":53,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}],"parameters":[{"id":989,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":983,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":990,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":983,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}]}}}],"groups":[{"title":"Properties","children":[986]}],"sources":[{"fileName":"packages/core/src/Comparable.ts","line":144,"character":42,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Comparable.ts#L144"}]}}}],"type":{"type":"reference","target":991,"typeArguments":[{"type":"reference","target":983,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Comparable","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Comparable","categories":[],"previousId":804,"nextId":1148},{"id":1148,"name":"Equal","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"},{"fileName":"packages/core/src/Equal.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L4"}],"signatures":[{"id":1149,"name":"Equal","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Equal module constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TEqual = Equal<T>({\\n  \'==\': (left, right) => { /* ... */ },\\n});\\nconst value: T;\\n\\nTEqual[\'==\'](value, value); // true;\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"typeParameter":[{"id":1150,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1151,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":1152,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":1153,"name":"equals","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":39,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"type":{"type":"reflection","declaration":{"id":1154,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"signatures":[{"id":1155,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":47,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}],"parameters":[{"id":1156,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1150,"name":"T","package":"@w5s/core","refersToTypeParameter":true}},{"id":1157,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1150,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}}],"groups":[{"title":"Properties","children":[1153]}],"sources":[{"fileName":"packages/core/src/Equal.ts","line":60,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Equal.ts#L60"}]}}}],"type":{"type":"reference","target":1158,"typeArguments":[{"type":"reference","target":1150,"name":"T","package":"@w5s/core","refersToTypeParameter":true}],"name":"Equal","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Equal","categories":[],"previousId":981,"nextId":1183},{"id":1183,"name":"Indexable","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"},{"fileName":"packages/core/src/Indexable.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L10"},{"fileName":"packages/core/src/Indexable.ts","line":101,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L101"}],"signatures":[{"id":1184,"name":"Indexable","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/Indexable.ts","line":50,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Indexable.ts#L50"}],"typeParameter":[{"id":1185,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":1186,"name":"Index","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"}]},"default":{"type":"intrinsic","name":"number"}}],"parameters":[{"id":1187,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1208,"typeArguments":[{"type":"reference","target":1185,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1186,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Indexable.Parameters"}}],"type":{"type":"reference","target":1188,"typeArguments":[{"type":"reference","target":1185,"name":"T","package":"@w5s/core","refersToTypeParameter":true},{"type":"reference","target":1186,"name":"Index","package":"@w5s/core","refersToTypeParameter":true}],"name":"Indexable","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Indexable","categories":[],"previousId":1148,"nextId":1896},{"id":1896,"name":"Ref","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"},{"fileName":"packages/core/src/Ref.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L1"},{"fileName":"packages/core/src/Ref.ts","line":21,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L21"}],"signatures":[{"id":1897,"name":"Ref","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ref`"},{"kind":"text","text":" object containing a value\\nThis implementation is compatible with "},{"kind":"code","text":"`React.createRef()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst ref = Ref(123);// { current: initialValue }\\n```"}]}]},"sources":[{"fileName":"packages/core/src/Ref.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/Ref.ts#L18"}],"typeParameter":[{"id":1898,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1899,"name":"initialValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the initial value contained"}]},"type":{"type":"reference","target":1898,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1900,"typeArguments":[{"type":"reference","target":1898,"name":"Value","package":"@w5s/core","refersToTypeParameter":true}],"name":"Ref","package":"@w5s/core"}}],"permalink":"/std/fr/api/core/function/Ref","categories":[],"previousId":1183,"nextId":1176},{"id":1176,"name":"identity","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"signatures":[{"id":1177,"name":"identity","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the unchanged given "},{"kind":"code","text":"`value`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nidentity(\'foo\');// \'foo\'\\n```"}]}]},"sources":[{"fileName":"packages/core/src/identity.ts","line":10,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/identity.ts#L10"}],"typeParameter":[{"id":1178,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1179,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the input and return value"}]},"type":{"type":"reference","target":1178,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1178,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}],"permalink":"/std/fr/api/core/function/identity","categories":[],"previousId":1896,"nextId":1180},{"id":1180,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"signatures":[{"id":1181,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Always return "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" and ignore passed value.\\n\\nThis should be used in conjunction with eslint rules such as [@typescript-eslint/no-misused-promises](https://typescript-eslint.io/rules/no-misused-promises/)\\nto explicitly ignore a promise returned by a callback."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst doSomething = () => \'foo\'; // string\\nconst doSomethingIgnore = () => ignore(doSomething()); // undefined as void\\n\\nconst doAsync = async () => \'foo\'; // Promise<string>\\nconst doSyncIgnore = () => ignore(doAsync()); // undefined as void\\n```"}]}]},"sources":[{"fileName":"packages/core/src/ignore.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/ignore.ts#L18"}],"parameters":[{"id":1182,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value that should be ignored"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core/function/ignore","categories":[],"previousId":1176,"nextId":1404},{"id":1404,"name":"lazy","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1405,"name":"lazy","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the result of "},{"kind":"code","text":"`getValue`"},{"kind":"text","text":", that will be called once.\\nUseful for expensive computation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst expensiveRead = lazy(() => fs.readDirSync(\'my/dir\'));\\n// fs.readDirSync not called\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync called, return value is put in cache\\n);\\nconsole.log(\\n  expensiveRead() // <- fs.readDirSync not called, return value from cache\\n);\\n```"}]}]},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"typeParameter":[{"id":1406,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":1407,"name":"getValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the computation"}]},"type":{"type":"reflection","declaration":{"id":1408,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1409,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":34,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"type":{"type":"reference","target":1406,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"type":{"type":"reflection","declaration":{"id":1410,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/src/lazy.ts","line":18,"character":44,"url":"https://github.com/w5s/std/blob/master/packages/core/src/lazy.ts#L18"}],"signatures":[{"id":1411,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"reference","target":1406,"name":"T","package":"@w5s/core","refersToTypeParameter":true}}]}}}],"permalink":"/std/fr/api/core/function/lazy","categories":[],"previousId":1180,"nextId":704}],"groups":[{"title":"Classes","children":[1050]},{"title":"Functions","children":[804,981,1148,1183,1896,1176,1180,1404]},{"title":"Interfaces","children":[704,800,808,954,991,1100,1158,1188,1412,1824,1900,2660]},{"title":"Namespaces","children":[437,710,812,816,933,1078,1207,1226,1397,1418,1564,1686,1745,1770,1829,1904,1926,2054,2217,2313,2358,2453]},{"title":"Type Aliases","children":[702,814,932,1094,2447,2452,1392,1393,1740,1764,1823,1893,1828,2043,2211,2364]}],"categories":[{"title":"Constructor","children":[1050,1896]},{"title":"Functor","children":[981,1148]},{"title":"__CATEGORY__","children":[437,710,812,816,933,1078,1207,1226,1397,1418,1564,1686,1745,1770,1829,1904,1926,2054,2217,2313,2358,2453,704,800,808,954,991,1100,1158,1188,1412,1824,1900,2660,702,814,932,1094,2447,2452,1392,1393,1740,1764,1823,1893,1828,2043,2211,2364,804,1183,1176,1180,1404]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core/src/index.ts#L1"}],"permalink":"/std/fr/api/core"},"urlSlug":"core"}],"packageName":"@w5s/core","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":7,"name":"@w5s/core-type","variant":"declaration","kind":2,"flags":{},"children":[{"id":2784,"name":"ExpectAssertionObject","variant":"declaration","kind":256,"flags":{},"children":[{"id":2793,"name":"toBe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"type":{"type":"reflection","declaration":{"id":2794,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"signatures":[{"id":2795,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":7,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L7"}],"parameters":[{"id":2796,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2789,"name":"toBeGreaterThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2790,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"signatures":[{"id":2791,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":6,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L6"}],"parameters":[{"id":2792,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2785,"name":"toBeLessThan","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"type":{"type":"reflection","declaration":{"id":2786,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"signatures":[{"id":2787,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":5,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L5"}],"parameters":[{"id":2788,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2797,"name":"toEqual","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"signatures":[{"id":2798,"name":"toEqual","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L8"}],"parameters":[{"id":2799,"name":"expected","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2800,"name":"toHaveProperty","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"signatures":[{"id":2801,"name":"toHaveProperty","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L9"}],"parameters":[{"id":2802,"name":"property","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}},{"id":2803,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2804,"name":"toThrow","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"signatures":[{"id":2805,"name":"toThrow","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L10"}],"parameters":[{"id":2806,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[2793,2789,2785]},{"title":"Methods","children":[2797,2800,2804]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":4,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L4"}],"permalink":"/std/fr/api/core-type/interface/ExpectAssertionObject","categories":[],"previousId":2747,"nextId":2810},{"id":2810,"name":"ExpectFunction","variant":"declaration","kind":256,"flags":{},"children":[{"id":2811,"name":"fail","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"type":{"type":"reflection","declaration":{"id":2812,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"signatures":[{"id":2813,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":22,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L22"}],"parameters":[{"id":2814,"name":"message","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"never"}}]}}}],"groups":[{"title":"Properties","children":[2811]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L17"}],"signatures":[{"id":2815,"name":"ExpectFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}],"parameters":[{"id":2816,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intersection","types":[{"type":"reference","target":2784,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2817,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2818,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2784,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2818]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}},{"type":"reflection","declaration":{"id":2819,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2821,"name":"rejects","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L20"}],"type":{"type":"reference","target":2807,"name":"ExpectAssertion","package":"@w5s/core-type"}},{"id":2820,"name":"resolves","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L19"}],"type":{"type":"reference","target":2807,"name":"ExpectAssertion","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2821,2820]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":18,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L18"}]}}]}}],"permalink":"/std/fr/api/core-type/interface/ExpectFunction","categories":[],"previousId":2784,"nextId":2867},{"id":2867,"name":"TestEachFunction","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":45,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L45"}],"signatures":[{"id":2868,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L46"}],"typeParameter":[{"id":2869,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"tuple","elements":[{"type":"intrinsic","name":"any"}]}]}}],"parameters":[{"id":2870,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2869,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2853,"typeArguments":[{"type":"reference","target":2869,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2871,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L47"}],"typeParameter":[{"id":2872,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"parameters":[{"id":2873,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2872,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2853,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/TestingLibrary.ts","qualifiedName":"ExtractEachCallbackArgs"},"typeArguments":[{"type":"reference","target":2872,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"ExtractEachCallbackArgs","package":"@w5s/core-type"}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2874,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L48"}],"typeParameter":[{"id":2875,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2876,"name":"cases","variant":"param","kind":32768,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":2875,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}}],"type":{"type":"reference","target":2853,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2875,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}},{"id":2877,"name":"TestEachFunction","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L49"}],"parameters":[{"id":2878,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}}],"type":{"type":"reference","target":2853,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}],"name":"TestEachFunctionReturn","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/core-type/interface/TestEachFunction","categories":[],"previousId":2810,"nextId":2853},{"id":2853,"name":"TestEachFunctionReturn","variant":"declaration","kind":256,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":41,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L41"}],"typeParameters":[{"id":2854,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"signatures":[{"id":2855,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2856,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2857,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2858,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"signatures":[{"id":2859,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":42,"character":32,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L42"}],"parameters":[{"id":2860,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2854,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2752,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2861,"name":"TestEachFunctionReturn","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2862,"name":"name","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript"}]}},{"id":2863,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2864,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"signatures":[{"id":2865,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":43,"character":71,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L43"}],"parameters":[{"id":2866,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":2854,"name":"T","package":"@w5s/core-type","qualifiedName":"TestEachFunctionReturn.T","refersToTypeParameter":true}}],"type":{"type":"reference","target":2752,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core-type/interface/TestEachFunctionReturn","categories":[],"previousId":2867,"nextId":2822},{"id":2822,"name":"TestingLibrary","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Common interface for testing libraries like jest and vitest"}]},"children":[{"id":2823,"name":"describe","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"type":{"type":"reflection","declaration":{"id":2824,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2825,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"reflection","declaration":{"id":2826,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2827,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"parameters":[{"id":2828,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2829,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2830,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"signatures":[{"id":2831,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":31,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L31"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2825]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":29,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L29"}],"signatures":[{"id":2832,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"parameters":[{"id":2833,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2834,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2835,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"signatures":[{"id":2836,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":30,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L30"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":2852,"name":"expect","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":38,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L38"}],"type":{"type":"reference","target":2810,"name":"ExpectFunction","package":"@w5s/core-type"}},{"id":2837,"name":"it","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"type":{"type":"reflection","declaration":{"id":2838,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2846,"name":"each","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":36,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L36"}],"type":{"type":"reference","target":2867,"name":"TestEachFunction","package":"@w5s/core-type"}},{"id":2839,"name":"todo","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"reflection","declaration":{"id":2840,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2841,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":10,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"parameters":[{"id":2842,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2843,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2844,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"signatures":[{"id":2845,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":35,"character":36,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L35"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2846,2839]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":33,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L33"}],"signatures":[{"id":2847,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"parameters":[{"id":2848,"name":"description","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2849,"name":"fn","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":2850,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"signatures":[{"id":2851,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":34,"character":30,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L34"}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[2823,2852,2837]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L28"}],"permalink":"/std/fr/api/core-type/interface/TestingLibrary","categories":[],"previousId":2853,"nextId":2743},{"id":2743,"name":"AnyFunction","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that takes any kind of parameters and returns anything"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction decorate<F extends AnyFunction>(fn: F): F {\\n  // ...\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"type":{"type":"reflection","declaration":{"id":2744,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/AnyFunction.ts","line":11,"character":26,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/AnyFunction.ts#L11"}],"signatures":[{"id":2745,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":2746,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/std/fr/api/core-type#AnyFunction","categories":[],"previousId":2822,"nextId":2752},{"id":2752,"name":"Awaitable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Type for something that can be used with "},{"kind":"code","text":"`await`"},{"kind":"text","text":".\\nIt can be either "},{"kind":"code","text":"`T`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Promise<T>`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://stackoverflow.com/a/56129545"}]}]},"sources":[{"fileName":"packages/core-type/src/Awaitable.ts","line":7,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Awaitable.ts#L7"}],"typeParameters":[{"id":2753,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"union","types":[{"type":"reference","target":2753,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PromiseLike"},"typeArguments":[{"type":"reference","target":2753,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"PromiseLike","package":"typescript"}]},"permalink":"/std/fr/api/core-type#Awaitable","categories":[],"previousId":2743,"nextId":2754},{"id":2754,"name":"Day","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Day of the month"}]},"sources":[{"fileName":"packages/core-type/src/Day.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Day.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31}]},"permalink":"/std/fr/api/core-type#Day","categories":[],"previousId":2752,"nextId":2755},{"id":2755,"name":"EmptyObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Empty object type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.totaltypescript.com/the-empty-object-type-in-typescript"}]}]},"sources":[{"fileName":"packages/core-type/src/EmptyObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/EmptyObject.ts#L6"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"PropertyKey"},"name":"PropertyKey","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"},"permalink":"/std/fr/api/core-type#EmptyObject","categories":[],"previousId":2754,"nextId":2807},{"id":2807,"name":"ExpectAssertion","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}],"type":{"type":"intersection","types":[{"type":"reference","target":2784,"name":"ExpectAssertionObject","package":"@w5s/core-type"},{"type":"reflection","declaration":{"id":2808,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2809,"name":"not","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L14"}],"type":{"type":"reference","target":2784,"name":"ExpectAssertionObject","package":"@w5s/core-type"}}],"groups":[{"title":"Properties","children":[2809]}],"sources":[{"fileName":"packages/core-type/src/TestingLibrary.ts","line":13,"character":54,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/TestingLibrary.ts#L13"}]}}]},"permalink":"/std/fr/api/core-type#ExpectAssertion","categories":[],"previousId":2755,"nextId":2756},{"id":2756,"name":"Hour","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"An hour of the day"}]},"sources":[{"fileName":"packages/core-type/src/Hour.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Hour.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23}]},"permalink":"/std/fr/api/core-type#Hour","categories":[],"previousId":2807,"nextId":2757},{"id":2757,"name":"JSONArray","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONArray.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONArray.ts#L6"}],"type":{"type":"array","elementType":{"type":"reference","target":2763,"name":"JSONValue","package":"@w5s/core-type"}},"permalink":"/std/fr/api/core-type#JSONArray","categories":[],"previousId":2756,"nextId":2758},{"id":2758,"name":"JSONObject","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Record of JSONValue"}]},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"type":{"type":"reflection","declaration":{"id":2759,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":6,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L6"}],"indexSignature":{"id":2760,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/core-type/src/JSONObject.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONObject.ts#L7"}],"parameters":[{"id":2761,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2763,"name":"JSONValue","package":"@w5s/core-type"}}}},"permalink":"/std/fr/api/core-type#JSONObject","categories":[],"previousId":2757,"nextId":2762},{"id":2762,"name":"JSONPrimitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any JSON primitive\\n\\n- null\\n- boolean\\n- number\\n- string"}]},"sources":[{"fileName":"packages/core-type/src/JSONPrimitive.ts","line":9,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONPrimitive.ts#L9"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]},"permalink":"/std/fr/api/core-type#JSONPrimitive","categories":[],"previousId":2758,"nextId":2763},{"id":2763,"name":"JSONValue","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Any valid JSON value"}]},"sources":[{"fileName":"packages/core-type/src/JSONValue.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/JSONValue.ts#L8"}],"type":{"type":"union","types":[{"type":"reference","target":2762,"name":"JSONPrimitive","package":"@w5s/core-type"},{"type":"reference","target":2757,"name":"JSONArray","package":"@w5s/core-type"},{"type":"reference","target":2758,"name":"JSONObject","package":"@w5s/core-type"}]},"permalink":"/std/fr/api/core-type#JSONValue","categories":[],"previousId":2762,"nextId":2764},{"id":2764,"name":"Minute","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Minute of an hour"}]},"sources":[{"fileName":"packages/core-type/src/Minute.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Minute.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":0},{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12},{"type":"literal","value":13},{"type":"literal","value":14},{"type":"literal","value":15},{"type":"literal","value":16},{"type":"literal","value":17},{"type":"literal","value":18},{"type":"literal","value":19},{"type":"literal","value":20},{"type":"literal","value":21},{"type":"literal","value":22},{"type":"literal","value":23},{"type":"literal","value":24},{"type":"literal","value":25},{"type":"literal","value":26},{"type":"literal","value":27},{"type":"literal","value":28},{"type":"literal","value":29},{"type":"literal","value":30},{"type":"literal","value":31},{"type":"literal","value":32},{"type":"literal","value":33},{"type":"literal","value":34},{"type":"literal","value":35},{"type":"literal","value":36},{"type":"literal","value":37},{"type":"literal","value":38},{"type":"literal","value":39},{"type":"literal","value":40},{"type":"literal","value":41},{"type":"literal","value":42},{"type":"literal","value":43},{"type":"literal","value":44},{"type":"literal","value":45},{"type":"literal","value":46},{"type":"literal","value":47},{"type":"literal","value":48},{"type":"literal","value":49},{"type":"literal","value":50},{"type":"literal","value":51},{"type":"literal","value":52},{"type":"literal","value":53},{"type":"literal","value":54},{"type":"literal","value":55},{"type":"literal","value":56},{"type":"literal","value":57},{"type":"literal","value":58},{"type":"literal","value":59}]},"permalink":"/std/fr/api/core-type#Minute","categories":[],"previousId":2763,"nextId":2765},{"id":2765,"name":"Month","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Month of the year"}]},"sources":[{"fileName":"packages/core-type/src/Month.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Month.ts#L4"}],"type":{"type":"union","types":[{"type":"literal","value":1},{"type":"literal","value":2},{"type":"literal","value":3},{"type":"literal","value":4},{"type":"literal","value":5},{"type":"literal","value":6},{"type":"literal","value":7},{"type":"literal","value":8},{"type":"literal","value":9},{"type":"literal","value":10},{"type":"literal","value":11},{"type":"literal","value":12}]},"permalink":"/std/fr/api/core-type#Month","categories":[],"previousId":2764,"nextId":2766},{"id":2766,"name":"Nullable","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A type that can be either "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":", "},{"kind":"code","text":"`null`"},{"kind":"text","text":", or "},{"kind":"code","text":"`T`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype NullableNumber = Nullable<number>;\\n\\nfunction someFunction(value: NullableNumber) {\\n  // value is number | undefined | null\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Nullable.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Nullable.ts#L13"}],"typeParameters":[{"id":2767,"name":"T","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"},{"type":"reference","target":2767,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}]},"permalink":"/std/fr/api/core-type#Nullable","categories":[],"previousId":2765,"nextId":2768},{"id":2768,"name":"PartialKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a partial type of "},{"kind":"code","text":"`T`"},{"kind":"text","text":" for keys in "},{"kind":"code","text":"`Keys`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { required: boolean; optional1: string; optional2: string; };\\ntype OptionalT = PartialKeys<T, \'optional\'>; // { required: boolean; optional1?: string; optional2?: string; };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/PartialKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/PartialKeys.ts#L12"}],"typeParameters":[{"id":2769,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2770,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2769,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2771,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2769,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2770,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2769,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2770,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Partial","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/fr/api/core-type#PartialKeys","categories":[],"previousId":2766,"nextId":2771},{"id":2771,"name":"Pretty","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Flatten the type. Useful for IDE information."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype A = { a: boolean };\\ntype B = { b: string };\\ntype AB = Pretty<A & B>; // { a: boolean; b: string; }\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}],"typeParameters":[{"id":2773,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"intersection","types":[{"type":"mapped","parameter":"KeyType","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2773,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/Pretty.ts","qualifiedName":"KeyType"},"name":"KeyType","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2773,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}},{"type":"reflection","declaration":{"id":2772,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core-type/src/Pretty.ts","line":11,"character":63,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Pretty.ts#L11"}]}}]},"permalink":"/std/fr/api/core-type#Pretty","categories":[],"previousId":2768,"nextId":2774},{"id":2774,"name":"Primitive","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Primitive values are immutable data at the lowest level of the language.\\n\\nThere are 7 primitive types\\n- string\\n- number\\n- symbol\\n- bigint\\n- boolean\\n- null\\n- undefined"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive"}]}]},"sources":[{"fileName":"packages/core-type/src/Primitive.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Primitive.ts#L15"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"permalink":"/std/fr/api/core-type#Primitive","categories":[],"previousId":2771,"nextId":2775},{"id":2775,"name":"RequiredKeys","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Make specified "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" properties in "},{"kind":"code","text":"`T`"},{"kind":"text","text":" required"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = { foo?: boolean, bar?: string }\\ntype RequiredT = RequiredKeys<T, \'bar\'>; // { foo?: boolean; bar: string };\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/RequiredKeys.ts","line":12,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/RequiredKeys.ts#L12"}],"typeParameters":[{"id":2776,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2777,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2776,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"reference","target":2771,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":2776,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2777,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Required"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":2776,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2777,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"Pick","package":"typescript"}],"name":"Required","package":"typescript"}]}],"name":"Pretty","package":"@w5s/core-type"},"permalink":"/std/fr/api/core-type#RequiredKeys","categories":[],"previousId":2774,"nextId":2778},{"id":2778,"name":"Second","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Second of a minute"}]},"sources":[{"fileName":"packages/core-type/src/Second.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Second.ts#L6"}],"type":{"type":"reference","target":2764,"name":"Minute","package":"@w5s/core-type"},"permalink":"/std/fr/api/core-type#Second","categories":[],"previousId":2775,"nextId":2779},{"id":2779,"name":"Tag","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Enhance "},{"kind":"code","text":"`Base`"},{"kind":"text","text":" by adding tags. Every tag is prefixed by "},{"kind":"code","text":"`@@`"},{"kind":"text","text":" as a convention to never be used by runtime code"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype PositiveNumber = number & Tag<\'Positive\'>;\\nconst isPositive = (n: number): n is PositiveNumber => n >= 0;\\nconst squareRoot = (n: PositiveNumber): PositiveNumber => Math.sqrt(n) as PositiveNumber;\\nconst value = 0;\\nsquareRoot(value); // tsc: Error\\nif (isPositive(value)) {\\n  squareRoot(value); // tsc: Passed\\n}\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}],"typeParameters":[{"id":2782,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},{"id":2783,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"literal","value":true}}],"type":{"type":"reflection","declaration":{"id":2780,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2781,"name":"@@tag","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L17"}],"type":{"type":"mapped","parameter":"K","parameterType":{"type":"reference","target":2782,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true},"templateType":{"type":"reference","target":2783,"name":"Value","package":"@w5s/core-type","refersToTypeParameter":true},"readonlyModifier":"+"}}],"groups":[{"title":"Properties","children":[2781]}],"sources":[{"fileName":"packages/core-type/src/Tag.ts","line":16,"character":59,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Tag.ts#L16"}]}},"permalink":"/std/fr/api/core-type#Tag","categories":[],"previousId":2778,"nextId":2879},{"id":2879,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all values from the keys "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" of "},{"kind":"code","text":"`T`"},{"kind":"text","text":". If "},{"kind":"code","text":"`Keys`"},{"kind":"text","text":" is omitted, all keys are used."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype AllValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }> // \'bar\' | \'baz\' | boolean\\ntype SomeValues = ValueOf<{ Foo: boolean; Bar: \'bar\'; Baz: \'baz\' }, \'Baz\' | \'Bar\'> // \'bar\' | \'baz\'\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/ValueOf.ts","line":10,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/ValueOf.ts#L10"}],"typeParameters":[{"id":2880,"name":"T","variant":"typeParam","kind":131072,"flags":{}},{"id":2881,"name":"Keys","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2880,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"default":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":2880,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":2881,"name":"Keys","package":"@w5s/core-type","refersToTypeParameter":true},"objectType":{"type":"reference","target":2880,"name":"T","package":"@w5s/core-type","refersToTypeParameter":true}},"permalink":"/std/fr/api/core-type#ValueOf","categories":[],"previousId":2779,"nextId":2882},{"id":2882,"name":"Year","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/core-type/src/Year.ts","line":4,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/Year.ts#L4"}],"type":{"type":"intrinsic","name":"number"},"permalink":"/std/fr/api/core-type#Year","categories":[],"previousId":2879},{"id":2747,"name":"assertType","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"signatures":[{"id":2748,"name":"assertType","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when "},{"kind":"code","text":"`Actual`"},{"kind":"text","text":" is not strictly equal to "},{"kind":"code","text":"`Expected`"},{"kind":"text","text":".\\nThis is a type helper and does nothing at run time."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype Expected = \'foo\'\\nassertType<\'foo\', Expected>(true);// -> everything is fine\\nassertType<\'bar\', Expected>(true);// -> ts raises an error\\n```"}]}]},"sources":[{"fileName":"packages/core-type/src/assertType.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/assertType.ts#L13"}],"typeParameter":[{"id":2749,"name":"Actual","variant":"typeParam","kind":131072,"flags":{}},{"id":2750,"name":"Expected","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":2751,"name":"_shouldBeEqual","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an inferred value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/src/assertType.ts","qualifiedName":"IsExact"},"typeArguments":[{"type":"reference","target":2749,"name":"Actual","package":"@w5s/core-type","refersToTypeParameter":true},{"type":"reference","target":2750,"name":"Expected","package":"@w5s/core-type","refersToTypeParameter":true}],"name":"IsExact","package":"@w5s/core-type"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/core-type/function/assertType","categories":[],"nextId":2784}],"groups":[{"title":"Functions","children":[2747]},{"title":"Interfaces","children":[2784,2810,2867,2853,2822]},{"title":"Type Aliases","children":[2743,2752,2754,2755,2807,2756,2757,2758,2762,2763,2764,2765,2766,2768,2771,2774,2775,2778,2779,2879,2882]}],"sources":[{"fileName":"packages/core-type/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/core-type/src/index.ts#L1"}],"permalink":"/std/fr/api/core-type"},"urlSlug":"core-type"}],"packageName":"@w5s/core-type","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":8,"name":"@w5s/env","variant":"declaration","kind":2,"flags":{},"children":[{"id":2884,"name":"Env","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A dictionary of environment variables"}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"indexSignature":{"id":2885,"name":"__index","variant":"signature","kind":8192,"flags":{},"sources":[{"fileName":"packages/env/src/Env.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L28"}],"parameters":[{"id":2886,"name":"key","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Option","package":"@w5s/core"}},"permalink":"/std/fr/api/env/interface/Env","categories":[],"nextId":2883},{"id":2883,"name":"Env","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"An object containing the environment variables"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst NODE_ENV = Env[\'NODE_ENV\'];\\n```"}]}]},"sources":[{"fileName":"packages/env/src/Env.ts","line":27,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L27"},{"fileName":"packages/env/src/Env.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/env/src/Env.ts#L39"}],"type":{"type":"reference","target":2884,"name":"Env","package":"@w5s/env"},"permalink":"/std/fr/api/env#Env","categories":[],"previousId":2884}],"groups":[{"title":"Interfaces","children":[2884]},{"title":"Variables","children":[2883]}],"sources":[{"fileName":"packages/env/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/env/src/index.ts#L1"}],"permalink":"/std/fr/api/env"},"urlSlug":"env"}],"packageName":"@w5s/env","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":9,"name":"@w5s/error","variant":"declaration","kind":2,"flags":{},"children":[{"id":2887,"name":"AbortError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The AbortError object indicates an error that the operation was aborted."}]},"children":[{"id":2907,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2908,"name":"new AbortError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2909,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":2910,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2887,"name":"AbortError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).constructor"}},{"id":2895,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"AbortError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).errorName"}},{"id":2896,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2897,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2898,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).asString"}},{"id":2899,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2900,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2901,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2902,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2903,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2904,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2905,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2906,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'AbortError\',\\n  errorMessage: \'The operation was aborted\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2907]},{"title":"Properties","children":[2895]},{"title":"Methods","children":[2896,2899]}],"sources":[{"fileName":"packages/error/src/AbortError.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AbortError.ts#L7"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2888,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2892,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2890,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2889,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"AbortError"}},{"id":2891,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2892,2890,2889,2891]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2893,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2894,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"AbortError"}}],"groups":[{"title":"Properties","children":[2894]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/AbortError","categories":[],"nextId":2911},{"id":2911,"name":"AggregateError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.AggregateError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2021.promise.d.ts","qualifiedName":"AggregateError"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { AggregateError } from \'@w5s/error\';\\n\\ntry {\\n  throw new AggregateError([new Error(\\"some error\\")], \\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof AggregateError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"AggregateError\\"\\n  console.log(e.errors); // [ Error: \\"some error\\" ]\\n}\\n```"}]}]},"children":[{"id":2912,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"signatures":[{"id":2913,"name":"new AggregateError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"AggregateError constructor"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L34"}],"typeParameter":[{"id":2914,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"parameters":[{"id":2915,"name":"errors","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an iterable of error"}]},"type":{"type":"reference","target":2914,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}},{"id":2916,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2911,"typeArguments":[{"type":"reference","target":2914,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"AggregateError","package":"@w5s/error"},"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":2918,"name":"errors","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Array of error"}]},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L26"}],"type":{"type":"conditional","checkType":{"type":"reference","target":2914,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"trueType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":2914,"typeArguments":[{"type":"reference","target":2914,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}],"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true}}}]}},"falseType":{"type":"conditional","checkType":{"type":"reference","target":2914,"name":"Errors","package":"@w5s/error","qualifiedName":"AggregateError.Errors","refersToTypeParameter":true},"extendsType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},"trueType":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"T"},"name":"T","package":"@w5s/error","refersToTypeParameter":true}},"falseType":{"type":"intrinsic","name":"never"}}}},{"id":2917,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L21"}],"type":{"type":"literal","value":"AggregateError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[2912]},{"title":"Properties","children":[2918,2917]}],"sources":[{"fileName":"packages/error/src/AggregateError.ts","line":37,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L37"},{"fileName":"packages/error/src/AggregateError.ts","line":20,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/AggregateError.ts#L20"}],"typeParameters":[{"id":2919,"name":"Errors","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}]}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/AggregateError","categories":[],"previousId":2887,"nextId":2920},{"id":2920,"name":"ArgumentError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The ArgumentError object indicates an error that the program wrong argument is passed to a function"}]},"children":[{"id":2940,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":2941,"name":"new ArgumentError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":2942,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":2943,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":2920,"name":"ArgumentError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).constructor"}},{"id":2928,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"ArgumentError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).errorName"}},{"id":2929,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2930,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2931,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).asString"}},{"id":2932,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2933,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2934,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2935,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2936,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2937,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2938,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2939,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'ArgumentError\',\\n  errorMessage: \'Some arguments are invalid or missing\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[2940]},{"title":"Properties","children":[2928]},{"title":"Methods","children":[2929,2932]}],"sources":[{"fileName":"packages/error/src/ArgumentError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ArgumentError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2921,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2925,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2923,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2922,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"ArgumentError"}},{"id":2924,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2925,2923,2922,2924]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":2926,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2927,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"ArgumentError"}}],"groups":[{"title":"Properties","children":[2927]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/ArgumentError","categories":[],"previousId":2911,"nextId":2956},{"id":2956,"name":"Error","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.Error","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"tsLinkText":""}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { Error } from \'@w5s/error\';\\n\\nthrow new Error(\'my message\', { cause: someError });\\n```"}]}]},"children":[{"id":2957,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"signatures":[{"id":2958,"name":"new Error","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L42"}],"parameters":[{"id":2959,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error message"}]},"type":{"type":"intrinsic","name":"string"}},{"id":2960,"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"the error options"}]},"type":{"type":"reference","target":3020,"name":"ErrorOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2956,"name":"Error","package":"@w5s/error"}}]},{"id":2964,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error cause"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L34"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2962,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L24"}],"type":{"type":"intrinsic","name":"string"}},{"id":2961,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L19"}],"type":{"type":"literal","value":"Error"}},{"id":2963,"name":"stack","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error stack description (when supported)"}]},"sources":[{"fileName":"packages/error/src/Error.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L29"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[2957]},{"title":"Properties","children":[2964,2962,2961,2963]}],"sources":[{"fileName":"packages/error/src/Error.ts","line":45,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L45"},{"fileName":"packages/error/src/Error.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/Error.ts#L15"}],"permalink":"/std/fr/api/error/class/Error","categories":[],"previousId":2920,"nextId":3022},{"id":3022,"name":"EvalError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.EvalError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"EvalError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe EvalError object indicates an error regarding the global eval() function. This exception is not thrown by JavaScript anymore, however the EvalError object remains for compatibility."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { EvalError } from \'@w5s/error\';\\n\\ntry {\\n  throw new EvalError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeEvalErrorError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"EvalError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3023,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3024,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3025,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3022,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3026,"name":"new EvalError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3027,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3028,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3022,"name":"EvalError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3029,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/EvalError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L27"}],"type":{"type":"literal","value":"EvalError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3023]},{"title":"Properties","children":[3029]}],"sources":[{"fileName":"packages/error/src/EvalError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L30"},{"fileName":"packages/error/src/EvalError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/EvalError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/EvalError","categories":[],"previousId":2956,"nextId":3037},{"id":3037,"name":"InvariantError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The InvariantError object indicates an error that the program violates a fundamental assumption or condition.\\nThis exception is typically used to indicate bugs in the code, such as incorrect assumptions about the state of an object or function.\\nThe InvariantError object should be thrown when a violation of an invariant occurs and should not be caught by the program.\\nInstead, it should be handled by the program\'s error handling mechanism."}]},"children":[{"id":3057,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3058,"name":"new InvariantError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3059,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":3060,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3037,"name":"InvariantError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).constructor"}},{"id":3045,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"InvariantError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).errorName"}},{"id":3046,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3047,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3048,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).asString"}},{"id":3049,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3050,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3051,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3052,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3053,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3054,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3055,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3056,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'InvariantError\',\\n  errorMessage: \'An invariant error occurred\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3057]},{"title":"Properties","children":[3045]},{"title":"Methods","children":[3046,3049]}],"sources":[{"fileName":"packages/error/src/InvariantError.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/InvariantError.ts#L10"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3038,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3042,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3040,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3039,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"InvariantError"}},{"id":3041,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3042,3040,3039,3041]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3043,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3044,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"InvariantError"}}],"groups":[{"title":"Properties","children":[3044]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/InvariantError","categories":[],"previousId":3022,"nextId":3064},{"id":3064,"name":"NotImplementedError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The NotImplementedError object indicates an error that the current function was not implemented"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nfunction someFunction() {\\n  throw NotImplementedError();// message can be customized\\n}\\n```"}]}]},"children":[{"id":3084,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3085,"name":"new NotImplementedError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3086,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":3087,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3064,"name":"NotImplementedError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).constructor"}},{"id":3072,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"NotImplementedError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).errorName"}},{"id":3073,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3074,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3075,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).asString"}},{"id":3076,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3077,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3078,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3079,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3080,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3081,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3082,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3083,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'NotImplementedError\',\\n  errorMessage: \'Not implemented\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3084]},{"title":"Properties","children":[3072]},{"title":"Methods","children":[3073,3076]}],"sources":[{"fileName":"packages/error/src/NotImplementedError.ts","line":13,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/NotImplementedError.ts#L13"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3065,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3069,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3067,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3066,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"NotImplementedError"}},{"id":3068,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3069,3067,3066,3068]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3070,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3071,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"NotImplementedError"}}],"groups":[{"title":"Properties","children":[3071]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/NotImplementedError","categories":[],"previousId":3037,"nextId":3088},{"id":3088,"name":"RangeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.RangeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RangeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nA RangeError is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { RangeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new RangeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof RangeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"RangeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3089,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3090,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3091,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3088,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3092,"name":"new RangeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3093,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3094,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3088,"name":"RangeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3095,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/RangeError.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L27"}],"type":{"type":"literal","value":"RangeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3089]},{"title":"Properties","children":[3095]}],"sources":[{"fileName":"packages/error/src/RangeError.ts","line":30,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L30"},{"fileName":"packages/error/src/RangeError.ts","line":26,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RangeError.ts#L26"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/RangeError","categories":[],"previousId":3064,"nextId":3096},{"id":3096,"name":"ReferenceError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.ReferenceError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReferenceError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe ReferenceError object represents an error when a variable that doesn\'t exist (or hasn\'t yet been initialized) in the current scope is referenced."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { ReferenceError } from \'@w5s/error\';\\n\\ntry {\\n  throw new ReferenceError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof ReferenceError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"ReferenceError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3097,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3098,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3099,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3096,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3100,"name":"new ReferenceError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3101,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3102,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3096,"name":"ReferenceError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3103,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L26"}],"type":{"type":"literal","value":"ReferenceError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3097]},{"title":"Properties","children":[3103]}],"sources":[{"fileName":"packages/error/src/ReferenceError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L29"},{"fileName":"packages/error/src/ReferenceError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ReferenceError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/ReferenceError","categories":[],"previousId":3088,"nextId":3104},{"id":3104,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The RuntimeError object indicates an error that an error occurred during the runtime of a program."}]},"children":[{"id":3124,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3125,"name":"new RuntimeError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3126,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":3127,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3104,"name":"RuntimeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).constructor"}},{"id":3112,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"RuntimeError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).errorName"}},{"id":3113,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3114,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3115,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).asString"}},{"id":3116,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3117,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3118,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3119,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3120,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3121,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3122,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3123,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'RuntimeError\',\\n  errorMessage: \'An error occurred during program execution\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3124]},{"title":"Properties","children":[3112]},{"title":"Methods","children":[3113,3116]}],"sources":[{"fileName":"packages/error/src/RuntimeError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/RuntimeError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3105,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3109,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3107,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3106,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"RuntimeError"}},{"id":3108,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3109,3107,3106,3108]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3110,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3111,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"RuntimeError"}}],"groups":[{"title":"Properties","children":[3111]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/RuntimeError","categories":[],"previousId":3096,"nextId":3128},{"id":3128,"name":"SyntaxError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.SyntaxError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"SyntaxError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe SyntaxError object represents an error when trying to interpret syntactically invalid code. It is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { SyntaxError } from \'@w5s/error\';\\n\\ntry {\\n  throw new SyntaxError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof SyntaxError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"SyntaxError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3129,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3130,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3131,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3128,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3132,"name":"new SyntaxError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3133,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3134,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3128,"name":"SyntaxError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3135,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L26"}],"type":{"type":"literal","value":"SyntaxError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3129]},{"title":"Properties","children":[3135]}],"sources":[{"fileName":"packages/error/src/SyntaxError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L29"},{"fileName":"packages/error/src/SyntaxError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/SyntaxError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/SyntaxError","categories":[],"previousId":3104,"nextId":3139},{"id":3139,"name":"TimeoutError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"The TimeoutError object indicates an error that the operation took too much time and was canceled"}]},"children":[{"id":3159,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"signatures":[{"id":3160,"name":"new TimeoutError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"parameters":[{"id":3161,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reflection","declaration":{"id":3162,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3139,"name":"TimeoutError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).constructor"}},{"id":3147,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"literal","value":"TimeoutError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).errorName"}},{"id":3148,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":3149,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":3150,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).asString"}},{"id":3151,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3152,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":3153,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3154,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":3155,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":3156,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3157,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3158,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n  errorName: \'TimeoutError\',\\n  errorMessage: \'Operation timed out\',\\n}).hasInstance"}}],"groups":[{"title":"Constructors","children":[3159]},{"title":"Properties","children":[3147]},{"title":"Methods","children":[3148,3151]}],"sources":[{"fileName":"packages/error/src/TimeoutError.ts","line":6,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TimeoutError.ts#L6"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3140,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3144,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3142,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":3141,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"literal","value":"TimeoutError"}},{"id":3143,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3144,3142,3141,3143]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3145,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3146,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"literal","value":"TimeoutError"}}],"groups":[{"title":"Properties","children":[3146]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/error/class/TimeoutError","categories":[],"previousId":3128,"nextId":3163},{"id":3163,"name":"TypeError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.TypeError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TypeError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe TypeError object represents an error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { TypeError } from \'@w5s/error\';\\n\\ntry {\\n  throw new TypeError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof TypeError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"TypeError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3164,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3165,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3166,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3163,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3167,"name":"new TypeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3168,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3169,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3163,"name":"TypeError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3170,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/TypeError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L26"}],"type":{"type":"literal","value":"TypeError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3164]},{"title":"Properties","children":[3170]}],"sources":[{"fileName":"packages/error/src/TypeError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L29"},{"fileName":"packages/error/src/TypeError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/TypeError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/TypeError","categories":[],"previousId":3139,"nextId":3171},{"id":3171,"name":"URIError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to native "},{"kind":"inline-tag","tag":"@link","text":"globalThis.URIError","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"URIError"},"tsLinkText":""},{"kind":"text","text":"\\n\\nThe URIError object represents an error when a global URI handling function was used in a wrong way."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { URIError } from \'@w5s/error\';\\n\\ntry {\\n  throw new URIError(\\"Hello\\");\\n} catch (e) {\\n  console.log(e instanceof URIError); // true\\n  console.log(e.message); // \\"Hello\\"\\n  console.log(e.name); // \\"URIError\\"\\n  console.log(e.stack); // Stack of the error\\n}\\n```"}]}]},"children":[{"id":3172,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"signatures":[{"id":3173,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3174,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3171,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3175,"name":"new URIError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1082,"character":4}],"parameters":[{"id":3176,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":3177,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2022.error.d.ts","qualifiedName":"ErrorOptions"},"name":"ErrorOptions","package":"typescript"}}],"type":{"type":"reference","target":3171,"name":"URIError","package":"@w5s/error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Error.constructor"}},{"id":3178,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/URIError.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L26"}],"type":{"type":"literal","value":"URIError"},"overwrites":{"type":"reference","target":-1,"name":"Error.name"}}],"groups":[{"title":"Constructors","children":[3172]},{"title":"Properties","children":[3178]}],"sources":[{"fileName":"packages/error/src/URIError.ts","line":29,"character":24,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L29"},{"fileName":"packages/error/src/URIError.ts","line":25,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/URIError.ts#L25"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}],"permalink":"/std/fr/api/error/class/URIError","categories":[],"previousId":3163,"nextId":2965},{"id":2969,"name":"ErrorClass","variant":"declaration","kind":256,"flags":{},"children":[{"id":2970,"name":"constructor","variant":"declaration","kind":512,"flags":{},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2990,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2991,"name":"new ErrorClass","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L63"}],"typeParameter":[{"id":2992,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},"default":{"type":"reflection","declaration":{"id":2993,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}}],"parameters":[{"id":2994,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":3013,"typeArguments":[{"type":"reference","target":2992,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassParameters","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2995,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3001,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2999,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2996,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":2997,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2998,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2989,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[2998]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2992,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}}},{"id":3000,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3001,2999,2996,3000]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reflection","declaration":{"id":3002,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3003,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":2989,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[3003]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":2992,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty<typeof CustomError>.constructor"}},{"id":2971,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":59,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L59"}],"type":{"type":"reference","target":2989,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClass.Name","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Pretty.errorName"}},{"id":2972,"name":"prototype","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L48"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":2973,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2977,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2975,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2974,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"intrinsic","name":"string"}},{"id":2976,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2977,2975,2974,2976]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}]}],"name":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.prototype"}},{"id":2978,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"signatures":[{"id":2979,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L58"}],"parameters":[{"id":2980,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.asString"}},{"id":2981,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2982,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"typeParameter":[{"id":2983,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":2984,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"signatures":[{"id":2985,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":65,"character":28,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L65"}],"parameters":[{"id":2986,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":2987,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":2988,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":2901,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Pretty.hasInstance"}}],"groups":[{"title":"Constructors","children":[2970,2990]},{"title":"Properties","children":[2971,2972]},{"title":"Methods","children":[2978,2981]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"typeParameters":[{"id":2989,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Pretty"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":2948,"name":"CustomError","package":"@w5s/error"}}],"name":"Pretty","package":"@w5s/core-type"}],"permalink":"/std/fr/api/error/interface/ErrorClass","categories":[],"previousId":3179,"nextId":3009},{"id":3009,"name":"ErrorClassOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":3011,"name":"errorMessage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default error message"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L52"}],"type":{"type":"intrinsic","name":"string"}},{"id":3010,"name":"errorName","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L48"}],"type":{"type":"reference","target":3012,"name":"Name","package":"@w5s/error","qualifiedName":"ErrorClassOptions.Name","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[3011,3010]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L44"}],"typeParameters":[{"id":3012,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/error/interface/ErrorClassOptions","categories":[],"previousId":2969,"nextId":3020},{"id":3020,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{},"children":[{"id":3021,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cause of the error"}]},"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L5"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[3021]}],"sources":[{"fileName":"packages/error/src/ErrorOptions.ts","line":1,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorOptions.ts#L1"}],"permalink":"/std/fr/api/error/interface/ErrorOptions","categories":[],"previousId":3009,"nextId":2949},{"id":2949,"name":"CustomError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Standard extendable error type"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"typeParameters":[{"id":2955,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"},"default":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorRequiredProperties"},"name":"CustomErrorRequiredProperties","package":"@w5s/error"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"globalThis.Error","package":"typescript","qualifiedName":"Error"},{"type":"reflection","declaration":{"id":2950,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":2954,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":31,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":2952,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":23,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":2951,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":19,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L19"}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"name"},"objectType":{"type":"reference","target":2955,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}}},{"id":2953,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":27,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L27"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2954,2952,2951,2953]}],"sources":[{"fileName":"packages/error/src/CustomError.ts","line":15,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L15"}]}},{"type":"reference","target":2955,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"Readonly","package":"typescript"},"permalink":"/std/fr/api/error#CustomError","categories":[],"previousId":3020,"nextId":3013},{"id":3013,"name":"ErrorClassParameters","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all parameters to create a new CustomError"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":71,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L71"}],"typeParameters":[{"id":3014,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"conditional","checkType":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"RequiredKeysOf"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":3014,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"}],"name":"RequiredKeysOf","package":"@w5s/error"},"extendsType":{"type":"intrinsic","name":"never"},"trueType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reference","target":3014,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]},"falseType":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":3015,"typeArguments":[{"type":"reference","target":3014,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}},"permalink":"/std/fr/api/error#ErrorClassParameters","categories":[],"previousId":2949,"nextId":3015},{"id":3015,"name":"ErrorClassProperties","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extract all properties passed to constructor"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":79,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L79"}],"typeParameters":[{"id":3019,"name":"Properties","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":3019,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true},{"type":"union","types":[{"type":"literal","value":"name"},{"type":"literal","value":"stack"},{"type":"literal","value":"message"},{"type":"literal","value":"cause"}]}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3016,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3018,"name":"cause","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional cause"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":90,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L90"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3017,"name":"message","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional message, if omitted default one will be used"}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L86"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3018,3017]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":82,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L82"}]}}]},"permalink":"/std/fr/api/error#ErrorClassProperties","categories":[],"previousId":3013,"nextId":3004},{"id":3004,"name":"ErrorType","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L6"}],"typeParameters":[{"id":3007,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3008,"name":"Properties","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reference","target":2949,"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":3005,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3006,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":8,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L8"}],"type":{"type":"reference","target":3007,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}}],"groups":[{"title":"Properties","children":[3006]}],"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L7"}]}},{"type":"reference","target":3008,"name":"Properties","package":"@w5s/error","refersToTypeParameter":true}]}],"name":"CustomError","package":"@w5s/error"},"permalink":"/std/fr/api/error#ErrorType","categories":[],"previousId":3015,"nextId":2948},{"id":2948,"name":"CustomError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`CustomError`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst parentError: Error;\\nconst error = new CustomError({\\n  name: \'FooError\' as const, // this is required\\n  message: \'my custom message\', // customize message (optional)\\n  cause: parentError, // Error that caused this error (optional)\\n})\\n```"}]},{"tag":"@param","name":"properties","content":[{"kind":"text","text":"initial properties"}]}]},"sources":[{"fileName":"packages/error/src/CustomError.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L14"},{"fileName":"packages/error/src/CustomError.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/error/src/CustomError.ts#L86"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/CustomError.ts","qualifiedName":"CustomErrorConstructor"},"name":"CustomErrorConstructor","package":"@w5s/error"},"permalink":"/std/fr/api/error#CustomError","categories":[],"previousId":3004},{"id":2965,"name":"ErrorClass","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"},{"fileName":"packages/error/src/ErrorClass.ts","line":55,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L55"}],"signatures":[{"id":2966,"name":"ErrorClass","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" default factory\\nSee "},{"kind":"inline-tag","tag":"@link","text":"ErrorClass","target":2965,"tsLinkText":""},{"kind":"text","text":" for additional properties added to the constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nexport class MyError extends ErrorClass({\\n  errorName: \'MyError\',\\n  // errorMessage: \'my message\',\\n})<{\\n  foo: boolean;\\n}> {};\\n\\nconst instance = MyError({ foo: true, message: \'hey!\' }); // Error { name: \'MyError\', message: \'hey!\', foo: true }\\nMyError.errorName === \'MyError\' // true\\nMyError.hasInstance(instance); // true\\n```"}]}]},"sources":[{"fileName":"packages/error/src/ErrorClass.ts","line":31,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/ErrorClass.ts#L31"}],"typeParameter":[{"id":2967,"name":"Name","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":2968,"name":"options","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the options for the new error type"}]},"type":{"type":"reference","target":3009,"typeArguments":[{"type":"reference","target":2967,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClassOptions","package":"@w5s/error"}}],"type":{"type":"reference","target":2969,"typeArguments":[{"type":"reference","target":2967,"name":"Name","package":"@w5s/error","refersToTypeParameter":true}],"name":"ErrorClass","package":"@w5s/error"}}],"permalink":"/std/fr/api/error/function/ErrorClass","categories":[],"previousId":3171,"nextId":2944},{"id":2944,"name":"assertNever","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"signatures":[{"id":2945,"name":"assertNever","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Raise a compile error when accessing this function and throws a TypeError at runtime\\nThis is useful for exhaustive switch check."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst print = (fruit: \'banana\'|\'kiwi\') => {\\n  switch (fruit) {\\n    case \'banana\': return \'\ud83c\udf4c Banana\';\\n    case \'kiwi\': return \'\ud83e\udd5d Kiwi\';\\n    default: return assertNever(fruit); // <- This line will report an error if a case is missing\\n  }\\n}\\n```"}]}]},"sources":[{"fileName":"packages/error/src/assertNever.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/assertNever.ts#L17"}],"typeParameter":[{"id":2946,"name":"V","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":2947,"name":"subject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the never value that should be reported"}]},"type":{"type":"reference","target":2946,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"type":{"type":"reference","target":2946,"name":"V","package":"@w5s/error","refersToTypeParameter":true}}],"permalink":"/std/fr/api/error/function/assertNever","categories":[],"previousId":2965,"nextId":3030},{"id":3030,"name":"invariant","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"},{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"},{"fileName":"packages/error/src/invariant.ts","line":18,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L18"}],"signatures":[{"id":3031,"name":"invariant","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else throws "},{"kind":"code","text":"`Error { name: \'InvariantError\', message }`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninvariant(true, \'this should be true\');// pass\\ninvariant(false, \'this should be true\');// throw new Error(\'this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/invariant.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L16"}],"parameters":[{"id":3032,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"literal","value":false}},{"id":3033,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"never"}},{"id":3034,"name":"invariant","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/error/src/invariant.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/invariant.ts#L17"}],"parameters":[{"id":3035,"name":"condition","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":3036,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"predicate","name":"condition","asserts":true}}],"permalink":"/std/fr/api/error/function/invariant","categories":[],"previousId":2944,"nextId":3061},{"id":3061,"name":"isError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/isError.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L16"}],"signatures":[{"id":3062,"name":"isError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the provided value is an Error object."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisError(new Error(\'Test Error\')); // true\\nisError(new TypeError(\'Test Error\')); // true\\n\\nisError(undefined); // false\\nisError({ name: \'Error\' }); // false\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"true if the value is an Error object, false otherwise."}]}]},"sources":[{"fileName":"packages/error/src/isError.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/isError.ts#L16"}],"parameters":[{"id":3063,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}}],"permalink":"/std/fr/api/error/function/isError","categories":[],"previousId":3030,"nextId":3136},{"id":3136,"name":"panic","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"signatures":[{"id":3137,"name":"panic","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Throw the given "},{"kind":"code","text":"`error`"},{"kind":"text","text":" to stop execution. Can be used as expression unlike throw statement."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst unknownValue: unknown = 123;\\nconst stringValue = typeof unknownValue === \'string\' ? unknownValue : panic(new Error(\'not a string\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/src/panic.ts","line":11,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/panic.ts#L11"}],"parameters":[{"id":3138,"name":"error","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error to throw"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"never"}}],"permalink":"/std/fr/api/error/function/panic","categories":[],"previousId":3061,"nextId":3179},{"id":3179,"name":"warning","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"signatures":[{"id":3180,"name":"warning","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Assert that "},{"kind":"code","text":"`condition`"},{"kind":"text","text":" is truthy, else print a message using "},{"kind":"code","text":"`console.warn`"},{"kind":"text","text":"\\n\\nIn production environment, "},{"kind":"code","text":"`message`"},{"kind":"text","text":" parameter could be stripped from source in order to reduce file size"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nwarning(true, \'this should be true\');// pass\\nwarning(false, \'this should be true\');// console.warn(\'Warning: this should be true\')\\n```"}]}]},"sources":[{"fileName":"packages/error/src/warning.ts","line":14,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/error/src/warning.ts#L14"}],"parameters":[{"id":3181,"name":"condition","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the predicate result"}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":3182,"name":"message","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"an optional message for Error"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/error/function/warning","categories":[],"previousId":3136,"nextId":2969}],"groups":[{"title":"Classes","children":[2887,2911,2920,2956,3022,3037,3064,3088,3096,3104,3128,3139,3163,3171]},{"title":"Functions","children":[2965,2944,3030,3061,3136,3179]},{"title":"Interfaces","children":[2969,3009,3020]},{"title":"Type Aliases","children":[2949,3013,3015,3004]},{"title":"Variables","children":[2948]}],"categories":[{"title":"Constructor","children":[2948]},{"title":"__CATEGORY__","children":[2887,2911,2920,2956,3022,3037,3064,3088,3096,3104,3128,3139,3163,3171,2969,3009,3020,2949,3013,3015,3004,2965,2944,3030,3061,3136,3179]}],"sources":[{"fileName":"packages/error/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/error/src/index.ts#L1"}],"permalink":"/std/fr/api/error"},"urlSlug":"error"}],"packageName":"@w5s/error","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":10,"name":"@w5s/http","variant":"declaration","kind":2,"flags":{},"children":[{"id":3305,"name":"Client","variant":"declaration","kind":4,"flags":{},"children":[{"id":3313,"name":"Options","variant":"declaration","kind":256,"flags":{},"children":[{"id":3322,"name":"fetch","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":3323,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"signatures":[{"id":3324,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":3325,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3326,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":3327,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"parameters":[{"id":3328,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3329,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.fetch"}},{"id":3314,"name":"onRequest","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":3315,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":3316,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":3317,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":3183,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onRequest"}},{"id":3318,"name":"onResponse","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":3319,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":3320,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":3321,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3183,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.onResponse"}},{"id":3330,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Partial.timeout"}}],"groups":[{"title":"Properties","children":[3322,3314,3318,3330]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":45,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L45"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":3286,"name":"Client","package":"@w5s/http"}],"name":"Partial","package":"typescript"}],"permalink":"/std/fr/api/http/namespace/Client#Options"},{"id":3331,"name":"defaultTimeoutDuration","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/Client.ts","line":47,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L47"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Client#defaultTimeoutDuration"},{"id":3309,"name":"getRequestTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"signatures":[{"id":3310,"name":"getRequestTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for the request and client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getRequestTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":74,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L74"}],"parameters":[{"id":3311,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3286,"name":"Client","package":"@w5s/http"}},{"id":3312,"name":"requestObject","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Client#getRequestTimeoutDuration"},{"id":3306,"name":"getTimeoutDuration","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"signatures":[{"id":3307,"name":"getTimeoutDuration","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the timeout duration in milliseconds for client"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst client = Client();\\nconst duration = Client.getTimeoutDuration(client);\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":59,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L59"}],"parameters":[{"id":3308,"name":"client","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3286,"name":"Client","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Client#getTimeoutDuration"}],"groups":[{"title":"Interfaces","children":[3313]},{"title":"Variables","children":[3331]},{"title":"Functions","children":[3309,3306]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/fr/api/http/namespace/Client","categories":[],"previousId":3825,"nextId":3184},{"id":3184,"name":"HTTPError","variant":"declaration","kind":4,"flags":{},"children":[{"id":3185,"name":"InvalidURL","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"An error when url passed is invalid"}]},"children":[{"id":3207,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3208,"name":"new InvalidURL","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3209,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":false,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3210,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3211,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3211]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3185,"name":"InvalidURL","package":"@w5s/http","qualifiedName":"HTTPError.InvalidURL"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  })<{ input: string }>.constructor"}},{"id":3212,"name":"input","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).input"}},{"id":3195,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPInvalidURLError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).errorName"}},{"id":3196,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3197,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3198,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).asString"}},{"id":3199,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3200,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3201,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3202,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3203,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3204,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3205,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3206,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPInvalidURLError\',\\n    errorMessage: \'An invalid URL was provided\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3207]},{"title":"Properties","children":[3212,3195]},{"title":"Methods","children":[3196,3199]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":14,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L14"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3186,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3190,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3188,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3187,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}},{"id":3189,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3190,3188,3187,3189]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3191,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3192,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPInvalidURLError"}}],"groups":[{"title":"Properties","children":[3192]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}},{"type":"reflection","declaration":{"id":3193,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3194,"name":"input","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":7,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3194]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":17,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L17"}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/http/namespace/HTTPError#InvalidURL"},{"id":3213,"name":"NetworkError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A network error when "},{"kind":"code","text":"`fetch`"},{"kind":"text","text":" fails"}]},"children":[{"id":3233,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3234,"name":"new NetworkError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3235,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3236,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3213,"name":"NetworkError","package":"@w5s/http","qualifiedName":"HTTPError.NetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).constructor"}},{"id":3221,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPNetworkError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).errorName"}},{"id":3222,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3223,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3224,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).asString"}},{"id":3225,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3226,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3227,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3228,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3229,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3230,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3231,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3232,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPNetworkError\',\\n    errorMessage: \'Network error occurred\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3233]},{"title":"Properties","children":[3221]},{"title":"Methods","children":[3222,3225]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":22,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L22"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3214,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3218,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3216,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3215,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}},{"id":3217,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3218,3216,3215,3217]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3219,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3220,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPNetworkError"}}],"groups":[{"title":"Properties","children":[3220]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/http/namespace/HTTPError#NetworkError"},{"id":3237,"name":"ParserError","variant":"declaration","kind":128,"flags":{},"comment":{"summary":[{"kind":"text","text":"A parsing error when the body cannot be parsed"}]},"children":[{"id":3257,"name":"constructor","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"signatures":[{"id":3258,"name":"new ParserError","variant":"signature","kind":16384,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error constructor"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":44,"character":4}],"parameters":[{"id":3259,"name":"properties","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"properties","isOptional":true,"element":{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ErrorClass.ts","qualifiedName":"ErrorClassProperties"},"typeArguments":[{"type":"reflection","declaration":{"id":3260,"name":"__type","variant":"declaration","kind":65536,"flags":{}}}],"name":"ErrorClassProperties","package":"@w5s/error"}}]}}],"type":{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).constructor"}},{"id":3245,"name":"errorName","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Error name"}]},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":40,"character":13}],"type":{"type":"literal","value":"HTTPParserError"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).errorName"}},{"id":3246,"name":"asString","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"signatures":[{"id":3247,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Static method to convert an error to a string"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nCustomError.asString(new Error(\'my message\'));\\n```"}]}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":48,"character":4}],"parameters":[{"id":3248,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).asString"}},{"id":3249,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{"isStatic":true},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"signatures":[{"id":3250,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return true if anyValue is an instance of current class"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":4}],"typeParameter":[{"id":3251,"name":"Class","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reflection","declaration":{"id":3252,"name":"__type","variant":"declaration","kind":512,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"signatures":[{"id":3253,"name":"new Class","variant":"signature","kind":16384,"flags":{},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":55,"character":30}],"parameters":[{"id":3254,"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":3255,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}},{"id":3256,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"any value to test"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"InstanceType"},"typeArguments":[{"type":"reference","target":1066,"name":"Class","package":"@w5s/error","refersToTypeParameter":true}],"name":"InstanceType","package":"typescript"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"ErrorClass({\\n    errorName: \'HTTPParserError\',\\n    errorMessage: \'Cannot parse response body\',\\n  }).hasInstance"}}],"groups":[{"title":"Constructors","children":[3257]},{"title":"Properties","children":[3245]},{"title":"Methods","children":[3246,3249]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":30,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L30"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript"},{"type":"reflection","declaration":{"id":3238,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3242,"name":"cause","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Optional "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" that was thrown"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"unknown"}},{"id":3240,"name":"message","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error message"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3239,"name":"name","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Error name (used as tag)"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":11,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}},{"id":3241,"name":"stack","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Stack trace"}]},"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3242,3240,3239,3241]}],"sources":[{"fileName":"packages/error/dist/CustomError.d.ts","line":7,"character":136}]}},{"type":"reflection","declaration":{"id":3243,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3244,"name":"name","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":4,"character":4}],"type":{"type":"literal","value":"HTTPParserError"}}],"groups":[{"title":"Properties","children":[3244]}],"sources":[{"fileName":"packages/error/dist/ErrorClass.d.ts","line":3,"character":69}]}}]}],"name":"Readonly","package":"typescript"}],"permalink":"/std/fr/api/http/namespace/HTTPError#ParserError"}],"groups":[{"title":"Classes","children":[3185,3213,3237]}],"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"permalink":"/std/fr/api/http/namespace/HTTPError","categories":[],"previousId":3305,"nextId":3841},{"id":3841,"name":"Response","variant":"declaration","kind":4,"flags":{},"children":[{"id":3842,"name":"Parameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":3845,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3850,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.body"}},{"id":3849,"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3386,"name":"Headers","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.headers"}},{"id":3847,"name":"ok","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.ok"}},{"id":3848,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3828,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.redirected"}},{"id":3844,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3439,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3825,"name":"Status","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.status"}},{"id":3846,"name":"type","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3859,"name":"ResponseType","package":"@w5s/http"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.type"}},{"id":3843,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.url"}}],"groups":[{"title":"Properties","children":[3845,3849,3847,3848,3844,3846,3843]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":59,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L59"}],"typeParameters":[{"id":3850,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":3850,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Parameters.Body","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"},{"type":"union","types":[{"type":"literal","value":"ok"},{"type":"literal","value":"redirected"},{"type":"literal","value":"type"},{"type":"literal","value":"headers"}]}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/fr/api/http/namespace/Response#Parameters"}],"groups":[{"title":"Interfaces","children":[3842]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"permalink":"/std/fr/api/http/namespace/Response","categories":[],"previousId":3184,"nextId":3265},{"id":3265,"name":"ResponseParser","variant":"declaration","kind":4,"flags":{},"children":[{"id":3270,"name":"arrayBuffer","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"signatures":[{"id":3271,"name":"arrayBuffer","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"ArrayBuffer response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.arrayBuffer); // Task<ArrayBuffer, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":44,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L44"}],"parameters":[{"id":3272,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"},{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/ResponseParser#arrayBuffer"},{"id":3276,"name":"blob","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"signatures":[{"id":3277,"name":"blob","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Blob response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.blob); // Task<Blob, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":95,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L95"}],"parameters":[{"id":3278,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Blob"},"name":"Blob","package":"typescript"},{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/ResponseParser#blob"},{"id":3273,"name":"formData","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"signatures":[{"id":3274,"name":"formData","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, ResponseParser.formData); // Task<FormData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":57,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L57"}],"parameters":[{"id":3275,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"FormData"},"name":"FormData","package":"typescript"},{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/ResponseParser#formData"},{"id":3266,"name":"json","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"signatures":[{"id":3267,"name":"json","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"FormData response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype MyData = { foo: string, bar: boolean };\\n\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.json<MyData>(\'unsafe\')); // Task<MyData, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":72,"character":18,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L72"}],"typeParameter":[{"id":3268,"name":"Return","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"parameters":[{"id":3269,"name":"CodecModule","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"literal","value":"unsafe"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec"},"typeArguments":[{"type":"reference","target":3268,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"Codec","package":"@w5s/core"}]}}],"type":{"type":"reference","target":3261,"typeArguments":[{"type":"reference","target":3268,"name":"Return","package":"@w5s/http","refersToTypeParameter":true}],"name":"ResponseParser","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/namespace/ResponseParser#json"},{"id":3279,"name":"text","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"signatures":[{"id":3280,"name":"text","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Text response parser"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst request = requestSend({\\n  url: \'http://localhost\',\\n});\\nconst body = Task.andThen(request, HTTPParser.text); // Task<string, HTTPError>\\n```"}]}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":108,"character":15,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L108"}],"parameters":[{"id":3281,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/namespace/ResponseParser#text"}],"groups":[{"title":"Functions","children":[3270,3276,3273,3266,3279]}],"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"permalink":"/std/fr/api/http/namespace/ResponseParser","categories":[],"previousId":3841,"nextId":3439},{"id":3439,"name":"Status","variant":"declaration","kind":4,"flags":{},"children":[{"id":3766,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":255,"permalink":"/std/fr/api/http/namespace/Status#typeName"},{"id":3534,"name":"Accepted","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.3\\n\\nThe request has been received but not yet acted upon. It is non-committal, meaning that there is no way in HTTP to later send an asynchronous response indicating the outcome of processing the request. It is intended for cases where another process or server handles the request, or for batch processing."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":9,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L9"}],"type":{"type":"reflection","declaration":{"id":3535,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3536,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3537,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3536,3537]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Accepted"},{"id":3538,"name":"BadGateway","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.3\\n\\nThis error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":16,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L16"}],"type":{"type":"reflection","declaration":{"id":3539,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3540,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3541,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3540,3541]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#BadGateway"},{"id":3542,"name":"BadRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.1\\n\\nThis response means that server could not understand the request due to invalid syntax."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":23,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L23"}],"type":{"type":"reflection","declaration":{"id":3543,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3544,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3545,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3544,3545]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#BadRequest"},{"id":3546,"name":"Conflict","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.8\\n\\nThis response is sent when a request conflicts with the current state of the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":30,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3547,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3548,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3549,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3548,3549]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Conflict"},{"id":3550,"name":"Continue","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.1\\n\\nThis interim response indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":37,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L37"}],"type":{"type":"reflection","declaration":{"id":3551,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3552,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3553,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3552,3553]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Continue"},{"id":3554,"name":"Created","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.2\\n\\nThe request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a PUT request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":44,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L44"}],"type":{"type":"reflection","declaration":{"id":3555,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3556,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3557,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3556,3557]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Created"},{"id":3686,"name":"EarlyHints","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://www.rfc-editor.org/rfc/rfc8297#page-3\\n\\nThis code indicates to the client that the server is likely to send a final response with the header fields included in the informational response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":281,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L281"}],"type":{"type":"reflection","declaration":{"id":3687,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3688,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3689,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3688,3689]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#EarlyHints"},{"id":3558,"name":"ExpectationFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.14\\n\\nThis response code means the expectation indicated by the Expect request header field can\'t be met by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":51,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L51"}],"type":{"type":"reflection","declaration":{"id":3559,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3560,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3561,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3560,3561]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#ExpectationFailed"},{"id":3562,"name":"FailedDependency","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.5\\n\\nThe request failed due to failure of a previous request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":58,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L58"}],"type":{"type":"reflection","declaration":{"id":3563,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3564,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3565,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3564,3565]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#FailedDependency"},{"id":3566,"name":"Forbidden","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.3\\n\\nThe client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client\'s identity is known to the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":65,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L65"}],"type":{"type":"reflection","declaration":{"id":3567,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3568,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3569,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3568,3569]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Forbidden"},{"id":3570,"name":"GatewayTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.5\\n\\nThis error response is given when the server is acting as a gateway and cannot get a response in time."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":72,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L72"}],"type":{"type":"reflection","declaration":{"id":3571,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3572,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3573,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3572,3573]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#GatewayTimeout"},{"id":3574,"name":"Gone","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.9\\n\\nThis response would be sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for \\"limited-time, promotional services\\". APIs should not feel compelled to indicate resources that have been deleted with this status code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L79"}],"type":{"type":"reflection","declaration":{"id":3575,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3576,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3577,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3576,3577]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Gone"},{"id":3578,"name":"HTTPVersionNotSupported","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.6\\n\\nThe HTTP version used in the request is not supported by the server."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":86,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L86"}],"type":{"type":"reflection","declaration":{"id":3579,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3580,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3581,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3580,3581]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#HTTPVersionNotSupported"},{"id":3582,"name":"IMATeapot","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2324#section-2.3.2\\n\\nAny attempt to brew coffee with a teapot should result in the error code \\"418 I\'m a teapot\\". The resulting entity body MAY be short and stout."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":93,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L93"}],"type":{"type":"reflection","declaration":{"id":3583,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3584,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3585,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3584,3585]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#IMATeapot"},{"id":3586,"name":"InsufficientSpaceOnResource","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe 507 (Insufficient Storage) status code means the method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. This condition is considered to be temporary. If the request which received this status code was the result of a user action, the request MUST NOT be repeated until it is requested by a separate user action."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":100,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L100"}],"type":{"type":"reflection","declaration":{"id":3587,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3588,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3589,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3588,3589]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#InsufficientSpaceOnResource"},{"id":3590,"name":"InsufficientStorage","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.6\\n\\nThe server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":107,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L107"}],"type":{"type":"reflection","declaration":{"id":3591,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3592,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3593,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3592,3593]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#InsufficientStorage"},{"id":3594,"name":"InternalServerError","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.1\\n\\nThe server encountered an unexpected condition that prevented it from fulfilling the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":114,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L114"}],"type":{"type":"reflection","declaration":{"id":3595,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3596,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3597,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3596,3597]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#InternalServerError"},{"id":3598,"name":"LengthRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.10\\n\\nThe server rejected the request because the Content-Length header field is not defined and the server requires it."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":121,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L121"}],"type":{"type":"reflection","declaration":{"id":3599,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3600,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3601,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3600,3601]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#LengthRequired"},{"id":3602,"name":"Locked","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.4\\n\\nThe resource that is being accessed is locked."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":128,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L128"}],"type":{"type":"reflection","declaration":{"id":3603,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3604,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3605,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3604,3605]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Locked"},{"id":3606,"name":"MethodFailure","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt\\n\\nA deprecated response used by the Spring Framework when a method has failed."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":137,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L137"}],"type":{"type":"reflection","declaration":{"id":3607,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3608,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3609,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3608,3609]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MethodFailure"},{"id":3610,"name":"MethodNotAllowed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.5\\n\\nThe request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":144,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L144"}],"type":{"type":"reflection","declaration":{"id":3611,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3612,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3613,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3612,3613]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MethodNotAllowed"},{"id":3762,"name":"MisdirectedRequest","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7540#section-9.1.2\\n\\nDefined in the specification of HTTP/2 to indicate that a server is not able to produce a response for the combination of scheme and authority that are included in the request URI."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":416,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L416"}],"type":{"type":"reflection","declaration":{"id":3763,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3764,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3765,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3764,3765]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MisdirectedRequest"},{"id":3614,"name":"MovedPermanently","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.2\\n\\nThis response code means that URI of requested resource has been changed. Probably, new URI would be given in the response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":151,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L151"}],"type":{"type":"reflection","declaration":{"id":3615,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3616,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3617,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3616,3617]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MovedPermanently"},{"id":3618,"name":"MovedTemporarily","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.3\\n\\nThis response code means that URI of requested resource has been changed temporarily. New changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":158,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L158"}],"type":{"type":"reflection","declaration":{"id":3619,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3620,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3621,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3620,3621]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MovedTemporarily"},{"id":3622,"name":"MultiStatus","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.2\\n\\nA Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":165,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L165"}],"type":{"type":"reflection","declaration":{"id":3623,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3624,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3625,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3624,3625]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MultiStatus"},{"id":3626,"name":"MultipleChoices","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.1\\n\\nThe request has more than one possible responses. User-agent or user should choose one of them. There is no standardized way to choose one of the responses."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":172,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L172"}],"type":{"type":"reflection","declaration":{"id":3627,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3628,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3629,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3628,3629]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#MultipleChoices"},{"id":3630,"name":"NetworkAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-6\\n\\nThe 511 status code indicates that the client needs to authenticate to gain network access."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L179"}],"type":{"type":"reflection","declaration":{"id":3631,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3632,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3633,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3632,3633]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NetworkAuthenticationRequired"},{"id":3634,"name":"NoContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.5\\n\\nThere is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":186,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L186"}],"type":{"type":"reflection","declaration":{"id":3635,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3636,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3637,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3636,3637]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NoContent"},{"id":3638,"name":"NonAuthoritativeInformation","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.4\\n\\nThis response code means returned meta-information set is not exact set as available from the origin server, but collected from a local or a third party copy. Except this condition, 200 OK response should be preferred instead of this response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":193,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L193"}],"type":{"type":"reflection","declaration":{"id":3639,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3640,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3641,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3640,3641]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NonAuthoritativeInformation"},{"id":3642,"name":"NotAcceptable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.6\\n\\nThis response is sent when the web server, after performing server-driven content negotiation, doesn\'t find any content following the criteria given by the user agent."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":200,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L200"}],"type":{"type":"reflection","declaration":{"id":3643,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3644,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3645,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3644,3645]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NotAcceptable"},{"id":3646,"name":"NotFound","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.4\\n\\nThe server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":207,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L207"}],"type":{"type":"reflection","declaration":{"id":3647,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3648,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3649,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3648,3649]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NotFound"},{"id":3650,"name":"NotImplemented","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.2\\n\\nThe request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":214,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L214"}],"type":{"type":"reflection","declaration":{"id":3651,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3652,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3653,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3652,3653]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NotImplemented"},{"id":3654,"name":"NotModified","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.1\\n\\nThis is used for caching purposes. It is telling to client that response has not been modified. So, client can continue to use same cached version of response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":221,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L221"}],"type":{"type":"reflection","declaration":{"id":3655,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3656,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3657,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3656,3657]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#NotModified"},{"id":3658,"name":"OK","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.1\\n\\nThe request has succeeded. The meaning of a success varies depending on the HTTP method:\\nGET: The resource has been fetched and is transmitted in the message body.\\nHEAD: The entity headers are in the message body.\\nPOST: The resource describing the result of the action is transmitted in the message body.\\nTRACE: The message body contains the request message as received by the server"}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":232,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L232"}],"type":{"type":"reflection","declaration":{"id":3659,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3660,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3661,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3660,3661]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#OK"},{"id":3662,"name":"PartialContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.1\\n\\nThis response code is used because of range header sent by the client to separate download into multiple streams."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L239"}],"type":{"type":"reflection","declaration":{"id":3663,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3664,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3665,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3664,3665]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#PartialContent"},{"id":3666,"name":"PaymentRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.2\\n\\nThis response code is reserved for future use. Initial aim for creating this code was using it for digital payment systems however this is not used currently."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":246,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L246"}],"type":{"type":"reflection","declaration":{"id":3667,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3668,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3669,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3668,3669]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#PaymentRequired"},{"id":3670,"name":"PermanentRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7538#section-3\\n\\nThis means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":253,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L253"}],"type":{"type":"reflection","declaration":{"id":3671,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3672,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3673,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3672,3673]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#PermanentRedirect"},{"id":3674,"name":"PreconditionFailed","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7232#section-4.2\\n\\nThe client has indicated preconditions in its headers which the server does not meet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":260,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L260"}],"type":{"type":"reflection","declaration":{"id":3675,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3676,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3677,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3676,3677]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#PreconditionFailed"},{"id":3678,"name":"PreconditionRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-3\\n\\nThe origin server requires the request to be conditional. Intended to prevent the \'lost update\' problem, where a client GETs a resource\'s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":267,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L267"}],"type":{"type":"reflection","declaration":{"id":3679,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3680,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3681,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3680,3681]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#PreconditionRequired"},{"id":3682,"name":"Processing","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.1\\n\\nThis code indicates that the server has received and is processing the request, but no response is available yet."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":274,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L274"}],"type":{"type":"reflection","declaration":{"id":3683,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3684,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3685,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3684,3685]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Processing"},{"id":3694,"name":"ProxyAuthenticationRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.2\\n\\nThis is similar to 401 but authentication is needed to be done by a proxy."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":295,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L295"}],"type":{"type":"reflection","declaration":{"id":3695,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3696,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3697,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3696,3697]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#ProxyAuthenticationRequired"},{"id":3706,"name":"RequestEntityTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.11\\n\\nRequest entity is larger than limits defined by server; the server might close the connection or return an Retry-After header field."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":316,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L316"}],"type":{"type":"reflection","declaration":{"id":3707,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3708,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3709,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3708,3709]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#RequestEntityTooLarge"},{"id":3698,"name":"RequestHeaderFieldsTooLarge","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-5\\n\\nThe server is unwilling to process the request because its header fields are too large. The request MAY be resubmitted after reducing the size of the request header fields."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":302,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L302"}],"type":{"type":"reflection","declaration":{"id":3699,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3700,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3701,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3700,3701]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#RequestHeaderFieldsTooLarge"},{"id":3702,"name":"RequestTimeout","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.7\\n\\nThis response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L309"}],"type":{"type":"reflection","declaration":{"id":3703,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3704,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3705,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3704,3705]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#RequestTimeout"},{"id":3710,"name":"RequestURITooLong","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.12\\n\\nThe URI requested by the client is longer than the server is willing to interpret."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":323,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L323"}],"type":{"type":"reflection","declaration":{"id":3711,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3712,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3713,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3712,3713]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#RequestURITooLong"},{"id":3714,"name":"RequestedRangeNotSatisfiable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7233#section-4.4\\n\\nThe range specified by the Range header field in the request can\'t be fulfilled; it\'s possible that the range is outside the size of the target URI\'s data."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":330,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L330"}],"type":{"type":"reflection","declaration":{"id":3715,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3716,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3717,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3716,3717]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#RequestedRangeNotSatisfiable"},{"id":3718,"name":"ResetContent","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.3.6\\n\\nThis response code is sent after accomplishing request to tell user agent reset document view which sent this request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":337,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L337"}],"type":{"type":"reflection","declaration":{"id":3719,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3720,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3721,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3720,3721]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#ResetContent"},{"id":3722,"name":"SeeOther","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.4\\n\\nServer sent this response to directing client to get requested resource to another URI with an GET request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":344,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L344"}],"type":{"type":"reflection","declaration":{"id":3723,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3724,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3725,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3724,3725]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#SeeOther"},{"id":3726,"name":"ServiceUnavailable","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.6.4\\n\\nThe server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This responses should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":351,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L351"}],"type":{"type":"reflection","declaration":{"id":3727,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3728,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3729,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3728,3729]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#ServiceUnavailable"},{"id":3730,"name":"SwitchingProtocols","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.2.2\\n\\nThis code is sent in response to an Upgrade request header by the client, and indicates the protocol the server is switching too."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":358,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L358"}],"type":{"type":"reflection","declaration":{"id":3731,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3732,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3733,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3732,3733]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#SwitchingProtocols"},{"id":3734,"name":"TemporaryRedirect","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.7\\n\\nServer sent this response to directing client to get requested resource to another URI with same method that used prior request. This has the same semantic than the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":365,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L365"}],"type":{"type":"reflection","declaration":{"id":3735,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3736,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3737,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3736,3737]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#TemporaryRedirect"},{"id":3738,"name":"TooManyRequests","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc6585#section-4\\n\\nThe user has sent too many requests in a given amount of time (\\"rate limiting\\")."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":372,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L372"}],"type":{"type":"reflection","declaration":{"id":3739,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3740,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3741,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3740,3741]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#TooManyRequests"},{"id":3742,"name":"Unauthorized","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7235#section-3.1\\n\\nAlthough the HTTP standard specifies \\"unauthorized\\", semantically this response means \\"unauthenticated\\". That is, the client must authenticate itself to get the requested response."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L379"}],"type":{"type":"reflection","declaration":{"id":3743,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3744,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3745,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3744,3745]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#Unauthorized"},{"id":3746,"name":"UnavailableForLegalReasons","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7725\\n\\nThe user-agent requested a resource that cannot legally be provided, such as a web page censored by a government."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":386,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L386"}],"type":{"type":"reflection","declaration":{"id":3747,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3748,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3749,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3748,3749]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#UnavailableForLegalReasons"},{"id":3750,"name":"UnprocessableEntity","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc2518#section-10.3\\n\\nThe request was well-formed but was unable to be followed due to semantic errors."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":393,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L393"}],"type":{"type":"reflection","declaration":{"id":3751,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3752,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3753,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3752,3753]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#UnprocessableEntity"},{"id":3754,"name":"UnsupportedMediaType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.5.13\\n\\nThe media format of the requested data is not supported by the server, so the server is rejecting the request."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":400,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L400"}],"type":{"type":"reflection","declaration":{"id":3755,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3756,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3757,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3756,3757]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#UnsupportedMediaType"},{"id":3690,"name":"UpgradeRequired","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.15\\n\\nThe server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol."}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":288,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L288"}],"type":{"type":"reflection","declaration":{"id":3691,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3692,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3693,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3692,3693]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#UpgradeRequired"},{"id":3758,"name":"UseProxy","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Official Documentation @ https://tools.ietf.org/html/rfc7231#section-6.4.6\\n\\nWas defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"sources":[{"fileName":"packages/http/src/Status/status.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/status.all.ts#L409"}],"type":{"type":"reflection","declaration":{"id":3759,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3760,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":3761,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3760,3761]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}},"defaultValue":"...","permalink":"/std/fr/api/http/namespace/Status#UseProxy"},{"id":3779,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3780,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3781,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3782,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3783,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3784,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3785,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3784,3785]}]}}],"name":"Readonly","package":"typescript"}},{"id":3786,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3787,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3788,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/http/namespace/Status#__inspect__"},{"id":3440,"name":"indexType","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"Index type"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":13,"character":4}],"type":{"type":"literal","value":"number"},"permalink":"/std/fr/api/http/namespace/Status#indexType"},{"id":3533,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/fr/api/http/namespace/Status#maxValue"},{"id":3532,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},"permalink":"/std/fr/api/http/namespace/Status#minValue"},{"id":3522,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3523,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3524,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3525,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3526,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#!="},{"id":3486,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3487,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3488,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3489,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3490,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#<"},{"id":3481,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3482,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3483,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3484,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3485,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#<="},{"id":3527,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3528,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3529,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3530,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3531,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#=="},{"id":3496,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3497,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3498,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3499,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3500,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#>"},{"id":3491,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3492,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3493,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3494,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3495,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#>="},{"id":3817,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"signatures":[{"id":3818,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":11,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L11"}],"typeParameter":[{"id":3819,"name":"Code","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}}],"parameters":[{"id":3820,"name":"statusCode","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3819,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3821,"name":"statusMessage","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":3822,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3823,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":13,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L13"}],"type":{"type":"reference","target":3819,"name":"Code","package":"@w5s/http","refersToTypeParameter":true}},{"id":3824,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":14,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3823,3824]}],"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":12,"character":5,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L12"}]}}}],"permalink":"/std/fr/api/http/namespace/Status#__call__"},{"id":3789,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3790,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3791,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3792,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3793,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3794,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3795,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3796,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3795,3796]}]}}],"name":"Readonly","package":"typescript"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3797,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3798,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3799,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3798,3799]}]}}],"name":"Readonly","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#__decode__"},{"id":3800,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3801,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3802,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3803,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3804,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3805,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3806,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3805,3806]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/http/namespace/Status#__encode__"},{"id":3807,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3808,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3809,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#__schema__"},{"id":3773,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3774,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3775,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3776,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3777,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3778,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3777,3778]}]}}],"name":"Readonly","package":"typescript"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#asInstance"},{"id":3810,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3811,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3812,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3813,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3814,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3815,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3816,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3815,3816]}]}}],"name":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/http/namespace/Status#asString"},{"id":3441,"name":"at","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"signatures":[{"id":3442,"name":"at","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value at the index"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":20,"character":4}],"parameters":[{"id":3443,"name":"index","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3444,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3445,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3446,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3445,3446]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#at"},{"id":3511,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3512,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3513,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3514,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3515,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3516,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/namespace/Status#clamp"},{"id":3476,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3477,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3478,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3479,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3480,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#compare"},{"id":3517,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3518,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3519,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3520,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3521,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/http/namespace/Status#equals"},{"id":3767,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3768,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3769,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3770,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3771,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int"},{"id":3772,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string"}],"groups":[{"title":"Properties","children":[3771,3772]}]}}],"name":"Readonly","package":"typescript"}}}],"permalink":"/std/fr/api/http/namespace/Status#hasInstance"},{"id":3447,"name":"indexOf","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"signatures":[{"id":3448,"name":"indexOf","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the integer index of a value"}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":27,"character":4}],"parameters":[{"id":3449,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3450,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3451,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3452,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3451,3452]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#indexOf"},{"id":3506,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3507,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3508,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3509,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3510,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/namespace/Status#max"},{"id":3501,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3502,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3503,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3504,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}},{"id":3505,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/namespace/Status#min"},{"id":3463,"name":"range","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"signatures":[{"id":3464,"name":"range","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an Iterable starting from "},{"kind":"code","text":"`start`"},{"kind":"text","text":" to "},{"kind":"code","text":"`end`"},{"kind":"text","text":".\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns an empty iterable."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":45,"character":4}],"parameters":[{"id":3465,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3466,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3467,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3468,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3467,3468]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3469,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3470,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3471,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3472,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3471,3472]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Range.ts","qualifiedName":"Range"},"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3473,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3474,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3475,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3474,3475]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}],"name":"Range","package":"@w5s/core"}}],"permalink":"/std/fr/api/http/namespace/Status#range"},{"id":3453,"name":"rangeSize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"signatures":[{"id":3454,"name":"rangeSize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the size of a range.\\nIf "},{"kind":"code","text":"`start`"},{"kind":"text","text":" or "},{"kind":"code","text":"`end`"},{"kind":"text","text":" is not in range then returns 0."}]},"sources":[{"fileName":"packages/core/dist/Indexable.d.ts","line":36,"character":4}],"parameters":[{"id":3455,"name":"start","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the start of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3456,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3457,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3458,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3457,3458]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}},{"id":3459,"name":"end","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the end of the range"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"},{"type":"reflection","declaration":{"id":3460,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3461,"name":"statusCode","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":19,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L19"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"code"},{"id":3462,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":20,"character":8,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L20"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'\'"}],"groups":[{"title":"Properties","children":[3461,3462]}],"sources":[{"fileName":"packages/http/src/Status/StatusIndexable.ts","line":18,"character":33,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/StatusIndexable.ts#L18"}]}}]}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/http/namespace/Status#rangeSize"}],"groups":[{"title":"References","children":[3766]},{"title":"Variables","children":[3534,3538,3542,3546,3550,3554,3686,3558,3562,3566,3570,3574,3578,3582,3586,3590,3594,3598,3602,3606,3610,3762,3614,3618,3622,3626,3630,3634,3638,3642,3646,3650,3654,3658,3662,3666,3670,3674,3678,3682,3694,3706,3698,3702,3710,3714,3718,3722,3726,3730,3734,3738,3742,3746,3750,3754,3690,3758,3779,3440,3533,3532]},{"title":"Functions","children":[3522,3486,3481,3527,3496,3491,3817,3789,3800,3807,3773,3810,3441,3511,3476,3517,3767,3447,3506,3501,3463,3453]}],"categories":[{"title":"Bound","children":[3533,3532]},{"title":"Codec","children":[3789,3800,3807]},{"title":"Comparator","children":[3522,3486,3481,3527,3496,3491,3511,3476,3517,3506,3501]},{"title":"Formatting","children":[3810]},{"title":"Indexable","children":[3440,3441,3447,3463,3453]},{"title":"Type","children":[3779,3773,3767]},{"title":"__CATEGORY__","children":[3766,3534,3538,3542,3546,3550,3554,3686,3558,3562,3566,3570,3574,3578,3582,3586,3590,3594,3598,3602,3606,3610,3762,3614,3618,3622,3626,3630,3634,3638,3642,3646,3650,3654,3658,3662,3666,3670,3674,3678,3682,3694,3706,3698,3702,3710,3714,3718,3722,3726,3730,3734,3738,3742,3746,3750,3754,3690,3758,3817]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"permalink":"/std/fr/api/http/namespace/Status","previousId":3265,"nextId":3183},{"id":3286,"name":"Client","variant":"declaration","kind":256,"flags":{},"children":[{"id":3287,"name":"constructor","variant":"declaration","kind":512,"flags":{}},{"id":3296,"name":"fetch","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Fetch function. Default to "},{"kind":"code","text":"`globalThis.fetch`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L28"}],"type":{"type":"reflection","declaration":{"id":3297,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17},{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"signatures":[{"id":3298,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/typescript/lib/lib.dom.d.ts","line":29329,"character":17}],"parameters":[{"id":3299,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInfo"},"name":"RequestInfo","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3300,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}},{"id":3301,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"node_modules/@types/node/globals.d.ts","line":289,"character":13}],"parameters":[{"id":3302,"name":"input","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Request"},"name":"Request","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript"}]}},{"id":3303,"name":"init","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"RequestInit"},"name":"RequestInit","package":"typescript"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"Response"},"name":"Response","package":"typescript"}],"name":"Promise","package":"typescript"}}]}}},{"id":3288,"name":"onRequest","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a request before sent"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"type":{"type":"reflection","declaration":{"id":3289,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"signatures":[{"id":3290,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L18"}],"parameters":[{"id":3291,"name":"request","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request to wrap"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"},{"type":"reference","target":3183,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":3292,"name":"onResponse","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Wrap a received response"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"type":{"type":"reflection","declaration":{"id":3293,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"signatures":[{"id":3294,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":24,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L24"}],"parameters":[{"id":3295,"name":"response","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the response to wrap"}]},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3183,"name":"HTTPError","package":"@w5s/http"}],"name":"TaskLike","package":"@w5s/task"}}]}}},{"id":3304,"name":"timeout","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Response timeout setting"}]},"sources":[{"fileName":"packages/http/src/Client.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"none"},{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}]}}],"groups":[{"title":"Constructors","children":[3287]},{"title":"Properties","children":[3296,3288,3292,3304]}],"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"permalink":"/std/fr/api/http/interface/Client","categories":[],"previousId":3435,"nextId":3386},{"id":3386,"name":"Headers","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record type"}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Headers/Headers.ts","qualifiedName":"Headers"},"name":"Headers","package":"@w5s/http"}],"permalink":"/std/fr/api/http/interface/Headers","categories":[],"previousId":3286,"nextId":3832},{"id":3832,"name":"Response","variant":"declaration","kind":256,"flags":{},"children":[{"id":3839,"name":"body","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L56"}],"type":{"type":"reference","target":3840,"name":"Body","package":"@w5s/http","qualifiedName":"Response.Body","refersToTypeParameter":true}},{"id":3833,"name":"headers","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The headers read-only property of the Response interface contains the Headers object associated with the response."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":32,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L32"}],"type":{"type":"reference","target":3386,"name":"Headers","package":"@w5s/http"}},{"id":3834,"name":"ok","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":38,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3838,"name":"redirected","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only redirected property of the "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3828,"tsLinkText":""},{"kind":"text","text":" interface indicates whether or not the response is the result of a request you made which was redirected."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":55,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3835,"name":"status","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The read-only response "},{"kind":"inline-tag","tag":"@link","text":"Status","target":3439,"tsLinkText":""}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/status"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":44,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L44"}],"type":{"type":"reference","target":3825,"name":"Status","package":"@w5s/http"}},{"id":3836,"name":"type","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/Response.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L48"}],"type":{"type":"reference","target":3859,"name":"ResponseType","package":"@w5s/http"}},{"id":3837,"name":"url","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/Response.ts","line":49,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L49"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3839,3833,3834,3838,3835,3836,3837]}],"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"typeParameters":[{"id":3840,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/http/interface/Response","categories":[],"previousId":3386,"nextId":3261},{"id":3261,"name":"ResponseParser","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A transformation function taking an "},{"kind":"inline-tag","tag":"@link","text":"Response","target":3828,"tsLinkText":""},{"kind":"text","text":" as input"}]},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":14,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L14"},{"fileName":"packages/http/src/ResponseParser.ts","line":17,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L17"}],"typeParameters":[{"id":3262,"name":"Value","variant":"typeParam","kind":131072,"flags":{}}],"signatures":[{"id":3263,"name":"ResponseParser","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/ResponseParser.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseParser.ts#L15"}],"parameters":[{"id":3264,"name":"response","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":3262,"name":"Value","package":"@w5s/http","qualifiedName":"ResponseParser.Value","refersToTypeParameter":true},{"type":"reference","target":3237,"name":"ParserError","package":"@w5s/http","qualifiedName":"HTTPError.ParserError"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/interface/ResponseParser","categories":[],"previousId":3832,"nextId":3825},{"id":3825,"name":"Status","variant":"declaration","kind":256,"flags":{},"children":[{"id":3826,"name":"statusCode","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status code integer"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":20,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L20"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"defaultValue":"Int","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusCode"}},{"id":3827,"name":"statusMessage","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Standard HTTP status message"}]},"sources":[{"fileName":"packages/http/src/Status/Status.ts","line":24,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status/Status.ts#L24"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"string","inheritedFrom":{"type":"reference","target":-1,"name":"StatusType.statusMessage"}}],"groups":[{"title":"Properties","children":[3826,3827]}],"sources":[{"fileName":"packages/http/src/Status.ts","line":11,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L11"},{"fileName":"packages/http/src/Status.ts","line":19,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Status.ts#L19"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Status/Status.ts","qualifiedName":"Status"},"name":"Status","package":"@w5s/http"}],"permalink":"/std/fr/api/http/interface/Status","categories":[],"previousId":3261,"nextId":3305},{"id":3183,"name":"HTTPError","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Union type of http client errors"}]},"sources":[{"fileName":"packages/http/src/HTTPError.ts","line":8,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L8"},{"fileName":"packages/http/src/HTTPError.ts","line":10,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/HTTPError.ts#L10"}],"type":{"type":"union","types":[{"type":"reference","target":3213,"name":"HTTPError.NetworkError","package":"@w5s/http"},{"type":"reference","target":3185,"name":"HTTPError.InvalidURL","package":"@w5s/http"},{"type":"reference","target":3237,"name":"HTTPError.ParserError","package":"@w5s/http"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"}]},"permalink":"/std/fr/api/http#HTTPError","categories":[],"previousId":3439,"nextId":3282},{"id":3282,"name":"Method","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Method type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/method"}]}]},"sources":[{"fileName":"packages/http/src/Method.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Method.ts#L6"}],"type":{"type":"intrinsic","name":"string"},"permalink":"/std/fr/api/http#Method","categories":[],"previousId":3183,"nextId":3344},{"id":3344,"name":"ReferrerPolicy","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP referrer policy type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy"}]}]},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3332,"name":"ReferrerPolicy","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#ReferrerPolicy","categories":[],"previousId":3282,"nextId":3396},{"id":3396,"name":"RequestCache","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP cache type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/cache"}]}]},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3387,"name":"RequestCache","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#RequestCache","categories":[],"previousId":3344,"nextId":3403},{"id":3403,"name":"RequestCredentials","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP credentials"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"}]}]},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3397,"name":"RequestCredentials","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#RequestCredentials","categories":[],"previousId":3396,"nextId":3427},{"id":3427,"name":"RequestDestination","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP destination"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/destination"}]}]},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3404,"name":"RequestDestination","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#RequestDestination","categories":[],"previousId":3403,"nextId":3434},{"id":3434,"name":"RequestRedirect","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP redirect type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect"}]}]},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3428,"name":"RequestRedirect","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#RequestRedirect","categories":[],"previousId":3427,"nextId":3859},{"id":3859,"name":"ResponseType","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP Response type"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.mozilla.org/en-US/docs/Web/API/Response/type"}]}]},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum.ValueOf"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":3851,"name":"ResponseType","package":"@w5s/http"}}],"name":"Enum.ValueOf","package":"@w5s/core"},"permalink":"/std/fr/api/http#ResponseType","categories":[],"previousId":3434,"nextId":3332},{"id":3332,"name":"ReferrerPolicy","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"},{"fileName":"packages/http/src/ReferrerPolicy.ts","line":21,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3333,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3335,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":3336,"name":"NoReferrer","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L7"}],"type":{"type":"literal","value":"no-referrer"},"defaultValue":"\'no-referrer\'"},{"id":3337,"name":"NoReferrerWhenDowngrade","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L8"}],"type":{"type":"literal","value":"no-referrer-when-downgrade"},"defaultValue":"\'no-referrer-when-downgrade\'"},{"id":3339,"name":"Origin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L10"}],"type":{"type":"literal","value":"origin"},"defaultValue":"\'origin\'"},{"id":3341,"name":"OriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L12"}],"type":{"type":"literal","value":"origin-when-cross-origin"},"defaultValue":"\'origin-when-cross-origin\'"},{"id":3338,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L9"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":3340,"name":"StrictOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L11"}],"type":{"type":"literal","value":"strict-origin"},"defaultValue":"\'strict-origin\'"},{"id":3342,"name":"StrictOriginWhenCrossOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L13"}],"type":{"type":"literal","value":"strict-origin-when-cross-origin"},"defaultValue":"\'strict-origin-when-cross-origin\'"},{"id":3343,"name":"UnsafeURL","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L14"}],"type":{"type":"literal","value":"unsafe-url"},"defaultValue":"\'unsafe-url\'"},{"id":3334,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L5"}],"type":{"type":"literal","value":"ReferrerPolicy"},"defaultValue":"\'ReferrerPolicy\'"}],"groups":[{"title":"Properties","children":[3335,3336,3337,3339,3341,3338,3340,3342,3343,3334]}],"sources":[{"fileName":"packages/http/src/ReferrerPolicy.ts","line":4,"character":37,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ReferrerPolicy.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#ReferrerPolicy","categories":[],"previousId":3859,"nextId":3387},{"id":3387,"name":"RequestCache","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"},{"fileName":"packages/http/src/RequestCache.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3388,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3390,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L6"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3394,"name":"ForceCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L10"}],"type":{"type":"literal","value":"force-cache"},"defaultValue":"\'force-cache\'"},{"id":3393,"name":"NoCache","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L9"}],"type":{"type":"literal","value":"no-cache"},"defaultValue":"\'no-cache\'"},{"id":3391,"name":"NoStore","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L7"}],"type":{"type":"literal","value":"no-store"},"defaultValue":"\'no-store\'"},{"id":3395,"name":"OnlyIfCached","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L11"}],"type":{"type":"literal","value":"only-if-cached"},"defaultValue":"\'only-if-cached\'"},{"id":3392,"name":"Reload","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L8"}],"type":{"type":"literal","value":"reload"},"defaultValue":"\'reload\'"},{"id":3389,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L5"}],"type":{"type":"literal","value":"RequestCache"},"defaultValue":"\'RequestCache\'"}],"groups":[{"title":"Properties","children":[3390,3394,3393,3391,3395,3392,3389]}],"sources":[{"fileName":"packages/http/src/RequestCache.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCache.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#RequestCache","categories":[],"previousId":3332,"nextId":3397},{"id":3397,"name":"RequestCredentials","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"},{"fileName":"packages/http/src/RequestCredentials.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3398,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3400,"name":"Include","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L6"}],"type":{"type":"literal","value":"include"},"defaultValue":"\'include\'"},{"id":3401,"name":"Omit","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L7"}],"type":{"type":"literal","value":"omit"},"defaultValue":"\'omit\'"},{"id":3402,"name":"SameOrigin","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L8"}],"type":{"type":"literal","value":"same-origin"},"defaultValue":"\'same-origin\'"},{"id":3399,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L5"}],"type":{"type":"literal","value":"RequestCredentials"},"defaultValue":"\'RequestCredentials\'"}],"groups":[{"title":"Properties","children":[3400,3401,3402,3399]}],"sources":[{"fileName":"packages/http/src/RequestCredentials.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestCredentials.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#RequestCredentials","categories":[],"previousId":3387,"nextId":3404},{"id":3404,"name":"RequestDestination","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"},{"fileName":"packages/http/src/RequestDestination.ts","line":32,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L32"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3405,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3408,"name":"Audio","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L7"}],"type":{"type":"literal","value":"audio"},"defaultValue":"\'audio\'"},{"id":3409,"name":"AudioWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L8"}],"type":{"type":"literal","value":"audioworklet"},"defaultValue":"\'audioworklet\'"},{"id":3410,"name":"Document","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L9"}],"type":{"type":"literal","value":"document"},"defaultValue":"\'document\'"},{"id":3411,"name":"Embed","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L10"}],"type":{"type":"literal","value":"embed"},"defaultValue":"\'embed\'"},{"id":3407,"name":"Empty","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L6"}],"type":{"type":"literal","value":""},"defaultValue":"\'\'"},{"id":3412,"name":"Font","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":11,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L11"}],"type":{"type":"literal","value":"font"},"defaultValue":"\'font\'"},{"id":3413,"name":"Frame","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L12"}],"type":{"type":"literal","value":"frame"},"defaultValue":"\'frame\'"},{"id":3414,"name":"Iframe","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L13"}],"type":{"type":"literal","value":"iframe"},"defaultValue":"\'iframe\'"},{"id":3415,"name":"Image","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":14,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L14"}],"type":{"type":"literal","value":"image"},"defaultValue":"\'image\'"},{"id":3416,"name":"Manifest","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":15,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L15"}],"type":{"type":"literal","value":"manifest"},"defaultValue":"\'manifest\'"},{"id":3417,"name":"Object","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":16,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L16"}],"type":{"type":"literal","value":"object"},"defaultValue":"\'object\'"},{"id":3418,"name":"PaintWorklet","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L17"}],"type":{"type":"literal","value":"paintworklet"},"defaultValue":"\'paintworklet\'"},{"id":3419,"name":"Report","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L18"}],"type":{"type":"literal","value":"report"},"defaultValue":"\'report\'"},{"id":3420,"name":"Script","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L19"}],"type":{"type":"literal","value":"script"},"defaultValue":"\'script\'"},{"id":3421,"name":"SharedWorker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":20,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L20"}],"type":{"type":"literal","value":"sharedworker"},"defaultValue":"\'sharedworker\'"},{"id":3422,"name":"Style","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L21"}],"type":{"type":"literal","value":"style"},"defaultValue":"\'style\'"},{"id":3423,"name":"Track","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":22,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L22"}],"type":{"type":"literal","value":"track"},"defaultValue":"\'track\'"},{"id":3424,"name":"Video","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":23,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L23"}],"type":{"type":"literal","value":"video"},"defaultValue":"\'video\'"},{"id":3425,"name":"Worker","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L24"}],"type":{"type":"literal","value":"worker"},"defaultValue":"\'worker\'"},{"id":3426,"name":"XSLT","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L25"}],"type":{"type":"literal","value":"xslt"},"defaultValue":"\'xslt\'"},{"id":3406,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L5"}],"type":{"type":"literal","value":"RequestDestination"},"defaultValue":"\'RequestDestination\'"}],"groups":[{"title":"Properties","children":[3408,3409,3410,3411,3407,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3406]}],"sources":[{"fileName":"packages/http/src/RequestDestination.ts","line":4,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestDestination.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#RequestDestination","categories":[],"previousId":3397,"nextId":3428},{"id":3428,"name":"RequestRedirect","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"},{"fileName":"packages/http/src/RequestRedirect.ts","line":15,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L15"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3429,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3432,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L7"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3431,"name":"Follow","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L6"}],"type":{"type":"literal","value":"follow"},"defaultValue":"\'follow\'"},{"id":3433,"name":"Manual","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L8"}],"type":{"type":"literal","value":"manual"},"defaultValue":"\'manual\'"},{"id":3430,"name":"typeName","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L5"}],"type":{"type":"literal","value":"RequestRedirect"},"defaultValue":"\'RequestRedirect\'"}],"groups":[{"title":"Properties","children":[3432,3431,3433,3430]}],"sources":[{"fileName":"packages/http/src/RequestRedirect.ts","line":4,"character":38,"url":"https://github.com/w5s/std/blob/master/packages/http/src/RequestRedirect.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#RequestRedirect","categories":[],"previousId":3404,"nextId":3851},{"id":3851,"name":"ResponseType","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"},{"fileName":"packages/http/src/ResponseType.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Enum.ts","qualifiedName":"Enum"},"typeArguments":[{"type":"reflection","declaration":{"id":3852,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":3853,"name":"Basic","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":5,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L5"}],"type":{"type":"literal","value":"basic"},"defaultValue":"\'basic\'"},{"id":3854,"name":"CORS","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":6,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L6"}],"type":{"type":"literal","value":"cors"},"defaultValue":"\'cors\'"},{"id":3855,"name":"Default","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L7"}],"type":{"type":"literal","value":"default"},"defaultValue":"\'default\'"},{"id":3856,"name":"Error","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":8,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L8"}],"type":{"type":"literal","value":"error"},"defaultValue":"\'error\'"},{"id":3857,"name":"Opaque","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L9"}],"type":{"type":"literal","value":"opaque"},"defaultValue":"\'opaque\'"},{"id":3858,"name":"OpaqueRedirect","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":10,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L10"}],"type":{"type":"literal","value":"opaqueredirect"},"defaultValue":"\'opaqueredirect\'"}],"groups":[{"title":"Properties","children":[3853,3854,3855,3856,3857,3858]}],"sources":[{"fileName":"packages/http/src/ResponseType.ts","line":4,"character":35,"url":"https://github.com/w5s/std/blob/master/packages/http/src/ResponseType.ts#L4"}]}}],"name":"Enum","package":"@w5s/core"},"defaultValue":"...","permalink":"/std/fr/api/http#ResponseType","categories":[],"previousId":3428},{"id":3283,"name":"Client","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"},{"fileName":"packages/http/src/Client.ts","line":12,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L12"},{"fileName":"packages/http/src/Client.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L44"}],"signatures":[{"id":3284,"name":"Client","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Client.ts","line":35,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Client.ts#L35"}],"parameters":[{"id":3285,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3313,"name":"Options","package":"@w5s/http","qualifiedName":"Client.Options"},"defaultValue":"{}"}],"type":{"type":"reference","target":3286,"name":"Client","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/function/Client","categories":[],"nextId":3345},{"id":3345,"name":"Headers","variant":"declaration","kind":64,"flags":{},"children":[{"id":3352,"name":"__call__","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"type":{"type":"reflection","declaration":{"id":3353,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"signatures":[{"id":3354,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":3355,"name":"values","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3386,"name":"Headers","package":"@w5s/http"}}]}},"defaultValue":"..."},{"id":3363,"name":"__inspect__","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3364,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3365,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3366,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}},{"id":3367,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3368,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3369,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"}},{"id":3348,"name":"empty","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L29"}],"type":{"type":"reflection","declaration":{"id":3349,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"signatures":[{"id":3350,"name":"__type","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an empty "},{"kind":"inline-tag","tag":"@link","text":"Headers","target":3386,"tsLinkText":""},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst response = Response({\\n  headers: Headers.empty(),\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":13,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Readonly"},"typeArguments":[{"type":"reflection","declaration":{"id":3351,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/empty.ts","line":1,"character":29,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/empty.ts#L1"}]}}],"name":"Readonly","package":"typescript"}}]}}},{"id":3356,"name":"typeName","variant":"declaration","kind":1024,"flags":{},"sources":[{"fileName":"packages/http/src/Headers/Headers.ts","line":7,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers/Headers.ts#L7"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'Headers\'"},{"id":3370,"name":"__decode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3371,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3372,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3373,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3374,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}]},{"id":3375,"name":"__encode__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3376,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3377,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3378,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":3379,"name":"__schema__","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3380,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3381,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}]},{"id":3360,"name":"asInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3361,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3362,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}]},{"id":3382,"name":"asString","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3383,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3384,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3385,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":3357,"name":"hasInstance","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3358,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3359,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Record.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"@w5s/core"}}}]}],"groups":[{"title":"Properties","children":[3352,3363,3348,3356]},{"title":"Methods","children":[3370,3375,3379,3360,3382,3357]}],"categories":[{"title":"Codec","children":[3370,3375,3379]},{"title":"Formatting","children":[3382]},{"title":"Type","children":[3363,3360,3357]},{"title":"__CATEGORY__","children":[3352,3348,3356]}],"sources":[{"fileName":"packages/http/src/Headers.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L8"},{"fileName":"packages/http/src/Headers.ts","line":27,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L27"}],"signatures":[{"id":3346,"name":"Headers","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"HTTP header record constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst headersFromIterable = Headers([\\n [\'key1\', \'value1\'],\\n [\'key2\', \'value2\']\\n]);// { key1: \'value1, key2: \'value2\' }\\nconst headersFromObject = Headers({\\n key1: \'value1\',\\n key2: \'value2\'\\n});// { key1: \'value1, key2: \'value2\' }\\n```"}]}]},"sources":[{"fileName":"packages/http/src/Headers.ts","line":30,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Headers.ts#L30"}],"parameters":[{"id":3347,"name":"values","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a record or iterable to initialize"}]},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"},{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]}}],"type":{"type":"reference","target":3386,"name":"Headers","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/function/Headers","previousId":3283,"nextId":3828},{"id":3828,"name":"Response","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L10"},{"fileName":"packages/http/src/Response.ts","line":26,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L26"},{"fileName":"packages/http/src/Response.ts","line":58,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L58"}],"signatures":[{"id":3829,"name":"Response","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/http/src/Response.ts","line":12,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/http/src/Response.ts#L12"}],"typeParameter":[{"id":3830,"name":"Body","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":3831,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":3842,"typeArguments":[{"type":"reference","target":3830,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Parameters","package":"@w5s/http","qualifiedName":"Response.Parameters"}}],"type":{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":3830,"name":"Body","package":"@w5s/http","refersToTypeParameter":true}],"name":"Response","package":"@w5s/http"}}],"permalink":"/std/fr/api/http/function/Response","categories":[],"previousId":3345,"nextId":3435},{"id":3435,"name":"requestSend","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"signatures":[{"id":3436,"name":"requestSend","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!Task"},{"kind":"text","text":" that will send an HTTP request"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst responseTask = requestSend({\\n  url: \'http://someurl.com\',\\n});\\n```"}]}]},"sources":[{"fileName":"packages/http/src/requestSend.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/http/src/requestSend.ts#L24"}],"parameters":[{"id":3437,"name":"client","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Client"}]},"type":{"type":"reference","target":3286,"name":"Client","package":"@w5s/http"}},{"id":3438,"name":"requestObject","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the request parameters"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/http/src/Request.ts","qualifiedName":"Request"},"name":"Request","package":"@w5s/http"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":3832,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/http/src/BodyReader.ts","qualifiedName":"BodyReader"},"name":"BodyReader","package":"@w5s/http"}],"name":"Response","package":"@w5s/http"},{"type":"reference","target":3183,"name":"HTTPError","package":"@w5s/http"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/http/function/requestSend","categories":[],"previousId":3828,"nextId":3286}],"groups":[{"title":"Functions","children":[3283,3345,3828,3435]},{"title":"Interfaces","children":[3286,3386,3832,3261,3825]},{"title":"Namespaces","children":[3305,3184,3841,3265,3439]},{"title":"Type Aliases","children":[3183,3282,3344,3396,3403,3427,3434,3859]},{"title":"Variables","children":[3332,3387,3397,3404,3428,3851]}],"categories":[{"title":"Constructor","children":[3345]},{"title":"__CATEGORY__","children":[3305,3184,3841,3265,3439,3286,3386,3832,3261,3825,3183,3282,3344,3396,3403,3427,3434,3859,3332,3387,3397,3404,3428,3851,3283,3828,3435]}],"sources":[{"fileName":"packages/http/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/http/src/index.ts#L1"}],"permalink":"/std/fr/api/http"},"urlSlug":"http"}],"packageName":"@w5s/http","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":11,"name":"@w5s/money","variant":"declaration","kind":2,"flags":{},"children":[{"id":3860,"name":"Currency","variant":"declaration","kind":4,"flags":{},"children":[{"id":3935,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":3936,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":3937,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":3938,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3939,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":3940,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":3941,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Currency#__inspect__"},{"id":3955,"name":"defaultPrecision","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":56,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L56"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Currency#defaultPrecision"},{"id":3954,"name":"defaultRounding","variant":"declaration","kind":32,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":55,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L55"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Currency#defaultRounding"},{"id":3928,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"Currency"},"permalink":"/std/fr/api/money/namespace/Currency#typeName"},{"id":3911,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":3912,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":3913,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3914,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3915,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#!="},{"id":3875,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":3876,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":3877,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3878,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3879,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#<"},{"id":3870,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":3871,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":3872,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3873,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3874,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#<="},{"id":3916,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":3917,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":3918,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3919,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3920,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#=="},{"id":3885,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":3886,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":3887,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3888,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3889,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#>"},{"id":3880,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":3881,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":3882,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3883,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3884,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#>="},{"id":3921,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":58,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L58"}],"signatures":[{"id":3922,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/money/src/Currency/Currency.ts","line":58,"character":21,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency/Currency.ts#L58"}],"parameters":[{"id":3923,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency.Parameters"},"name":"Parameters","package":"@w5s/money","qualifiedName":"Currency.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#__call__"},{"id":3942,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":3943,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":3944,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3945,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":3946,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Currency#__decode__"},{"id":3947,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":3948,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":3949,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3950,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/money/namespace/Currency#__encode__"},{"id":3951,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":3952,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":3953,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Currency#__schema__"},{"id":3932,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":3933,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":3934,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Currency#asInstance"},{"id":3861,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3862,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3863,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3864,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/money/namespace/Currency#asString"},{"id":3900,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":3901,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":3902,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3903,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3904,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3905,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#clamp"},{"id":3865,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":3866,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":3867,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3868,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3869,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Currency#compare"},{"id":3924,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":3925,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":3926,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3927,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#create"},{"id":3906,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":3907,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":3908,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3909,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3910,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Currency#equals"},{"id":3929,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":3930,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":3931,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}}],"permalink":"/std/fr/api/money/namespace/Currency#hasInstance"},{"id":3895,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":3896,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":3897,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3898,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3899,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#max"},{"id":3890,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":3891,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":3892,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3893,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}},{"id":3894,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"Currency","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Currency#min"}],"groups":[{"title":"Variables","children":[3935,3955,3954,3928]},{"title":"Functions","children":[3911,3875,3870,3916,3885,3880,3921,3942,3947,3951,3932,3861,3900,3865,3924,3906,3929,3895,3890]}],"categories":[{"title":"Codec","children":[3942,3947,3951]},{"title":"Comparator","children":[3911,3875,3870,3916,3885,3880,3900,3865,3906,3895,3890]},{"title":"Constructor","children":[3924]},{"title":"Formatting","children":[3861]},{"title":"Type","children":[3935,3928,3932,3929]},{"title":"__CATEGORY__","children":[3955,3954,3921]}],"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"permalink":"/std/fr/api/money/namespace/Currency","previousId":4444,"nextId":3957},{"id":3957,"name":"Money","variant":"declaration","kind":4,"flags":{},"children":[{"id":4067,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4068,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4069,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4070,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4071,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4072,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4073,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/money/namespace/Money#__inspect__"},{"id":4060,"name":"typeName","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The factory type constant"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":50,"character":17}],"type":{"type":"literal","value":"Money"},"permalink":"/std/fr/api/money/namespace/Money#typeName"},{"id":4046,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4047,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4048,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4049,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4050,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#!="},{"id":3993,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"signatures":[{"id":3994,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiply operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'*\'](EUR(2), BigDecimal(\'2\'));// EUR(\\"4\\")\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":64,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L64"}],"parameters":[{"id":3995,"name":"money","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"money object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3996,"name":"multiplier","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"multiplication factor"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#*"},{"id":3983,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"signatures":[{"id":3984,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'+\'](EUR(1), EUR(2));// Result.Ok(EUR(1))\\nMoney[\'+\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":39,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L39"}],"parameters":[{"id":3985,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3986,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3987,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#+"},{"id":3988,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"signatures":[{"id":3989,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtract operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney[\'-\'](EUR(2), EUR(1));// Result.Ok(EUR(1))\\nMoney[\'-\'](EUR(1), USD(2));// Result.Error(new ArgumentError({ message: \'Incompatible currencies EUR and USD\' }))\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyNumeric.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyNumeric.ts#L52"}],"parameters":[{"id":3990,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3991,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Left operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":3992,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Right operand money"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/ArgumentError.ts","qualifiedName":"ArgumentError"},"name":"ArgumentError","package":"@w5s/error"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#-"},{"id":4010,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4011,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4012,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4013,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4014,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#<"},{"id":4005,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4006,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4007,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4008,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4009,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#<="},{"id":4051,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4052,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4053,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4054,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4055,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#=="},{"id":4020,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4021,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4022,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4023,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4024,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#>"},{"id":4015,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4016,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4017,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4018,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4019,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#>="},{"id":4086,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":4087,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":4088,"name":"properties","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#__call__"},{"id":4074,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4075,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4076,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4077,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4078,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#__decode__"},{"id":4079,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4080,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4081,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4082,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/money/namespace/Money#__encode__"},{"id":4083,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4084,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4085,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#__schema__"},{"id":4064,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4065,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4066,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#asInstance"},{"id":3967,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":3968,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":3969,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3970,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/money/namespace/Money#asString"},{"id":4035,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4036,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4037,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4038,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4039,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4040,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#clamp"},{"id":4000,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4001,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4002,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4003,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4004,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#compare"},{"id":4056,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"signatures":[{"id":4057,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Construct a new model"}]},"sources":[{"fileName":"packages/core/dist/Struct.d.ts","line":44,"character":8}],"parameters":[{"id":4058,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4059,"name":"properties","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The properties for initialization"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Struct.ts","qualifiedName":"Struct.Parameters"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Parameters","package":"@w5s/core","qualifiedName":"Struct.Parameters"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#create"},{"id":4041,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4042,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4043,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4044,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4045,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#equals"},{"id":3958,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"signatures":[{"id":3959,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a formatted representation of money"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.format(EUR(\'1.10\'));// \'1.10EUR\';\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L26"}],"parameters":[{"id":3960,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/money/namespace/Money#format"},{"id":4061,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4062,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4063,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}}],"permalink":"/std/fr/api/money/namespace/Money#hasInstance"},{"id":3979,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"signatures":[{"id":3980,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":19,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L19"}],"parameters":[{"id":3981,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3982,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#isNegative"},{"id":3975,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"signatures":[{"id":3976,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/money/src/Money/MoneySigned.ts","line":12,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneySigned.ts#L12"}],"parameters":[{"id":3977,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3978,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#isPositive"},{"id":3971,"name":"isZero","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"signatures":[{"id":3972,"name":"isZero","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if self is equal to the additive identity."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.isZero(EUR(\'0\')); // true\\nMoney.isZero(EUR(\'1\')); // false\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money/MoneyZero.ts","line":18,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money/MoneyZero.ts#L18"}],"parameters":[{"id":3973,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":3974,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value to test"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/money/namespace/Money#isZero"},{"id":4030,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4031,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4032,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4033,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4034,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#max"},{"id":4025,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4026,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4027,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4028,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}},{"id":4029,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#min"},{"id":3997,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":3998,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":3999,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#negate"},{"id":3961,"name":"normalize","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"signatures":[{"id":3962,"name":"normalize","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Normalizes a "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object to its simplest form.\\nThis means that the decimal part is reduced to its lowest terms."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nnormalize(USD(\'1.020\'));// USD(\'1.02\')\\nnormalize(USD(\'1.02\'));// USD(\'1.02\')\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L27"}],"parameters":[{"id":3963,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the "},{"kind":"code","text":"`BigDecimal`"},{"kind":"text","text":" object"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/namespace/Money#normalize"},{"id":3964,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"signatures":[{"id":3965,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parses a string argument and returns a "},{"kind":"inline-tag","tag":"@link","text":"Money","target":3957,"tsLinkText":""},{"kind":"text","text":"\\nIf the "},{"kind":"code","text":"`expression`"},{"kind":"text","text":" is not valid, it returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nMoney.parse(\'1.1EUR\');// Option.Some(EUR(\'1.1\'))\\nMoney.parse(\'invalid\');// Option.None\\n```"}]}]},"sources":[{"fileName":"packages/money/src/Money.ts","line":28,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L28"}],"parameters":[{"id":3966,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an number expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/money/namespace/Money#parse"}],"groups":[{"title":"Variables","children":[4067,4060]},{"title":"Functions","children":[4046,3993,3983,3988,4010,4005,4051,4020,4015,4086,4074,4079,4083,4064,3967,4035,4000,4056,4041,3958,4061,3979,3975,3971,4030,4025,3997,3961,3964]}],"categories":[{"title":"Codec","children":[4074,4079,4083]},{"title":"Comparator","children":[4046,4010,4005,4051,4020,4015,4035,4000,4041,4030,4025]},{"title":"Constructor","children":[4056]},{"title":"Formatting","children":[3967]},{"title":"Numeric","children":[3993,3983,3988,3979,3975,3971,3997]},{"title":"Type","children":[4067,4060,4064,4061]},{"title":"__CATEGORY__","children":[4086,3958,3961,3964]}],"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"permalink":"/std/fr/api/money/namespace/Money","previousId":3860,"nextId":3956},{"id":3956,"name":"Currency","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Currency.ts","line":6,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L6"},{"fileName":"packages/money/src/Currency.ts","line":10,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Currency.ts#L10"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Currency/Currency.ts","qualifiedName":"Currency"},"name":"CurrencyType","package":"@w5s/money","qualifiedName":"Currency"},"permalink":"/std/fr/api/money#Currency","categories":[],"previousId":3957,"nextId":4089},{"id":4089,"name":"Money","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/money/src/Money.ts","line":13,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L13"},{"fileName":"packages/money/src/Money.ts","line":18,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/Money.ts#L18"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"MoneyType","package":"@w5s/money","qualifiedName":"Money"},"permalink":"/std/fr/api/money#Money","categories":[],"previousId":3956},{"id":4099,"name":"AED","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"signatures":[{"id":4100,"name":"AED","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"United Arab Emirates Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AED(\'1.25\');// Money({ currency: Currency({ code: \'AED\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":69,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L69"}],"parameters":[{"id":4101,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AED","categories":[],"nextId":4102},{"id":4102,"name":"AFN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"signatures":[{"id":4103,"name":"AFN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Afghan Afghani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AFN(\'1.25\');// Money({ currency: Currency({ code: \'AFN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":79,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L79"}],"parameters":[{"id":4104,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AFN","categories":[],"previousId":4099,"nextId":4105},{"id":4105,"name":"ALL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"signatures":[{"id":4106,"name":"ALL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Albanian Lek money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ALL(\'1.25\');// Money({ currency: Currency({ code: \'ALL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":89,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L89"}],"parameters":[{"id":4107,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ALL","categories":[],"previousId":4102,"nextId":4108},{"id":4108,"name":"AMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"signatures":[{"id":4109,"name":"AMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Armenian Dram money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AMD(\'1.25\');// Money({ currency: Currency({ code: \'AMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":99,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L99"}],"parameters":[{"id":4110,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AMD","categories":[],"previousId":4105,"nextId":4111},{"id":4111,"name":"ARS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"signatures":[{"id":4112,"name":"ARS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Argentine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ARS(\'1.25\');// Money({ currency: Currency({ code: \'ARS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L109"}],"parameters":[{"id":4113,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ARS","categories":[],"previousId":4108,"nextId":4114},{"id":4114,"name":"AUD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"signatures":[{"id":4115,"name":"AUD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Australian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AUD(\'1.25\');// Money({ currency: Currency({ code: \'AUD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L119"}],"parameters":[{"id":4116,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AUD","categories":[],"previousId":4111,"nextId":4117},{"id":4117,"name":"AZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"signatures":[{"id":4118,"name":"AZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Azerbaijani Manat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = AZN(\'1.25\');// Money({ currency: Currency({ code: \'AZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L129"}],"parameters":[{"id":4119,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/AZN","categories":[],"previousId":4114,"nextId":4120},{"id":4120,"name":"BAM","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"signatures":[{"id":4121,"name":"BAM","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bosnia-Herzegovina Convertible Mark money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BAM(\'1.25\');// Money({ currency: Currency({ code: \'BAM\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L139"}],"parameters":[{"id":4122,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BAM","categories":[],"previousId":4117,"nextId":4123},{"id":4123,"name":"BDT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"signatures":[{"id":4124,"name":"BDT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bangladeshi Taka money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BDT(\'1.25\');// Money({ currency: Currency({ code: \'BDT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L149"}],"parameters":[{"id":4125,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BDT","categories":[],"previousId":4120,"nextId":4126},{"id":4126,"name":"BGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"signatures":[{"id":4127,"name":"BGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bulgarian Lev money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BGN(\'1.25\');// Money({ currency: Currency({ code: \'BGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L159"}],"parameters":[{"id":4128,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BGN","categories":[],"previousId":4123,"nextId":4129},{"id":4129,"name":"BHD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"signatures":[{"id":4130,"name":"BHD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bahraini Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BHD(\'1.25\');// Money({ currency: Currency({ code: \'BHD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L169"}],"parameters":[{"id":4131,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BHD","categories":[],"previousId":4126,"nextId":4132},{"id":4132,"name":"BIF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"signatures":[{"id":4133,"name":"BIF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Burundian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BIF(\'1.25\');// Money({ currency: Currency({ code: \'BIF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L179"}],"parameters":[{"id":4134,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BIF","categories":[],"previousId":4129,"nextId":4135},{"id":4135,"name":"BND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"signatures":[{"id":4136,"name":"BND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brunei Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BND(\'1.25\');// Money({ currency: Currency({ code: \'BND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L189"}],"parameters":[{"id":4137,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BND","categories":[],"previousId":4132,"nextId":4138},{"id":4138,"name":"BOB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"signatures":[{"id":4139,"name":"BOB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Bolivian Boliviano money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BOB(\'1.25\');// Money({ currency: Currency({ code: \'BOB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L199"}],"parameters":[{"id":4140,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BOB","categories":[],"previousId":4135,"nextId":4141},{"id":4141,"name":"BRL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"signatures":[{"id":4142,"name":"BRL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Brazilian Real money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BRL(\'1.25\');// Money({ currency: Currency({ code: \'BRL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L209"}],"parameters":[{"id":4143,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BRL","categories":[],"previousId":4138,"nextId":4144},{"id":4144,"name":"BWP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"signatures":[{"id":4145,"name":"BWP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Botswanan Pula money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BWP(\'1.25\');// Money({ currency: Currency({ code: \'BWP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L219"}],"parameters":[{"id":4146,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BWP","categories":[],"previousId":4141,"nextId":4147},{"id":4147,"name":"BYN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"signatures":[{"id":4148,"name":"BYN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belarusian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BYN(\'1.25\');// Money({ currency: Currency({ code: \'BYN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":229,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L229"}],"parameters":[{"id":4149,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BYN","categories":[],"previousId":4144,"nextId":4150},{"id":4150,"name":"BZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"signatures":[{"id":4151,"name":"BZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Belize Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = BZD(\'1.25\');// Money({ currency: Currency({ code: \'BZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":239,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L239"}],"parameters":[{"id":4152,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/BZD","categories":[],"previousId":4147,"nextId":4093},{"id":4093,"name":"CAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"signatures":[{"id":4094,"name":"CAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canadian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CAD(\'1.25\');// Money({ currency: Currency({ code: \'CAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":49,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L49"}],"parameters":[{"id":4095,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CAD","categories":[],"previousId":4150,"nextId":4153},{"id":4153,"name":"CDF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"signatures":[{"id":4154,"name":"CDF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Congolese Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CDF(\'1.25\');// Money({ currency: Currency({ code: \'CDF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":249,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L249"}],"parameters":[{"id":4155,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CDF","categories":[],"previousId":4093,"nextId":4156},{"id":4156,"name":"CHF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"signatures":[{"id":4157,"name":"CHF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swiss Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CHF(\'1.25\');// Money({ currency: Currency({ code: \'CHF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":259,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L259"}],"parameters":[{"id":4158,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CHF","categories":[],"previousId":4153,"nextId":4159},{"id":4159,"name":"CLP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"signatures":[{"id":4160,"name":"CLP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chilean Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CLP(\'1.25\');// Money({ currency: Currency({ code: \'CLP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":269,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L269"}],"parameters":[{"id":4161,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CLP","categories":[],"previousId":4156,"nextId":4162},{"id":4162,"name":"CNY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"signatures":[{"id":4163,"name":"CNY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Chinese Yuan money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CNY(\'1.25\');// Money({ currency: Currency({ code: \'CNY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":279,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L279"}],"parameters":[{"id":4164,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CNY","categories":[],"previousId":4159,"nextId":4165},{"id":4165,"name":"COP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"signatures":[{"id":4166,"name":"COP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Colombian Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = COP(\'1.25\');// Money({ currency: Currency({ code: \'COP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":289,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L289"}],"parameters":[{"id":4167,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/COP","categories":[],"previousId":4162,"nextId":4168},{"id":4168,"name":"CRC","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"signatures":[{"id":4169,"name":"CRC","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Costa Rican Col\xf3n money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CRC(\'1.25\');// Money({ currency: Currency({ code: \'CRC\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":299,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L299"}],"parameters":[{"id":4170,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CRC","categories":[],"previousId":4165,"nextId":4171},{"id":4171,"name":"CVE","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"signatures":[{"id":4172,"name":"CVE","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cape Verdean Escudo money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CVE(\'1.25\');// Money({ currency: Currency({ code: \'CVE\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":309,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L309"}],"parameters":[{"id":4173,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CVE","categories":[],"previousId":4168,"nextId":4174},{"id":4174,"name":"CZK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"signatures":[{"id":4175,"name":"CZK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Czech Republic Koruna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = CZK(\'1.25\');// Money({ currency: Currency({ code: \'CZK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":319,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L319"}],"parameters":[{"id":4176,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/CZK","categories":[],"previousId":4171,"nextId":4177},{"id":4177,"name":"DJF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"signatures":[{"id":4178,"name":"DJF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Djiboutian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DJF(\'1.25\');// Money({ currency: Currency({ code: \'DJF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":329,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L329"}],"parameters":[{"id":4179,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DJF","categories":[],"previousId":4174,"nextId":4180},{"id":4180,"name":"DKK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"signatures":[{"id":4181,"name":"DKK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Danish Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DKK(\'1.25\');// Money({ currency: Currency({ code: \'DKK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":339,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L339"}],"parameters":[{"id":4182,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DKK","categories":[],"previousId":4177,"nextId":4183},{"id":4183,"name":"DOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"signatures":[{"id":4184,"name":"DOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Dominican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DOP(\'1.25\');// Money({ currency: Currency({ code: \'DOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":349,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L349"}],"parameters":[{"id":4185,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DOP","categories":[],"previousId":4180,"nextId":4186},{"id":4186,"name":"DZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"signatures":[{"id":4187,"name":"DZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Algerian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = DZD(\'1.25\');// Money({ currency: Currency({ code: \'DZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":359,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L359"}],"parameters":[{"id":4188,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/DZD","categories":[],"previousId":4183,"nextId":4189},{"id":4189,"name":"EEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"signatures":[{"id":4190,"name":"EEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Estonian Kroon money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EEK(\'1.25\');// Money({ currency: Currency({ code: \'EEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":369,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L369"}],"parameters":[{"id":4191,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EEK","categories":[],"previousId":4186,"nextId":4192},{"id":4192,"name":"EGP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"signatures":[{"id":4193,"name":"EGP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Egyptian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EGP(\'1.25\');// Money({ currency: Currency({ code: \'EGP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":379,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L379"}],"parameters":[{"id":4194,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EGP","categories":[],"previousId":4189,"nextId":4195},{"id":4195,"name":"ERN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"signatures":[{"id":4196,"name":"ERN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Eritrean Nakfa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ERN(\'1.25\');// Money({ currency: Currency({ code: \'ERN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":389,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L389"}],"parameters":[{"id":4197,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ERN","categories":[],"previousId":4192,"nextId":4198},{"id":4198,"name":"ETB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"signatures":[{"id":4199,"name":"ETB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ethiopian Birr money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ETB(\'1.25\');// Money({ currency: Currency({ code: \'ETB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":399,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L399"}],"parameters":[{"id":4200,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ETB","categories":[],"previousId":4195,"nextId":4096},{"id":4096,"name":"EUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"signatures":[{"id":4097,"name":"EUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Euro money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = EUR(\'1.25\');// Money({ currency: Currency({ code: \'EUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":59,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L59"}],"parameters":[{"id":4098,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/EUR","categories":[],"previousId":4198,"nextId":4201},{"id":4201,"name":"GBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"signatures":[{"id":4202,"name":"GBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"British Pound Sterling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GBP(\'1.25\');// Money({ currency: Currency({ code: \'GBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":409,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L409"}],"parameters":[{"id":4203,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GBP","categories":[],"previousId":4096,"nextId":4204},{"id":4204,"name":"GEL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"signatures":[{"id":4205,"name":"GEL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Georgian Lari money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GEL(\'1.25\');// Money({ currency: Currency({ code: \'GEL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":419,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L419"}],"parameters":[{"id":4206,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GEL","categories":[],"previousId":4201,"nextId":4207},{"id":4207,"name":"GHS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"signatures":[{"id":4208,"name":"GHS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ghanaian Cedi money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GHS(\'1.25\');// Money({ currency: Currency({ code: \'GHS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":429,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L429"}],"parameters":[{"id":4209,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GHS","categories":[],"previousId":4204,"nextId":4210},{"id":4210,"name":"GNF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"signatures":[{"id":4211,"name":"GNF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guinean Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GNF(\'1.25\');// Money({ currency: Currency({ code: \'GNF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":439,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L439"}],"parameters":[{"id":4212,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GNF","categories":[],"previousId":4207,"nextId":4213},{"id":4213,"name":"GTQ","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"signatures":[{"id":4214,"name":"GTQ","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Guatemalan Quetzal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = GTQ(\'1.25\');// Money({ currency: Currency({ code: \'GTQ\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":449,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L449"}],"parameters":[{"id":4215,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/GTQ","categories":[],"previousId":4210,"nextId":4216},{"id":4216,"name":"HKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"signatures":[{"id":4217,"name":"HKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hong Kong Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HKD(\'1.25\');// Money({ currency: Currency({ code: \'HKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":459,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L459"}],"parameters":[{"id":4218,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HKD","categories":[],"previousId":4213,"nextId":4219},{"id":4219,"name":"HNL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"signatures":[{"id":4220,"name":"HNL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Honduran Lempira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HNL(\'1.25\');// Money({ currency: Currency({ code: \'HNL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":469,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L469"}],"parameters":[{"id":4221,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HNL","categories":[],"previousId":4216,"nextId":4222},{"id":4222,"name":"HRK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"signatures":[{"id":4223,"name":"HRK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Croatian Kuna money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HRK(\'1.25\');// Money({ currency: Currency({ code: \'HRK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":479,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L479"}],"parameters":[{"id":4224,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HRK","categories":[],"previousId":4219,"nextId":4225},{"id":4225,"name":"HUF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"signatures":[{"id":4226,"name":"HUF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Hungarian Forint money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = HUF(\'1.25\');// Money({ currency: Currency({ code: \'HUF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":489,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L489"}],"parameters":[{"id":4227,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/HUF","categories":[],"previousId":4222,"nextId":4228},{"id":4228,"name":"IDR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"signatures":[{"id":4229,"name":"IDR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indonesian Rupiah money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IDR(\'1.25\');// Money({ currency: Currency({ code: \'IDR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":499,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L499"}],"parameters":[{"id":4230,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IDR","categories":[],"previousId":4225,"nextId":4231},{"id":4231,"name":"ILS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"signatures":[{"id":4232,"name":"ILS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Israeli New Sheqel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ILS(\'1.25\');// Money({ currency: Currency({ code: \'ILS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":509,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L509"}],"parameters":[{"id":4233,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ILS","categories":[],"previousId":4228,"nextId":4234},{"id":4234,"name":"INR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"signatures":[{"id":4235,"name":"INR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Indian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = INR(\'1.25\');// Money({ currency: Currency({ code: \'INR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":519,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L519"}],"parameters":[{"id":4236,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/INR","categories":[],"previousId":4231,"nextId":4237},{"id":4237,"name":"IQD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"signatures":[{"id":4238,"name":"IQD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iraqi Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IQD(\'1.25\');// Money({ currency: Currency({ code: \'IQD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":529,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L529"}],"parameters":[{"id":4239,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IQD","categories":[],"previousId":4234,"nextId":4240},{"id":4240,"name":"IRR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"signatures":[{"id":4241,"name":"IRR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Iranian Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = IRR(\'1.25\');// Money({ currency: Currency({ code: \'IRR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":539,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L539"}],"parameters":[{"id":4242,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/IRR","categories":[],"previousId":4237,"nextId":4243},{"id":4243,"name":"ISK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"signatures":[{"id":4244,"name":"ISK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Icelandic Kr\xf3na money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ISK(\'1.25\');// Money({ currency: Currency({ code: \'ISK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":549,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L549"}],"parameters":[{"id":4245,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ISK","categories":[],"previousId":4240,"nextId":4246},{"id":4246,"name":"JMD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"signatures":[{"id":4247,"name":"JMD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jamaican Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JMD(\'1.25\');// Money({ currency: Currency({ code: \'JMD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":559,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L559"}],"parameters":[{"id":4248,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JMD","categories":[],"previousId":4243,"nextId":4249},{"id":4249,"name":"JOD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"signatures":[{"id":4250,"name":"JOD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Jordanian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JOD(\'1.25\');// Money({ currency: Currency({ code: \'JOD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":569,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L569"}],"parameters":[{"id":4251,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JOD","categories":[],"previousId":4246,"nextId":4252},{"id":4252,"name":"JPY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"signatures":[{"id":4253,"name":"JPY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Japanese Yen money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = JPY(\'1.25\');// Money({ currency: Currency({ code: \'JPY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":579,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L579"}],"parameters":[{"id":4254,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/JPY","categories":[],"previousId":4249,"nextId":4255},{"id":4255,"name":"KES","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"signatures":[{"id":4256,"name":"KES","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kenyan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KES(\'1.25\');// Money({ currency: Currency({ code: \'KES\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":589,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L589"}],"parameters":[{"id":4257,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KES","categories":[],"previousId":4252,"nextId":4258},{"id":4258,"name":"KHR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"signatures":[{"id":4259,"name":"KHR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Cambodian Riel money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KHR(\'1.25\');// Money({ currency: Currency({ code: \'KHR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":599,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L599"}],"parameters":[{"id":4260,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KHR","categories":[],"previousId":4255,"nextId":4261},{"id":4261,"name":"KMF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"signatures":[{"id":4262,"name":"KMF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Comorian Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KMF(\'1.25\');// Money({ currency: Currency({ code: \'KMF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":609,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L609"}],"parameters":[{"id":4263,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KMF","categories":[],"previousId":4258,"nextId":4264},{"id":4264,"name":"KRW","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"signatures":[{"id":4265,"name":"KRW","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South Korean Won money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KRW(\'1.25\');// Money({ currency: Currency({ code: \'KRW\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":619,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L619"}],"parameters":[{"id":4266,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KRW","categories":[],"previousId":4261,"nextId":4267},{"id":4267,"name":"KWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"signatures":[{"id":4268,"name":"KWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kuwaiti Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KWD(\'1.25\');// Money({ currency: Currency({ code: \'KWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":629,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L629"}],"parameters":[{"id":4269,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KWD","categories":[],"previousId":4264,"nextId":4270},{"id":4270,"name":"KZT","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"signatures":[{"id":4271,"name":"KZT","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Kazakhstani Tenge money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = KZT(\'1.25\');// Money({ currency: Currency({ code: \'KZT\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":639,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L639"}],"parameters":[{"id":4272,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/KZT","categories":[],"previousId":4267,"nextId":4273},{"id":4273,"name":"LBP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"signatures":[{"id":4274,"name":"LBP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lebanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LBP(\'1.25\');// Money({ currency: Currency({ code: \'LBP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":649,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L649"}],"parameters":[{"id":4275,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LBP","categories":[],"previousId":4270,"nextId":4276},{"id":4276,"name":"LKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"signatures":[{"id":4277,"name":"LKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sri Lankan Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LKR(\'1.25\');// Money({ currency: Currency({ code: \'LKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":659,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L659"}],"parameters":[{"id":4278,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LKR","categories":[],"previousId":4273,"nextId":4279},{"id":4279,"name":"LTL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"signatures":[{"id":4280,"name":"LTL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Lithuanian Litas money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LTL(\'1.25\');// Money({ currency: Currency({ code: \'LTL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":669,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L669"}],"parameters":[{"id":4281,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LTL","categories":[],"previousId":4276,"nextId":4282},{"id":4282,"name":"LVL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"signatures":[{"id":4283,"name":"LVL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Latvian Lats money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LVL(\'1.25\');// Money({ currency: Currency({ code: \'LVL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":679,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L679"}],"parameters":[{"id":4284,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LVL","categories":[],"previousId":4279,"nextId":4285},{"id":4285,"name":"LYD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"signatures":[{"id":4286,"name":"LYD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Libyan Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = LYD(\'1.25\');// Money({ currency: Currency({ code: \'LYD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":689,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L689"}],"parameters":[{"id":4287,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/LYD","categories":[],"previousId":4282,"nextId":4288},{"id":4288,"name":"MAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"signatures":[{"id":4289,"name":"MAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moroccan Dirham money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MAD(\'1.25\');// Money({ currency: Currency({ code: \'MAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":699,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L699"}],"parameters":[{"id":4290,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MAD","categories":[],"previousId":4285,"nextId":4291},{"id":4291,"name":"MDL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"signatures":[{"id":4292,"name":"MDL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Moldovan Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MDL(\'1.25\');// Money({ currency: Currency({ code: \'MDL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":709,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L709"}],"parameters":[{"id":4293,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MDL","categories":[],"previousId":4288,"nextId":4294},{"id":4294,"name":"MGA","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"signatures":[{"id":4295,"name":"MGA","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malagasy Ariary money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MGA(\'1.25\');// Money({ currency: Currency({ code: \'MGA\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":719,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L719"}],"parameters":[{"id":4296,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MGA","categories":[],"previousId":4291,"nextId":4297},{"id":4297,"name":"MKD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"signatures":[{"id":4298,"name":"MKD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macedonian Denar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MKD(\'1.25\');// Money({ currency: Currency({ code: \'MKD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":729,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L729"}],"parameters":[{"id":4299,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MKD","categories":[],"previousId":4294,"nextId":4300},{"id":4300,"name":"MMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"signatures":[{"id":4301,"name":"MMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Myanma Kyat money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MMK(\'1.25\');// Money({ currency: Currency({ code: \'MMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":739,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L739"}],"parameters":[{"id":4302,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MMK","categories":[],"previousId":4297,"nextId":4303},{"id":4303,"name":"MOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"signatures":[{"id":4304,"name":"MOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Macanese Pataca money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MOP(\'1.25\');// Money({ currency: Currency({ code: \'MOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":749,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L749"}],"parameters":[{"id":4305,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MOP","categories":[],"previousId":4300,"nextId":4306},{"id":4306,"name":"MUR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"signatures":[{"id":4307,"name":"MUR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mauritian Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MUR(\'1.25\');// Money({ currency: Currency({ code: \'MUR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":759,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L759"}],"parameters":[{"id":4308,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MUR","categories":[],"previousId":4303,"nextId":4309},{"id":4309,"name":"MXN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"signatures":[{"id":4310,"name":"MXN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mexican Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MXN(\'1.25\');// Money({ currency: Currency({ code: \'MXN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":769,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L769"}],"parameters":[{"id":4311,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MXN","categories":[],"previousId":4306,"nextId":4312},{"id":4312,"name":"MYR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"signatures":[{"id":4313,"name":"MYR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Malaysian Ringgit money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MYR(\'1.25\');// Money({ currency: Currency({ code: \'MYR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":779,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L779"}],"parameters":[{"id":4314,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MYR","categories":[],"previousId":4309,"nextId":4315},{"id":4315,"name":"MZN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"signatures":[{"id":4316,"name":"MZN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mozambican Metical money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = MZN(\'1.25\');// Money({ currency: Currency({ code: \'MZN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":789,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L789"}],"parameters":[{"id":4317,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/MZN","categories":[],"previousId":4312,"nextId":4318},{"id":4318,"name":"NAD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"signatures":[{"id":4319,"name":"NAD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Namibian Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NAD(\'1.25\');// Money({ currency: Currency({ code: \'NAD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":799,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L799"}],"parameters":[{"id":4320,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NAD","categories":[],"previousId":4315,"nextId":4321},{"id":4321,"name":"NGN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"signatures":[{"id":4322,"name":"NGN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nigerian Naira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NGN(\'1.25\');// Money({ currency: Currency({ code: \'NGN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":809,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L809"}],"parameters":[{"id":4323,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NGN","categories":[],"previousId":4318,"nextId":4324},{"id":4324,"name":"NIO","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"signatures":[{"id":4325,"name":"NIO","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nicaraguan C\xf3rdoba money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NIO(\'1.25\');// Money({ currency: Currency({ code: \'NIO\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":819,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L819"}],"parameters":[{"id":4326,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NIO","categories":[],"previousId":4321,"nextId":4327},{"id":4327,"name":"NOK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"signatures":[{"id":4328,"name":"NOK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Norwegian Krone money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NOK(\'1.25\');// Money({ currency: Currency({ code: \'NOK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":829,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L829"}],"parameters":[{"id":4329,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NOK","categories":[],"previousId":4324,"nextId":4330},{"id":4330,"name":"NPR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"signatures":[{"id":4331,"name":"NPR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Nepalese Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NPR(\'1.25\');// Money({ currency: Currency({ code: \'NPR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":839,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L839"}],"parameters":[{"id":4332,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NPR","categories":[],"previousId":4327,"nextId":4333},{"id":4333,"name":"NZD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"signatures":[{"id":4334,"name":"NZD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Zealand Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = NZD(\'1.25\');// Money({ currency: Currency({ code: \'NZD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":849,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L849"}],"parameters":[{"id":4335,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/NZD","categories":[],"previousId":4330,"nextId":4336},{"id":4336,"name":"OMR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"signatures":[{"id":4337,"name":"OMR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Omani Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = OMR(\'1.25\');// Money({ currency: Currency({ code: \'OMR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":859,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L859"}],"parameters":[{"id":4338,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/OMR","categories":[],"previousId":4333,"nextId":4339},{"id":4339,"name":"PAB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"signatures":[{"id":4340,"name":"PAB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Panamanian Balboa money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PAB(\'1.25\');// Money({ currency: Currency({ code: \'PAB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":869,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L869"}],"parameters":[{"id":4341,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PAB","categories":[],"previousId":4336,"nextId":4342},{"id":4342,"name":"PEN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"signatures":[{"id":4343,"name":"PEN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Peruvian Nuevo Sol money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PEN(\'1.25\');// Money({ currency: Currency({ code: \'PEN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":879,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L879"}],"parameters":[{"id":4344,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PEN","categories":[],"previousId":4339,"nextId":4345},{"id":4345,"name":"PHP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"signatures":[{"id":4346,"name":"PHP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Philippine Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PHP(\'1.25\');// Money({ currency: Currency({ code: \'PHP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":889,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L889"}],"parameters":[{"id":4347,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PHP","categories":[],"previousId":4342,"nextId":4348},{"id":4348,"name":"PKR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"signatures":[{"id":4349,"name":"PKR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Pakistani Rupee money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PKR(\'1.25\');// Money({ currency: Currency({ code: \'PKR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":899,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L899"}],"parameters":[{"id":4350,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PKR","categories":[],"previousId":4345,"nextId":4351},{"id":4351,"name":"PLN","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"signatures":[{"id":4352,"name":"PLN","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Polish Zloty money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PLN(\'1.25\');// Money({ currency: Currency({ code: \'PLN\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":909,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L909"}],"parameters":[{"id":4353,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PLN","categories":[],"previousId":4348,"nextId":4354},{"id":4354,"name":"PYG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"signatures":[{"id":4355,"name":"PYG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Paraguayan Guarani money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = PYG(\'1.25\');// Money({ currency: Currency({ code: \'PYG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":919,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L919"}],"parameters":[{"id":4356,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/PYG","categories":[],"previousId":4351,"nextId":4357},{"id":4357,"name":"QAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"signatures":[{"id":4358,"name":"QAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Qatari Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = QAR(\'1.25\');// Money({ currency: Currency({ code: \'QAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":929,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L929"}],"parameters":[{"id":4359,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/QAR","categories":[],"previousId":4354,"nextId":4360},{"id":4360,"name":"RON","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"signatures":[{"id":4361,"name":"RON","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Romanian Leu money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RON(\'1.25\');// Money({ currency: Currency({ code: \'RON\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":939,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L939"}],"parameters":[{"id":4362,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RON","categories":[],"previousId":4357,"nextId":4363},{"id":4363,"name":"RSD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"signatures":[{"id":4364,"name":"RSD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Serbian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RSD(\'1.25\');// Money({ currency: Currency({ code: \'RSD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":949,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L949"}],"parameters":[{"id":4365,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RSD","categories":[],"previousId":4360,"nextId":4366},{"id":4366,"name":"RUB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"signatures":[{"id":4367,"name":"RUB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Russian Ruble money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RUB(\'1.25\');// Money({ currency: Currency({ code: \'RUB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":959,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L959"}],"parameters":[{"id":4368,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RUB","categories":[],"previousId":4363,"nextId":4369},{"id":4369,"name":"RWF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"signatures":[{"id":4370,"name":"RWF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Rwandan Franc money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = RWF(\'1.25\');// Money({ currency: Currency({ code: \'RWF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":969,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L969"}],"parameters":[{"id":4371,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/RWF","categories":[],"previousId":4366,"nextId":4372},{"id":4372,"name":"SAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"signatures":[{"id":4373,"name":"SAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Saudi Riyal money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SAR(\'1.25\');// Money({ currency: Currency({ code: \'SAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":979,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L979"}],"parameters":[{"id":4374,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SAR","categories":[],"previousId":4369,"nextId":4375},{"id":4375,"name":"SDG","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"signatures":[{"id":4376,"name":"SDG","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sudanese Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SDG(\'1.25\');// Money({ currency: Currency({ code: \'SDG\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":989,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L989"}],"parameters":[{"id":4377,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SDG","categories":[],"previousId":4372,"nextId":4378},{"id":4378,"name":"SEK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"signatures":[{"id":4379,"name":"SEK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Swedish Krona money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SEK(\'1.25\');// Money({ currency: Currency({ code: \'SEK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":999,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L999"}],"parameters":[{"id":4380,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SEK","categories":[],"previousId":4375,"nextId":4381},{"id":4381,"name":"SGD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"signatures":[{"id":4382,"name":"SGD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Singapore Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SGD(\'1.25\');// Money({ currency: Currency({ code: \'SGD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1009,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1009"}],"parameters":[{"id":4383,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SGD","categories":[],"previousId":4378,"nextId":4384},{"id":4384,"name":"SOS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"signatures":[{"id":4385,"name":"SOS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Somali Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SOS(\'1.25\');// Money({ currency: Currency({ code: \'SOS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1019,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1019"}],"parameters":[{"id":4386,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SOS","categories":[],"previousId":4381,"nextId":4387},{"id":4387,"name":"SYP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"signatures":[{"id":4388,"name":"SYP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Syrian Pound money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = SYP(\'1.25\');// Money({ currency: Currency({ code: \'SYP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1029,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1029"}],"parameters":[{"id":4389,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/SYP","categories":[],"previousId":4384,"nextId":4390},{"id":4390,"name":"THB","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"signatures":[{"id":4391,"name":"THB","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Thai Baht money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = THB(\'1.25\');// Money({ currency: Currency({ code: \'THB\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1039,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1039"}],"parameters":[{"id":4392,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/THB","categories":[],"previousId":4387,"nextId":4393},{"id":4393,"name":"TND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"signatures":[{"id":4394,"name":"TND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tunisian Dinar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TND(\'1.25\');// Money({ currency: Currency({ code: \'TND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1049,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1049"}],"parameters":[{"id":4395,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TND","categories":[],"previousId":4390,"nextId":4396},{"id":4396,"name":"TOP","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"signatures":[{"id":4397,"name":"TOP","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tongan Pa\u02bbanga money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TOP(\'1.25\');// Money({ currency: Currency({ code: \'TOP\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1059,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1059"}],"parameters":[{"id":4398,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TOP","categories":[],"previousId":4393,"nextId":4399},{"id":4399,"name":"TRY","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"signatures":[{"id":4400,"name":"TRY","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Turkish Lira money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TRY(\'1.25\');// Money({ currency: Currency({ code: \'TRY\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1069,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1069"}],"parameters":[{"id":4401,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TRY","categories":[],"previousId":4396,"nextId":4402},{"id":4402,"name":"TTD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"signatures":[{"id":4403,"name":"TTD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Trinidad and Tobago Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TTD(\'1.25\');// Money({ currency: Currency({ code: \'TTD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1079,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1079"}],"parameters":[{"id":4404,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TTD","categories":[],"previousId":4399,"nextId":4405},{"id":4405,"name":"TWD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"signatures":[{"id":4406,"name":"TWD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"New Taiwan Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TWD(\'1.25\');// Money({ currency: Currency({ code: \'TWD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1089,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1089"}],"parameters":[{"id":4407,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TWD","categories":[],"previousId":4402,"nextId":4408},{"id":4408,"name":"TZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"signatures":[{"id":4409,"name":"TZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Tanzanian Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = TZS(\'1.25\');// Money({ currency: Currency({ code: \'TZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1099,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1099"}],"parameters":[{"id":4410,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/TZS","categories":[],"previousId":4405,"nextId":4411},{"id":4411,"name":"UAH","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"signatures":[{"id":4412,"name":"UAH","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ukrainian Hryvnia money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UAH(\'1.25\');// Money({ currency: Currency({ code: \'UAH\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1109,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1109"}],"parameters":[{"id":4413,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UAH","categories":[],"previousId":4408,"nextId":4414},{"id":4414,"name":"UGX","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"signatures":[{"id":4415,"name":"UGX","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ugandan Shilling money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UGX(\'1.25\');// Money({ currency: Currency({ code: \'UGX\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1119,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1119"}],"parameters":[{"id":4416,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UGX","categories":[],"previousId":4411,"nextId":4090},{"id":4090,"name":"USD","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"signatures":[{"id":4091,"name":"USD","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"US Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = USD(\'1.25\');// Money({ currency: Currency({ code: \'USD\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":39,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L39"}],"parameters":[{"id":4092,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/USD","categories":[],"previousId":4414,"nextId":4417},{"id":4417,"name":"UYU","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"signatures":[{"id":4418,"name":"UYU","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uruguayan Peso money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UYU(\'1.25\');// Money({ currency: Currency({ code: \'UYU\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1129,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1129"}],"parameters":[{"id":4419,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UYU","categories":[],"previousId":4090,"nextId":4420},{"id":4420,"name":"UZS","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"signatures":[{"id":4421,"name":"UZS","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Uzbekistan Som money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = UZS(\'1.25\');// Money({ currency: Currency({ code: \'UZS\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1139,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1139"}],"parameters":[{"id":4422,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/UZS","categories":[],"previousId":4417,"nextId":4423},{"id":4423,"name":"VEF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"signatures":[{"id":4424,"name":"VEF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Venezuelan Bol\xedvar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VEF(\'1.25\');// Money({ currency: Currency({ code: \'VEF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1149,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1149"}],"parameters":[{"id":4425,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/VEF","categories":[],"previousId":4420,"nextId":4426},{"id":4426,"name":"VND","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"signatures":[{"id":4427,"name":"VND","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Vietnamese Dong money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = VND(\'1.25\');// Money({ currency: Currency({ code: \'VND\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1159,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1159"}],"parameters":[{"id":4428,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/VND","categories":[],"previousId":4423,"nextId":4429},{"id":4429,"name":"XAF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"signatures":[{"id":4430,"name":"XAF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BEAC money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XAF(\'1.25\');// Money({ currency: Currency({ code: \'XAF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1169,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1169"}],"parameters":[{"id":4431,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/XAF","categories":[],"previousId":4426,"nextId":4432},{"id":4432,"name":"XOF","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"signatures":[{"id":4433,"name":"XOF","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"CFA Franc BCEAO money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = XOF(\'1.25\');// Money({ currency: Currency({ code: \'XOF\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1179,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1179"}],"parameters":[{"id":4434,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/XOF","categories":[],"previousId":4429,"nextId":4435},{"id":4435,"name":"YER","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"signatures":[{"id":4436,"name":"YER","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Yemeni Rial money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = YER(\'1.25\');// Money({ currency: Currency({ code: \'YER\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1189,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1189"}],"parameters":[{"id":4437,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/YER","categories":[],"previousId":4432,"nextId":4438},{"id":4438,"name":"ZAR","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"signatures":[{"id":4439,"name":"ZAR","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"South African Rand money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZAR(\'1.25\');// Money({ currency: Currency({ code: \'ZAR\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1199,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1199"}],"parameters":[{"id":4440,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZAR","categories":[],"previousId":4435,"nextId":4441},{"id":4441,"name":"ZMK","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"signatures":[{"id":4442,"name":"ZMK","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zambian Kwacha money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZMK(\'1.25\');// Money({ currency: Currency({ code: \'ZMK\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1209,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1209"}],"parameters":[{"id":4443,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZMK","categories":[],"previousId":4438,"nextId":4444},{"id":4444,"name":"ZWL","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"signatures":[{"id":4445,"name":"ZWL","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Zimbabwean Dollar money factory"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst money = ZWL(\'1.25\');// Money({ currency: Currency({ code: \'ZWL\' }), amount: BigDecimal(\'1\') })\\n```"}]}]},"sources":[{"fileName":"packages/money/src/moneyFactory.all.ts","line":1219,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/money/src/moneyFactory.all.ts#L1219"}],"parameters":[{"id":4446,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of money"}]},"type":{"type":"union","types":[{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"number"},""]]},{"type":"reference","target":{"sourceFileName":"../../packages/bigdecimal/src/BigDecimal/BigDecimal.ts","qualifiedName":"BigDecimal"},"name":"BigDecimal","package":"@w5s/bigdecimal"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/money/src/Money/Money.ts","qualifiedName":"Money"},"name":"Money","package":"@w5s/money"}}],"permalink":"/std/fr/api/money/function/ZWL","categories":[],"previousId":4441,"nextId":3860}],"groups":[{"title":"Functions","children":[4099,4102,4105,4108,4111,4114,4117,4120,4123,4126,4129,4132,4135,4138,4141,4144,4147,4150,4093,4153,4156,4159,4162,4165,4168,4171,4174,4177,4180,4183,4186,4189,4192,4195,4198,4096,4201,4204,4207,4210,4213,4216,4219,4222,4225,4228,4231,4234,4237,4240,4243,4246,4249,4252,4255,4258,4261,4264,4267,4270,4273,4276,4279,4282,4285,4288,4291,4294,4297,4300,4303,4306,4309,4312,4315,4318,4321,4324,4327,4330,4333,4336,4339,4342,4345,4348,4351,4354,4357,4360,4363,4366,4369,4372,4375,4378,4381,4384,4387,4390,4393,4396,4399,4402,4405,4408,4411,4414,4090,4417,4420,4423,4426,4429,4432,4435,4438,4441,4444]},{"title":"Namespaces","children":[3860,3957]},{"title":"Type Aliases","children":[3956,4089]}],"sources":[{"fileName":"packages/money/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/money/src/index.ts#L1"}],"permalink":"/std/fr/api/money"},"urlSlug":"money"}],"packageName":"@w5s/money","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":12,"name":"@w5s/random","variant":"declaration","kind":2,"flags":{},"children":[{"id":4447,"name":"RandomConfiguration","variant":"declaration","kind":256,"flags":{},"children":[{"id":4448,"name":"randomNumberGenerator","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":9,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L9"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/random/src/RandomConfiguration.ts","qualifiedName":"RandomNumberFunction"},"name":"RandomNumberFunction","package":"@w5s/random"}}],"groups":[{"title":"Properties","children":[4448]}],"sources":[{"fileName":"packages/random/src/RandomConfiguration.ts","line":8,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/RandomConfiguration.ts#L8"}],"permalink":"/std/fr/api/random/interface/RandomConfiguration","categories":[],"previousId":4464,"nextId":4449},{"id":4449,"name":"RandomGenerator","variant":"declaration","kind":256,"flags":{},"children":[{"id":4453,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":66,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskFunction"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.[run]"}},{"id":4450,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"signatures":[{"id":4451,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/dist/Task.d.ts","line":77,"character":4}],"parameters":[{"id":4452,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskCanceler"},"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Task.run"}}],"groups":[{"title":"Properties","children":[4453]},{"title":"Methods","children":[4450]}],"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L5"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}],"permalink":"/std/fr/api/random/interface/RandomGenerator","categories":[],"previousId":4447,"nextId":4454},{"id":4454,"name":"randomGenerator","variant":"declaration","kind":32,"flags":{"isConst":true},"sources":[{"fileName":"packages/random/src/randomGenerator.ts","line":7,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomGenerator.ts#L7"}],"type":{"type":"reference","target":4449,"name":"RandomGenerator","package":"@w5s/random"},"defaultValue":"...","permalink":"/std/fr/api/random#randomGenerator","categories":[],"previousId":4449},{"id":4455,"name":"randomBoolean","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"signatures":[{"id":4456,"name":"randomBoolean","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate booleans."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomBoolean(0.7);\\nTask.run(next);// Result.Ok(true|false);\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomBoolean.ts","line":16,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomBoolean.ts#L16"}],"parameters":[{"id":4457,"name":"trueWeight","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the probability to obtain true"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0.5"},{"id":4458,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4449,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomBoolean","categories":[],"nextId":4459},{"id":4459,"name":"randomInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"signatures":[{"id":4460,"name":"randomInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate integers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomInt(-10, 10);\\nTask.run(next);// Result.Ok(N); where N is an integer between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomInt.ts","line":21,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomInt.ts#L21"}],"parameters":[{"id":4461,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":4462,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"}},{"id":4463,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4449,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Int.ts","qualifiedName":"Int"},"name":"Int","package":"@w5s/core"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomInt","categories":[],"previousId":4455,"nextId":4464},{"id":4464,"name":"randomNumber","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"signatures":[{"id":4465,"name":"randomNumber","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a Task that will generate floating numbers between ["},{"kind":"code","text":"`min`"},{"kind":"text","text":", "},{"kind":"code","text":"`max`"},{"kind":"text","text":"]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst next = randomNumber(-10, 10);\\nTask.run(next);// Result.Ok(F); where F is a floating number between -10 and 10\\n```"}]}]},"sources":[{"fileName":"packages/random/src/randomNumber.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/random/src/randomNumber.ts#L17"}],"parameters":[{"id":4466,"name":"min","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the minimum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4467,"name":"max","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the maximum inclusive bound for generated value"}]},"type":{"type":"intrinsic","name":"number"}},{"id":4468,"name":"generator","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a custom optional random number generator"}]},"type":{"type":"reference","target":4449,"name":"RandomGenerator","package":"@w5s/random"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/random/function/randomNumber","categories":[],"previousId":4459,"nextId":4447}],"groups":[{"title":"Functions","children":[4455,4459,4464]},{"title":"Interfaces","children":[4447,4449]},{"title":"Variables","children":[4454]}],"sources":[{"fileName":"packages/random/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/random/src/index.ts#L1"}],"permalink":"/std/fr/api/random"},"urlSlug":"random"}],"packageName":"@w5s/random","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":13,"name":"@w5s/task","variant":"declaration","kind":2,"flags":{},"children":[{"id":4523,"name":"Task","variant":"declaration","kind":4,"flags":{},"children":[{"id":4689,"name":"ErrorOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts error type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":122,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L122"}],"typeParameters":[{"id":4690,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":4690,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":4680,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"inferred","name":"Error"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Error"},"name":"Error","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/task/namespace/Task#ErrorOf"},{"id":4687,"name":"ValueOf","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Extracts value type of task T"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":118,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L118"}],"typeParameters":[{"id":4688,"name":"T","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","target":4688,"name":"T","package":"@w5s/task","refersToTypeParameter":true},"extendsType":{"type":"reference","target":4680,"typeArguments":[{"type":"inferred","name":"V"},{"type":"intrinsic","name":"any"}],"name":"Task","package":"@w5s/task"},"trueType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"V"},"name":"V","package":"@w5s/task","refersToTypeParameter":true},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/std/fr/api/task/namespace/Task#ValueOf"},{"id":4524,"name":"all","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"signatures":[{"id":4525,"name":"all","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the array of all task values, or reject with the first error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.all([\\n  Task.resolve(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok([1, 2])\\n\\nconst failure = Task.all([\\n  Task.resolve(1),\\n  Task.reject(\'error\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(\'error\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4526,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"reference","target":4519,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}}],"parameters":[{"id":4527,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4526,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4526,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":4687,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/all.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4526,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"}},{"type":"reference","target":4689,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4526,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4526,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Task","package":"@w5s/task"}},{"id":4528,"name":"all","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":93,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L93"}],"typeParameter":[{"id":4529,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4530,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4531,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4529,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4530,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":4529,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"ReadonlyArray","package":"typescript"},{"type":"reference","target":4530,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#all"},{"id":4532,"name":"allSettled","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"signatures":[{"id":4533,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves an array of all task results"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.allSettled([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst taskResults = Task.run(task);// [Result.Error(1), Result.Ok(2)]\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4534,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4519,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4535,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4534,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4534,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4687,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4534,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":4689,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/allSettled.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4534,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}],"name":"Result","package":"@w5s/core"}},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}},{"id":4536,"name":"allSettled","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":94,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L94"}],"typeParameter":[{"id":4537,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4538,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4539,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4537,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4538,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReadonlyArray"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4537,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4538,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"ReadonlyArray","package":"typescript"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#allSettled"},{"id":4540,"name":"andRun","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"signatures":[{"id":4541,"name":"andRun","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Similar to "},{"kind":"inline-tag","tag":"@link","text":"andThen","target":4550,"tsLinkText":""},{"kind":"text","text":" but the task keep "},{"kind":"code","text":"`task`"},{"kind":"text","text":" resolved value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andRun(success, (value) => Console.log(\'result=\', value));// console.log(\'result=foo\'); then resolves \'foo\'\\nTask.andRun(success, (value) => Task.reject(`SomeError`));// Task.reject(\'SomeError\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andRun(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":95,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L95"}],"typeParameter":[{"id":4542,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4543,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4544,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4545,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4542,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4543,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4546,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4547,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"signatures":[{"id":4548,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andRun.ts","line":22,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andRun.ts#L22"}],"parameters":[{"id":4549,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4542,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4519,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":4544,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4542,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4543,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4544,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#andRun"},{"id":4550,"name":"andThen","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"signatures":[{"id":4551,"name":"andThen","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is successful, otherwise returns the failed task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.andThen(success, (value) => Task.resolve(`${value}_then`));// Task.resolve(\'foo_then\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.andThen(failure, (value) => Task.resolve(`never_used`));// Task.reject(\'PreviousError\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":96,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L96"}],"typeParameter":[{"id":4552,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4553,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4554,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4555,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4556,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4552,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4553,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4557,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value mapper function"}]},"type":{"type":"reflection","declaration":{"id":4558,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"signatures":[{"id":4559,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/andThen.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/andThen.ts#L21"}],"parameters":[{"id":4560,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4552,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4554,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4555,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4554,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":4553,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4555,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#andThen"},{"id":4561,"name":"any","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"signatures":[{"id":4562,"name":"any","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves with the first value, or reject with an aggregated error"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.any([\\n  Task.reject(1),\\n  Task.resolve(2),\\n]);\\nconst successResult = Task.run(success);// Result.Ok(2)\\n\\nconst failure = Task.any([\\n  Task.reject(\'error1\'),\\n  Task.reject(\'error2\'),\\n]);\\nconst failureResult = Task.run(failure);// Result.Error(AggregateError({ errors: [\'error1\', \'error2\']}))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4563,"name":"T","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"array","elementType":{"type":"reference","target":4519,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"TaskLike","package":"@w5s/task"}}}],"parameters":[{"id":4564,"name":"tasks","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"tasks to be run in parallel"}]},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"array","elementType":{"type":"reference","target":4563,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}}]}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4687,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4563,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"objectType":{"type":"reference","target":4563,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ValueOf","package":"@w5s/task"},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":4563,"name":"T","package":"@w5s/task","refersToTypeParameter":true}},"templateType":{"type":"reference","target":4689,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/any.ts","qualifiedName":"K"},"name":"K","package":"@w5s/task","refersToTypeParameter":true},"objectType":{"type":"reference","target":4563,"name":"T","package":"@w5s/task","refersToTypeParameter":true}}],"name":"Task.ErrorOf","package":"@w5s/task"}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}},{"id":4565,"name":"any","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":97,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L97"}],"typeParameter":[{"id":4566,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4567,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4568,"name":"tasks","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","qualifiedName":"Iterable"},"typeArguments":[{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4566,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4567,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Iterable","package":"typescript"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4566,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"../../packages/error/src/AggregateError.ts","qualifiedName":"AggregateError"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4567,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"name":"AggregateError","package":"@w5s/error"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#any"},{"id":4569,"name":"create","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"signatures":[{"id":4570,"name":"create","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Task constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getTime = Task(() => Task.ok(Date.now()));\\nconst fetchTask = (url: string) => Task(() => fetch(url).then(Task.ok, Task.error));\\nconst delay = (ms: number) => Task(() => new Promise(resolve => { setTimeout(() => resolve(Task.ok()); }), ms));\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":98,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L98"}],"typeParameter":[{"id":4571,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4572,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4573,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the effect function"}]},"type":{"type":"reflection","declaration":{"id":4574,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"signatures":[{"id":4575,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}],"parameters":[{"id":4576,"name":"resolver","variant":"param","kind":32768,"flags":{},"type":{"type":"reflection","declaration":{"id":4577,"name":"__type","variant":"declaration","kind":65536,"flags":{},"children":[{"id":4578,"name":"canceler","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Canceler"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":25,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L25"}],"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4579,"name":"run","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task runner that can be used to run subtasks"}]},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":4,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"type":{"type":"reflection","declaration":{"id":4580,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"signatures":[{"id":4581,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/create.ts","line":29,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L29"}],"typeParameter":[{"id":4582,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4583,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4584,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4582,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4583,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4582,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4583,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4578,4579]}],"sources":[{"fileName":"packages/task/src/Task/create.ts","line":21,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/create.ts#L21"}]}}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4571,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4572,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4571,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4572,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#create"},{"id":4585,"name":"error","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"signatures":[{"id":4586,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nError();// { _: \'Error\', ok: false, value: undefined }\\nError(new globalThis.Error(\'my message\'));// { _: \'Error\', ok: false, error: Error}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"void"}],"name":"Result","package":"@w5s/core"}},{"id":4587,"name":"error","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":99,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L99"}],"typeParameter":[{"id":4588,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4589,"name":"resultError","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the failure value"}]},"type":{"type":"reference","target":4588,"name":"E","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"reference","target":4588,"name":"E","package":"@w5s/core","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/task/namespace/Task#error"},{"id":4590,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"signatures":[{"id":4591,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a Task from a "},{"kind":"code","text":"`Symbol.run`"},{"kind":"text","text":" function or a TaskLike"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.from(({ resolve }) => resolve(\'hello\'));// from a callback\\nconst task = Task.from({ [Symbol.run]: ({ resolve }) => resolve(\'hello\') });// from a TaskLike\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":100,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L100"}],"typeParameter":[{"id":4592,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4593,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4594,"name":"taskLike","variant":"param","kind":32768,"flags":{},"type":{"type":"union","types":[{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4592,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4593,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"},{"type":"reference","target":4513,"typeArguments":[{"type":"reference","target":4592,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4593,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":4592,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4593,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#from"},{"id":4595,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"signatures":[{"id":4596,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if anyValue is a valid "},{"kind":"code","text":"`Task`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTask.hasInstance(Task.resolve(...)); // true\\nTask.hasInstance({}); // false\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":101,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L101"}],"parameters":[{"id":4597,"name":"anyValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a tested value"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":4519,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}],"name":"TaskLike","package":"@w5s/task"}}}],"permalink":"/std/fr/api/task/namespace/Task#hasInstance"},{"id":4598,"name":"ignore","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"signatures":[{"id":4599,"name":"ignore","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Ignores value of task"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.ignore(task);// Task.resolve()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":102,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L102"}],"typeParameter":[{"id":4600,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4601,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the Task object"}]},"type":{"type":"reference","target":4680,"typeArguments":[{"type":"intrinsic","name":"unknown"},{"type":"reference","target":4600,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":4600,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#ignore"},{"id":4602,"name":"map","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"signatures":[{"id":4603,"name":"map","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, Error>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<NewValue, Error>`"},{"kind":"text","text":" by applying a function to a success value, leaving a failure untouched.\\nThis function can be used to compose the results of two functions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(\'foo\');\\nTask.map(task, (value) => `${value}_bar`));// Task.resolve(\'foo_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":103,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L103"}],"typeParameter":[{"id":4604,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4605,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4606,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4607,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4604,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4605,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4608,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the mapper function"}]},"type":{"type":"reflection","declaration":{"id":4609,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"signatures":[{"id":4610,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/map.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/map.ts#L18"}],"parameters":[{"id":4611,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4604,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4606,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4606,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4605,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#map"},{"id":4612,"name":"mapError","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"signatures":[{"id":4613,"name":"mapError","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<Value, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<Value, ErrorTo>`"},{"kind":"text","text":" by applying a function to a contained failure error, leaving a success value untouched.\\nThis function can be used to pass through a successful result while handling an error."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nTask.mapError(task, (value) => `${value}_bar`));// Task.reject(\'error_bar\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":104,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L104"}],"typeParameter":[{"id":4614,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4615,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4616,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4617,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4614,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4615,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4618,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":4619,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"signatures":[{"id":4620,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapError.ts","line":18,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapError.ts#L18"}],"parameters":[{"id":4621,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4615,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4616,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4614,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4616,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#mapError"},{"id":4622,"name":"mapResult","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"signatures":[{"id":4623,"name":"mapResult","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Maps a "},{"kind":"code","text":"`Task<ValueFrom, ErrorFrom>`"},{"kind":"text","text":" to "},{"kind":"code","text":"`Task<ValueTo, ErrorTo>`"},{"kind":"text","text":" by applying a function to the result of the task."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(\'error\');\\nconst handledTask = Task.mapResult(task, (result) =>\\n   Result.isOk(result) ? result : Result.Ok(\'handled_value\') )\\n); // Task.resolve(\'handled_value\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":105,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L105"}],"typeParameter":[{"id":4624,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4625,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4626,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4627,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4628,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4624,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4625,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4629,"name":"mapFn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A result mapper function"}]},"type":{"type":"reflection","declaration":{"id":4630,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"signatures":[{"id":4631,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/mapResult.ts","line":25,"character":9,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/mapResult.ts#L25"}],"parameters":[{"id":4632,"name":"result","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4624,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4625,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4626,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4627,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4626,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4627,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#mapResult"},{"id":4633,"name":"ok","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"signatures":[{"id":4634,"name":"ok","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new "},{"kind":"code","text":"`Ok`"},{"kind":"text","text":" object"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nOk();// { _: \'Ok\', ok: true, value: undefined }\\nOk(\'value\');// { _: \'Ok\', ok: true, value: \'value\'}\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}},{"id":4635,"name":"ok","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":106,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L106"}],"typeParameter":[{"id":4636,"name":"V","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4637,"name":"resultValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4636,"name":"V","package":"@w5s/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4636,"name":"V","package":"@w5s/core","refersToTypeParameter":true},{"type":"intrinsic","name":"never"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/task/namespace/Task#ok"},{"id":4638,"name":"orElse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"signatures":[{"id":4639,"name":"orElse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Calls "},{"kind":"code","text":"`fn`"},{"kind":"text","text":" if the task is failed, otherwise returns the successful task untouched.\\nThis function can be used for control flow based on "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst success = Task.resolve(\'foo\');\\nTask.orElse(success, (value) => Task.resolve(`never_used`));// Task.resolve(\'foo\')\\n\\nconst failure = Task.reject(\'PreviousError\');\\nTask.orElse(failure, (error) => Task.reject(`${value}_caught`));// Task.reject(\'PreviousError_caught\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":107,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L107"}],"typeParameter":[{"id":4640,"name":"ValueFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4641,"name":"ErrorFrom","variant":"typeParam","kind":131072,"flags":{}},{"id":4642,"name":"ValueTo","variant":"typeParam","kind":131072,"flags":{}},{"id":4643,"name":"ErrorTo","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4644,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a Task object"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4640,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4641,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4645,"name":"fn","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error mapper function"}]},"type":{"type":"reflection","declaration":{"id":4646,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"signatures":[{"id":4647,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/orElse.ts","line":21,"character":6,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/orElse.ts#L21"}],"parameters":[{"id":4648,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4641,"name":"ErrorFrom","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4642,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4643,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4640,"name":"ValueFrom","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4642,"name":"ValueTo","package":"@w5s/task","refersToTypeParameter":true}]},{"type":"reference","target":4643,"name":"ErrorTo","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#orElse"},{"id":4649,"name":"reject","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"signatures":[{"id":4650,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`void`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject();\\nconst result = Task.run(task);// Result.Error()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":4651,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4651,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"intrinsic","name":"void"}],"name":"Task","package":"@w5s/task"}},{"id":4652,"name":"reject","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a failed "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that rejects "},{"kind":"code","text":"`errorValue`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task(({ error }) => error(errorValue))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.reject(new Error(\'Something went wrong\');\\nconst result = Task.run(task);// Result.Error(new Error(\'Something went wrong\'))\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":108,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L108"}],"typeParameter":[{"id":4653,"name":"Value","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}},{"id":4654,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4655,"name":"errorValue","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the error value"}]},"type":{"type":"reference","target":4654,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4653,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4654,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#reject"},{"id":4656,"name":"resolve","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"signatures":[{"id":4657,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Constructor that always returns a successful "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`void`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve();\\nconst result = Task.run(task);// Result.Ok()\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":4658,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":4658,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}},{"id":4659,"name":"resolve","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a successful task that always resolves "},{"kind":"code","text":"`value`"},{"kind":"text","text":".\\nThis is a shorthand for "},{"kind":"code","text":"`Task.from(({ resolve }) => resolve(value))`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst task = Task.resolve(1);\\nconst result = Task.run(task);// Result.Ok(1)\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":109,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L109"}],"typeParameter":[{"id":4660,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4661,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4662,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the success value"}]},"type":{"type":"reference","target":4660,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4660,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4661,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#resolve"},{"id":4674,"name":"run","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"signatures":[{"id":4675,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Run "},{"kind":"code","text":"`task`"},{"kind":"text","text":" and return the result or a promise of the result\\n\\n**\u26a0 Impure function that may throw an error, it should be used on the edge of the program.**"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst getMessage = Task.resolve(\'Hello World!\');\\nconst messageResult = Task.run(getMessage);// Result.Ok(\'Hello World!\')\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":111,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L111"}],"typeParameter":[{"id":4676,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4677,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4678,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the task to be run"}]},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4676,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4677,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4679,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"},"defaultValue":"..."}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4676,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4677,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}],"permalink":"/std/fr/api/task/namespace/Task#run"},{"id":4663,"name":"tryCall","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"signatures":[{"id":4664,"name":"tryCall","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves "},{"kind":"code","text":"`sideEffect()`"},{"kind":"text","text":".\\nWhen an exception is thrown then it rejects "},{"kind":"code","text":"`onError([thrown error])`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst class ResponseError extends Error {}\\nconst fetch = Task.tryCall(\\n () => fetch(\'my/url\'), // Task will resolve Ok(fetch(\'my/url\'))\\n (error) => new ResponseError(), // Task will reject Error(new ResponseError())\\n);// Task<Response, ResponseError>\\n\\nconst randomNumber = Task.tryCall(async () => Math.random());// Task<number, never>\\n```"}]}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":110,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L110"}],"typeParameter":[{"id":4665,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4666,"name":"Error","variant":"typeParam","kind":131072,"flags":{},"default":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":4667,"name":"sideEffect","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that will be called"}]},"type":{"type":"reflection","declaration":{"id":4668,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"signatures":[{"id":4669,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":25,"character":14,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L25"}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":4665,"name":"Value","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4670,"name":"onError","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An error handler that transforms "},{"kind":"code","text":"`unknown`"},{"kind":"text","text":" to a normalized and typed error"}]},"type":{"type":"reflection","declaration":{"id":4671,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"signatures":[{"id":4672,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task/tryCall.ts","line":26,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task/tryCall.ts#L26"}],"parameters":[{"id":4673,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":4666,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"type":{"type":"reference","target":4680,"typeArguments":[{"type":"reference","target":4665,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4666,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task/namespace/Task#tryCall"}],"groups":[{"title":"Type Aliases","children":[4689,4687]},{"title":"Functions","children":[4524,4532,4540,4550,4561,4569,4585,4590,4595,4598,4602,4612,4622,4633,4638,4649,4656,4674,4663]}],"categories":[{"title":"Constructor","children":[4569,4585,4633,4649,4656]},{"title":"Type","children":[4595]},{"title":"__CATEGORY__","children":[4689,4687,4524,4532,4540,4550,4561,4590,4598,4602,4612,4622,4638,4674,4663]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"permalink":"/std/fr/api/task/namespace/Task","previousId":4482,"nextId":4513},{"id":4680,"name":"Task","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"An implementation of "},{"kind":"inline-tag","tag":"@link","text":"@w5s/task!TaskLike"}]},"children":[{"id":4684,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4513,"typeArguments":[{"type":"reference","target":4685,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4686,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":4520,"name":"TaskLike.[run]"}},{"id":4681,"name":"run","variant":"declaration","kind":2048,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"signatures":[{"id":4682,"name":"run","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Shorthand to run the current task"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":86,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L86"}],"parameters":[{"id":4683,"name":"canceler","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4685,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4686,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}],"groups":[{"title":"Properties","children":[4684]},{"title":"Methods","children":[4681]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":80,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L80"},{"fileName":"packages/task/src/Task.ts","line":92,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L92"},{"fileName":"packages/task/src/Task.ts","line":114,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L114"}],"typeParameters":[{"id":4685,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4686,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4685,"name":"Value","package":"@w5s/task","qualifiedName":"Task.Value","refersToTypeParameter":true},{"type":"reference","target":4686,"name":"Error","package":"@w5s/task","qualifiedName":"Task.Error","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}],"permalink":"/std/fr/api/task/interface/Task","categories":[],"nextId":4469},{"id":4469,"name":"TaskCanceler","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"Interface used to cancel running task"}]},"children":[{"id":4472,"name":"current","variant":"declaration","kind":1024,"flags":{},"comment":{"summary":[{"kind":"text","text":"Mutable reference to a value"}]},"sources":[{"fileName":"packages/core/dist/Ref.d.ts","line":5,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4473,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4474,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ref.current"}}],"groups":[{"title":"Properties","children":[4472]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4470,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":28,"character":49,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L28"}],"signatures":[{"id":4471,"name":"__type","variant":"signature","kind":4096,"flags":{},"type":{"type":"intrinsic","name":"void"}}]}}],"name":"Option","package":"@w5s/core"}],"name":"Ref","package":"@w5s/core"}],"permalink":"/std/fr/api/task/interface/TaskCanceler","categories":[],"previousId":4680,"nextId":4519},{"id":4519,"name":"TaskLike","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"A Task interface that represents a lazy computation that will be evaluated later.\\nThe result of the computation is a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"},{"kind":"text","text":"\\nA task is also cancelable and can run other subtasks"}]},"children":[{"id":4520,"name":"[run]","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"A callback with side effects"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":74,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L74"}],"type":{"type":"reference","target":4513,"typeArguments":[{"type":"reference","target":4521,"name":"Value","package":"@w5s/task","qualifiedName":"TaskLike.Value","refersToTypeParameter":true},{"type":"reference","target":4522,"name":"Error","package":"@w5s/task","qualifiedName":"TaskLike.Error","refersToTypeParameter":true}],"name":"TaskFunction","package":"@w5s/task"}}],"groups":[{"title":"Properties","children":[4520]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":70,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L70"}],"typeParameters":[{"id":4521,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4522,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedBy":[{"type":"reference","target":4680,"name":"Task"}],"permalink":"/std/fr/api/task/interface/TaskLike","categories":[],"previousId":4469,"nextId":4494},{"id":4494,"name":"TaskParameters","variant":"declaration","kind":256,"flags":{},"comment":{"summary":[{"kind":"text","text":"All context passed to task in order to execute"}]},"children":[{"id":4503,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"}},{"id":4504,"name":"execute","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The execute function to run task or subtask injecting parameters"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"type":{"type":"reflection","declaration":{"id":4505,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"signatures":[{"id":4506,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":60,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L60"}],"typeParameter":[{"id":4507,"name":"V","variant":"typeParam","kind":131072,"flags":{}},{"id":4508,"name":"E","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4509,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4507,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4508,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4510,"name":"overrides","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4482,"typeArguments":[{"type":"reference","target":4507,"name":"V","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4508,"name":"E","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParametersOverrides","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4499,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4500,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4501,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4502,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4512,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParameters.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}},{"id":4495,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4496,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4497,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4498,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4511,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParameters.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}}}],"groups":[{"title":"Properties","children":[4503,4504,4499,4495]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":44,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L44"}],"typeParameters":[{"id":4511,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4512,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"permalink":"/std/fr/api/task/interface/TaskParameters","categories":[],"previousId":4519,"nextId":4482},{"id":4482,"name":"TaskParametersOverrides","variant":"declaration","kind":256,"flags":{},"children":[{"id":4491,"name":"canceler","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reference to cancel function"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":56,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L56"}],"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.canceler"}},{"id":4487,"name":"reject","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Reject callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"type":{"type":"reflection","declaration":{"id":4488,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"signatures":[{"id":4489,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":52,"character":19,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L52"}],"parameters":[{"id":4490,"name":"error","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4493,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.reject"}},{"id":4483,"name":"resolve","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Resolve callback"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":11,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"type":{"type":"reflection","declaration":{"id":4484,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"signatures":[{"id":4485,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":48,"character":20,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L48"}],"parameters":[{"id":4486,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4492,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"PartialKeys.resolve"}}],"groups":[{"title":"Properties","children":[4491,4487,4483]}],"sources":[{"fileName":"packages/task/src/Task.ts","line":38,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L38"}],"typeParameters":[{"id":4492,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4493,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"PartialKeys"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":4492,"name":"Value","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Value","refersToTypeParameter":true},{"type":"reference","target":4493,"name":"Error","package":"@w5s/task","qualifiedName":"TaskParametersOverrides.Error","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"},{"type":"union","types":[{"type":"literal","value":"resolve"},{"type":"literal","value":"reject"},{"type":"literal","value":"canceler"}]}],"name":"Pick","package":"typescript"},{"type":"literal","value":"canceler"}],"name":"PartialKeys","package":"@w5s/core-type"}],"permalink":"/std/fr/api/task/interface/TaskParametersOverrides","categories":[],"previousId":4494,"nextId":4523},{"id":4513,"name":"TaskFunction","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"typeParameters":[{"id":4517,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4518,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"type":{"type":"reflection","declaration":{"id":4514,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":63,"character":41,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L63"}],"signatures":[{"id":4515,"name":"__type","variant":"signature","kind":4096,"flags":{},"parameters":[{"id":4516,"name":"parameters","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":4517,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4518,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskParameters","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/fr/api/task#TaskFunction","categories":[],"previousId":4523,"nextId":4475},{"id":4475,"name":"TaskRunner","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"A function that runs the task and returns a "},{"kind":"inline-tag","tag":"@link","text":"@w5s/core!Result"}]},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"type":{"type":"reflection","declaration":{"id":4476,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/task/src/Task.ts","line":33,"character":25,"url":"https://github.com/w5s/std/blob/master/packages/task/src/Task.ts#L33"}],"signatures":[{"id":4477,"name":"__type","variant":"signature","kind":4096,"flags":{},"typeParameter":[{"id":4480,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4481,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4478,"name":"task","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4519,"typeArguments":[{"type":"reference","target":4480,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4481,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4479,"name":"canceler","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":4469,"name":"TaskCanceler","package":"@w5s/task"}}],"type":{"type":"reference","target":52,"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":4480,"name":"Value","package":"@w5s/task","refersToTypeParameter":true},{"type":"reference","target":4481,"name":"Error","package":"@w5s/task","refersToTypeParameter":true}],"name":"Result","package":"@w5s/core"}],"name":"Awaitable","package":"@w5s/core-type"}}]}},"permalink":"/std/fr/api/task#TaskRunner","categories":[],"previousId":4513}],"groups":[{"title":"Interfaces","children":[4680,4469,4519,4494,4482]},{"title":"Namespaces","children":[4523]},{"title":"Type Aliases","children":[4513,4475]}],"sources":[{"fileName":"packages/task/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task/src/index.ts#L1"}],"permalink":"/std/fr/api/task"},"urlSlug":"task"}],"packageName":"@w5s/task","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":14,"name":"@w5s/task-timeout","variant":"declaration","kind":2,"flags":{},"children":[{"id":4691,"name":"timeout","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L24"}],"signatures":[{"id":4692,"name":"timeout","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a task that will reject a "},{"kind":"inline-tag","tag":"@link","text":"TimeoutError","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"tsLinkText":""},{"kind":"text","text":" if "},{"kind":"code","text":"`task`"},{"kind":"text","text":" is not resolved or rejected within "},{"kind":"code","text":"`delay`"},{"kind":"text","text":"\\nIf timeout is omitted, the task is returned unchanged"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst longTask = Task.delay(TimeDuration.hours(1));\\nconst timeoutTask = timeout(longTask, TimeDuration.milliseconds(4));\\nTask.run(timeoutTask); // Result.Error(TimeoutError({ message: \'Task timed out after 4ms\', delay: 4 }))\\n// Note that `longTask` will be canceled and will never resolve nor reject\\n```"}]}]},"sources":[{"fileName":"packages/task-timeout/src/timeout.ts","line":24,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/timeout.ts#L24"}],"typeParameter":[{"id":4693,"name":"Value","variant":"typeParam","kind":131072,"flags":{}},{"id":4694,"name":"Error","variant":"typeParam","kind":131072,"flags":{}}],"parameters":[{"id":4695,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"task to cancel after delay"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"TaskLike"},"typeArguments":[{"type":"reference","target":4693,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"reference","target":4694,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}],"name":"TaskLike","package":"@w5s/task"}},{"id":4696,"name":"delay","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":4693,"name":"Value","package":"@w5s/task-timeout","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"../../packages/error/src/TimeoutError.ts","qualifiedName":"TimeoutError"},"name":"TimeoutError","package":"@w5s/error"},{"type":"reference","target":4694,"name":"Error","package":"@w5s/task-timeout","refersToTypeParameter":true}]}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/task-timeout/function/timeout","categories":[]}],"groups":[{"title":"Functions","children":[4691]}],"sources":[{"fileName":"packages/task-timeout/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/task-timeout/src/index.ts#L1"}],"permalink":"/std/fr/api/task-timeout"},"urlSlug":"task-timeout"}],"packageName":"@w5s/task-timeout","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":15,"name":"@w5s/time","variant":"declaration","kind":2,"flags":{},"children":[{"id":4697,"name":"Time","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time (i.e timestamp)"}]},"children":[{"id":4790,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":255,"permalink":"/std/fr/api/time/namespace/Time#typeName"},{"id":4797,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4798,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4799,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4800,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4801,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4802,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4803,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/time/namespace/Time#__inspect__"},{"id":4727,"name":"maxValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Maximum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber < Number.maxValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":26,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/fr/api/time/namespace/Time#maxValue"},{"id":4726,"name":"minValue","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum value for this type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst anyNumber: number\\nanyNumber > Number.minValue // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Bounded.d.ts","line":15,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},"permalink":"/std/fr/api/time/namespace/Time#minValue"},{"id":4774,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4775,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4776,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4777,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4778,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#!="},{"id":4738,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4739,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4740,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4741,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4742,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#<"},{"id":4733,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4734,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4735,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4736,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4737,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#<="},{"id":4779,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4780,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4781,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4782,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4783,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#=="},{"id":4748,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4749,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4750,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4751,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4752,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#>"},{"id":4743,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4744,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4745,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4746,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4747,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#>="},{"id":4723,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L66"}],"signatures":[{"id":4724,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":66,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L66"}],"parameters":[{"id":4725,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4824,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#__call__"},{"id":4804,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4805,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":4806,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4807,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":4808,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#__decode__"},{"id":4809,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":4810,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":4811,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4812,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/time/namespace/Time#__encode__"},{"id":4813,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":4814,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":4815,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#__schema__"},{"id":4715,"name":"add","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L47"}],"signatures":[{"id":4716,"name":"add","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Adds "},{"kind":"code","text":"`duration`"},{"kind":"text","text":" to "},{"kind":"code","text":"`time`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst now = Time.of(0);\\nconst duration = TimeDuration.of(10);\\nTime.add(now, duration);// now + 10ms\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L47"}],"parameters":[{"id":4717,"name":"time","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4718,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A duration value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#add"},{"id":4794,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4795,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4796,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#asInstance"},{"id":4816,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4817,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4818,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4819,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/time/namespace/Time#asString"},{"id":4763,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4764,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4765,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4766,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4767,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4768,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#clamp"},{"id":4728,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4729,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4730,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4731,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4732,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#compare"},{"id":4703,"name":"delay","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"signatures":[{"id":4704,"name":"delay","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a new "},{"kind":"code","text":"`Task`"},{"kind":"text","text":" that resolves the current time in milliseconds after waiting "},{"kind":"code","text":"`duration`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst wait2s = Time.delay(TimeDuration.seconds(2));\\nconst logTime = Task.andThen(wait2s, (time) => Console.debug(time));\\nTask.run(logTime);// wait 2 seconds then console.debug(Date.now())\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":31,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L31"}],"parameters":[{"id":4705,"name":"duration","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"delay in milliseconds to wait"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/time/namespace/Time#delay"},{"id":4719,"name":"diff","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L63"}],"signatures":[{"id":4720,"name":"diff","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the difference between 2 time values"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst begin = Time.of(0);\\nconst end = Time.of(10);\\nTime.diff(end, begin);// TimeDuration.of(10)\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":63,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L63"}],"parameters":[{"id":4721,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4722,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#diff"},{"id":4769,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4770,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4771,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4772,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4773,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/Time#equals"},{"id":4709,"name":"format","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"signatures":[{"id":4710,"name":"format","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an ISO 8601 string representation"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\nTime.format(time);// \'1970-01-01T00:00:00.000Z\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L33"}],"parameters":[{"id":4711,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"A time value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/time/namespace/Time#format"},{"id":4712,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"signatures":[{"id":4713,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":34,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L34"}],"parameters":[{"id":4714,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4824,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#from"},{"id":4791,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4792,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4793,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}}],"permalink":"/std/fr/api/time/namespace/Time#hasInstance"},{"id":4758,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4759,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4760,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4761,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4762,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#max"},{"id":4753,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4754,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4755,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4756,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}},{"id":4757,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#min"},{"id":4701,"name":"now","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L30"}],"signatures":[{"id":4702,"name":"now","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that resolves the current time in milliseconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst program = () => Task.andThen(Time.now(), (currentTime) => {\\n  // use currentTime\\n});\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":30,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L30"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/time/namespace/Time#now"},{"id":4698,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L29"}],"signatures":[{"id":4699,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Time value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst time = Time.of(0);\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L29"}],"parameters":[{"id":4700,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the value in milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#of"},{"id":4706,"name":"parse","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"signatures":[{"id":4707,"name":"parse","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Parse an ISO 8601 string. If invalid, returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.parse(\'1970-01-01T00:00:00.000Z\');// 0\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":32,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L32"}],"parameters":[{"id":4708,"name":"expression","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"an expression"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/Time#parse"},{"id":4787,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":4788,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":4789,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/Time#unwrap"},{"id":4784,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":4785,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":4786,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/Time#wrap"}],"groups":[{"title":"References","children":[4790]},{"title":"Variables","children":[4797,4727,4726]},{"title":"Functions","children":[4774,4738,4733,4779,4748,4743,4723,4804,4809,4813,4715,4794,4816,4763,4728,4703,4719,4769,4709,4712,4791,4758,4753,4701,4698,4706,4787,4784]}],"categories":[{"title":"Bound","children":[4727,4726]},{"title":"Codec","children":[4804,4809,4813]},{"title":"Comparator","children":[4774,4738,4733,4779,4748,4743,4763,4728,4769,4758,4753]},{"title":"Constructor","children":[4698]},{"title":"Formatting","children":[4816]},{"title":"Type","children":[4797,4794,4791]},{"title":"__CATEGORY__","children":[4790,4723,4715,4703,4719,4709,4712,4701,4706,4787,4784]}],"sources":[{"fileName":"packages/time/src/Time.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L18"},{"fileName":"packages/time/src/Time.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"permalink":"/std/fr/api/time/namespace/Time","previousId":4824,"nextId":4839},{"id":4839,"name":"TimeDuration","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"A collection of functions to manipulate time duration (i.e amount of milliseconds)"}]},"children":[{"id":4984,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":255,"permalink":"/std/fr/api/time/namespace/TimeDuration#typeName"},{"id":4991,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":4992,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":4993,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":4994,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4995,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4996,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":4997,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/time/namespace/TimeDuration#__inspect__"},{"id":4968,"name":"!=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"signatures":[{"id":4969,"name":"!=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Not equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst TEqual: Equal<T>;\\nTEqual[\'!=\'](value, otherValue); // true\\nTEqual[\'!=\'](value, value); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":29,"character":4}],"parameters":[{"id":4970,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4971,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4972,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#!="},{"id":4918,"name":"*","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"signatures":[{"id":4919,"name":"*","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Multiplication operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Multiply<T> = ...;\\nconst result = Numeric[\'*\'](left, right);// represents (left * right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Multiply.d.ts","line":15,"character":4}],"parameters":[{"id":4920,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4921,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#*"},{"id":4910,"name":"+","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"signatures":[{"id":4911,"name":"+","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Addition operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Add<T> = ...;\\nconst result = TNumeric[\'+\'](left, right);// represents (left + right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Add.d.ts","line":15,"character":4}],"parameters":[{"id":4912,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4913,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#+"},{"id":4914,"name":"-","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"signatures":[{"id":4915,"name":"-","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Subtraction operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TNumeric: Numeric.Subtract<T> = ...;\\nconst result = Numeric[\'-\'](left, right);// represents (left - right)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Subtract.d.ts","line":15,"character":4}],"parameters":[{"id":4916,"name":"left","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the left operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4917,"name":"right","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the right operand"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#-"},{"id":4932,"name":"<","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"signatures":[{"id":4933,"name":"<","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<\'](smallerT, smallerT); // false\\nTCompare[\'<\'](smallerT, greaterT); // true\\nTCompare[\'<\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":52,"character":4}],"parameters":[{"id":4934,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4935,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4936,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#<"},{"id":4927,"name":"<=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"signatures":[{"id":4928,"name":"<=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Less than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'<=\'](smallerT, smallerT); // true\\nTCompare[\'<=\'](smallerT, greaterT); // true\\nTCompare[\'<=\'](greaterT, smallerT); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":36,"character":4}],"parameters":[{"id":4929,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4930,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4931,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#<="},{"id":4973,"name":"==","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"signatures":[{"id":4974,"name":"==","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual[\'==\'](value, value); // true\\nTEqual[\'==\'](value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":42,"character":4}],"parameters":[{"id":4975,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4976,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4977,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#=="},{"id":4942,"name":">","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"signatures":[{"id":4943,"name":">","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>\'](smallerT, smallerT); // false\\nTCompare[\'>\'](smallerT, greaterT); // false\\nTCompare[\'>\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":84,"character":4}],"parameters":[{"id":4944,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4945,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4946,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#>"},{"id":4937,"name":">=","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"signatures":[{"id":4938,"name":">=","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"Greater than or equal to\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare[\'>=\'](smallerT, smallerT); // true\\nTCompare[\'>=\'](smallerT, greaterT); // false\\nTCompare[\'>=\'](greaterT, smallerT); // true\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":68,"character":4}],"parameters":[{"id":4939,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4940,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4941,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#>="},{"id":4884,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L54"}],"signatures":[{"id":4885,"name":"__call__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":54,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L54"}],"parameters":[{"id":4886,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4832,"name":"TimeDurationObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#__call__"},{"id":4998,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":4999,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5000,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5001,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5002,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#__decode__"},{"id":5003,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5004,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5005,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5006,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#__encode__"},{"id":5007,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5008,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5009,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#__schema__"},{"id":4894,"name":"abs","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"signatures":[{"id":4895,"name":"abs","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute value. It should satisfy "},{"kind":"code","text":"`Numeric[\'*\'](Numeric.abs(x), Numeric.sign(x)) == x`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = ...;\\nconst TSigned: Numeric.Signed<T> = ...;\\nconst result = TSigned.abs(value);// absolute value of (value)\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":14,"character":4}],"parameters":[{"id":4896,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4897,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#abs"},{"id":4988,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":4989,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":4990,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#asInstance"},{"id":4887,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":4888,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":4889,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4890,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#asString"},{"id":4957,"name":"clamp","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"signatures":[{"id":4958,"name":"clamp","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Clamp value between minValue and maxValue"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nTCompare.clamp(value, min, max); // min if value < min, max if value > max, otherwise value itself\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":124,"character":4}],"parameters":[{"id":4959,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4960,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4961,"name":"minValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4962,"name":"maxValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#clamp"},{"id":4922,"name":"compare","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"signatures":[{"id":4923,"name":"compare","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return an "},{"kind":"inline-tag","tag":"@link","text":"Ordering","target":{"sourceFileName":"../../packages/core/src/Ordering.ts","qualifiedName":"Ordering"},"tsLinkText":""},{"kind":"text","text":" that represents comparison result"}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Order"}]},{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst sorted = [3, 1, 1].sort(TCompare.compare);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":20,"character":4}],"parameters":[{"id":4924,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4925,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4926,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/Ordering.ts","qualifiedName":"Ordering"},"name":"Ordering","package":"@w5s/core"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#compare"},{"id":4878,"name":"days","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L52"}],"signatures":[{"id":4879,"name":"days","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" days"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.days(1);// 1000 * 60 * 60 * 24\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":52,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L52"}],"parameters":[{"id":4880,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#days"},{"id":4963,"name":"equals","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"signatures":[{"id":4964,"name":"equals","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Alias to \'==\'"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T = // ...\\nconst TEqual: Equal<T>;\\nTEqual.equals(value, value); // true\\nTEqual.equals(value, otherValue); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Equal.d.ts","line":17,"character":4}],"parameters":[{"id":4965,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4966,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4967,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#equals"},{"id":4863,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L47"}],"signatures":[{"id":4864,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeDurationObject to a TimeDuration"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.from(1000);// 1000\\nconst duration = TimeDuration.from({ milliseconds: 3, seconds: 2, hours: 1 });// 3 + 1000 * 2 + 1000 * 60 * 60 * 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a new TimeDuration"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":47,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L47"}],"parameters":[{"id":4865,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"a number of milliseconds or an object with properties:\\n  - "},{"kind":"code","text":"`weeks`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`days`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`hours`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`minutes`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`seconds`"},{"kind":"text","text":"\\n  - "},{"kind":"code","text":"`milliseconds`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4832,"name":"TimeDurationObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#from"},{"id":4985,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":4986,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":4987,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#hasInstance"},{"id":4875,"name":"hours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L51"}],"signatures":[{"id":4876,"name":"hours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" hours"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.hours(1);// 1000 * 60 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":51,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L51"}],"parameters":[{"id":4877,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#hours"},{"id":4902,"name":"isNegative","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"signatures":[{"id":4903,"name":"isNegative","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is negative and false if the number is zero or positive."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":28,"character":4}],"parameters":[{"id":4904,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4905,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#isNegative"},{"id":4898,"name":"isPositive","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"signatures":[{"id":4899,"name":"isPositive","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns true if the number is positive and false if the number is zero or negative."}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":21,"character":4}],"parameters":[{"id":4900,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4901,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"boolean"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#isPositive"},{"id":4952,"name":"max","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"signatures":[{"id":4953,"name":"max","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"maximum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.max(smallerT, greaterT); // greaterT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":112,"character":4}],"parameters":[{"id":4954,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4955,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4956,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#max"},{"id":4866,"name":"milliseconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L48"}],"signatures":[{"id":4867,"name":"milliseconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" milliseconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.milliseconds(1);// 1\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":48,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L48"}],"parameters":[{"id":4868,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#milliseconds"},{"id":4947,"name":"min","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"signatures":[{"id":4948,"name":"min","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"\\"minimum\\" operator"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ntype T;\\nconst TCompare: Comparable<T>;\\nconst smallerT: T;\\nconst greaterT: T;\\nTCompare.min(smallerT, greaterT); // smallerT\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Comparable.d.ts","line":98,"character":4}],"parameters":[{"id":4949,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4950,"name":"left","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4951,"name":"right","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#min"},{"id":4872,"name":"minutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L50"}],"signatures":[{"id":4873,"name":"minutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" minutes"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.minutes(1);// 1000 * 60\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":50,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L50"}],"parameters":[{"id":4874,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#minutes"},{"id":4891,"name":"negate","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"signatures":[{"id":4892,"name":"negate","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Negates the given value."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.negate(5); // -5\\nNumber.negate(Number.negate(5)); // 5\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Numeric/Negate.d.ts","line":14,"character":4}],"parameters":[{"id":4893,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to negate."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#negate"},{"id":4860,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L46"}],"signatures":[{"id":4861,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration from a number"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.of(0);// typeof duration === \'number\'\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":46,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L46"}],"parameters":[{"id":4862,"name":"milliseconds","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#of"},{"id":4869,"name":"seconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L49"}],"signatures":[{"id":4870,"name":"seconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" seconds"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.seconds(1);// 1000\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":49,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L49"}],"parameters":[{"id":4871,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#seconds"},{"id":4906,"name":"sign","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"signatures":[{"id":4907,"name":"sign","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Sign of a number. It should satisfy "},{"kind":"code","text":"`TSigned[\'*\'](TSigned.abs(x), TSigned.sign(x)) == x`"}]},"sources":[{"fileName":"packages/core/dist/Numeric/Signed.d.ts","line":35,"character":4}],"parameters":[{"id":4908,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":4909,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the numeric value"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#sign"},{"id":4852,"name":"toDays","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"signatures":[{"id":4853,"name":"toDays","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to days."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toDays(TimeDuration.from({ days: 1 })); // == 1\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 })); // == 1.5\\nTimeDuration.toDays(TimeDuration.from({ days: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in days."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":44,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L44"}],"parameters":[{"id":4854,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4855,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#toDays"},{"id":4848,"name":"toHours","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"signatures":[{"id":4849,"name":"toHours","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to hours."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toHours(TimeDuration(3600000));// == 1\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5));// == 1.5\\nTimeDuration.toHours(TimeDuration(3600000 * 1.5, true));// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in hours."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":43,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L43"}],"parameters":[{"id":4850,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4851,"name":"truncate","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#toHours"},{"id":4844,"name":"toMinutes","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"signatures":[{"id":4845,"name":"toMinutes","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to minutes."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toMinutes(TimeDuration(60000)); // == 1.0\\nTimeDuration.toMinutes(TimeDuration(150000), true); // == 2.5\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in minutes."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":42,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L42"}],"parameters":[{"id":4846,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4847,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#toMinutes"},{"id":4840,"name":"toSeconds","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"signatures":[{"id":4841,"name":"toSeconds","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to seconds."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toSeconds(TimeDuration(1500));// == 1.5\\nTimeDuration.toSeconds(TimeDuration(1500), true);// == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in seconds."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":41,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L41"}],"parameters":[{"id":4842,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4843,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#toSeconds"},{"id":4856,"name":"toWeeks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L45"}],"signatures":[{"id":4857,"name":"toWeeks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a time duration to weeks."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1 })); // == 1\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 })); // == 1.5\\nTimeDuration.toWeeks(TimeDuration.from({ weeks: 1.5 }), true); // == 1\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The time duration in weeks."}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":45,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L45"}],"parameters":[{"id":4858,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The time duration in milliseconds."}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}},{"id":4859,"name":"truncate","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Whether to truncate the result to an integer. Defaults to false."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#toWeeks"},{"id":4981,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":4982,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":4983,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#unwrap"},{"id":4881,"name":"weeks","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L53"}],"signatures":[{"id":4882,"name":"weeks","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return a duration of "},{"kind":"code","text":"`amount`"},{"kind":"text","text":" days"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst duration = TimeDuration.weeks(1);// 1000 * 60 * 60 * 24 * 7\\n```"}]}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":53,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L53"}],"parameters":[{"id":4883,"name":"amount","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Number of weeks"}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#weeks"},{"id":4978,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":4979,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":4980,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDuration","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/namespace/TimeDuration#wrap"}],"groups":[{"title":"References","children":[4984]},{"title":"Variables","children":[4991]},{"title":"Functions","children":[4968,4918,4910,4914,4932,4927,4973,4942,4937,4884,4998,5003,5007,4894,4988,4887,4957,4922,4878,4963,4863,4985,4875,4902,4898,4952,4866,4947,4872,4891,4860,4869,4906,4852,4848,4844,4840,4856,4981,4881,4978]}],"categories":[{"title":"Codec","children":[4998,5003,5007]},{"title":"Comparator","children":[4968,4932,4927,4973,4942,4937,4957,4922,4963,4952,4947]},{"title":"Constructor","children":[4878,4875,4866,4872,4860,4869,4881]},{"title":"Formatting","children":[4887]},{"title":"Numeric","children":[4918,4910,4914,4894,4902,4898,4891,4906]},{"title":"Type","children":[4991,4988,4985]},{"title":"__CATEGORY__","children":[4984,4884,4863,4852,4848,4844,4840,4856,4981,4978]}],"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"},{"fileName":"packages/time/src/TimeDuration.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L34"}],"permalink":"/std/fr/api/time/namespace/TimeDuration","previousId":4697,"nextId":4820},{"id":4832,"name":"TimeDurationParameters","variant":"declaration","kind":256,"flags":{},"children":[{"id":4834,"name":"days","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of days"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L13"}],"type":{"type":"intrinsic","name":"number"}},{"id":4835,"name":"hours","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of hours"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L17"}],"type":{"type":"intrinsic","name":"number"}},{"id":4838,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L29"}],"type":{"type":"intrinsic","name":"number"}},{"id":4836,"name":"minutes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of minutes"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L21"}],"type":{"type":"intrinsic","name":"number"}},{"id":4837,"name":"seconds","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of seconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L25"}],"type":{"type":"intrinsic","name":"number"}},{"id":4833,"name":"weeks","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of weeks"}]},"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4834,4835,4838,4836,4837,4833]}],"sources":[{"fileName":"packages/time/src/TimeDuration/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration/from.ts#L5"}],"permalink":"/std/fr/api/time/interface/TimeDurationParameters","categories":[],"previousId":4821,"nextId":4824},{"id":4824,"name":"TimeObject","variant":"declaration","kind":256,"flags":{},"children":[{"id":4827,"name":"day","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Day of month (1-31)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":17,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Day"},"name":"Day","package":"@w5s/core-type"}},{"id":4828,"name":"hour","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Hour of the day"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":21,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Hour"},"name":"Hour","package":"@w5s/core-type"}},{"id":4831,"name":"millisecond","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of milliseconds"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":33,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L33"}],"type":{"type":"intrinsic","name":"number"}},{"id":4829,"name":"minute","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Minute of the hour"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":4826,"name":"month","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Month number (1-12)"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":13,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L13"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Month"},"name":"Month","package":"@w5s/core-type"}},{"id":4830,"name":"second","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Second of the minute"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":29,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L29"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core-type/dist/index.d.ts","qualifiedName":"Minute"},"name":"Minute","package":"@w5s/core-type"}},{"id":4825,"name":"year","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Year number"}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":9,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L9"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4827,4828,4831,4829,4826,4830,4825]}],"sources":[{"fileName":"packages/time/src/Time/from.ts","line":5,"character":17,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L5"}],"permalink":"/std/fr/api/time/interface/TimeObject","categories":[],"previousId":4832,"nextId":4697},{"id":4820,"name":"Time","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a time typically returned by "},{"kind":"code","text":"`Date.now()`"}]},"sources":[{"fileName":"packages/time/src/Time.ts","line":18,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L18"},{"fileName":"packages/time/src/Time.ts","line":25,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time.ts#L25"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"TimeType","package":"@w5s/time","qualifiedName":"Time"},"permalink":"/std/fr/api/time#Time","categories":[],"previousId":4839,"nextId":5010},{"id":5010,"name":"TimeDuration","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"Represent a duration in milliseconds"}]},"sources":[{"fileName":"packages/time/src/TimeDuration.ts","line":27,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L27"},{"fileName":"packages/time/src/TimeDuration.ts","line":34,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/time/src/TimeDuration.ts#L34"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/TimeDuration/TimeDuration.ts","qualifiedName":"TimeDuration"},"name":"TimeDurationType","package":"@w5s/time","qualifiedName":"TimeDuration"},"permalink":"/std/fr/api/time#TimeDuration","categories":[],"previousId":4820},{"id":4821,"name":"from","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":45,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L45"}],"signatures":[{"id":4822,"name":"from","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a number or a TimeObject to a Time"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nTime.from({ year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 });// new Date(\'2020-01-01T00:00:00.000Z\').getTime()\\n```"}]}]},"sources":[{"fileName":"packages/time/src/Time/from.ts","line":45,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/time/src/Time/from.ts#L45"}],"parameters":[{"id":4823,"name":"source","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":4824,"name":"TimeObject","package":"@w5s/time"}]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/time/src/Time/Time.ts","qualifiedName":"Time"},"name":"Time","package":"@w5s/time"}}],"permalink":"/std/fr/api/time/function/from","categories":[],"nextId":4832}],"groups":[{"title":"Functions","children":[4821]},{"title":"Interfaces","children":[4832,4824]},{"title":"Namespaces","children":[4697,4839]},{"title":"Type Aliases","children":[4820,5010]}],"sources":[{"fileName":"packages/time/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/time/src/index.ts#L1"}],"permalink":"/std/fr/api/time"},"urlSlug":"time"}],"packageName":"@w5s/time","packageVersion":"1.0.0-alpha.0"},{"entryPoints":[{"index":true,"reflection":{"id":16,"name":"@w5s/uuid","variant":"declaration","kind":2,"flags":{},"children":[{"id":5014,"name":"UUID","variant":"declaration","kind":4,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID namespace"}]},"children":[{"id":5042,"name":"typeName","variant":"reference","kind":4194304,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":36,"character":4}],"target":255,"permalink":"/std/fr/api/uuid/namespace/UUID#typeName"},{"id":5049,"name":"__inspect__","variant":"declaration","kind":32,"flags":{},"comment":{"summary":[{"kind":"text","text":"When defined, returns a custom string representation.\\nTo be useful, it should be bound to a prototype (ex: "},{"kind":"inline-tag","tag":"@link","text":"Struct"},{"kind":"text","text":")"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nimport { inspect } from \'node:util\';\\n\\ninterface Foo {\\n  foo: boolean;\\n}\\nconst Foo = Struct.define<Foo>({\\n  typeName: \'Foo\',\\n  __inspect__: (self) => `Foo { ${String(self.foo)} }`,\\n});\\nconst myStruct = Struct.create(Foo, { foo: true });// \'Foo { true }\'\\ninspect(myStruct);// \'Foo { true }\'\\n```"}]},{"tag":"@param","name":"anyValue","content":[]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reflection","declaration":{"id":5050,"name":"__type","variant":"declaration","kind":65536,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"signatures":[{"id":5051,"name":"__type","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":85,"character":29}],"parameters":[{"id":5052,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}},{"id":5053,"name":"depth","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":5054,"name":"options","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectOptions"},"name":"InspectOptions","package":"@w5s/core"}},{"id":5055,"name":"inspect","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type.ts","qualifiedName":"InspectFunction"},"name":"InspectFunction","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}]}}],"name":"Option","package":"@w5s/core"},"permalink":"/std/fr/api/uuid/namespace/UUID#__inspect__"},{"id":5034,"name":"id","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application id"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":20,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationId"},"name":"ApplicationId","package":"@w5s/application"},"permalink":"/std/fr/api/uuid/namespace/UUID#id"},{"id":5026,"name":"initialConfiguration","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Application initial configuration"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":33,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"},"permalink":"/std/fr/api/uuid/namespace/UUID#initialConfiguration"},{"id":5035,"name":"state","variant":"declaration","kind":32,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Ref to application state"}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":24,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Ref.ts","qualifiedName":"Ref"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/application/src/Application.ts","qualifiedName":"ApplicationState"},"name":"ApplicationState","package":"@w5s/application"}],"name":"Ref","package":"@w5s/core"},"permalink":"/std/fr/api/uuid/namespace/UUID#state"},{"id":5072,"name":"__call__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"signatures":[{"id":5073,"name":"__call__","variant":"signature","kind":4096,"flags":{},"sources":[{"fileName":"packages/core/dist/Callable.d.ts","line":16,"character":4}],"parameters":[{"id":5074,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#__call__"},{"id":5056,"name":"__decode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"signatures":[{"id":5057,"name":"__decode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the decoded "},{"kind":"code","text":"`input`"},{"kind":"text","text":", "},{"kind":"code","text":"`Result.Ok`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Result.Error()`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst input: unknown = ...;\\nconst decoded = Codec.decode(someCodec, input);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":25,"character":4}],"parameters":[{"id":5058,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5059,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to decode"}]},"type":{"type":"intrinsic","name":"unknown"}},{"id":5060,"name":"context","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Codec.ts","qualifiedName":"Codec.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Context","package":"@w5s/core","qualifiedName":"Codec.Context"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Result.ts","qualifiedName":"Result"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"},{"type":"reference","target":{"sourceFileName":"../../packages/core/src/CodecError.ts","qualifiedName":"CodecError"},"name":"CodecError","package":"@w5s/core"}],"name":"Result","package":"@w5s/core"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#__decode__"},{"id":5061,"name":"__encode__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"signatures":[{"id":5062,"name":"__encode__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the encoded "},{"kind":"code","text":"`input`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\ninterface SomeObject {\\n  foo: string\\n}\\nconst someCodec: Codec<SomeObject> = ...;\\nconst someObject: SomeObject = { foo: \\"bar\\" }\\nconst encoded = Codec.decode(someCodec, someObject);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":41,"character":4}],"parameters":[{"id":5063,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5064,"name":"input","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"The value to encode"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"unknown"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#__encode__"},{"id":5065,"name":"__schema__","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"signatures":[{"id":5066,"name":"__schema__","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the JSONSchema corresponding to the decoded type"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst someCodec: Codec<unknown> = ...;\\nconst jsonSchema = Codec.schema(someCodec);\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Codec.d.ts","line":52,"character":4}],"parameters":[{"id":5067,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/JSON.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"@w5s/core"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#__schema__"},{"id":5046,"name":"asInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"signatures":[{"id":5047,"name":"asInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Try to convert anyValue to enum value or else returns "},{"kind":"code","text":"`Option.None`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.asInstance(\'foo\'); // Option.Some(\'foo\')\\nStringType.asInstance(12); // Option.None\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":63,"character":4}],"parameters":[{"id":5048,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Option.ts","qualifiedName":"Option"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}],"name":"Option","package":"@w5s/core"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#asInstance"},{"id":5068,"name":"asString","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"signatures":[{"id":5069,"name":"asString","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a String."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nNumber.asString(123); // \'123\'\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/AsString.d.ts","line":12,"character":4}],"parameters":[{"id":5070,"name":"this","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"void"}},{"id":5071,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the object to convert to string"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#asString"},{"id":5027,"name":"configure","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"signatures":[{"id":5028,"name":"configure","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.configure({\\n  myVar: 2\\n});\\napp.get(\'myVar\');// 2\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":49,"character":4}],"parameters":[{"id":5029,"name":"updater","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration updater"}]},"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}],"name":"Partial","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#configure"},{"id":5015,"name":"empty","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"signatures":[{"id":5016,"name":"empty","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an "},{"kind":"code","text":"`UUID`"},{"kind":"text","text":" with only "},{"kind":"code","text":"`0`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst emptyUUID = UUID.empty();// \'00000000-0000-0000-0000-000000000000\'\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":24,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L24"}],"type":{"type":"reference","target":5075,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#empty"},{"id":5030,"name":"get","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"signatures":[{"id":5031,"name":"get","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return the configuration value"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst app = Application(\'my-app\', {\\n  myVar: 1\\n});\\napp.get(app, \'myVar\');// 1\\n```"}]}]},"sources":[{"fileName":"packages/application/dist/Application.d.ts","line":62,"character":4}],"typeParameter":[{"id":5032,"name":"Key","variant":"typeParam","kind":131072,"flags":{},"type":{"type":"literal","value":"randomUUIDGenerator"}}],"parameters":[{"id":5033,"name":"key","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration key"}]},"type":{"type":"reference","target":5032,"name":"Key","package":"@w5s/application","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":5032,"name":"Key","package":"@w5s/application","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"sourceFileName":"../../packages/uuid/src/UUID/UUIDApplication.ts","qualifiedName":"UUIDConfiguration"},"name":"UUIDConfiguration","package":"@w5s/uuid"}}}],"permalink":"/std/fr/api/uuid/namespace/UUID#get"},{"id":5043,"name":"hasInstance","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"signatures":[{"id":5044,"name":"hasInstance","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the given value is an instance of the class."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst StringType: Type<string>;\\nStringType.hasInstance(\'foo\'); // true\\nStringType.hasInstance(42); // false\\n```"}]}]},"sources":[{"fileName":"packages/core/dist/Type.d.ts","line":50,"character":4}],"parameters":[{"id":5045,"name":"anyValue","variant":"param","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"anyValue","asserts":false,"targetType":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}}],"permalink":"/std/fr/api/uuid/namespace/UUID#hasInstance"},{"id":5017,"name":"of","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"signatures":[{"id":5018,"name":"of","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID constructor"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID.of(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":25,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L25"}],"parameters":[{"id":5019,"name":"value","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the string representation"}]},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":5075,"name":"UUID","package":"@w5s/uuid"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#of"},{"id":5023,"name":"toBigInt","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"signatures":[{"id":5024,"name":"toBigInt","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a bigint from UUID"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid = UUID(\'1c19548b-7cac-4222-b722-dc38f2870669\');\\nconst bigint = UUID.toBigInt(uuid);// BigInt(\'Ox1c19548b7cac4222b722dc38f2870669\');\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":27,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L27"}],"parameters":[{"id":5025,"name":"self","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"intrinsic","name":"bigint"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#toBigInt"},{"id":5020,"name":"toUint32Array","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"signatures":[{"id":5021,"name":"toUint32Array","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a UUID to an array of uint32 values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst uuid: UUID;\\nconst parts = UUID.toUint32Array(uuid);\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":26,"character":2,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L26"}],"parameters":[{"id":5022,"name":"self","variant":"param","kind":32768,"flags":{},"comment":{"summary":[{"kind":"text","text":"the UUID to convert"}]},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"reference","target":{"sourceFileName":"../../node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Uint32Array"},"name":"Uint32Array","package":"typescript"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#toUint32Array"},{"id":5039,"name":"unwrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"signatures":[{"id":5040,"name":"unwrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert a tagged value to the underlying type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":38,"character":8}],"parameters":[{"id":5041,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"permalink":"/std/fr/api/uuid/namespace/UUID#unwrap"},{"id":5036,"name":"wrap","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"signatures":[{"id":5037,"name":"wrap","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"Convert an underlying type to a tagged type"}]},"sources":[{"fileName":"packages/core/dist/Tag.d.ts","line":32,"character":8}],"parameters":[{"id":5038,"name":"value","variant":"param","kind":32768,"flags":{},"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]}}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUID","package":"@w5s/core"}}],"permalink":"/std/fr/api/uuid/namespace/UUID#wrap"}],"groups":[{"title":"References","children":[5042]},{"title":"Variables","children":[5049,5034,5026,5035]},{"title":"Functions","children":[5072,5056,5061,5065,5046,5068,5027,5015,5030,5043,5017,5023,5020,5039,5036]}],"categories":[{"title":"Codec","children":[5056,5061,5065]},{"title":"Constructor","children":[5015,5017]},{"title":"Formatting","children":[5068]},{"title":"Type","children":[5049,5046,5043]},{"title":"__CATEGORY__","children":[5042,5034,5026,5035,5072,5027,5030,5023,5020,5039,5036]}],"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"permalink":"/std/fr/api/uuid/namespace/UUID","previousId":5011,"nextId":5075},{"id":5075,"name":"UUID","variant":"declaration","kind":2097152,"flags":{},"comment":{"summary":[{"kind":"text","text":"UUID string type"}]},"sources":[{"fileName":"packages/uuid/src/UUID.ts","line":14,"character":12,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L14"},{"fileName":"packages/uuid/src/UUID.ts","line":21,"character":13,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/UUID.ts#L21"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/core/src/Type/UUID.ts","qualifiedName":"UUID"},"name":"UUIDType","package":"@w5s/core","qualifiedName":"UUID"},"permalink":"/std/fr/api/uuid#UUID","categories":[],"previousId":5014,"nextId":5013},{"id":5013,"name":"UUIDString","variant":"declaration","kind":2097152,"flags":{},"sources":[{"fileName":"packages/core/dist/Type/UUID.d.ts","line":2,"character":12}],"type":{"type":"templateLiteral","head":"","tail":[[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},"-"],[{"type":"intrinsic","name":"string"},""]]},"permalink":"/std/fr/api/uuid#UUIDString","categories":[],"previousId":5075},{"id":5011,"name":"randomUUID","variant":"declaration","kind":64,"flags":{},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"signatures":[{"id":5012,"name":"randomUUID","variant":"signature","kind":4096,"flags":{},"comment":{"summary":[{"kind":"text","text":"A task that returns a new "},{"kind":"code","text":"`UUID`"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\\nconst createUser = (name: string) => Task.map(randomUUID(), (uuid) => ({\\n  id: uuid,\\n  name,\\n}));\\n```"}]}]},"sources":[{"fileName":"packages/uuid/src/randomUUID.ts","line":17,"character":16,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/randomUUID.ts#L17"}],"type":{"type":"reference","target":{"sourceFileName":"../../packages/task/src/Task.ts","qualifiedName":"Task"},"typeArguments":[{"type":"reference","target":5075,"name":"UUID","package":"@w5s/uuid"},{"type":"intrinsic","name":"never"}],"name":"Task","package":"@w5s/task"}}],"permalink":"/std/fr/api/uuid/function/randomUUID","categories":[],"nextId":5014}],"groups":[{"title":"Functions","children":[5011]},{"title":"Namespaces","children":[5014]},{"title":"Type Aliases","children":[5075,5013]}],"sources":[{"fileName":"packages/uuid/src/index.ts","line":1,"character":0,"url":"https://github.com/w5s/std/blob/master/packages/uuid/src/index.ts#L1"}],"permalink":"/std/fr/api/uuid"},"urlSlug":"uuid"}],"packageName":"@w5s/uuid","packageVersion":"1.0.0-alpha.0"}]')}}]);