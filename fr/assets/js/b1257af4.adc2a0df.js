"use strict";(self.webpackChunk_w5s_website=self.webpackChunk_w5s_website||[]).push([[9261],{6531:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var o=t(1085),a=t(1184);const s={sidebar_position:1},r="Enum",i={id:"packages/core/enum",title:"Enum",description:"Enumeration of constant values",source:"@site/docs/packages/1-core/enum.md",sourceDirName:"packages/1-core",slug:"/packages/core/enum",permalink:"/std/fr/docs/packages/core/enum",draft:!1,unlisted:!1,editUrl:"https://github.com/w5s/std.git/tree/main/apps/website/docs/packages/1-core/enum.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Core",permalink:"/std/fr/docs/category/core"},next:{title:"Option",permalink:"/std/fr/docs/packages/core/option"}},c={},u=[{value:"Motivation",id:"motivation",level:2},{value:"Declare an Enum",id:"declare-an-enum",level:2},{value:"Matching on values",id:"matching-on-values",level:2},{value:"Coding Guide",id:"coding-guide",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"enum",children:"Enum"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Enumeration of constant values"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,o.jsx)(n.p,{children:"Enums are useful for defining types that can only take on a limited set of values."}),"\n",(0,o.jsx)(n.h2,{id:"declare-an-enum",children:"Declare an Enum"}),"\n",(0,o.jsx)(n.p,{children:"An enum can be declared as the following example :"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"export const MyEnumType = {\n  Foo: 'foo',\n  Bar: 'bar',\n};\nexport type MyEnumType = typeof MyEnumType[keyof typeof MyEnumType];\n"})}),"\n",(0,o.jsx)(n.h2,{id:"matching-on-values",children:"Matching on values"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { assertNever } from '@w5s/invariant';\n\nexport function getName(value: MyEnumType) {\n  switch (value) {\n    case MyEnumType.Foo:\n      return 'foo_name';\n    case MyEnumType.Bar:\n      return 'bar_name';\n    default:\n      assertNever(value);\n  }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"coding-guide",children:"Coding Guide"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// \u2713 Export a const\n// \u2713 PascalCase\nexport const {{EnumType}} = {\n  // \u2713 PascalCase\n  {{EnumValueName}}: '{{EnumValue}}',\n  // ...\n};\n// \u2713 Export a type with the same name as the const\nexport type {{EnumType}} = typeof {{EnumType}}[keyof typeof {{EnumType}}];\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(4041);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);